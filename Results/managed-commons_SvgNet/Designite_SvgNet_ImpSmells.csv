Implementation smell,Namespace,Class,File,Method,Description
Long Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The method has 257 lines of code.
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawLines,Cyclomatic complexity of the method is 16
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,Cyclomatic complexity of the method is 26
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,Cyclomatic complexity of the method is 18
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,Cyclomatic complexity of the method is 233
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,Cyclomatic complexity of the method is 35
Complex Method,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessModifyWorldTransform,Cyclomatic complexity of the method is 11
Complex Method,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,InternalSelectObject,Cyclomatic complexity of the method is 20
Complex Method,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessCreateBrushIndirect,Cyclomatic complexity of the method is 10
Complex Method,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,EnumerateMetafile,Cyclomatic complexity of the method is 55
Complex Method,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,Cyclomatic complexity of the method is 33
Complex Method,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,Cyclomatic complexity of the method is 18
Complex Method,SvgNet.SvgTypes,SvgLength,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,Cyclomatic complexity of the method is 32
Complex Method,SvgNet.SvgTypes,SvgLength,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,ToString,Cyclomatic complexity of the method is 27
Complex Method,SvgNet.SvgTypes,SvgAngle,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,Cyclomatic complexity of the method is 14
Complex Method,SvgNet.SvgTypes,SvgAngle,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,Cyclomatic complexity of the method is 17
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawBezier,The method has 9 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,MeasureString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImageUnscaled,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\repos\managed-commons_SvgNet\SvgNet\AbstractGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawBezier,The method has 9 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,MeasureString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImageUnscaled,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\repos\managed-commons_SvgNet\SvgNet\GDIGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawLines,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawLine,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawArc,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBezier,The method has 9 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBezier,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawCurve,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillRectangle,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillEllipse,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillPie,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,MeasureString,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImageUnscaled,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The method has 8 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The method has 7 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBitmapData,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImagePixel,The method has 6 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The method has 5 parameters.
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The method has 7 parameters.
Long Parameter List,SvgNet,SvgFactory,C:\repos\managed-commons_SvgNet\SvgNet\SvgElementFactory.cs,RecCompXML,The method has 5 parameters.
Long Parameter List,SvgNet.SvgElements,SvgPatternElement,C:\repos\managed-commons_SvgNet\SvgNet\SvgLinearGradient.cs,SvgPatternElement,The method has 5 parameters.
Long Parameter List,SvgNet.SvgElements,SvgSvgElement,C:\repos\managed-commons_SvgNet\SvgNet\SvgSvgElement.cs,SvgSvgElement,The method has 5 parameters.
Long Parameter List,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,EnumerateMetafile,The method has 5 parameters.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawArc,The length of the statement  "	DrawArc (pen' (Single)rect.X' (Single)rect.X' (Single)rect.Width' (Single)rect.Height' (Single)startAngle' (Single)sweepAngle); " is 127.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBezier,The length of the statement  "	bez.D = "M " + x1.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + y1.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " C " + x2.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + y2.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + x3.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + y3.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + x4.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + y4.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture); " is 625.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBeziers,The length of the statement  "	string s = "M " + points [0].X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + points [0].Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " C "; " is 192.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBeziers,The length of the statement  "		s += points [i].X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + points [i].Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " "; " is 177.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBezier,The length of the statement  "	DrawBezier (pen' (Single)pt1.X' (Single)pt1.Y' (Single)pt2.X' (Single)pt2.Y' (Single)pt3.X' (Single)pt3.Y' (Single)pt4.X' (Single)pt4.Y); " is 137.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawPie,The length of the statement  "	DrawPie (pen' (Single)rect.X' (Single)rect.X' (Single)rect.Width' (Single)rect.Height' (Single)startAngle' (Single)sweepAngle); " is 127.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,MeasureString,The length of the statement  "	return GetDefaultGraphics ().MeasureString (text' font' layoutArea' stringFormat' out charactersFitted' out linesFilled); " is 121.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' PointF[] destPoints' RectangleF srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); " is 142.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' PointF[] destPoints' RectangleF srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr' Graphics.DrawImageAbort callback)"); " is 176.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' Point[] destPoints' Rectangle srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); " is 140.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' Rectangle destRect' Single srcX' Single srcY' Single srcWidth' Single srcHeight' GraphicsUnit srcUnit)"); " is 155.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' Rectangle destRect' Single srcX' Single srcY' Single srcWidth' Single srcHeight' GraphicsUnit srcUnit' ImageAttributes imageAttrs)"); " is 183.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' Rectangle destRect' Int32 srcX' Int32 srcY' Int32 srcWidth' Int32 srcHeight' GraphicsUnit srcUnit)"); " is 151.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "	throw new SvgGdiNotImpl ("DrawImage (Image image' Rectangle destRect' Int32 srcX' Int32 srcY' Int32 srcWidth' Int32 srcHeight' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); " is 178.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillBeziers,The length of the statement  "	string s = "M " + points [0].X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + points [0].Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " C "; " is 192.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,FillBeziers,The length of the statement  "		s += points [i].X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + points [i].Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " "; " is 177.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawBitmapData,The length of the statement  "	SvgGroupElement g = new SvgGroupElement ("bitmap_at_" + x.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + "_" + y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture)); " is 201.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "	string s = "M " + start.X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + "'" + start.Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " A " + (width / 2f).ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + (height / 2f).ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + "0 " + longArc.ToString () + " 0 " + end.X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + " " + end.Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture); " is 548.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "		s += " L " + center.X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + "'" + center.Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture); " is 171.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "		s += " L " + start.X.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture) + "'" + start.Y.ToString ("F"' System.Globalization.CultureInfo.InvariantCulture); " is 169.
Long Statement,SvgNet,SvgElement,C:\repos\managed-commons_SvgNet\SvgNet\SvgElement.cs,WriteSVGString,The length of the statement  "	doc.InsertAfter (doc.CreateDocumentType ("svg"' "-//W3C//DTD SVG 1.1//EN"' "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"' ents)' declaration); " is 147.
Long Statement,SvgNet,SvgElement,C:\repos\managed-commons_SvgNet\SvgNet\SvgElement.cs,WriteSVGString,The length of the statement  "	// Indented formatting would be nice for debugging but causes unwanted trailing white spaces between <text> and <tspan> elements in Internet Explorer " is 149.
Long Statement,SvgNet,TextNode,C:\repos\managed-commons_SvgNet\SvgNet\SvgTextElement.cs,ReadXmlElement,The length of the statement  "	throw new SvgException ("TextNode::ReadXmlElement should not be called; " + "the value should be filled in with a string when the XML doc is being read."' ""); " is 159.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.Alignment) {  case StringAlignment.Near:  	break;  case StringAlignment.Center:  	{  		if (ignoreRect)  			throw new SvgGdiNotImpl ("DrawText automatic rect");  		txt.Style.Set ("text-anchor"' "middle");  		txt.X = rect.X + rect.Width / 2;  	}  	break;  case StringAlignment.Far:  	{  		if (ignoreRect)  			throw new SvgGdiNotImpl ("DrawText automatic rect");  		txt.Style.Set ("text-anchor"' "end");  		txt.X = rect.Right;  	}  	break;  default:  	throw new SvgGdiNotImpl ("DrawText horizontal alignment");  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: txt.X = rect.X + rect.Width / 2;  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.LineAlignment) {  case StringAlignment.Near:  	{  		// TODO: ??   		// txt.Style.Set("baseline-shift"' "-86%");//a guess.  		var span = new SvgTspanElement (s);  		span.DY = new SvgLength (txt.Style.Get ("font-size").ToString ());  		txt.Text = null;  		txt.AddChild (span);  	}  	break;  case StringAlignment.Center:  	{  		if (ignoreRect)  			throw new SvgGdiNotImpl ("DrawText automatic rect");  		txt.Y.Value = txt.Y.Value + (rect.Height / 2);  		var span = new SvgTspanElement (s);  		span.DY = new SvgLength (txt.Style.Get ("font-size").ToString ());  		span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage (font)) - 0.5f);  		txt.Text = null;  		txt.AddChild (span);  	}  	break;  case StringAlignment.Far:  	{  		if (ignoreRect)  			throw new SvgGdiNotImpl ("DrawText automatic rect");  		txt.Y.Value = txt.Y.Value + rect.Height;  		// This would solve the alignment as well' but it's not supported by Internet Explorer  		//  		// txt.Attributes["dominant-baseline"] = "text-after-edge";  		var span = new SvgTspanElement (s);  		span.DY = new SvgLength (txt.Style.Get ("font-size").ToString ());  		span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage (font)) - 1);  		txt.Text = null;  		txt.AddChild (span);  	}  	break;  default:  	throw new SvgGdiNotImpl ("DrawText vertical alignment");  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: txt.Y.Value = txt.Y.Value + (rect.Height / 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: if (br.GetType () == typeof(HatchBrush)) {  	HatchBrush habr = (HatchBrush)br;  	SvgPatternElement patty = new SvgPatternElement (0' 0' 8' 8' new SvgNumList ("4 4 12 12"));  	patty.Style.Set ("shape-rendering"' "crispEdges");  	patty.Style.Set ("stroke-linecap"' "butt");  	SvgRectElement rc = new SvgRectElement (0' 0' 8' 8);  	rc.Style.Set ("fill"' new SvgColor (habr.BackgroundColor));  	patty.AddChild (rc);  	AddHatchBrushDetails (patty' new SvgColor (habr.ForegroundColor)' habr.HatchStyle);  	patty.Id += "_HatchBrush";  	patty.PatternUnits = "userSpaceOnUse";  	patty.PatternContentUnits = "userSpaceOnUse";  	_defs.AddChild (patty);  	SvgStyle s = new SvgStyle ();  	s.Set ("fill"' new SvgUriReference (patty));  	return s;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: if (br.GetType () == typeof(HatchBrush)) {  	HatchBrush habr = (HatchBrush)br;  	SvgPatternElement patty = new SvgPatternElement (0' 0' 8' 8' new SvgNumList ("4 4 12 12"));  	patty.Style.Set ("shape-rendering"' "crispEdges");  	patty.Style.Set ("stroke-linecap"' "butt");  	SvgRectElement rc = new SvgRectElement (0' 0' 8' 8);  	rc.Style.Set ("fill"' new SvgColor (habr.BackgroundColor));  	patty.AddChild (rc);  	AddHatchBrushDetails (patty' new SvgColor (habr.ForegroundColor)' habr.HatchStyle);  	patty.Id += "_HatchBrush";  	patty.PatternUnits = "userSpaceOnUse";  	patty.PatternContentUnits = "userSpaceOnUse";  	_defs.AddChild (patty);  	SvgStyle s = new SvgStyle ();  	s.Set ("fill"' new SvgUriReference (patty));  	return s;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: if (br.GetType () == typeof(HatchBrush)) {  	HatchBrush habr = (HatchBrush)br;  	SvgPatternElement patty = new SvgPatternElement (0' 0' 8' 8' new SvgNumList ("4 4 12 12"));  	patty.Style.Set ("shape-rendering"' "crispEdges");  	patty.Style.Set ("stroke-linecap"' "butt");  	SvgRectElement rc = new SvgRectElement (0' 0' 8' 8);  	rc.Style.Set ("fill"' new SvgColor (habr.BackgroundColor));  	patty.AddChild (rc);  	AddHatchBrushDetails (patty' new SvgColor (habr.ForegroundColor)' habr.HatchStyle);  	patty.Id += "_HatchBrush";  	patty.PatternUnits = "userSpaceOnUse";  	patty.PatternContentUnits = "userSpaceOnUse";  	_defs.AddChild (patty);  	SvgStyle s = new SvgStyle ();  	s.Set ("fill"' new SvgUriReference (patty));  	return s;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: if (br.GetType () == typeof(HatchBrush)) {  	HatchBrush habr = (HatchBrush)br;  	SvgPatternElement patty = new SvgPatternElement (0' 0' 8' 8' new SvgNumList ("4 4 12 12"));  	patty.Style.Set ("shape-rendering"' "crispEdges");  	patty.Style.Set ("stroke-linecap"' "butt");  	SvgRectElement rc = new SvgRectElement (0' 0' 8' 8);  	rc.Style.Set ("fill"' new SvgColor (habr.BackgroundColor));  	patty.AddChild (rc);  	AddHatchBrushDetails (patty' new SvgColor (habr.ForegroundColor)' habr.HatchStyle);  	patty.Id += "_HatchBrush";  	patty.PatternUnits = "userSpaceOnUse";  	patty.PatternContentUnits = "userSpaceOnUse";  	_defs.AddChild (patty);  	SvgStyle s = new SvgStyle ();  	s.Set ("fill"' new SvgUriReference (patty));  	return s;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {  case HatchStyle.Cross:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.BackwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.LightDownwardDiagonal:  case HatchStyle.DarkDownwardDiagonal:  	l1 = new SvgLineElement (4' 0' 8' 4);  	l2 = new SvgLineElement (0' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.LightHorizontal:  case HatchStyle.DarkHorizontal:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	break;  case HatchStyle.LightUpwardDiagonal:  case HatchStyle.DarkUpwardDiagonal:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 8' 8' 4);  	l3 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.LightVertical:  case HatchStyle.DarkVertical:  	l1 = new SvgLineElement (2' 0' 2' 8);  	l2 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.DashedDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 4' 4);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.DashedHorizontal:  	l1 = new SvgLineElement (0' 2' 4' 2);  	l2 = new SvgLineElement (4' 6' 8' 6);  	break;  case HatchStyle.DashedUpwardDiagonal:  	l1 = new SvgLineElement (4' 0' 0' 4);  	l2 = new SvgLineElement (8' 0' 4' 4);  	break;  case HatchStyle.DashedVertical:  	l1 = new SvgLineElement (2' 0' 2' 4);  	l2 = new SvgLineElement (6' 4' 6' 8);  	break;  case HatchStyle.DiagonalBrick:  	l1 = new SvgLineElement (0' 8' 8' 0);  	l2 = new SvgLineElement (0' 0' 4' 4);  	break;  case HatchStyle.DiagonalCross:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Divot:  	l1 = new SvgLineElement (2' 2' 4' 4);  	l2 = new SvgLineElement (4' 4' 2' 6);  	break;  case HatchStyle.DottedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 8' 8' 0);  	break;  case HatchStyle.DottedGrid:  	l1 = new SvgLineElement (4' 0' 4' 8);  	l2 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.ForwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	break;  case HatchStyle.Horizontal:  	l1 = new SvgLineElement (0' 4' 8' 4);  	break;  case HatchStyle.HorizontalBrick:  	l1 = new SvgLineElement (0' 3' 8' 3);  	l2 = new SvgLineElement (3' 0' 3' 3);  	l3 = new SvgLineElement (0' 3' 0' 7);  	l4 = new SvgLineElement (0' 7' 7' 7);  	break;  case HatchStyle.LargeCheckerBoard:  	l1 = new SvgRectElement (0' 0' 3f' 3f);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.LargeConfetti:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (2' 3' 1' 1);  	l3 = new SvgRectElement (5' 2' 1' 1);  	l4 = new SvgRectElement (6' 6' 1' 1);  	break;  case HatchStyle.NarrowHorizontal:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.NarrowVertical:  	l1 = new SvgLineElement (1' 0' 1' 8);  	l2 = new SvgLineElement (3' 0' 3' 8);  	l3 = new SvgLineElement (5' 0' 5' 8);  	l4 = new SvgLineElement (7' 0' 7' 8);  	break;  case HatchStyle.OutlinedDiamond:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (8' 0' 0' 8);  	break;  case HatchStyle.Plaid:  	l1 = new SvgLineElement (0' 0' 8' 0);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgRectElement (0' 4' 3' 3);  	break;  case HatchStyle.Shingle:  	l1 = new SvgLineElement (0' 2' 2' 0);  	l2 = new SvgLineElement (2' 0' 7' 5);  	l3 = new SvgLineElement (0' 3' 3' 7);  	break;  case HatchStyle.SmallCheckerBoard:  	l1 = new SvgRectElement (0' 0' 1' 1);  	l2 = new SvgRectElement (4' 4' 1' 1);  	l3 = new SvgRectElement (4' 0' 1' 1);  	l4 = new SvgRectElement (0' 4' 1' 1);  	break;  case HatchStyle.SmallConfetti:  	l1 = new SvgLineElement (0' 0' 2' 2);  	l2 = new SvgLineElement (7' 3' 5' 5);  	l3 = new SvgLineElement (2' 6' 4' 4);  	break;  case HatchStyle.SmallGrid:  	l1 = new SvgLineElement (0' 2' 8' 2);  	l2 = new SvgLineElement (0' 6' 8' 6);  	l3 = new SvgLineElement (2' 0' 2' 8);  	l4 = new SvgLineElement (6' 0' 6' 8);  	break;  case HatchStyle.SolidDiamond:  	l1 = new SvgPolygonElement ("3 0 6 3 3 6 0 3");  	break;  case HatchStyle.Sphere:  	l1 = new SvgEllipseElement (3' 3' 2' 2);  	break;  case HatchStyle.Trellis:  	l1 = new SvgLineElement (0' 1' 8' 1);  	l2 = new SvgLineElement (0' 3' 8' 3);  	l3 = new SvgLineElement (0' 5' 8' 5);  	l4 = new SvgLineElement (0' 7' 8' 7);  	break;  case HatchStyle.Vertical:  	l4 = new SvgLineElement (0' 0' 0' 8);  	break;  case HatchStyle.Wave:  	l3 = new SvgLineElement (0' 4' 3' 2);  	l4 = new SvgLineElement (3' 2' 8' 4);  	break;  case HatchStyle.Weave:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (8' 4' 4' 8);  	l3 = new SvgLineElement (0' 0' 0' 4);  	l4 = new SvgLineElement (0' 4' 4' 8);  	break;  case HatchStyle.WideDownwardDiagonal:  	l1 = new SvgLineElement (0' 0' 8' 8);  	l2 = new SvgLineElement (0' 1' 8' 9);  	l3 = new SvgLineElement (7' 0' 8' 1);  	break;  case HatchStyle.WideUpwardDiagonal:  	l1 = new SvgLineElement (8' 0' 0' 8);  	l2 = new SvgLineElement (8' 1' 0' 9);  	l3 = new SvgLineElement (0' 1' -1' 0);  	break;  case HatchStyle.ZigZag:  	l1 = new SvgLineElement (0' 4' 4' 0);  	l2 = new SvgLineElement (4' 0' 8' 4);  	break;  case HatchStyle.Percent05:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 4' 5' 4);  	break;  case HatchStyle.Percent10:  	l1 = new SvgLineElement (0' 0' 1' 0);  	l2 = new SvgLineElement (4' 2' 5' 2);  	l3 = new SvgLineElement (2' 4' 3' 4);  	l4 = new SvgLineElement (6' 6' 7' 6);  	break;  case HatchStyle.Percent20:  	l1 = new SvgLineElement (0' 0' 2' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 4' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent25:  	l1 = new SvgLineElement (0' 0' 3' 0);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgLineElement (2' 4' 5' 4);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent30:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgLineElement (4' 2' 6' 2);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgLineElement (5' 6' 7' 6);  	break;  case HatchStyle.Percent40:  	l1 = new SvgRectElement (0' 0' 3' 1);  	l2 = new SvgRectElement (4' 2' 3' 1);  	l3 = new SvgRectElement (2' 4' 3' 1);  	l4 = new SvgRectElement (5' 6' 3' 1);  	break;  case HatchStyle.Percent50:  	l1 = new SvgRectElement (0' 0' 3' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent60:  	l1 = new SvgRectElement (0' 0' 4' 3);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent70:  	l1 = new SvgRectElement (0' 0' 4' 5);  	l2 = new SvgRectElement (4' 4' 4' 4f);  	break;  case HatchStyle.Percent75:  	l1 = new SvgRectElement (0' 0' 7' 3);  	l2 = new SvgRectElement (0' 2' 3' 7);  	break;  case HatchStyle.Percent80:  	l1 = new SvgRectElement (0' 0' 7' 4);  	l2 = new SvgRectElement (0' 2' 4' 7);  	break;  case HatchStyle.Percent90:  	l1 = new SvgRectElement (0' 0' 7' 5);  	l2 = new SvgRectElement (0' 2' 5' 7);  	break;  default:  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 8' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 8' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 8' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 8' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 4' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 4' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 4' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 0' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 0' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 0' 2' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 4' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 4' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 4' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (6' 4' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 0' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 2' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 2' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 2' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (2' 2' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 2' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 2' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 2' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 2' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 8' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (4' 0' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 3' 0' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 3' 0' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 7' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 7' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 7' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (2' 3' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (2' 3' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (5' 2' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (5' 2' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (6' 6' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (6' 6' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 1' 8' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (1' 0' 1' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (3' 0' 3' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (5' 0' 5' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (5' 0' 5' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (5' 0' 5' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (7' 0' 7' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (7' 0' 7' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (7' 0' 7' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (0' 4' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (0' 4' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (0' 4' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 2' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 2' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (2' 0' 7' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (2' 0' 7' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (2' 0' 7' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 3' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 3' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 3' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (4' 0' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (0' 4' 1' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (7' 3' 5' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (7' 3' 5' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (7' 3' 5' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (7' 3' 5' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 6' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 6' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 6' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 6' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 2' 8' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 6' 8' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 0' 2' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 0' 6' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgEllipseElement (3' 3' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgEllipseElement (3' 3' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgEllipseElement (3' 3' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgEllipseElement (3' 3' 2' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 1' 8' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 3' 8' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 5' 8' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 7' 8' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 4' 3' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 4' 3' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 4' 3' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (3' 2' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (3' 2' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (3' 2' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (3' 2' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (0' 0' 0' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (0' 4' 4' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 8' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 1' 8' 9);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (0' 1' 8' 9);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (7' 0' 8' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (7' 0' 8' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (8' 0' 0' 8);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 1' 0' 9);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (8' 1' 0' 9);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 4' 4' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 0' 8' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 5' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 5' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 5' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 5' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 3' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 3' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 3' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 3' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (6' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 2' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 4' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgLineElement (0' 0' 3' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgLineElement (2' 4' 5' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgLineElement (4' 2' 6' 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgLineElement (5' 6' 7' 6);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 2' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 2' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 2' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l3 = new SvgRectElement (2' 4' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (5' 6' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (5' 6' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l4 = new SvgRectElement (5' 6' 3' 1);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 3' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 4' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 4' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 4' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 4' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (4' 4' 4' 4f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 3);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 3' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 4);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 4' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 4' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 4' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l1 = new SvgRectElement (0' 0' 7' 5);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 5' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 5' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: l2 = new SvgRectElement (0' 2' 5' 7);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {  case LineCap.NoAnchor:  	break;  case LineCap.Flat:  	// TODO: what is the correct look?  	break;  case LineCap.ArrowAnchor:  	points = new PointF[3];  	points [0] = new PointF (0' -w / 2f);  	points [1] = new PointF (-w' w);  	points [2] = new PointF (w' w);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.DiamondAnchor:  	points = new PointF[4];  	points [0] = new PointF (0' -w);  	points [1] = new PointF (w' 0);  	points [2] = new PointF (0' w);  	points [3] = new PointF (-w' 0);  	anchor = new SvgPolygonElement (points);  	break;  case LineCap.RoundAnchor:  	anchor = new SvgEllipseElement (0' 0' w' w);  	break;  case LineCap.SquareAnchor:  	float ww = (w / 3) * 2;  	anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  	break;  case LineCap.Custom:  	if (clc != null) {  		if (!ignoreUnsupportedLineCaps)  			throw new SvgGdiNotImpl ("DrawEndAnchor custom");  	}  	break;  default:  	if (!ignoreUnsupportedLineCaps)  		throw new SvgGdiNotImpl ("DrawEndAnchor " + lc.ToString ());  	break;  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: points = new PointF[3];  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: points [2] = new PointF (w' w);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: points = new PointF[4];  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: points [2] = new PointF (0' w);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: points [3] = new PointF (-w' 0);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: anchor = new SvgRectElement (0 - ww' 0 - ww' ww * 2' ww * 2);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: rotation.Rotate ((angle / (float)Math.PI) * 180);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,DrawImagePixel,The following statement contains a magic number: if (c.A < 255)  	rc.Style.Set ("opacity"' c.A / 255f);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: if (closed) {  	//adjust rh cp of point 0  	PointF[] pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res [1] = pts [1];  	//adjust lh cp of point l and add rh cp  	pts = ControlPoints (points [l - 1]' points [0]' points [l]' tension);  	res [res.Count - 2] = pts [0];  	res.Add (pts [1]);  	//add new end point and its lh cp  	pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res.Add (pts [0]);  	res.Add (points [0]);  	return (PointF[])res.ToArray (typeof(PointF));  }  else {  	ArrayList subset = new ArrayList ();  	for (int i = start * 3; i < (start + num) * 3; ++i) {  		subset.Add (res [i]);  	}  	subset.Add (res [(start + num) * 3]);  	return (PointF[])subset.ToArray (typeof(PointF));  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: if (closed) {  	//adjust rh cp of point 0  	PointF[] pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res [1] = pts [1];  	//adjust lh cp of point l and add rh cp  	pts = ControlPoints (points [l - 1]' points [0]' points [l]' tension);  	res [res.Count - 2] = pts [0];  	res.Add (pts [1]);  	//add new end point and its lh cp  	pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res.Add (pts [0]);  	res.Add (points [0]);  	return (PointF[])res.ToArray (typeof(PointF));  }  else {  	ArrayList subset = new ArrayList ();  	for (int i = start * 3; i < (start + num) * 3; ++i) {  		subset.Add (res [i]);  	}  	subset.Add (res [(start + num) * 3]);  	return (PointF[])subset.ToArray (typeof(PointF));  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: if (closed) {  	//adjust rh cp of point 0  	PointF[] pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res [1] = pts [1];  	//adjust lh cp of point l and add rh cp  	pts = ControlPoints (points [l - 1]' points [0]' points [l]' tension);  	res [res.Count - 2] = pts [0];  	res.Add (pts [1]);  	//add new end point and its lh cp  	pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res.Add (pts [0]);  	res.Add (points [0]);  	return (PointF[])res.ToArray (typeof(PointF));  }  else {  	ArrayList subset = new ArrayList ();  	for (int i = start * 3; i < (start + num) * 3; ++i) {  		subset.Add (res [i]);  	}  	subset.Add (res [(start + num) * 3]);  	return (PointF[])subset.ToArray (typeof(PointF));  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: if (closed) {  	//adjust rh cp of point 0  	PointF[] pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res [1] = pts [1];  	//adjust lh cp of point l and add rh cp  	pts = ControlPoints (points [l - 1]' points [0]' points [l]' tension);  	res [res.Count - 2] = pts [0];  	res.Add (pts [1]);  	//add new end point and its lh cp  	pts = ControlPoints (points [l]' points [1]' points [0]' tension);  	res.Add (pts [0]);  	res.Add (points [0]);  	return (PointF[])res.ToArray (typeof(PointF));  }  else {  	ArrayList subset = new ArrayList ();  	for (int i = start * 3; i < (start + num) * 3; ++i) {  		subset.Add (res [i]);  	}  	subset.Add (res [(start + num) * 3]);  	return (PointF[])subset.ToArray (typeof(PointF));  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: res [res.Count - 2] = pts [0];  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: for (int i = start * 3; i < (start + num) * 3; ++i) {  	subset.Add (res [i]);  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: for (int i = start * 3; i < (start + num) * 3; ++i) {  	subset.Add (res [i]);  }  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: subset.Add (res [(start + num) * 3]);  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.X /= (float)Math.Sqrt (nlvlen / (10 * t * t));  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.Y /= (float)Math.Sqrt (nlvlen / (10 * t * t));  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.X /= (float)Math.Sqrt (nrvlen / (10 * t * t));  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.Y /= (float)Math.Sqrt (nrvlen / (10 * t * t));  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.X /= (float)Math.Sqrt (vlen / (10 * t * t));  
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.Y /= (float)Math.Sqrt (vlen / (10 * t * t));  
Magic Number,SvgNet,SvgFactory,C:\repos\managed-commons_SvgNet\SvgNet\SvgElementFactory.cs,RecCompXML,The following statement contains a magic number: foreach (string s in keys) {  	string val = el.Attributes [s].Value;  	if (val.Length > 30) {  		string entname;  		if (entities [val] == null) {  			idx += 1;  			entname = "E" + idx.ToString ();  			entities [val] = entname;  			singletons [val] = new EntitySingleton () {  				Element = el'  				AttributeName = s  			};  		}  		else {  			entname = (string)entities [val];  			singletons.Remove (val);  		}  		XmlAttribute attr = doc.CreateAttribute (s);  		attr.AppendChild (doc.CreateEntityReference (entname));  		el.SetAttributeNode (attr);  	}  }  
Magic Number,SvgNet,SvgFactory,C:\repos\managed-commons_SvgNet\SvgNet\SvgElementFactory.cs,RecCompXML,The following statement contains a magic number: if (val.Length > 30) {  	string entname;  	if (entities [val] == null) {  		idx += 1;  		entname = "E" + idx.ToString ();  		entities [val] = entname;  		singletons [val] = new EntitySingleton () {  			Element = el'  			AttributeName = s  		};  	}  	else {  		entname = (string)entities [val];  		singletons.Remove (val);  	}  	XmlAttribute attr = doc.CreateAttribute (s);  	attr.AppendChild (doc.CreateEntityReference (entname));  	el.SetAttributeNode (attr);  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolygon16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var numberOfPoints = new int[1];  	numberOfPoints [0] = (int)totalNumberOfPoints;  	InternalProcessPolyline16 (1' totalNumberOfPoints' numberOfPoints' _br);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolygon16,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyPolygon16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var numberOfPolygons = _br.ReadUInt32 ();  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var numberOfPoints = new int[numberOfPolygons];  	for (var i = 0; i < numberOfPolygons; i++)  		numberOfPoints [i] = (int)_br.ReadUInt32 ();  	InternalProcessPolyline16 (numberOfPolygons' totalNumberOfPoints' numberOfPoints' _br);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyPolygon16,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyline16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var numberOfPolygons = 1u;  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var numberOfPoints = new int[numberOfPolygons];  	numberOfPoints [0] = (int)totalNumberOfPoints;  	InternalProcessPolyline16 (numberOfPolygons' totalNumberOfPoints' numberOfPoints' _br);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyline16,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolylineTo16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var points = new PointF[1 + totalNumberOfPoints];  	// Clone _moveTo cursor  	points [0].X = _moveTo.X;  	points [0].Y = _moveTo.Y;  	for (var j = 1; j < points.Length; j++) {  		points [j].X = _br.ReadInt16 ();  		points [j].Y = _br.ReadInt16 ();  	}  	// Clone last point to the current _moveTo cursor  	_moveTo = new PointF (points [points.Length - 1].X' points [points.Length - 1].Y);  	Transform.TransformPoints (points);  	DrawLine (points' 0' points.Length);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolylineTo16,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyBezierTo16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var originalPoints = new PointF[totalNumberOfPoints];  	for (var j = 0; j < originalPoints.Length; j++) {  		originalPoints [j].X = _br.ReadInt16 ();  		originalPoints [j].Y = _br.ReadInt16 ();  	}  	const int PointsPerCurve = 3;  	var numberOfCurves = totalNumberOfPoints / PointsPerCurve;  	var points = new PointF[1 + numberOfCurves];  	// Clone _moveTo cursor  	points [0].X = _moveTo.X;  	points [0].Y = _moveTo.Y;  	for (var j = 1; j < points.Length; j++) {  		// Every curve is defined by 3 points. The first two are the Bezier curve's control points.  		// The 3rd is the endpoint. This is the point we'll use (only)  		points [j] = originalPoints [((j - 1) * PointsPerCurve) + (PointsPerCurve - 1)];  	}  	// Clone last point to the current _moveTo cursor  	_moveTo = new PointF (points [points.Length - 1].X' points [points.Length - 1].Y);  	Transform.TransformPoints (points);  	DrawLine (points' 0' points.Length);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyBezierTo16,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	var totalNumberOfPoints = _br.ReadUInt32 ();  	var originalPoints = new PointF[totalNumberOfPoints];  	for (var j = 0; j < originalPoints.Length; j++) {  		originalPoints [j].X = _br.ReadInt16 ();  		originalPoints [j].Y = _br.ReadInt16 ();  	}  	const int PointsPerCurve = 3;  	var numberOfCurves = totalNumberOfPoints / PointsPerCurve;  	var points = new PointF[1 + numberOfCurves];  	// Clone _moveTo cursor  	points [0].X = _moveTo.X;  	points [0].Y = _moveTo.Y;  	for (var j = 1; j < points.Length; j++) {  		// Every curve is defined by 3 points. The first two are the Bezier curve's control points.  		// The 3rd is the endpoint. This is the point we'll use (only)  		points [j] = originalPoints [((j - 1) * PointsPerCurve) + (PointsPerCurve - 1)];  	}  	// Clone last point to the current _moveTo cursor  	_moveTo = new PointF (points [points.Length - 1].X' points [points.Length - 1].Y);  	Transform.TransformPoints (points);  	DrawLine (points' 0' points.Length);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessPolyBezierTo16,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessCloseFigure,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	var points = new PointF[2];  	points [0].X = _moveTo.X;  	points [0].Y = _moveTo.Y;  	points [1].X = _curveOrigin.X;  	points [1].Y = _curveOrigin.Y;  	Transform.TransformPoints (points);  	DrawLine (points' 0' points.Length);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessStrokeAndFillPath,The following statement contains a magic number: try {  	_ms = new MemoryStream (recordData);  	_br = new BinaryReader (_ms);  	_br.ReadBytes (16/* Bounds */);  	System.Diagnostics.Debug.Assert (_ms.Position == _ms.Length);  	FillPolygon (_lineBuffer.GetPoints ()' _brush);  }  finally {  	if (_br != null)  		_br.Close ();  	if (_ms != null)  		_ms.Dispose ();  }  
Magic Number,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,ProcessStrokeAndFillPath,The following statement contains a magic number: _br.ReadBytes (16/* Bounds */);  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set ("stroke-miterlimit"' pen.MiterLimit / 2 + 4f);  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {  case DashStyle.Dash:  	dashes = new float[] {  		3'  		1  	};  	break;  case DashStyle.DashDot:  	dashes = new float[] {  		3'  		1'  		1'  		1  	};  	break;  case DashStyle.DashDotDot:  	dashes = new float[] {  		3'  		1'  		1'  		1'  		1  	};  	break;  case DashStyle.Dot:  	dashes = new float[] {  		1'  		1  	};  	break;  case DashStyle.Custom:  	dashes = pen.DashPattern;  	break;  }  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {  case DashStyle.Dash:  	dashes = new float[] {  		3'  		1  	};  	break;  case DashStyle.DashDot:  	dashes = new float[] {  		3'  		1'  		1'  		1  	};  	break;  case DashStyle.DashDotDot:  	dashes = new float[] {  		3'  		1'  		1'  		1'  		1  	};  	break;  case DashStyle.Dot:  	dashes = new float[] {  		1'  		1  	};  	break;  case DashStyle.Custom:  	dashes = pen.DashPattern;  	break;  }  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {  case DashStyle.Dash:  	dashes = new float[] {  		3'  		1  	};  	break;  case DashStyle.DashDot:  	dashes = new float[] {  		3'  		1'  		1'  		1  	};  	break;  case DashStyle.DashDotDot:  	dashes = new float[] {  		3'  		1'  		1'  		1'  		1  	};  	break;  case DashStyle.Dot:  	dashes = new float[] {  		1'  		1  	};  	break;  case DashStyle.Custom:  	dashes = pen.DashPattern;  	break;  }  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: dashes = new float[] {  	3'  	1  };  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: dashes = new float[] {  	3'  	1'  	1'  	1  };  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: dashes = new float[] {  	3'  	1'  	1'  	1'  	1  };  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,FromString,The following statement contains a magic number: try {  	string[] pairs = s.Split (';');  	foreach (string pair in pairs) {  		string[] kv = pair.Split (':');  		if (kv.Length == 2)  			Set (kv [0].Trim ()' kv [1].Trim ());  	}  }  catch (Exception) {  	throw new SvgException ("Invalid style string"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,FromString,The following statement contains a magic number: foreach (string pair in pairs) {  	string[] kv = pair.Split (':');  	if (kv.Length == 2)  		Set (kv [0].Trim ()' kv [1].Trim ());  }  
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,FromString,The following statement contains a magic number: if (kv.Length == 2)  	Set (kv [0].Trim ()' kv [1].Trim ());  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx != -1) {  	name = s.Substring (0' idx).Trim ();  	int idx2 = s.IndexOf (")");  	if (idx2 != -1) {  		args = s.Substring (idx + 1' (idx2 - idx) - 1);  		float[] points = SvgNumList.String2Floats (args);  		if (name.IndexOf ("matrix") != -1) {  			if (points.Length == 6) {  				_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  				return;  			}  		}  		else if (name.IndexOf ("translate") != -1) {  			if (points.Length == 1) {  				_m.Translate (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Translate (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("scale") != -1) {  			if (points.Length == 1) {  				_m.Scale (points [0]' 0);  				return;  			}  			if (points.Length == 2) {  				_m.Scale (points [0]' points [1]);  				return;  			}  		}  		else if (name.IndexOf ("rotate") != -1) {  			if (points.Length == 1) {  				_m.Rotate (points [0]);  				return;  			}  			else if (points.Length == 3) {  				_m.Translate (points [1]' points [2]);  				_m.Rotate (points [0]);  				_m.Translate (points [1] * -1' points [2] * -1);  				return;  			}  		}  		else if (name.IndexOf ("skewX") != -1) {  			if (points.Length == 1) {  				_m.Shear (points [0]' 0);  				return;  			}  		}  		else if (name.IndexOf ("skewY") != -1) {  			if (points.Length == 1) {  				_m.Shear (0' points [0]);  				return;  			}  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (idx2 != -1) {  	args = s.Substring (idx + 1' (idx2 - idx) - 1);  	float[] points = SvgNumList.String2Floats (args);  	if (name.IndexOf ("matrix") != -1) {  		if (points.Length == 6) {  			_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  			return;  		}  	}  	else if (name.IndexOf ("translate") != -1) {  		if (points.Length == 1) {  			_m.Translate (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Translate (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("scale") != -1) {  		if (points.Length == 1) {  			_m.Scale (points [0]' 0);  			return;  		}  		if (points.Length == 2) {  			_m.Scale (points [0]' points [1]);  			return;  		}  	}  	else if (name.IndexOf ("rotate") != -1) {  		if (points.Length == 1) {  			_m.Rotate (points [0]);  			return;  		}  		else if (points.Length == 3) {  			_m.Translate (points [1]' points [2]);  			_m.Rotate (points [0]);  			_m.Translate (points [1] * -1' points [2] * -1);  			return;  		}  	}  	else if (name.IndexOf ("skewX") != -1) {  		if (points.Length == 1) {  			_m.Shear (points [0]' 0);  			return;  		}  	}  	else if (name.IndexOf ("skewY") != -1) {  		if (points.Length == 1) {  			_m.Shear (0' points [0]);  			return;  		}  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("matrix") != -1) {  	if (points.Length == 6) {  		_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  		return;  	}  }  else if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 6) {  	_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 6) {  	_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 6) {  	_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 6) {  	_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 6) {  	_m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix (points [0]' points [1]' points [2]' points [3]' points [4]' points [5]);  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("translate") != -1) {  	if (points.Length == 1) {  		_m.Translate (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Translate (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 2) {  	_m.Translate (points [0]' points [1]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("scale") != -1) {  	if (points.Length == 1) {  		_m.Scale (points [0]' 0);  		return;  	}  	if (points.Length == 2) {  		_m.Scale (points [0]' points [1]);  		return;  	}  }  else if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 2) {  	_m.Scale (points [0]' points [1]);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (name.IndexOf ("rotate") != -1) {  	if (points.Length == 1) {  		_m.Rotate (points [0]);  		return;  	}  	else if (points.Length == 3) {  		_m.Translate (points [1]' points [2]);  		_m.Rotate (points [0]);  		_m.Translate (points [1] * -1' points [2] * -1);  		return;  	}  }  else if (name.IndexOf ("skewX") != -1) {  	if (points.Length == 1) {  		_m.Shear (points [0]' 0);  		return;  	}  }  else if (name.IndexOf ("skewY") != -1) {  	if (points.Length == 1) {  		_m.Shear (0' points [0]);  		return;  	}  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 1) {  	_m.Rotate (points [0]);  	return;  }  else if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 1) {  	_m.Rotate (points [0]);  	return;  }  else if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 1) {  	_m.Rotate (points [0]);  	return;  }  else if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: if (points.Length == 3) {  	_m.Translate (points [1]' points [2]);  	_m.Rotate (points [0]);  	_m.Translate (points [1] * -1' points [2] * -1);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m.Translate (points [1]' points [2]);  
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\repos\managed-commons_SvgNet\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m.Translate (points [1] * -1' points [2] * -1);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 3) {  	r = int.Parse (s.Substring (0' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (1' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	r += r * 16;  	g += g * 16;  	b += b * 16;  	_col = Color.FromArgb (r' g' b);  }  else if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b = int.Parse (s.Substring (2' 1)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: r += r * 16;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: g += g * 16;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b += b * 16;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: if (s.Length == 6) {  	r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  	_col = Color.FromArgb (r' g' b);  }  else {  	throw new SvgException ("Invalid SvgColor"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: r = int.Parse (s.Substring (0' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: g = int.Parse (s.Substring (2' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b = int.Parse (s.Substring (4' 2)' NumberStyles.HexNumber' System.Globalization.CultureInfo.InvariantCulture);  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: if (m.Success) {  	r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  	_col = Color.FromArgb (r' g' b);  	return;  }  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: r = int.Parse (m.Groups ["r"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: g = int.Parse (m.Groups ["g"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgColor,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: b = int.Parse (m.Groups ["b"].Captures [0].Value' System.Globalization.CultureInfo.InvariantCulture) * 255 / 100;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: while (i < sa.Length) {  	if (sa [i] == "") {  		i += 1;  		continue;  	}  	//check for a segment-type character  	if (char.IsLetter (sa [i] [0])) {  		segTypeChar = sa [i] [0];  		if (segTypeChar == 'M' || segTypeChar == 'm') {  			pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  			abs = (segTypeChar == 'M');  			datasize = 2;  		}  		else if (segTypeChar == 'Z' || segTypeChar == 'z') {  			pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  			datasize = 0;  		}  		else if (segTypeChar == 'L' || segTypeChar == 'l') {  			pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  			abs = (segTypeChar == 'L');  			datasize = 2;  		}  		else if (segTypeChar == 'H' || segTypeChar == 'h') {  			pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  			abs = (segTypeChar == 'H');  			datasize = 1;  		}  		else if (segTypeChar == 'V' || segTypeChar == 'v') {  			pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  			abs = (segTypeChar == 'V');  			datasize = 1;  		}  		else if (segTypeChar == 'C' || segTypeChar == 'c') {  			pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  			abs = (segTypeChar == 'C');  			datasize = 6;  		}  		else if (segTypeChar == 'S' || segTypeChar == 's') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  			abs = (segTypeChar == 'S');  			datasize = 4;  		}  		else if (segTypeChar == 'Q' || segTypeChar == 'q') {  			pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  			abs = (segTypeChar == 'Q');  			datasize = 4;  		}  		else if (segTypeChar == 'T' || segTypeChar == 't') {  			pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  			abs = (segTypeChar == 'T');  			datasize = 2;  		}  		else if (segTypeChar == 'A' || segTypeChar == 'a') {  			pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  			abs = (segTypeChar == 'A');  			datasize = 7;  		}  		else {  			throw new SvgException ("Invalid SvgPath"' s);  		}  		//strip off type character  		sa [i] = sa [i].Substring (1);  		if (sa [i] == "")  			i += 1;  	}  	if (pt == SvgPathSegType.SVG_SEGTYPE_UNKNOWN)  		throw new SvgException ("Invalid SvgPath"' s);  	float[] arr = new float[datasize];  	for (int j = 0; j < datasize; ++j) {  		arr [j] = float.Parse (sa [i + j]' System.Globalization.CultureInfo.InvariantCulture);  	}  	ps = new PathSeg (pt' abs' arr);  	_path.Add (ps);  	i += datasize;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (char.IsLetter (sa [i] [0])) {  	segTypeChar = sa [i] [0];  	if (segTypeChar == 'M' || segTypeChar == 'm') {  		pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  		abs = (segTypeChar == 'M');  		datasize = 2;  	}  	else if (segTypeChar == 'Z' || segTypeChar == 'z') {  		pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  		datasize = 0;  	}  	else if (segTypeChar == 'L' || segTypeChar == 'l') {  		pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  		abs = (segTypeChar == 'L');  		datasize = 2;  	}  	else if (segTypeChar == 'H' || segTypeChar == 'h') {  		pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  		abs = (segTypeChar == 'H');  		datasize = 1;  	}  	else if (segTypeChar == 'V' || segTypeChar == 'v') {  		pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  		abs = (segTypeChar == 'V');  		datasize = 1;  	}  	else if (segTypeChar == 'C' || segTypeChar == 'c') {  		pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  		abs = (segTypeChar == 'C');  		datasize = 6;  	}  	else if (segTypeChar == 'S' || segTypeChar == 's') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  		abs = (segTypeChar == 'S');  		datasize = 4;  	}  	else if (segTypeChar == 'Q' || segTypeChar == 'q') {  		pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  		abs = (segTypeChar == 'Q');  		datasize = 4;  	}  	else if (segTypeChar == 'T' || segTypeChar == 't') {  		pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  		abs = (segTypeChar == 'T');  		datasize = 2;  	}  	else if (segTypeChar == 'A' || segTypeChar == 'a') {  		pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  		abs = (segTypeChar == 'A');  		datasize = 7;  	}  	else {  		throw new SvgException ("Invalid SvgPath"' s);  	}  	//strip off type character  	sa [i] = sa [i].Substring (1);  	if (sa [i] == "")  		i += 1;  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'M' || segTypeChar == 'm') {  	pt = SvgPathSegType.SVG_SEGTYPE_MOVETO;  	abs = (segTypeChar == 'M');  	datasize = 2;  }  else if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 2;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Z' || segTypeChar == 'z') {  	pt = SvgPathSegType.SVG_SEGTYPE_CLOSEPATH;  	datasize = 0;  }  else if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'L' || segTypeChar == 'l') {  	pt = SvgPathSegType.SVG_SEGTYPE_LINETO;  	abs = (segTypeChar == 'L');  	datasize = 2;  }  else if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 2;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'H' || segTypeChar == 'h') {  	pt = SvgPathSegType.SVG_SEGTYPE_HLINETO;  	abs = (segTypeChar == 'H');  	datasize = 1;  }  else if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'V' || segTypeChar == 'v') {  	pt = SvgPathSegType.SVG_SEGTYPE_VLINETO;  	abs = (segTypeChar == 'V');  	datasize = 1;  }  else if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'C' || segTypeChar == 'c') {  	pt = SvgPathSegType.SVG_SEGTYPE_CURVETO;  	abs = (segTypeChar == 'C');  	datasize = 6;  }  else if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 6;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'S' || segTypeChar == 's') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHCURVETO;  	abs = (segTypeChar == 'S');  	datasize = 4;  }  else if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 4;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'Q' || segTypeChar == 'q') {  	pt = SvgPathSegType.SVG_SEGTYPE_BEZIERTO;  	abs = (segTypeChar == 'Q');  	datasize = 4;  }  else if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 4;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'T' || segTypeChar == 't') {  	pt = SvgPathSegType.SVG_SEGTYPE_SMOOTHBEZIERTO;  	abs = (segTypeChar == 'T');  	datasize = 2;  }  else if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 2;  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (segTypeChar == 'A' || segTypeChar == 'a') {  	pt = SvgPathSegType.SVG_SEGTYPE_ARCTO;  	abs = (segTypeChar == 'A');  	datasize = 7;  }  else {  	throw new SvgException ("Invalid SvgPath"' s);  }  
Magic Number,SvgNet.SvgTypes,SvgPath,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 7;  
Magic Number,SvgNet.SvgTypes,SvgPoints,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,SvgPoints,The following statement contains a magic number: if (pts.Length % 2 != 0)  	throw new SvgException ("Invalid SvgPoints"' pts.ToString ());  
Magic Number,SvgNet.SvgTypes,SvgPoints,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,FromString,The following statement contains a magic number: if (_pts.Count % 2 != 0)  	throw new SvgException ("Invalid SvgPoints"' s);  
Missing Default,MetafileTools,MetafileParser,C:\repos\managed-commons_SvgNet\SvgNet\SVGGraphics.cs,InternalSelectObject,The following switch statement is missing a default case: switch (stockObject) {  case EmfStockObject.BLACK_BRUSH:  	_brush = new SolidBrush (Color.Black);  	break;  case EmfStockObject.DC_BRUSH:  	throw new NotImplementedException ();  case EmfStockObject.DKGRAY_BRUSH:  	_brush = new SolidBrush (Color.DarkGray);  	break;  case EmfStockObject.GRAY_BRUSH:  	_brush = new SolidBrush (Color.Gray);  	break;  case EmfStockObject.LTGRAY_BRUSH:  	_brush = new SolidBrush (Color.LightGray);  	break;  case EmfStockObject.NULL_BRUSH:  	_brush = null;  	break;  case EmfStockObject.WHITE_BRUSH:  	_brush = new SolidBrush (Color.White);  	break;  }  
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.EndCap) {  case LineCap.Round:  	Set ("stroke-linecap"' "round");  	break;  case LineCap.Square:  	Set ("stroke-linecap"' "square");  	break;  case LineCap.Flat:  	Set ("stroke-linecap"' "butt");  	break;  }  
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.LineJoin) {  case LineJoin.Bevel:  	Set ("stroke-linejoin"' "bevel");  	break;  case LineJoin.Miter:  	Set ("stroke-linejoin"' "miter");  	break;  case LineJoin.Round:  	Set ("stroke-linejoin"' "round");  	break;  }  
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\repos\managed-commons_SvgNet\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.DashStyle) {  case DashStyle.Dash:  	dashes = new float[] {  		3'  		1  	};  	break;  case DashStyle.DashDot:  	dashes = new float[] {  		3'  		1'  		1'  		1  	};  	break;  case DashStyle.DashDotDot:  	dashes = new float[] {  		3'  		1'  		1'  		1'  		1  	};  	break;  case DashStyle.Dot:  	dashes = new float[] {  		1'  		1  	};  	break;  case DashStyle.Custom:  	dashes = pen.DashPattern;  	break;  }  
Missing Default,SvgNet.SvgTypes,SvgLength,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,ToString,The following switch statement is missing a default case: switch (_type) {  case SvgLengthType.SVG_LENGTHTYPE_PERCENTAGE:  	s += "%";  	break;  case SvgLengthType.SVG_LENGTHTYPE_EMS:  	s += "em";  	break;  case SvgLengthType.SVG_LENGTHTYPE_EXS:  	s += "ex";  	break;  case SvgLengthType.SVG_LENGTHTYPE_PX:  	s += "px";  	break;  case SvgLengthType.SVG_LENGTHTYPE_CM:  	s += "cm";  	break;  case SvgLengthType.SVG_LENGTHTYPE_MM:  	s += "mm";  	break;  case SvgLengthType.SVG_LENGTHTYPE_IN:  	s += "in";  	break;  case SvgLengthType.SVG_LENGTHTYPE_PT:  	s += "pt";  	break;  case SvgLengthType.SVG_LENGTHTYPE_PC:  	s += "pc";  	break;  }  
Missing Default,SvgNet.SvgTypes,SvgAngle,C:\repos\managed-commons_SvgNet\SvgNet\Types.cs,ToString,The following switch statement is missing a default case: switch (_type) {  case SvgAngleType.SVG_ANGLETYPE_DEG:  case SvgAngleType.SVG_ANGLETYPE_UNSPECIFIED:  	s += "deg";  	break;  case SvgAngleType.SVG_ANGLETYPE_GRAD:  	s += "grad";  	break;  case SvgAngleType.SVG_ANGLETYPE_RAD:  	s += "rad";  	break;  }  
