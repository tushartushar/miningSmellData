Implementation smell,Namespace,Class,File,Method,Description
Long Method,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The method has 101 lines of code.
Long Method,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The method has 111 lines of code.
Long Identifier,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The length of the parameter radRemoveChannelFromChannelGroup is 32.
Long Statement,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,DisplayMessageInTextBox,The length of the statement  "            await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () => " is 128.
Long Statement,WindowsUniversalApp,DemoSubscribeCallback,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,Status,The length of the statement  "            string msg = string.Format("Operation: {0}; Category: {1};  StatusCode: {2}"' status.Operation' status.Category' status.StatusCode); " is 132.
Long Statement,WindowsUniversalApp,DemoSubscribeCallback,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,Status,The length of the statement  "                //Console.WriteLine("CONNECTED {0} Channels = {1}' ChannelGroups = {2}"' status.StatusCode' string.Join("'"' status.AffectedChannels)' string.Join("'"' status.AffectedChannelGroups)); " is 183.
Long Statement,WindowsUniversalApp,DemoSubscribeCallback,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,Status,The length of the statement  "                //Console.WriteLine("RE-CONNECTED {0} Channels = {1}' ChannelGroups = {2}"' status.StatusCode' string.Join("'"' status.AffectedChannels)' string.Join("'"' status.AffectedChannelGroups)); " is 186.
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishStackPanel.Width = 320;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishStackPanel.Height = 550;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishPopup.Height = 550;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishPopup.Width = 320;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPublish_Click,The following statement contains a magic number: publishPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHistory_Click,The following statement contains a magic number: pubnub.History()                  .Channel(channel)                  .Count(100)                  .Async(new PNHistoryResultExt(                      (r's)=>                       {                          if (r != null)                          {                              DisplayMessageInTextBox("Message Count = " + r.Messages.Count.ToString());                          }                      }));
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHerenowStackPanel.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHerenowStackPanel.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHereNowPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHereNowPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHereNowPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnGlobalHereNow_Click,The following statement contains a magic number: globalHereNowPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: herenowStackPanel.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: herenowStackPanel.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: hereNowPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: hereNowPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: hereNowPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnHereNow_Click,The following statement contains a magic number: hereNowPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelStackPanel.Width = 400;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelStackPanel.Height = 600;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannel_Click,The following statement contains a magic number: pamChannelPopup.Closed += (senderPopup' argsPopup) =>              {                  if (control.IsOKButtonEntered)                  {                      string pamUserChannelName = "";                      string pamAuthKey = "";                      txtPAMChannelName = control.FindName("txtChannelName") as TextBox;                      if (txtPAMChannelName != null)                      {                          pamUserChannelName = txtPAMChannelName.Text.Trim();                      }                        TextBox txtAuthKey = control.FindName("txtAuthKey") as TextBox;                      if (txtAuthKey != null)                      {                          pamAuthKey = txtAuthKey.Text;                      }                        RadioButton radGrantPAMChannel = control.FindName("radGrantChannel") as RadioButton;                      if (radGrantPAMChannel != null && radGrantPAMChannel.IsChecked.Value)                      {                          DisplayMessageInTextBox("Running GrantAccess:");                          int ttlInMinutes = 1440;                          pubnub.Grant()                          .Channels(new string[] { pamUserChannelName })                          .AuthKeys(new string[] { pamAuthKey })                          .Read(true)                          .Write(true)                          .TTL(ttlInMinutes)                          .Async(new PNAccessManagerGrantResultExt((r's)=>                           {                              if (r != null)                              {                                  DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                              }                          }));                      }                        RadioButton radAuditChannel = control.FindName("radAuditChannel") as RadioButton;                      if (radAuditChannel != null && radAuditChannel.IsChecked.Value)                      {                          DisplayMessageInTextBox("Running AuditAccess:");                          pubnub.Audit()                          .Channel(pamUserChannelName)                          .AuthKeys(new string[] { pamAuthKey })                          .Async(new PNAccessManagerAuditResultExt(                              (r's)=>                               {                                  if (r != null)                                  {                                      DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                                  }                              }));                      }                        RadioButton radRevokeChannel = control.FindName("radRevokeChannel") as RadioButton;                      if (radRevokeChannel != null && radRevokeChannel.IsChecked.Value)                      {                          DisplayMessageInTextBox("Running Revoke Access:");                          System.Threading.Tasks.Task.Run(() =>                          {                              pubnub.Grant()                              .Channels(new string[] { pamUserChannelName })                              .AuthKeys(new string[] { pamAuthKey })                              .Read(false)                              .Write(false)                              .Async(new PNAccessManagerGrantResultExt((r' s) =>                              {                                  if (r != null)                                  {                                      DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                                  }                              }));                          });                      }                    }                  pamChannelPopup = null;                  this.IsEnabled = true;              };
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupStackPanel.Width = 400;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupStackPanel.Height = 600;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnPAMChannelGroup_Click,The following statement contains a magic number: pamChannelGroupPopup.Closed += (senderPopup' argsPopup) =>              {                  if (control.IsOKButtonEntered)                  {                      string pamUserChannelGroup = "";                      string pamAuthKey = "";                      int ttlInMinutes = 1440;                      txtPAMChannelGroup = control.FindName("txtChannelGroup") as TextBox;                      if (txtPAMChannelGroup != null)                      {                          pamUserChannelGroup = txtPAMChannelGroup.Text;                            TextBox txtAuthKey = control.FindName("txtAuthKey") as TextBox;                          if (txtAuthKey != null)                          {                              pamAuthKey = txtAuthKey.Text;                          }                            RadioButton radGrantPAMChannelGroup = control.FindName("radGrantChannelGroup") as RadioButton;                          if (radGrantPAMChannelGroup != null && radGrantPAMChannelGroup.IsChecked.Value)                          {                              DisplayMessageInTextBox("Running ChannelGroupGrantAccess:");                              pubnub.Grant()                              .ChannelGroups(new string[] { pamUserChannelGroup })                              .AuthKeys(new string[] { pamAuthKey })                              .Read(true)                              .Write(true)                              .TTL(ttlInMinutes)                              .Async(new PNAccessManagerGrantResultExt((r' s) =>                              {                                  if (r != null)                                  {                                      DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                                  }                              }));                          }                            RadioButton radAuditPAMChannelGroup = control.FindName("radAuditChannelGroup") as RadioButton;                          if (radAuditPAMChannelGroup != null && radAuditPAMChannelGroup.IsChecked.Value)                          {                              DisplayMessageInTextBox("Running ChannelGroupAuditAccess:");                              pubnub.Audit()                              .ChannelGroup(pamUserChannelGroup)                              .AuthKeys(new string[] { pamAuthKey })                              .Async(new PNAccessManagerAuditResultExt(                                  (r' s) =>                                  {                                      if (r != null)                                      {                                          DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                                      }                                  }));                          }                            RadioButton radRevokePAMChannelGroup = control.FindName("radRevokeChannelGroup") as RadioButton;                          if (radRevokePAMChannelGroup != null && radRevokePAMChannelGroup.IsChecked.Value)                          {                              DisplayMessageInTextBox("Running ChannelGroup Revoke Access:");                              pubnub.Grant()                              .ChannelGroups(new string[] { pamUserChannelGroup })                              .AuthKeys(new string[] { pamAuthKey })                              .Read(false)                              .Write(false)                              .TTL(ttlInMinutes)                              .Async(new PNAccessManagerGrantResultExt((r' s) =>                              {                                  if (r != null)                                  {                                      DisplayMessageInTextBox(pubnub.JsonPluggableLibrary.SerializeToJsonString(r));                                  }                              }));                          }                      }                  }                  pamChannelGroupPopup = null;                  this.IsEnabled = true;              };
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The following statement contains a magic number: userStatePopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The following statement contains a magic number: userStatePopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The following statement contains a magic number: userStatePopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnUserState_Click,The following statement contains a magic number: userStatePopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowStackPanel.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowStackPanel.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnWhereNow_Click,The following statement contains a magic number: whereNowPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDStackPanel.Width = 400;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDStackPanel.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChangeUUID_Click,The following statement contains a magic number: changeUUIDPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: border.BorderThickness = new Thickness(5.0);
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupStackPanel.Width = 400;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupStackPanel.Height = 600;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupPopup.Height = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupPopup.Width = 300;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupPopup.HorizontalOffset = 10;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,btnChannelGroup_Click,The following statement contains a magic number: channelGroupPopup.VerticalOffset = 100;
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,DisplayMessageInTextBox,The following statement contains a magic number: await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  if (msg.Length > 200)                  {                      msg = string.Concat(msg.Substring(0' 200)' "..(truncated)");                  }                    if (txtResult.Text.Length > 200)                  {                      txtResult.Text = string.Concat("(Truncated)..\n"' txtResult.Text.Remove(0' 200));                  }                    txtResult.Text += msg + "\n";                  txtResult.Select(txtResult.Text.Length - 1' 1);              });
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,DisplayMessageInTextBox,The following statement contains a magic number: await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  if (msg.Length > 200)                  {                      msg = string.Concat(msg.Substring(0' 200)' "..(truncated)");                  }                    if (txtResult.Text.Length > 200)                  {                      txtResult.Text = string.Concat("(Truncated)..\n"' txtResult.Text.Remove(0' 200));                  }                    txtResult.Text += msg + "\n";                  txtResult.Select(txtResult.Text.Length - 1' 1);              });
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,DisplayMessageInTextBox,The following statement contains a magic number: await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  if (msg.Length > 200)                  {                      msg = string.Concat(msg.Substring(0' 200)' "..(truncated)");                  }                    if (txtResult.Text.Length > 200)                  {                      txtResult.Text = string.Concat("(Truncated)..\n"' txtResult.Text.Remove(0' 200));                  }                    txtResult.Text += msg + "\n";                  txtResult.Select(txtResult.Text.Length - 1' 1);              });
Magic Number,WindowsUniversalApp,PubnubOperation,C:\repos\pubnub_c-sharp\src\Examples\WindowsUniversalApp\PubnubOperation.xaml.cs,DisplayMessageInTextBox,The following statement contains a magic number: await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  if (msg.Length > 200)                  {                      msg = string.Concat(msg.Substring(0' 200)' "..(truncated)");                  }                    if (txtResult.Text.Length > 200)                  {                      txtResult.Text = string.Concat("(Truncated)..\n"' txtResult.Text.Remove(0' 200));                  }                    txtResult.Text += msg + "\n";                  txtResult.Select(txtResult.Text.Length - 1' 1);              });
