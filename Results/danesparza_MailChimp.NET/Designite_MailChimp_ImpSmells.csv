Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MailChimp,IMailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,GetAllMembersForList,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,GetAllMembersForList,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,CreateCampaign,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetCampaigns,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetGalleries,The method has 7 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,BatchSubscribe,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,BatchUnsubscribe,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetLists,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetAllMembersForList,The method has 7 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,Subscribe,The method has 8 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,UpdateMember,The method has 5 parameters.
Long Parameter List,MailChimp,IMailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,Unsubscribe,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetAutomations,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,CreateCampaign,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetCampaigns,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetGalleries,The method has 7 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,BatchSubscribe,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,BatchUnsubscribe,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetLists,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,GetAllMembersForList,The method has 7 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,Subscribe,The method has 8 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,UpdateMember,The method has 5 parameters.
Long Parameter List,MailChimp,MailChimpManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpManager.cs,Unsubscribe,The method has 5 parameters.
Long Statement,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,rowParser,The length of the statement  "			} else if (row.Substring (row.Length - 1).Contains ("\""))//If there's not next column' but at least closing quotation mark (The last column) " is 141.
Magic Number,MailChimp.Campaigns,CampaignTypeAbsplitOptions,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\Campaigns\CampaignTypeAbsplitOptions.cs,CampaignTypeAbsplitOptions,The following statement contains a magic number: WaitUnits = 86400;  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,ParseExportApiResults,The following statement contains a magic number: foreach (string row in listofmembers) {  	if (row.Length > 4)  		iListofMembers.Add (row.Trim (new[] {  			'[''  			']'  		}));  }  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,ParseExportApiResults,The following statement contains a magic number: if (row.Length > 4)  	iListofMembers.Add (row.Trim (new[] {  		'[''  		']'  	}));  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,rowParser,The following statement contains a magic number: while (row != string.Empty && row != previousRow) {  	previousRow = row;  	// if all that is left in the row is a quotation mark' we're done  	if (row.Equals ("\"")) {  		return columnList;  	}  	if (row.Substring (0' 1) == "\"")//If first mark is quotation mark (column has string value)  	 {  		if (row.Contains ("\"'"))//If theres still next column' comma separated  		 {  			columnString = row.Substring (1' row.Substring (1).IndexOf ("\"'"));  			//all between " and "' marks  			row = row.Substring (row.IndexOf ("\"'") + 2);  			//let's cut that column out of the row string  			columnString = JsonSerializer.DeserializeFromString<string> (columnString);  			// This is to fix unicode characters  			columnList.Add (columnString);  			//let's add that column to list  		} else if (row.Substring (row.Length - 1).Contains ("\""))//If there's not next column' but at least closing quotation mark (The last column)  		 {  			columnString = row.Substring (1' row.Substring (1).IndexOf ("\""));  			//all between " and " marks  			row = "";  			//let's clear the row string  			columnString = JsonSerializer.DeserializeFromString<string> (columnString);  			// This is to fix unicode characters  			columnList.Add (columnString);  			//let's add that column to list  		}  	} else//If first column doesn't have a quotation mark  	 {  		if (row.Contains ("'"))//If theres still next column' comma separated  		 {  			columnString = row.Substring (0' row.IndexOf ("'"));  			//all from start to comma mark  			row = row.Substring (row.IndexOf ("'") + 1);  			//let's cut that column out of the row string  			columnString = JsonSerializer.DeserializeFromString<string> (columnString);  			// This is to fix unicode characters  			columnList.Add (columnString);  			//let's add that column to list   		} else//If this is last column  		 {  			columnString = row;  			//save null as string value  			row = "";  			//let's clear the row string  			columnString = JsonSerializer.DeserializeFromString<string> (columnString);  			// This is to fix unicode characters  			columnList.Add (columnString);  			//let's add that column to list  		}  	}  }  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,rowParser,The following statement contains a magic number: if (row.Substring (0' 1) == "\"")//If first mark is quotation mark (column has string value)   {  	if (row.Contains ("\"'"))//If theres still next column' comma separated  	 {  		columnString = row.Substring (1' row.Substring (1).IndexOf ("\"'"));  		//all between " and "' marks  		row = row.Substring (row.IndexOf ("\"'") + 2);  		//let's cut that column out of the row string  		columnString = JsonSerializer.DeserializeFromString<string> (columnString);  		// This is to fix unicode characters  		columnList.Add (columnString);  		//let's add that column to list  	} else if (row.Substring (row.Length - 1).Contains ("\""))//If there's not next column' but at least closing quotation mark (The last column)  	 {  		columnString = row.Substring (1' row.Substring (1).IndexOf ("\""));  		//all between " and " marks  		row = "";  		//let's clear the row string  		columnString = JsonSerializer.DeserializeFromString<string> (columnString);  		// This is to fix unicode characters  		columnList.Add (columnString);  		//let's add that column to list  	}  } else//If first column doesn't have a quotation mark   {  	if (row.Contains ("'"))//If theres still next column' comma separated  	 {  		columnString = row.Substring (0' row.IndexOf ("'"));  		//all from start to comma mark  		row = row.Substring (row.IndexOf ("'") + 1);  		//let's cut that column out of the row string  		columnString = JsonSerializer.DeserializeFromString<string> (columnString);  		// This is to fix unicode characters  		columnList.Add (columnString);  		//let's add that column to list   	} else//If this is last column  	 {  		columnString = row;  		//save null as string value  		row = "";  		//let's clear the row string  		columnString = JsonSerializer.DeserializeFromString<string> (columnString);  		// This is to fix unicode characters  		columnList.Add (columnString);  		//let's add that column to list  	}  }  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,rowParser,The following statement contains a magic number: if (row.Contains ("\"'"))//If theres still next column' comma separated   {  	columnString = row.Substring (1' row.Substring (1).IndexOf ("\"'"));  	//all between " and "' marks  	row = row.Substring (row.IndexOf ("\"'") + 2);  	//let's cut that column out of the row string  	columnString = JsonSerializer.DeserializeFromString<string> (columnString);  	// This is to fix unicode characters  	columnList.Add (columnString);  	//let's add that column to list  } else if (row.Substring (row.Length - 1).Contains ("\""))//If there's not next column' but at least closing quotation mark (The last column)   {  	columnString = row.Substring (1' row.Substring (1).IndexOf ("\""));  	//all between " and " marks  	row = "";  	//let's clear the row string  	columnString = JsonSerializer.DeserializeFromString<string> (columnString);  	// This is to fix unicode characters  	columnList.Add (columnString);  	//let's add that column to list  }  
Magic Number,MailChimp,MailChimpExportManager,F:\newReposMay17\danesparza_MailChimp.NET\MailChimp\MailChimpExportManager.cs,rowParser,The following statement contains a magic number: row = row.Substring (row.IndexOf ("\"'") + 2);  
