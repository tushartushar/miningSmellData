Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,BuildCronExpression,Cyclomatic complexity of the method is 30
Complex Method,QuartzCronGenerator,CronConverter,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronConverter.cs,ToCronRepresentationSingle,Cyclomatic complexity of the method is 9
Complex Method,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,Cyclomatic complexity of the method is 23
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,CronExpression,The method has 5 parameters.
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,CronExpression,The method has 6 parameters.
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,CronExpression,The method has 5 parameters.
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,CronExpression,The method has 6 parameters.
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,EverySpecificSeqWeekDayEveryNMonthAt,The method has 5 parameters.
Long Parameter List,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,EverySpecificSeqWeekDayOfMonthAt,The method has 5 parameters.
Long Statement,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,BuildCronExpression,The length of the statement  "		_cronString = string.Format ("0 {0} {1} ? * {2} *"' _startMinute' _startHour' CronConverter.ToCronRepresentation (_days)); " is 122.
Long Statement,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,BuildCronExpression,The length of the statement  "		_cronString = string.Format ("0 {0} {1} ? 1/{2} {3}#{4} *"' _startMinute' _startHour' _interval' CronConverter.ToCronRepresentationSingle (_days)' _dayNumber); " is 159.
Long Statement,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,BuildCronExpression,The length of the statement  "		_cronString = string.Format ("0 {0} {1} ? {2} {3}#{4} *"' _startMinute' _startHour' (int)_month' CronConverter.ToCronRepresentationSingle (_days)' _dayNumber); " is 159.
Long Statement,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,EverySpecificSeqWeekDayEveryNMonthAt,The length of the statement  "	var ce = new CronExpression (dayNumber' days' monthInverval' hour' minute' CronExpressionType.EverySpecificSeqWeekDayEveryNMonthAt); " is 132.
Long Statement,QuartzCronGenerator,CronExpression,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\CronExpression.cs,EverySpecificSeqWeekDayOfMonthAt,The length of the statement  "	var ce = new CronExpression (dayNumber' days' month' hour' minute' CronExpressionType.EverySpecificSeqWeekDayOfMonthAt); " is 120.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem)); " is 152.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem)); " is 177.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem)); " is 156.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total); " is 183.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem)); " is 243.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem)); " is 233.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem)); " is 216.
Long Statement,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The length of the statement  "			CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem)); " is 198.
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MinutesPage"]) {  	CronExpressionTextBox.Text = CronExpression.EveryNMinutes ((int)MinutesUpDown.Value);  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["HoursPage"]) {  	if (HourlyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNHours ((int)HoursUpDown.Value);  	}  	else if (AtTimeRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryDayAt (Convert.ToInt32 (HoursComboBox1.SelectedItem)' Convert.ToInt32 (MinutesComboBox1.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["DaysPage"]) {  	if (DailyRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryNDaysAt ((int)DaysUpDown.Value' Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  	else if (EveryWeekDayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EveryWeekDayAt (Convert.ToInt32 (HoursComboBox2.SelectedItem)' Convert.ToInt32 (MinutesComboBox2.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["WeeksPage"]) {  	int total = 0;  	if (MondayCheckBox.Checked)  		total += 1;  	if (TuesdayCheckBox.Checked)  		total += 2;  	if (WednesdayCheckBox.Checked)  		total += 4;  	if (ThursdayCheckBox.Checked)  		total += 8;  	if (FridayCheckBox.Checked)  		total += 16;  	if (SaturdayCheckBox.Checked)  		total += 32;  	if (SundayCheckBox.Checked)  		total += 64;  	if (total == 0) {  		ShowError ("At least one day of the week is required.");  	}  	else {  		CronExpressionTextBox.Text = CronExpression.EverySpecificWeekDayAt (Convert.ToInt32 (HoursComboBox3.SelectedItem)' Convert.ToInt32 (MinutesComboBox3.SelectedItem)' (DaysOfWeek)total);  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (TuesdayCheckBox.Checked)  	total += 2;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 2;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (WednesdayCheckBox.Checked)  	total += 4;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 4;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (ThursdayCheckBox.Checked)  	total += 8;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 8;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (FridayCheckBox.Checked)  	total += 16;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 16;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (SaturdayCheckBox.Checked)  	total += 32;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 32;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (SundayCheckBox.Checked)  	total += 64;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: total += 64;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["MonthsPage"]) {  	if (DayRadioButton.Checked) {  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  	else if (TheRadioButton.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  	}  }  else if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (DayRadioButton.Checked) {  	CronExpressionTextBox.Text = CronExpression.EverySpecificDayEveryNMonthAt (Convert.ToInt32 (DayUpDown.Value)' Convert.ToInt32 (MonthUpDown.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  }  else if (TheRadioButton.Checked) {  	// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  	var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  	// Convert combo box (first' second' third' fourth) to enum  	var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  	CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (TheRadioButton.Checked) {  	// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  	var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox.SelectedIndex));  	// Convert combo box (first' second' third' fourth) to enum  	var seqNumber = (DaySeqNumber)(SeqNumberComboBox.SelectedIndex + 1);  	CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayEveryNMonthAt (seqNumber' days' Convert.ToInt32 (MonthUpDown2.Value)' Convert.ToInt32 (HoursComboBox4.SelectedItem)' Convert.ToInt32 (MinutesComboBox4.SelectedItem));  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (InputTabControl.SelectedTab == InputTabControl.TabPages ["YearsPage"]) {  	if (EveryRadioButton.Checked) {  		var month = (Months)(MonthComboBox.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  	else if (TheRadioButton2.Checked) {  		// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  		var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  		// Convert combo box (first' second' third' fourth) to enum  		var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  		var month = (Months)(MonthComboBox2.SelectedIndex + 1);  		CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  	}  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (EveryRadioButton.Checked) {  	var month = (Months)(MonthComboBox.SelectedIndex + 1);  	CronExpressionTextBox.Text = CronExpression.EverySpecificDayOfMonthAt (month' Convert.ToInt32 (DayOfMonthUpDown.Value)' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  }  else if (TheRadioButton2.Checked) {  	// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  	var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  	// Convert combo box (first' second' third' fourth) to enum  	var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  	var month = (Months)(MonthComboBox2.SelectedIndex + 1);  	CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,ButtonGenerate_Click,The following statement contains a magic number: if (TheRadioButton2.Checked) {  	// Convert combo box index to enum (0 -> 1' 1 -> 2' 2 -> 4' etc)  	var days = (DaysOfWeek)(Math.Pow (2' DayOfWeekComboBox2.SelectedIndex));  	// Convert combo box (first' second' third' fourth) to enum  	var seqNumber = (DaySeqNumber)(SeqNumberComboBox2.SelectedIndex + 1);  	var month = (Months)(MonthComboBox2.SelectedIndex + 1);  	CronExpressionTextBox.Text = CronExpression.EverySpecificSeqWeekDayOfMonthAt (seqNumber' days' month' Convert.ToInt32 (HoursComboBox5.SelectedItem)' Convert.ToInt32 (MinutesComboBox5.SelectedItem));  }  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,MainForm_Load,The following statement contains a magic number: HoursComboBox1.SelectedIndex = 12;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,MainForm_Load,The following statement contains a magic number: HoursComboBox2.SelectedIndex = 12;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,MainForm_Load,The following statement contains a magic number: HoursComboBox3.SelectedIndex = 12;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,MainForm_Load,The following statement contains a magic number: HoursComboBox4.SelectedIndex = 12;  
Magic Number,QuartzCronGenerator,MainForm,C:\repos\subterraneanbob_quartz-cron-generator\QuartzCronGenerator\MainForm.cs,MainForm_Load,The following statement contains a magic number: HoursComboBox5.SelectedIndex = 12;  
