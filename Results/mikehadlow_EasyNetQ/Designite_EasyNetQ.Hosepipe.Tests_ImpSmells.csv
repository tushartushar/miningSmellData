Implementation smell,Namespace,Class,File,Method,Description
Magic Number,EasyNetQ.Hosepipe.Tests,ArgParserTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\ArgParserTests.cs,Should_be_able_to_retrieve_args_by_position,The following statement contains a magic number: arguments.At(2' a => three = a.Value).FailWith(() => Assert.True(false' "should succeed"));
Magic Number,EasyNetQ.Hosepipe.Tests,ArgParserTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\ArgParserTests.cs,Should_be_able_to_retrieve_args_by_position,The following statement contains a magic number: arguments.At(3' a => Assert.True(false' "Should not be an arg at 3")).FailWith(() => threeFailed = true);
Magic Number,EasyNetQ.Hosepipe.Tests,ArgParserTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\ArgParserTests.cs,Should_be_able_to_retrieve_args_by_position,The following statement contains a magic number: three.ShouldEqual(args[2]);
Magic Number,EasyNetQ.Hosepipe.Tests,ProgramIntegrationTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\ProgramIntegrationTests.cs,PublishSomeMessages,The following statement contains a magic number: i < 10
Magic Number,EasyNetQ.Hosepipe.Tests,ProgramIntegrationTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\ProgramIntegrationTests.cs,ConsumeMessages,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,EasyNetQ.Hosepipe.Tests,QueueRetrievalTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\QueueRetrievalTests.cs,PublishSomeMessages,The following statement contains a magic number: i < 10
Magic Number,EasyNetQ.Hosepipe.Tests,QueueRetrievalTests,D:\research\architectureSmells\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Hosepipe.Tests\QueueRetrievalTests.cs,ConsumeMessages,The following statement contains a magic number: Thread.Sleep(1000);
