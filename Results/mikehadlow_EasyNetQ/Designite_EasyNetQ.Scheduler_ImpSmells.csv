Implementation smell,Namespace,Class,File,Method,Description
Long Statement,EasyNetQ.Scheduler,Program,C:\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Scheduler\Program.cs,Main,The length of the statement  "                    serviceRecoveryConfiguration.RestartService( delayInMinutes: 1 ); // On the first service failure' reset service after a minute " is 127.
Long Statement,EasyNetQ.Scheduler,ScheduleRepository,C:\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Scheduler\ScheduleRepository.cs,Store,The length of the statement  "                AddParameter(command' dialect.MessagePropertiesParameterName' SerializeToString(scheduleMe.MessageProperties)' DbType.String); " is 126.
Magic Number,EasyNetQ.Scheduler,ScheduleRepositoryConfiguration,C:\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Scheduler\ScheduleRepositoryConfiguration.cs,ScheduleRepositoryConfiguration,The following statement contains a magic number: MaximumScheduleMessagesToReturn = 100;
Magic Number,EasyNetQ.Scheduler,SchedulerService,C:\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Scheduler\SchedulerService.cs,Start,The following statement contains a magic number: publishTimer = new System.Threading.Timer(OnPublishTimerTick' null' 0' configuration.PublishIntervalSeconds * 1000);
Magic Number,EasyNetQ.Scheduler,SchedulerService,C:\repos\mikehadlow_EasyNetQ\Source\EasyNetQ.Scheduler\SchedulerService.cs,Start,The following statement contains a magic number: purgeTimer = new System.Threading.Timer(OnPurgeTimerTick' null' 0' configuration.PurgeIntervalSeconds * 1000);
