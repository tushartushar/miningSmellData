Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExactOnline.Client.Sdk.Helpers,ExactOnlineQuery<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ExactOnlineQuery.cs,CreateODataQuery,Cyclomatic complexity of the method is 8
Long Parameter List,ExactOnline.Client.Sdk.Controllers,EntityController,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Controllers\EntityController.cs,EntityController,The method has 5 parameters. Parameters: entity' keyName' identifier' connection' entityControllerDelegate
Long Statement,ExactOnline.Client.Sdk.Controllers,Controller<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Controllers\Controller.cs,Update,The length of the statement  "			if (!IsUpdateable(entity)) throw new Exception("Cannot update entity. Entity is not updateable. Please see the Reference Documentation."); " is 138.
Long Statement,ExactOnline.Client.Sdk.Controllers,Controller<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Controllers\Controller.cs,Delete,The length of the statement  "			if (!IsDeleteable(entity)) throw new Exception("Cannot delete entity. Entity does not support deleting. Please see the Reference Documentation."); " is 146.
Long Statement,ExactOnline.Client.Sdk.Controllers,Controller<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Controllers\Controller.cs,AddEntityToManagedEntitiesCollection,The length of the statement  "				var newController = new EntityController(entity' _keyname' GetIdentifierValue(entity)' _conn' _entityControllerDelegate); " is 121.
Long Statement,ExactOnline.Client.Sdk.Helpers,ApiConnector,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ApiConnector.cs,DoPostRequest,The length of the statement  "			if (string.IsNullOrEmpty(endpoint) || string.IsNullOrEmpty(postdata)) throw new ArgumentException("Cannot perform request with empty endpoint or postdata"); " is 156.
Long Statement,ExactOnline.Client.Sdk.Helpers,ApiConnector,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ApiConnector.cs,DoPutRequest,The length of the statement  "			if (string.IsNullOrEmpty(endpoint) || string.IsNullOrEmpty(putData)) throw new ArgumentException("Cannot perform request with empty endpoint or putData"); " is 154.
Long Statement,ExactOnline.Client.Sdk.Helpers,ControllerList,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ControllerList.cs,GetController,The length of the statement  "					throw new InvalidOperationException("Specified entity is not known in Exact Online. Please check the reference documentation"); " is 127.
Long Statement,ExactOnline.Client.Sdk.Helpers,ExactOnlineJsonConverter,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ExactOnlineJsonConverter.cs,WriteJson,The length of the statement  "			writeableFields = writeableFields.Except(writeableFields.Join(guidsToSkip' e => e.GetValue(value)' m => m.GetValue(value)' (e' m) => e)).ToArray(); " is 147.
Long Statement,ExactOnline.Client.Sdk.Helpers,EntityConverter,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\EntityConverter.cs,ConvertJsonArrayToObjectList,The length of the statement  "				throw new IncorrectJsonException("An error occurred while processing the json string. Possibly the result is too big. Please make a more specific query."); " is 155.
Long Statement,ExactOnline.Client.Sdk.Helpers,ExactOnlineQuery<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ExactOnlineQuery.cs,Where,The length of the statement  "            return Where($"{TransformExpressionToODataFormat(property.Body)}+{@operator.ToString().ToLower()}+{ToODataParameter(value)}"); " is 126.
Long Statement,ExactOnline.Client.Sdk.Helpers,ExactOnlineQuery<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ExactOnlineQuery.cs,And,The length of the statement  "			if (string.IsNullOrEmpty(_where)) throw new ArgumentException("Query 'and' operator cannot be used before 'where' operator is set"); " is 132.
Long Statement,ExactOnline.Client.Sdk.Helpers,ExactOnlineQuery<T>,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ExactOnlineQuery.cs,TransformExpressionToODataFormat,The length of the statement  "            if (mce == null) throw new ArgumentException($"Invalid expression '{e}': Lambda expression should resolve a property on model type '{nameof(T)}' (with optional extension method calls)." ' nameof(e)); " is 199.
Long Statement,ExactOnline.Client.Sdk.Helpers,JssDateTimeConverter,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\JsDateTimeConverter.cs,Deserialize,The length of the statement  "							IEnumerable<object> dictionaries = ((ArrayList)value).ToArray().Where(x => x.GetType() == typeof(Dictionary<string' object>)); " is 126.
Magic Number,ExactOnline.Client.Sdk.Helpers,JssDateTimeConverter,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\JsDateTimeConverter.cs,Deserialize,The following statement contains a magic number: foreach (string key in keys)  			{  				object entity = dictionary[key];    				// Check if content is a dictionary > send to this method recursively  				if (entity != null && entity.GetType() == typeof(Dictionary<string' object>))  				{  					var value = (Dictionary<string' object>)entity;  					Deserialize(value' type' serializer);  				}  				else  				{  					var value = entity;  					if (value != null)  					{  						// Set EPOCH datetime  						Type valueType = value.GetType();  						if (valueType == typeof(DateTime))  						{  							var date = (DateTime)entity;  							TimeSpan t = (date - new DateTime(1970' 1' 1));  							double timestamp = t.TotalMilliseconds;  							dictionary[key] = string.Format("/Date({0})/"' timestamp);  						}    						// For collection within this collection > send to this method recursively  						if (valueType == typeof(ArrayList))  						{  							IEnumerable<object> dictionaries = ((ArrayList)value).ToArray().Where(x => x.GetType() == typeof(Dictionary<string' object>));    							foreach (var dict in dictionaries)  							{  								Deserialize((Dictionary<string' object>)dict' type' serializer);  							}  						}  					}  				}  			}
Magic Number,ExactOnline.Client.Sdk.Helpers,TestApp,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\TestApp.cs,TestApp,The following statement contains a magic number: CallbackUrl = new Uri(details[2]);
Missing Default,ExactOnline.Client.Sdk.Helpers,ApiConnector,C:\repos\exactonline_ClientSDK\src\ExactOnline.Client.Sdk\Helpers\ApiConnector.cs,GetResponse,The following switch statement is missing a default case: switch (statusCode)  				{  					case HttpStatusCode.BadRequest: // 400  					case HttpStatusCode.MethodNotAllowed: // 405  						throw new BadRequestException(errorMessage' ex);    					case HttpStatusCode.Unauthorized: //401  						throw new UnauthorizedException(errorMessage' ex); // 401    					case HttpStatusCode.Forbidden:  						throw new ForbiddenException(errorMessage' ex); // 403    					case HttpStatusCode.NotFound:  						throw new NotFoundException(errorMessage' ex); // 404    					case HttpStatusCode.InternalServerError: // 500  						throw new InternalServerErrorException(errorMessage' ex);  				}
