Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,Cyclomatic complexity of the method is 8
Complex Conditional,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The conditional expression  "pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p'"  is complex.
Empty Catch Block,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,GetFileEncoding,The method has an empty catch block.
Magic Number,TrotiNet.Example,Example,C:\repos\krys-g_TrotiNet\Example\Program.cs,Main,The following statement contains a magic number: const int port = 12345;
Magic Number,TrotiNet.Example,Example,C:\repos\krys-g_TrotiNet\Example\Program.cs,Main,The following statement contains a magic number: while (true)                  System.Threading.Thread.Sleep(1000);
Magic Number,TrotiNet.Example,RedirectingProxy,C:\repos\krys-g_TrotiNet\Example\RedirectingProxy.cs,OnReceiveRequest,The following statement contains a magic number: if (i > -1)              {                  ChangeRequestURI("http://uncyclopedia.org/" +                      RequestLine.URI.Substring(i + 14));                  return;              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ModifyHTML,The following statement contains a magic number: for(int pos = 0; pos < len; pos++)              {                  if (i[pos] == '<')                      bInsideTag = true;                  else                  if (i[pos] == '>')                      bInsideTag = false;                    if (!bMessAround)                  {                      bMessAround = (pos + 2 < len && i[pos] == '<' &&                          i[pos + 1] == 'p');                      continue;                  }                    if (pos + 4 < len && i[pos] == '<' && i[pos + 1] == '/' &&                      i[pos + 2] == 'p')                  {                      bMessAround = false;                      continue;                  }                    if (bInsideTag)                      continue;                    // Sillyness mode on: apply ROT13 inside <p> tags.                  if ((i[pos] >= 'A' && i[pos] <= 'Z'))                  {                      i[pos] = (char)(((int)i[pos] - 'A' + 13) % 26 + 'A');                      bModifiedSomething = true;                  }                  else                  if ((i[pos] >= 'a' && i[pos] <= 'z'))                  {                      i[pos] = (char)(((int)i[pos] - 'a' + 13) % 26 + 'a');                      bModifiedSomething = true;                  }              }
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,OnReceiveResponse,The following statement contains a magic number: if (ResponseStatusLine.StatusCode != 200)                  bModifyContent = false;
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ReadEverything,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,TrotiNet.Example,RewritingProxy,C:\repos\krys-g_TrotiNet\Example\RewritingProxy.cs,ReadEverything,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
