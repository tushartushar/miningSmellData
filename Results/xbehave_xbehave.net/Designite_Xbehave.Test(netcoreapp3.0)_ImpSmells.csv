Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Xbehave.Test,GenericScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,Scenario,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Statement,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,BadlyFormattedSteps,The length of the statement  "            "Given a feature with a scenario with example values one two and three and a step with the format \"Given {{3}}' {{4}} and {{5}}\"" " is 131.
Magic Number,Xbehave.Test,BackgroundFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,BackgroundSteps,The following statement contains a magic number: "And there are eight results"                  .x(() => results.Length.Should().Be(8));
Magic Number,Xbehave.Test,BackgroundFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,BackgroundSteps,The following statement contains a magic number: "And the background steps have '(Background)' in their names"                  .x(() =>                  {                      foreach (var result in results.Take(2).Concat(results.Skip(4).Take(2)))                      {                          result.Test.DisplayName.Should().Contain("(Background)");                      }                  });
Magic Number,Xbehave.Test,BackgroundFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,BackgroundSteps,The following statement contains a magic number: "And the background steps have '(Background)' in their names"                  .x(() =>                  {                      foreach (var result in results.Take(2).Concat(results.Skip(4).Take(2)))                      {                          result.Test.DisplayName.Should().Contain("(Background)");                      }                  });
Magic Number,Xbehave.Test,BackgroundFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,BackgroundSteps,The following statement contains a magic number: "And the background steps have '(Background)' in their names"                  .x(() =>                  {                      foreach (var result in results.Take(2).Concat(results.Skip(4).Take(2)))                      {                          result.Test.DisplayName.Should().Contain("(Background)");                      }                  });
Magic Number,Xbehave.Test,BackgroundWithTwoStepsAndTwoScenariosEachWithTwoSteps,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,Scenario1,The following statement contains a magic number: "Given x is 2"                      .x(() => x.Should().Be(2));
Magic Number,Xbehave.Test,BackgroundWithTwoStepsAndTwoScenariosEachWithTwoSteps,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,Scenario2,The following statement contains a magic number: "Given x is 2"                      .x(() => x.Should().Be(2));
Magic Number,Xbehave.Test,BackgroundInBaseTypeWithTwoStepsAndTwoScenariosEachWithTwoSteps,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,Scenario1,The following statement contains a magic number: "Given x is 2"                      .x(() => this.X.Should().Be(2));
Magic Number,Xbehave.Test,BackgroundInBaseTypeWithTwoStepsAndTwoScenariosEachWithTwoSteps,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\BackgroundFeature.cs,Scenario2,The following statement contains a magic number: "Given x is 2"                      .x(() => this.X.Should().Be(2));
Magic Number,Xbehave.Test,DefaultParametersFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\DefaultParametersFeature.cs,ScenarioWithParameters,The following statement contains a magic number: "And there should be 4 results"                  .x(() => results.Length.Should().Be(4));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,Examples,The following statement contains a magic number: "And there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,SkippedExamples,The following statement contains a magic number: "Then there should be two results"                  .x(() => results.Length.Should().Be(2));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,ExamplesWithMissingValues,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,ExamplesWithTwoMissingResolvableGenericArguments,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,GenericScenario,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,InvalidExamples,The following statement contains a magic number: "And there should be 2 results"                  .x(() => results.Count().Should().Be(2));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,DiscoveryFailure,The following statement contains a magic number: "And there should be 2 results"                  .x(() => results.Count().Should().Be(2));
Magic Number,Xbehave.Test,ExampleFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ExampleFeature.cs,ExampleValueDisposalFailure,The following statement contains a magic number: "And there should be 2 test case clean up failures"                  .x(() => failures.Count().Should().Be(2));
Magic Number,Xbehave.Test,MemberDataFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberDataProperty,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 1' 2' 3 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 1' 2' 3 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 10' 20' 30 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 10' 20' 30 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 10' 20' 30 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 100' 200' 300 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 100' 200' 300 };
Magic Number,Xbehave.Test,AScenarioUsingMemberDataMethod,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\MemberDataFeature.cs,MemberData,The following statement contains a magic number: yield return new object[] { 100' 200' 300 };
Magic Number,Xbehave.Test,ObjectDisposalFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,ADisposableWhichThrowExceptionsWhenDisposed,The following statement contains a magic number: "Then the there should be at least two results"                  .x(() => results.Length.Should().BeGreaterOrEqualTo(2));
Magic Number,Xbehave.Test,AStepWithThreeDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(c =>                      {                          disposable0 = new Disposable(1).Using(c);                          disposable1 = new Disposable(2).Using(c);                          disposable2 = new Disposable(3).Using(c);                      });
Magic Number,Xbehave.Test,AStepWithThreeDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(c =>                      {                          disposable0 = new Disposable(1).Using(c);                          disposable1 = new Disposable(2).Using(c);                          disposable2 = new Disposable(3).Using(c);                      });
Magic Number,Xbehave.Test,StepWithThreeBadDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(c =>                      {                          disposable0 = new BadDisposable(1).Using(c);                          disposable1 = new BadDisposable(2).Using(c);                          disposable2 = new BadDisposable(3).Using(c);                      });
Magic Number,Xbehave.Test,StepWithThreeBadDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(c =>                      {                          disposable0 = new BadDisposable(1).Using(c);                          disposable1 = new BadDisposable(2).Using(c);                          disposable2 = new BadDisposable(3).Using(c);                      });
Magic Number,Xbehave.Test,ThreeStepsWithDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "And another disposable"                      .x(c => disposable1 = new Disposable(2).Using(c));
Magic Number,Xbehave.Test,ThreeStepsWithDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "And another disposable"                      .x(c => disposable2 = new Disposable(3).Using(c));
Magic Number,Xbehave.Test,StepsFollowedByAFailingStep,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "And another disposable"                      .x(c => disposable1 = new Disposable(2).Using(c));
Magic Number,Xbehave.Test,StepsFollowedByAFailingStep,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "And another disposable"                      .x(c => disposable2 = new Disposable(3).Using(c));
Magic Number,Xbehave.Test,AnAsyncStepWithThreeDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(async c =>                      {                          await Task.Yield();                          disposable0 = new Disposable(1).Using(c);                          disposable1 = new Disposable(2).Using(c);                          disposable2 = new Disposable(3).Using(c);                      });
Magic Number,Xbehave.Test,AnAsyncStepWithThreeDisposables,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "Given some disposables"                      .x(async c =>                      {                          await Task.Yield();                          disposable0 = new Disposable(1).Using(c);                          disposable1 = new Disposable(2).Using(c);                          disposable2 = new Disposable(3).Using(c);                      });
Magic Number,Xbehave.Test,StepsWithDisposablesAndTeardowns,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ObjectDisposalFeature.cs,Scenario,The following statement contains a magic number: "And something else"                      .x(c => new Disposable(3).Using(c))                      .Teardown(() => typeof(ObjectDisposalFeature).SaveTestEvent("teardown4"));
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "Then there should be 7 results"                  .x(() => results.Length.Should().Be(7));
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "Then the first and second results are passes"                  .x(() => results.Take(2).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "And the third result is a failure"                  .x(() => results.Skip(2).Take(1).Should().ContainItemsAssignableTo<ITestFailed>());
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "And the fourth and fifth results are passes"                  .x(() => results.Skip(3).Take(2).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "And the fourth and fifth results are passes"                  .x(() => results.Skip(3).Take(2).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "And the sixth result is a failure"                  .x(() => results.Skip(5).Take(1).Should().ContainItemsAssignableTo<ITestFailed>());
Magic Number,Xbehave.Test,OnFailureFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\OnFailureFeature.cs,FailureBeforeForcedStep,The following statement contains a magic number: "And the seventh result is a skip"                  .x(() => results.Skip(6).Take(1).Should().ContainItemsAssignableTo<ITestSkipped>());
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStepYieldsTwoPassesAndOneFail,The following statement contains a magic number: results.Length.Should().Be(3);
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStepYieldsTwoPassesAndOneFail,The following statement contains a magic number: results.Take(2).Should().ContainItemsAssignableTo<ITestPassed>();
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStepYieldsTwoPassesAndOneFail,The following statement contains a magic number: results.Skip(2).Should().ContainItemsAssignableTo<ITestFailed>();
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithThreeSteps,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithThreeSteps,The following statement contains a magic number: "And the third result should have a display name ending with 'Step 3'"                  .x(() => results[2].Test.DisplayName.Should().EndWith("Step 3"));
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStep,The following statement contains a magic number: "Then there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStep,The following statement contains a magic number: "And the first two results should be passes"                  .x(() => results.Take(2).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,ScenarioWithTwoPassingStepsAndOneFailingStep,The following statement contains a magic number: "And the third result should be a fail"                  .x(() => results.Skip(2).Should().ContainItemsAssignableTo<ITestFailed>());
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,FailingStepThenPassingSteps,The following statement contains a magic number: "Then the there should be three results"                  .x(() => results.Length.Should().Be(3));
Magic Number,Xbehave.Test,ScenarioFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,FailingStepThenPassingSteps,The following statement contains a magic number: "And the third result should refer to the third step"                  .x(() => results[2].Test.DisplayName.Should().ContainEquivalentOf("Step x"));
Magic Number,Xbehave.Test,FeatureWithAScenarioWithTwoPassingStepsAndOneFailingStep,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\ScenarioFeature.cs,Scenario,The following statement contains a magic number: "Then I have 3"                      .x(() => i.Should().Be(3));
Magic Number,Xbehave.Test,StepDefinitionFilterFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\StepDefinitionFilterFeature.cs,ContinueAfterThen,The following statement contains a magic number: "Then there are four results"                  .x(() => results.Length.Should().Be(4));
Magic Number,Xbehave.Test,StepDefinitionFilterFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\StepDefinitionFilterFeature.cs,ContinueAfterThen,The following statement contains a magic number: "Then the first two steps pass"                  .x(() => results.Take(2).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,StepDefinitionFilterFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\StepDefinitionFilterFeature.cs,ContinueAfterThen,The following statement contains a magic number: "And the third step fails"                  .x(() => results.Skip(2).Take(1).Should().ContainItemsAssignableTo<ITestFailed>());
Magic Number,Xbehave.Test,StepDefinitionFilterFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\StepDefinitionFilterFeature.cs,ContinueAfterThen,The following statement contains a magic number: "And the fourth step passes"                  .x(() => results.Skip(3).Take(1).Should().ContainItemsAssignableTo<ITestPassed>());
Magic Number,Xbehave.Test,TeardownFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\TeardownFeature.cs,TeardownsWhichThrowExceptionsWhenExecuted,The following statement contains a magic number: "Then there should be two results"                  .x(() => results.Length.Should().Be(2));
Magic Number,Xbehave.Test,TeardownFeature,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\TeardownFeature.cs,ManyTeardownsInManySteps,The following statement contains a magic number: "Then there should be two results"                  .x(() => results.Length.Should().Be(2));
Magic Number,Xbehave.Test.Infrastructure,AssemblyExtensions,D:\research\architectureSmells\repos\xbehave_xbehave.net\tests\Xbehave.Test\Infrastructure\AssemblyExtensions.cs,GetLocalCodeBase,The following statement contains a magic number: var codeBase = assembly.CodeBase.Substring(8);
