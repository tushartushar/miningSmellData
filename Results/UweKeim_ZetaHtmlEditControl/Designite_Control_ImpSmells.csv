Implementation smell,Namespace,Class,File,Method,Description
Long Method,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,The method has 74 lines of code.
Long Method,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetCurrentSelection,The method has 64 lines of code.
Long Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,handleTabKeyInsideTable,The method has 61 lines of code.
Long Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,The method has 107 lines of code.
Long Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The method has 547 lines of code.
Long Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,GetRelativePath,The method has 71 lines of code.
Long Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,initEntities,The method has 1014 lines of code.
Long Method,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,InitializeComponent,The method has 409 lines of code.
Long Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,The method has 176 lines of code.
Long Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The method has 109 lines of code.
Long Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,InitializeComponent,The method has 181 lines of code.
Long Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,InitializeComponent,The method has 203 lines of code.
Complex Method,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,ConvertGetHtml,Cyclomatic complexity of the method is 10
Complex Method,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,checkResizeImage,Cyclomatic complexity of the method is 7
Complex Method,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,FindImgs,Cyclomatic complexity of the method is 15
Complex Method,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,Cyclomatic complexity of the method is 20
Complex Method,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,Cyclomatic complexity of the method is 9
Complex Method,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,doTranslate,Cyclomatic complexity of the method is 10
Complex Method,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,Cyclomatic complexity of the method is 9
Complex Method,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,ShowContextMenu,Cyclomatic complexity of the method is 8
Complex Method,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,getCssFontSizeWithUnit,Cyclomatic complexity of the method is 9
Complex Method,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetCurrentSelection,Cyclomatic complexity of the method is 12
Complex Method,ZetaHtmlEditControl.UI.EditControlBases,HtmlEditHost,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\HtmlEditHost.cs,SnapRect,Cyclomatic complexity of the method is 14
Complex Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,PreProcessMessage,Cyclomatic complexity of the method is 13
Complex Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,handleTabKeyInsideTable,Cyclomatic complexity of the method is 9
Complex Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,Cyclomatic complexity of the method is 35
Complex Method,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,handlePaste,Cyclomatic complexity of the method is 12
Complex Method,ZetaHtmlEditControl.Code.Helper,ImageHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ImageHelper.cs,GetImageFormatFromFileExtension,Cyclomatic complexity of the method is 21
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,Cyclomatic complexity of the method is 12
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlEncode,Cyclomatic complexity of the method is 18
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,Cyclomatic complexity of the method is 24
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,GetRelativePath,Cyclomatic complexity of the method is 11
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,GetShare,Cyclomatic complexity of the method is 7
Complex Method,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,Cyclomatic complexity of the method is 19
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,Cyclomatic complexity of the method is 35
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,Cyclomatic complexity of the method is 40
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,Cyclomatic complexity of the method is 7
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,Cyclomatic complexity of the method is 9
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,calculateHorizontalAlignment,Cyclomatic complexity of the method is 16
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,calculateVerticalAlignment,Cyclomatic complexity of the method is 15
Complex Method,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_Load,Cyclomatic complexity of the method is 7
Long Parameter List,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,ConvertGetHtml,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,ShowContextMenu,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,ShowUI,The method has 5 parameters.
Long Parameter List,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,OnNeedShowContextMenu,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,OnNeedShowContextMenu,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,Combine,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,The method has 4 parameters.
Long Parameter List,ZetaHtmlEditControl.Code.PInvoke,UnsafeNativeMethods,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\PInvoke\UnsafeNativeMethods.cs,MapWindowPoints,The method has 4 parameters.
Long Identifier,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,SetDocumentText,The length of the parameter useImagesFolderPathPlaceHolder is 30.
Long Identifier,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetDocumentText,The length of the parameter useImagesFolderPathPlaceHolder is 30.
Long Identifier,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,GetAbsolutePath,The length of the parameter basePathToWhichToMakeAbsoluteTo is 31.
Long Identifier,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,The length of the parameter differentHorizontalAlignmentCount is 33.
Long Identifier,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,The length of the parameter differentVerticalAlignmentCount is 31.
Long Identifier,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,The length of the parameter differentContainsHeadlineCount is 30.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlAgilityPackExtensions,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlAgilityPackExtensions.cs,HasAttributeWithName,The length of the statement  "	return node.HasAttributes && node.Attributes.Any (a => string.Equals (a.Name' name' StringComparison.InvariantCultureIgnoreCase)); " is 130.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlAgilityPackExtensions,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlAgilityPackExtensions.cs,ReadAttributeValue,The length of the statement  "	return HasAttributeWithName (node' name) ? node.Attributes.First (a => string.Equals (a.Name' name' StringComparison.InvariantCultureIgnoreCase)).Value : null; " is 159.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlAgilityPackExtensions,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlAgilityPackExtensions.cs,RemoveAttributeWithName,The length of the statement  "		node.Attributes.Remove (node.Attributes.First (a => string.Equals (a.Name' name' StringComparison.InvariantCultureIgnoreCase))); " is 128.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlAgilityPackExtensions,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlAgilityPackExtensions.cs,RemoveAttributeWithNameIfEmpty,The length of the statement  "		node.Attributes.Remove (node.Attributes.First (a => string.Equals (a.Name' name' StringComparison.InvariantCultureIgnoreCase))); " is 128.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlAgilityPackExtensions,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlAgilityPackExtensions.cs,SetInlineCss,The length of the statement  "	var b = node.Attributes.FirstOrDefault (a => string.Equals (a.Name' @"style"' StringComparison.InvariantCultureIgnoreCase)); " is 124.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,ConvertGetHtml,The length of the statement  "			if (!imageInfo.Source.StartsWith (Uri.UriSchemeHttp) && !imageInfo.Source.StartsWith (Uri.UriSchemeHttps) && !imageInfo.Source.StartsWith (Uri.UriSchemeFtp)) { " is 159.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,ConvertGetHtml,The length of the statement  "				var readFrom = imageInfo.Source.StartsWith (Uri.UriSchemeFile) ? PathHelper.ConvertFileUrlToFilePath (imageInfo.Source) : imageInfo.Source; " is 139.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,ConvertSetHtml,The length of the statement  "		var folderUrlPath = (isHttpUrl (saveFolderPath) ? saveFolderPath : PathHelper.ConvertFilePathToFileUrl (saveFolderPath)).TrimEnd ('/'); " is 135.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,isHttpUrl,The length of the statement  "	return !string.IsNullOrEmpty (saveFolderPath) && (saveFolderPath.StartsWith (@"http://") || saveFolderPath.StartsWith (@"https://")); " is 133.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,GetPathFromFile,The length of the statement  "	if (baseUri == null || String.Compare (baseUri.OriginalString' @"about:blank"' StringComparison.OrdinalIgnoreCase) == 0) { " is 122.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlStringHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlStringHelper.cs,CheckCompleteHtmlTable,The length of the statement  "		if ((htmlCode.StartsWith (@"<col"' StringComparison.InvariantCultureIgnoreCase) || htmlCode.StartsWith (@"<tr")) && htmlCode.EndsWith (@"</tr>"' StringComparison.InvariantCultureIgnoreCase)) { " is 192.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlStringHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlStringHelper.cs,removeTagFromHtmlCode,The length of the statement  "	return Regex.Replace (htmlCode' String.Format (@"<{0}.*?</{1}>"' tag' tag)' String.Empty' RegexOptions.Singleline | RegexOptions.IgnoreCase); " is 141.
Long Statement,ZetaHtmlEditControl.Code.Html,HtmlStringHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlStringHelper.cs,GetOnlyTextFromHtmlCode,The length of the statement  "	htmlCode = Regex.Replace (htmlCode' @"<br[^>]*>"' Environment.NewLine' RegexOptions.Singleline | RegexOptions.IgnoreCase); " is 122.
Long Statement,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetHostInfo,The length of the statement  "	info.dwFlags = (int)(NativeMethods.DOCHOSTUIFLAG.DOCHOSTUIFLAG_NO3DOUTERBORDER | NativeMethods.DOCHOSTUIFLAG.DOCHOSTUIFLAG_NO3DBORDER | // http://msdn.microsoft.com/library/default.asp?url=/workshop/browser/hosting/reference/enum/dochostuiflag.asp " is 247.
Long Statement,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,SetDocumentText,The length of the statement  "	DocumentText = _htmlConversionHelper.ConvertSetHtml (text' externalImagesFolderPath' useImagesFolderPathPlaceHolder ? HtmlImageHelper.ImagesFolderPathPlaceHolder : null); " is 170.
Long Statement,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetDocumentText,The length of the statement  "	var result = _htmlConversionHelper.ConvertGetHtml (DocumentText' Document == null ? null : Document.Url' externalImagesFolderPath' useImagesFolderPathPlaceHolder ? HtmlImageHelper.ImagesFolderPathPlaceHolder : null); " is 216.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,ExecuteSystemInfo,The length of the statement  "	MessageBox.Show (FindForm ()' msg' Resources.HtmlEditControl_ExecuteSystemInfo_Information' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 142.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(HtmlEditControl)); " is 136.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	this.textModulesToolStripMenuItem.DropDownOpening += new System.EventHandler (this.textModulesToolStripMenuItem_DropDownOpening); " is 129.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.insertRowBeforeCurrentRowToolStripMenuItem' "insertRowBeforeCurrentRowToolStripMenuItem"); " is 121.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	this.insertRowBeforeCurrentRowToolStripMenuItem.Click += new System.EventHandler (this.insertRowBeforeCurrentRowToolStripMenuItem_Click); " is 137.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.insertColumnBeforeCurrentColumnToolStripMenuItem' "insertColumnBeforeCurrentColumnToolStripMenuItem"); " is 133.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	this.insertColumnBeforeCurrentColumnToolStripMenuItem.Click += new System.EventHandler (this.insertColumnBeforeCurrentColumnToolStripMenuItem_Click); " is 149.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.addRowAfterTheLastTableRowToolStripMenuItem' "addRowAfterTheLastTableRowToolStripMenuItem"); " is 123.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	this.addRowAfterTheLastTableRowToolStripMenuItem.Click += new System.EventHandler (this.addRowAfterTheLastTableRowToolStripMenuItem_Click); " is 139.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	resources.ApplyResources (this.addColumnAfterTheLastTableColumnToolStripMenuItem' "addColumnAfterTheLastTableColumnToolStripMenuItem"); " is 135.
Long Statement,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,InitializeComponent,The length of the statement  "	this.addColumnAfterTheLastTableColumnToolStripMenuItem.Click += new System.EventHandler (this.addColumnAfterTheLastTableColumnToolStripMenuItem_Click); " is 151.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,ToString,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,ToInt32,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,IsDouble,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,IsDouble,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,IsInteger,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,IsInteger,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,ToDecimal,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,ConvertHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\ConvertHelper.cs,IsDecimal,The length of the statement  "	// http://www.google.de/url?sa=t&ct=res&cd=4&url=http%3A%2F%2Fblogs.msdn.com%2Fvancem%2Farchive%2F2006%2F10%2F01%2F779503.aspx&ei=nOuTRY7TAoXe2QLi7qX3Dg&usg=__GUu0brYrkgjJl63ZZ3JBOzJCVH8=&sig2=1wvt78Kof6Bw7Drs3LL_ng " is 215.
Long Statement,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,GetDirectory,The length of the statement  "		Debug.Assert (string.IsNullOrEmpty (driveOrShare) || dir.StartsWith (driveOrShare)' string.Format (@"Variable 'dir' ('{0}') must start with drive or share '{1}'."' dir' driveOrShare)); " is 184.
Long Statement,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,The length of the statement  "			var isUnsafe = (c == ' ') || (c < '0' && c != '-' && c != '.') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a' && c != '_') || (c > 'z'); " is 136.
Long Statement,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,applyConfiguration,The length of the statement  "	fontNameToolStripComboBox.Visible = fontSizeToolStripComboBox.Visible = toolStripSeparator8.Visible = htmlEditControl.Configuration.AllowFontChange; " is 148.
Long Statement,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(HtmlEditUserControl)); " is 140.
Long Statement,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,InitializeComponent,The length of the statement  "	this.textModulesToolStripItem.DropDownOpening += new System.EventHandler (this.textModulesToolStripItem_DropDownOpening); " is 121.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillCellValuesToDialogControls,The length of the statement  "		containsHeadlineCheckBox.CheckState = differentContainsHeadlineCount == 1 ? containsHeadline : CheckState.Indeterminate; " is 120.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		horizontalAlignmentComboBox.Items.Add (new Tuple<string' HorizontalAlignmentType> (StringHelper.GetEnumDescription (HorizontalAlignmentType.Standard)' HorizontalAlignmentType.Standard)); " is 186.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		horizontalAlignmentComboBox.Items.Add (new Tuple<string' HorizontalAlignmentType> (StringHelper.GetEnumDescription (HorizontalAlignmentType.Left)' HorizontalAlignmentType.Left)); " is 178.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		horizontalAlignmentComboBox.Items.Add (new Tuple<string' HorizontalAlignmentType> (StringHelper.GetEnumDescription (HorizontalAlignmentType.Right)' HorizontalAlignmentType.Right)); " is 180.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		horizontalAlignmentComboBox.Items.Add (new Tuple<string' HorizontalAlignmentType> (StringHelper.GetEnumDescription (HorizontalAlignmentType.Center)' HorizontalAlignmentType.Center)); " is 182.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		horizontalAlignmentComboBox.Items.Add (new Tuple<string' HorizontalAlignmentType> (StringHelper.GetEnumDescription (HorizontalAlignmentType.Justify)' HorizontalAlignmentType.Justify)); " is 184.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		verticalAlignmentComboBox.Items.Add (new Tuple<string' VerticalAlignmentType> (StringHelper.GetEnumDescription (VerticalAlignmentType.Standard)' VerticalAlignmentType.Standard)); " is 178.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		verticalAlignmentComboBox.Items.Add (new Tuple<string' VerticalAlignmentType> (StringHelper.GetEnumDescription (VerticalAlignmentType.Top)' VerticalAlignmentType.Top)); " is 168.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		verticalAlignmentComboBox.Items.Add (new Tuple<string' VerticalAlignmentType> (StringHelper.GetEnumDescription (VerticalAlignmentType.Middle)' VerticalAlignmentType.Middle)); " is 174.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		verticalAlignmentComboBox.Items.Add (new Tuple<string' VerticalAlignmentType> (StringHelper.GetEnumDescription (VerticalAlignmentType.BaseLine)' VerticalAlignmentType.BaseLine)); " is 178.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,HtmlEditorCellPropertiesForm_Load,The length of the statement  "		verticalAlignmentComboBox.Items.Add (new Tuple<string' VerticalAlignmentType> (StringHelper.GetEnumDescription (VerticalAlignmentType.Bottom)' VerticalAlignmentType.Bottom)); " is 174.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(HtmlEditorCellPropertiesForm)); " is 149.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	horizontalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.HorizontalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Standard)' HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Standard)); " is 273.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	horizontalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.HorizontalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Left)' HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Left)); " is 265.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	horizontalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.HorizontalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Right)' HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Right)); " is 267.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	horizontalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.HorizontalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Center)' HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Center)); " is 269.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	horizontalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.HorizontalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Justify)' HtmlEditorCellPropertiesForm.HorizontalAlignmentType.Justify)); " is 271.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	verticalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.VerticalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.VerticalAlignmentType.Standard)' HtmlEditorCellPropertiesForm.VerticalAlignmentType.Standard)); " is 265.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	verticalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.VerticalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.VerticalAlignmentType.Top)' HtmlEditorCellPropertiesForm.VerticalAlignmentType.Top)); " is 255.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	verticalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.VerticalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.VerticalAlignmentType.Middle)' HtmlEditorCellPropertiesForm.VerticalAlignmentType.Middle)); " is 261.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	verticalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.VerticalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.VerticalAlignmentType.BaseLine)' HtmlEditorCellPropertiesForm.VerticalAlignmentType.BaseLine)); " is 265.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "	verticalAlignmentComboBox.Items.Add (new Tuple<string' HtmlEditorCellPropertiesForm.VerticalAlignmentType> (StringHelper.GetEnumDescription (HtmlEditorCellPropertiesForm.VerticalAlignmentType.Bottom)' HtmlEditorCellPropertiesForm.VerticalAlignmentType.Bottom)); " is 261.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			rowsUpDown.Value = ConvertHelper.ToDecimal (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.RowCount"' rowsUpDown.Value.ToString (CultureInfo.InvariantCulture))); " is 214.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			columnsUpDown.Value = ConvertHelper.ToDecimal (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.ColCount"' columnsUpDown.Value.ToString (CultureInfo.InvariantCulture))); " is 220.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			borderUpDown.Value = ConvertHelper.ToDecimal (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.Border"' borderUpDown.Value.ToString (CultureInfo.InvariantCulture))); " is 216.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			cellSpacingUpDown.Value = ConvertHelper.ToDecimal (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.CellSpacing"' cellSpacingUpDown.Value.ToString (CultureInfo.InvariantCulture))); " is 231.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			cellPaddingUpDown.Value = ConvertHelper.ToDecimal (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.CellPadding"' cellPaddingUpDown.Value.ToString (CultureInfo.InvariantCulture))); " is 231.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			horizontalAlignmentComboBox.SelectedIndex = ConvertHelper.ToInt32 (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.HorizontalAlignmentIndex"' 0.ToString (CultureInfo.InvariantCulture))' 0); " is 241.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,HtmlEditorTableNewForm_Load,The length of the statement  "			verticalAlignmentComboBox.SelectedIndex = ConvertHelper.ToInt32 (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.VerticalAlignmentIndex"' 0.ToString (CultureInfo.InvariantCulture))' 0); " is 237.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		var tmpHtml = string.Format (@"<table border=""{0}"" cellpadding=""{1}"" cellspacing=""{2}"" width=""90%"">"' borderUpDown.Value' cellPaddingUpDown.Value' cellSpacingUpDown.Value) + Environment.NewLine; " is 202.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "					tmpHtml += string.Format (@"        <th{0}{1}></th>" + Environment.NewLine' calculateHorizontalAlignment ()' calculateVerticalAlignment ()); " is 140.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "					tmpHtml += string.Format (@"        <td{0}{1}></td>" + Environment.NewLine' calculateHorizontalAlignment ()' calculateVerticalAlignment ()); " is 140.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.RowCount"' rowsUpDown.Value.ToString (CultureInfo.InvariantCulture)); " is 166.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.ColCount"' columnsUpDown.Value.ToString (CultureInfo.InvariantCulture)); " is 169.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.Border"' borderUpDown.Value.ToString (CultureInfo.InvariantCulture)); " is 166.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.CellSpacing"' cellSpacingUpDown.Value.ToString (CultureInfo.InvariantCulture)); " is 176.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.CellPadding"' cellPaddingUpDown.Value.ToString (CultureInfo.InvariantCulture)); " is 176.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.HorizontalAlignmentIndex"' horizontalAlignmentComboBox.SelectedIndex.ToString (CultureInfo.InvariantCulture)); " is 207.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,buttonOK_Click,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @"HtmlEditorTableNewDialog.VerticalAlignmentIndex"' verticalAlignmentComboBox.SelectedIndex.ToString (CultureInfo.InvariantCulture)); " is 203.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(HtmlEditorTableNewForm)); " is 143.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_Load,The length of the statement  "		Width = Convert.ToInt32 (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @".Width"' Width.ToString (CultureInfo.InvariantCulture))); " is 157.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_Load,The length of the statement  "		Height = Convert.ToInt32 (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @".Height"' Height.ToString (CultureInfo.InvariantCulture))); " is 160.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_Load,The length of the statement  "		wordWrapCheckBox.Checked = Convert.ToBoolean (ExternalInformationProvider.RestorePerUserPerWorkstationValue (StoreID + @".WordWrap"' wordWrapCheckBox.Checked.ToString ())); " is 172.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_FormClosing,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @".Width"' Width.ToString (CultureInfo.InvariantCulture)); " is 128.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_FormClosing,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @".Height"' Height.ToString (CultureInfo.InvariantCulture)); " is 130.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,HtmlSourceTextEditForm_FormClosing,The length of the statement  "		ExternalInformationProvider.SavePerUserPerWorkstationValue (StoreID + @".WordWrap"' wordWrapCheckBox.Checked.ToString ()); " is 122.
Long Statement,ZetaHtmlEditControl.UI.Tools,HtmlSourceTextEditForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlSourceTextEditForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(HtmlSourceTextEditForm)); " is 143.
Long Statement,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,SetDocumentText,The length of the statement  "				Trace.WriteLine (string.Format (@"[Web server] Setting EXISTING document text for URL '{0}': '{1}'. Stack: {2}."' r' html' new StackTrace ())); " is 143.
Long Statement,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,SetDocumentText,The length of the statement  "		Trace.WriteLine (string.Format (@"[Web server] Setting NEW document text for URL '{0}': '{1}'. Stack: {2}."' s' html' new StackTrace ())); " is 138.
Long Statement,ZetaHtmlEditControl.UI.Helper,MyToolStripRender,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Helper\MyToolStripRenderer.cs,getShortcutText,The length of the statement  "	var t = (string)mi.GetType ().InvokeMember (@"GetShortcutText"' BindingFlags.InvokeMethod | BindingFlags.NonPublic | BindingFlags.Instance' null' mi' new object[] { " is 164.
Complex Conditional,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,checkResizeImage,The conditional expression  "width > 0 && height > 0 && !String.IsNullOrEmpty (imageFilePath) && File.Exists (imageFilePath)"  is complex.
Complex Conditional,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,The conditional expression  "e.KeyCode == Keys.I && e.Control && e.Shift && e.Alt"  is complex.
Complex Conditional,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,The conditional expression  "e.KeyCode == Keys.U && e.Control || e.KeyCode == Keys.U && e.Control && e.Shift"  is complex.
Complex Conditional,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,The conditional expression  "e.KeyCode == Keys.I && e.Control || e.KeyCode == Keys.K && e.Control && e.Shift"  is complex.
Complex Conditional,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,doHandleShortcutKey,The conditional expression  "e.KeyCode == Keys.B && e.Control || e.KeyCode == Keys.F && e.Control && e.Shift"  is complex.
Magic Number,ZetaHtmlEditControl.Code.Html,InlineCssParser,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\InlineCssParser.cs,parse,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (raw)) {  	var firsts = raw.Split (new[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	foreach (var first in firsts) {  		var f = first.Trim ();  		if (!string.IsNullOrEmpty (f)) {  			var seconds = f.Split (new[] {  				':'  			}' StringSplitOptions.RemoveEmptyEntries);  			if (seconds.Length == 2) {  				var a = seconds [0].Trim ().ToLowerInvariant ();  				var b = seconds [1].Trim ();  				if (!string.IsNullOrEmpty (a) && !string.IsNullOrEmpty (b)) {  					setDictionary (result' a' b);  				}  			}  		}  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Html,InlineCssParser,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\InlineCssParser.cs,parse,The following statement contains a magic number: foreach (var first in firsts) {  	var f = first.Trim ();  	if (!string.IsNullOrEmpty (f)) {  		var seconds = f.Split (new[] {  			':'  		}' StringSplitOptions.RemoveEmptyEntries);  		if (seconds.Length == 2) {  			var a = seconds [0].Trim ().ToLowerInvariant ();  			var b = seconds [1].Trim ();  			if (!string.IsNullOrEmpty (a) && !string.IsNullOrEmpty (b)) {  				setDictionary (result' a' b);  			}  		}  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Html,InlineCssParser,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\InlineCssParser.cs,parse,The following statement contains a magic number: if (!string.IsNullOrEmpty (f)) {  	var seconds = f.Split (new[] {  		':'  	}' StringSplitOptions.RemoveEmptyEntries);  	if (seconds.Length == 2) {  		var a = seconds [0].Trim ().ToLowerInvariant ();  		var b = seconds [1].Trim ();  		if (!string.IsNullOrEmpty (a) && !string.IsNullOrEmpty (b)) {  			setDictionary (result' a' b);  		}  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Html,InlineCssParser,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\InlineCssParser.cs,parse,The following statement contains a magic number: if (seconds.Length == 2) {  	var a = seconds [0].Trim ().ToLowerInvariant ();  	var b = seconds [1].Trim ();  	if (!string.IsNullOrEmpty (a) && !string.IsNullOrEmpty (b)) {  		setDictionary (result' a' b);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,getWebAddressFromFile,The following statement contains a magic number: if (file.StartsWith (@"http") || file.StartsWith (@"https") || baseUri == null) {  	return file;  } else if (file.IndexOf (@"\"' StringComparison.Ordinal) == 0) {  	return baseUri + file;  } else if (file.IndexOf (@"/"' StringComparison.Ordinal) == 0) {  	return baseUri + file;  } else if (file.StartsWith (@"file") || file.Substring (1' 2) == @":\" || baseUri.AbsolutePath == @"about:blank") {  	return file;  } else {  	return baseUri + @"/" + file;  }  
Magic Number,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,getWebAddressFromFile,The following statement contains a magic number: if (file.IndexOf (@"\"' StringComparison.Ordinal) == 0) {  	return baseUri + file;  } else if (file.IndexOf (@"/"' StringComparison.Ordinal) == 0) {  	return baseUri + file;  } else if (file.StartsWith (@"file") || file.Substring (1' 2) == @":\" || baseUri.AbsolutePath == @"about:blank") {  	return file;  } else {  	return baseUri + @"/" + file;  }  
Magic Number,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,getWebAddressFromFile,The following statement contains a magic number: if (file.IndexOf (@"/"' StringComparison.Ordinal) == 0) {  	return baseUri + file;  } else if (file.StartsWith (@"file") || file.Substring (1' 2) == @":\" || baseUri.AbsolutePath == @"about:blank") {  	return file;  } else {  	return baseUri + @"/" + file;  }  
Magic Number,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,getWebAddressFromFile,The following statement contains a magic number: if (file.StartsWith (@"file") || file.Substring (1' 2) == @":\" || baseUri.AbsolutePath == @"about:blank") {  	return file;  } else {  	return baseUri + @"/" + file;  }  
Magic Number,ZetaHtmlEditControl.Code.Html,HtmlClipboardHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlClipboardHelper.cs,getHtmlFragmentFromClipboardCode,The following statement contains a magic number: tmp = htmlInfo.Substring (htmlInfo.IndexOf (@"EndFragment:"' StringComparison.Ordinal) + 12);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,The following statement contains a magic number: if (nodes != null) {  	foreach (var node in nodes) {  		node.Name = @"span";  		if (node.HasAttributeWithName (@"color")) {  			var color = node.ReadAttributeValue (@"color");  			if (!string.Equals (color' NoForegroundColor' StringComparison.InvariantCultureIgnoreCase)) {  				node.SetInlineCss (@"color"' color);  			}  			node.RemoveAttributeWithName (@"color");  		}  		var bgColor = node.ReadInlineCssValue (@"background-color");  		if (bgColor != null && string.Equals (bgColor' NoBackgroundColor' StringComparison.InvariantCultureIgnoreCase)) {  			node.RemoveInlineCssItem (@"background-color");  		}  		if (node.HasAttributeWithName (@"face")) {  			var face = node.ReadAttributeValue (@"face");  			if (!string.IsNullOrEmpty (face)) {  				node.SetInlineCss (@"font-family"' face);  			}  			node.RemoveAttributeWithName (@"face");  		}  		if (node.HasAttributeWithName (@"size")) {  			var size = translateFontSizeToCss (node.ReadAttributeValue (@"size"));  			if (!string.IsNullOrEmpty (size) && size != 3.ToString (CultureInfo.InvariantCulture)) {  				node.SetInlineCss (@"font-size"' size);  			}  			node.RemoveAttributeWithName (@"size");  		}  		node.RemoveAttributeWithNameIfEmpty (@"style");  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,The following statement contains a magic number: foreach (var node in nodes) {  	node.Name = @"span";  	if (node.HasAttributeWithName (@"color")) {  		var color = node.ReadAttributeValue (@"color");  		if (!string.Equals (color' NoForegroundColor' StringComparison.InvariantCultureIgnoreCase)) {  			node.SetInlineCss (@"color"' color);  		}  		node.RemoveAttributeWithName (@"color");  	}  	var bgColor = node.ReadInlineCssValue (@"background-color");  	if (bgColor != null && string.Equals (bgColor' NoBackgroundColor' StringComparison.InvariantCultureIgnoreCase)) {  		node.RemoveInlineCssItem (@"background-color");  	}  	if (node.HasAttributeWithName (@"face")) {  		var face = node.ReadAttributeValue (@"face");  		if (!string.IsNullOrEmpty (face)) {  			node.SetInlineCss (@"font-family"' face);  		}  		node.RemoveAttributeWithName (@"face");  	}  	if (node.HasAttributeWithName (@"size")) {  		var size = translateFontSizeToCss (node.ReadAttributeValue (@"size"));  		if (!string.IsNullOrEmpty (size) && size != 3.ToString (CultureInfo.InvariantCulture)) {  			node.SetInlineCss (@"font-size"' size);  		}  		node.RemoveAttributeWithName (@"size");  	}  	node.RemoveAttributeWithNameIfEmpty (@"style");  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,The following statement contains a magic number: if (node.HasAttributeWithName (@"size")) {  	var size = translateFontSizeToCss (node.ReadAttributeValue (@"size"));  	if (!string.IsNullOrEmpty (size) && size != 3.ToString (CultureInfo.InvariantCulture)) {  		node.SetInlineCss (@"font-size"' size);  	}  	node.RemoveAttributeWithName (@"size");  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,doTranslate,The following statement contains a magic number: if (!string.IsNullOrEmpty (size) && size != 3.ToString (CultureInfo.InvariantCulture)) {  	node.SetInlineCss (@"font-size"' size);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: if (int.TryParse (size' out sizeClassic)) {  	switch (sizeClassic) {  	case 1:  		return @"xx-small";  	case 2:  		return @"x-small";  	case 3:  		return @"small";  	case 4:  		return @"medium";  	case 5:  		return @"large";  	case 6:  		return @"x-large";  	case 7:  		return @"xx-large";  	default:  		return string.Empty;  	}  } else {  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromBadToGoodTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromBadToGoodTranslator.cs,translateFontSizeToCss,The following statement contains a magic number: switch (sizeClassic) {  case 1:  	return @"xx-small";  case 2:  	return @"x-small";  case 3:  	return @"small";  case 4:  	return @"medium";  case 5:  	return @"large";  case 6:  	return @"x-large";  case 7:  	return @"xx-large";  default:  	return string.Empty;  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (cssSize)) {  	return 3.ToString (CultureInfo.InvariantCulture);  } else {  	switch (cssSize) {  	case @"xx-small":  		return 1.ToString (CultureInfo.InvariantCulture);  	case @"x-small":  		return 2.ToString (CultureInfo.InvariantCulture);  	case @"small":  		return 3.ToString (CultureInfo.InvariantCulture);  	case @"medium":  		return 4.ToString (CultureInfo.InvariantCulture);  	case @"large":  		return 5.ToString (CultureInfo.InvariantCulture);  	case @"x-large":  		return 6.ToString (CultureInfo.InvariantCulture);  	case @"xx-large":  		return 7.ToString (CultureInfo.InvariantCulture);  	default:  		return 3.ToString (CultureInfo.InvariantCulture);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 3.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: switch (cssSize) {  case @"xx-small":  	return 1.ToString (CultureInfo.InvariantCulture);  case @"x-small":  	return 2.ToString (CultureInfo.InvariantCulture);  case @"small":  	return 3.ToString (CultureInfo.InvariantCulture);  case @"medium":  	return 4.ToString (CultureInfo.InvariantCulture);  case @"large":  	return 5.ToString (CultureInfo.InvariantCulture);  case @"x-large":  	return 6.ToString (CultureInfo.InvariantCulture);  case @"xx-large":  	return 7.ToString (CultureInfo.InvariantCulture);  default:  	return 3.ToString (CultureInfo.InvariantCulture);  }  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 2.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 3.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 4.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 5.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 6.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 7.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.Code.MsHtml,MsHtmlLegacyFromGoodToBadTranslator,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\MsHtml\MsHtmlLegacyFromGoodToBadTranslator.cs,translateFontSizeFromCss,The following statement contains a magic number: return 3.ToString (CultureInfo.InvariantCulture);  
Magic Number,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,HtmlEditControl,The following statement contains a magic number: if (!DesignMode && !HtmlEditorDesignModeManager.IsDesignMode) {  	AllowWebBrowserDrop = false;  	Navigate (@"about:blank");  	_tmpFolderPath = Path.Combine (Path.GetTempPath ()' @"zhe1-" + Guid.NewGuid ());  	Directory.CreateDirectory (_tmpFolderPath);  	_timerTextChange.Tick += timerTextChange_Tick;  	_timerTextChange.Interval = 200;  	_timerTextChange.Start ();  	// --  	constructHtmlEditControlKeyboard ();  	Configure (Configuration);  }  
Magic Number,ZetaHtmlEditControl.UI.EditControlDerives,HtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlDerives\HtmlEditControl.Cans.cs,HtmlEditControl,The following statement contains a magic number: _timerTextChange.Interval = 200;  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: using (var bytes = new MemoryStream ()) {  	for (var i = 0; i < len; i++) {  		if (s [i] == '%' && i + 2 < len) {  			if (s [i + 1] == 'u' && i + 5 < len) {  				if (bytes.Length > 0) {  					output.Append (getChars (bytes' e));  					bytes.SetLength (0);  				}  				output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  				i += 5;  			} else {  				bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  				i += 2;  			}  			continue;  		}  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append (s [i] == '+' ? ' ' : s [i]);  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (getChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append (s [i] == '+' ? ' ' : s [i]);  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (getChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (getChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: i += 5;  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,UrlDecode,The following statement contains a magic number: i += 2;  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlEncode,The following statement contains a magic number: if (s == null) {  	return null;  } else {  	var output = new StringBuilder ();  	foreach (var c in s) {  		switch (c) {  		case '&':  			output.Append (@"&amp;");  			break;  		case '>':  			output.Append (@"&gt;");  			break;  		case '<':  			output.Append (@"&lt;");  			break;  		case '"':  			output.Append (@"&quot;");  			break;  		default:  			if (c > 128) {  				output.Append (@"&#");  				output.Append (((int)c).ToString ());  				output.Append (@";");  			} else  				output.Append (c);  			break;  		}  	}  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlEncode,The following statement contains a magic number: foreach (var c in s) {  	switch (c) {  	case '&':  		output.Append (@"&amp;");  		break;  	case '>':  		output.Append (@"&gt;");  		break;  	case '<':  		output.Append (@"&lt;");  		break;  	case '"':  		output.Append (@"&quot;");  		break;  	default:  		if (c > 128) {  			output.Append (@"&#");  			output.Append (((int)c).ToString ());  			output.Append (@";");  		} else  			output.Append (c);  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlEncode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (@"&amp;");  	break;  case '>':  	output.Append (@"&gt;");  	break;  case '<':  	output.Append (@"&lt;");  	break;  case '"':  	output.Append (@"&quot;");  	break;  default:  	if (c > 128) {  		output.Append (@"&#");  		output.Append (((int)c).ToString ());  		output.Append (@";");  	} else  		output.Append (c);  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlEncode,The following statement contains a magic number: if (c > 128) {  	output.Append (@"&#");  	output.Append (((int)c).ToString ());  	output.Append (@";");  } else  	output.Append (c);  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s == null) {  	throw new ArgumentNullException (@"s");  } else if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (s.IndexOf ('&') == -1) {  	return s;  } else {  	var insideEntity = false;  	// used to indicate that we are in a potential entity  	var entity = String.Empty;  	var output = new StringBuilder ();  	var len = s.Length;  	for (var i = 0; i < len; i++) {  		var c = s [i];  		switch (c) {  		case '&':  			output.Append (entity);  			entity = @"&";  			insideEntity = true;  			break;  		case ';':  			if (!insideEntity) {  				output.Append (c);  				break;  			}  			entity += c;  			var length = entity.Length;  			if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  				entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  			} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  				entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  			}  			output.Append (entity);  			entity = String.Empty;  			insideEntity = false;  			break;  		default:  			if (insideEntity) {  				entity += c;  			} else {  				output.Append (c);  			}  			break;  		}  	}  	output.Append (entity);  	return output.ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: for (var i = 0; i < len; i++) {  	var c = s [i];  	switch (c) {  	case '&':  		output.Append (entity);  		entity = @"&";  		insideEntity = true;  		break;  	case ';':  		if (!insideEntity) {  			output.Append (c);  			break;  		}  		entity += c;  		var length = entity.Length;  		if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  			entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  		} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  			entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  		}  		output.Append (entity);  		entity = String.Empty;  		insideEntity = false;  		break;  	default:  		if (insideEntity) {  			entity += c;  		} else {  			output.Append (c);  		}  		break;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append (entity);  	entity = @"&";  	insideEntity = true;  	break;  case ';':  	if (!insideEntity) {  		output.Append (c);  		break;  	}  	entity += c;  	var length = entity.Length;  	if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  		entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  	} else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  		entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  	}  	output.Append (entity);  	entity = String.Empty;  	insideEntity = false;  	break;  default:  	if (insideEntity) {  		entity += c;  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length >= 2 && entity [1] == '#' && entity [2] != ';') {  	entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  } else if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: entity = ((char)Int32.Parse (entity.Substring (2' entity.Length - 3))).ToString ();  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: if (length > 1 && entities.ContainsKey (entity.Substring (1' entity.Length - 2))) {  	entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,HtmlDecode,The following statement contains a magic number: entity = entities [entity.Substring (1' entity.Length - 2)].ToString ();  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,IsAbsolutePath,The following statement contains a magic number: if (path.Length < 2) {  	return false;  } else if (path.Substring (0' 2) == @"\\") {  	// UNC.  	return IsUncPath (path);  } else if (path.Substring (1' 1) == @":") {  	// "C:"  	return IsDriveLetterPath (path);  } else {  	return false;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,IsAbsolutePath,The following statement contains a magic number: if (path.Length < 2) {  	return false;  } else if (path.Substring (0' 2) == @"\\") {  	// UNC.  	return IsUncPath (path);  } else if (path.Substring (1' 1) == @":") {  	// "C:"  	return IsDriveLetterPath (path);  } else {  	return false;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,IsAbsolutePath,The following statement contains a magic number: if (path.Substring (0' 2) == @"\\") {  	// UNC.  	return IsUncPath (path);  } else if (path.Substring (1' 1) == @":") {  	// "C:"  	return IsDriveLetterPath (path);  } else {  	return false;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (string.IsNullOrEmpty (path1)) {  	return path2;  } else if (string.IsNullOrEmpty (path2)) {  	return path1;  } else {  	// Avoid removing too much "/"' so that "file://" still  	// stays "file://" and does not become "file:/".  	// (The same applies for other protocols.  	path1 = path1.Replace ('\\'' '/');  	if (path1 [path1.Length - 1] != '/') {  		path1 += @"/";  	}  	path2 = path2.Replace ('\\'' '/');  	// Do allow "file://" + "/C:/..." to really form "file:///C:/..."'  	// with three slashes.  	if (path2.Length >= 3) {  		if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  			// Is OK to have a leading slash.  		} else {  			path2 = path2.TrimStart ('/'' '\\');  		}  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  	return path1 + path2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (string.IsNullOrEmpty (path1)) {  	return path2;  } else if (string.IsNullOrEmpty (path2)) {  	return path1;  } else {  	// Avoid removing too much "/"' so that "file://" still  	// stays "file://" and does not become "file:/".  	// (The same applies for other protocols.  	path1 = path1.Replace ('\\'' '/');  	if (path1 [path1.Length - 1] != '/') {  		path1 += @"/";  	}  	path2 = path2.Replace ('\\'' '/');  	// Do allow "file://" + "/C:/..." to really form "file:///C:/..."'  	// with three slashes.  	if (path2.Length >= 3) {  		if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  			// Is OK to have a leading slash.  		} else {  			path2 = path2.TrimStart ('/'' '\\');  		}  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  	return path1 + path2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (string.IsNullOrEmpty (path2)) {  	return path1;  } else {  	// Avoid removing too much "/"' so that "file://" still  	// stays "file://" and does not become "file:/".  	// (The same applies for other protocols.  	path1 = path1.Replace ('\\'' '/');  	if (path1 [path1.Length - 1] != '/') {  		path1 += @"/";  	}  	path2 = path2.Replace ('\\'' '/');  	// Do allow "file://" + "/C:/..." to really form "file:///C:/..."'  	// with three slashes.  	if (path2.Length >= 3) {  		if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  			// Is OK to have a leading slash.  		} else {  			path2 = path2.TrimStart ('/'' '\\');  		}  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  	return path1 + path2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (string.IsNullOrEmpty (path2)) {  	return path1;  } else {  	// Avoid removing too much "/"' so that "file://" still  	// stays "file://" and does not become "file:/".  	// (The same applies for other protocols.  	path1 = path1.Replace ('\\'' '/');  	if (path1 [path1.Length - 1] != '/') {  		path1 += @"/";  	}  	path2 = path2.Replace ('\\'' '/');  	// Do allow "file://" + "/C:/..." to really form "file:///C:/..."'  	// with three slashes.  	if (path2.Length >= 3) {  		if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  			// Is OK to have a leading slash.  		} else {  			path2 = path2.TrimStart ('/'' '\\');  		}  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  	return path1 + path2;  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (path2.Length >= 3) {  	if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  		// Is OK to have a leading slash.  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  } else {  	path2 = path2.TrimStart ('/'' '\\');  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (path2.Length >= 3) {  	if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  		// Is OK to have a leading slash.  	} else {  		path2 = path2.TrimStart ('/'' '\\');  	}  } else {  	path2 = path2.TrimStart ('/'' '\\');  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,CombineVirtual,The following statement contains a magic number: if (path2 [0] == '/' && path2 [2] == ':' && char.IsLetter (path2 [1])) {  	// Is OK to have a leading slash.  } else {  	path2 = path2.TrimStart ('/'' '\\');  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,The following statement contains a magic number: using (var result = new MemoryStream ()) {  	var end = offset + count;  	for (var i = offset; i < end; i++) {  		var c = (char)bytes [i];  		var isUnsafe = (c == ' ') || (c < '0' && c != '-' && c != '.') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a' && c != '_') || (c > 'z');  		if (isUnsafe && additionalSafeChars.IndexOf (c) >= 0) {  			isUnsafe = false;  		}  		if (isUnsafe) {  			// An unsafe character' must escape.  			result.WriteByte ((byte)'%');  			var idx = c >> 4;  			result.WriteByte ((byte)HexChars [idx]);  			idx = c & 0x0F;  			result.WriteByte ((byte)HexChars [idx]);  		} else {  			// A safe character just write.  			result.WriteByte ((byte)c);  		}  	}  	return result.ToArray ();  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,The following statement contains a magic number: for (var i = offset; i < end; i++) {  	var c = (char)bytes [i];  	var isUnsafe = (c == ' ') || (c < '0' && c != '-' && c != '.') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a' && c != '_') || (c > 'z');  	if (isUnsafe && additionalSafeChars.IndexOf (c) >= 0) {  		isUnsafe = false;  	}  	if (isUnsafe) {  		// An unsafe character' must escape.  		result.WriteByte ((byte)'%');  		var idx = c >> 4;  		result.WriteByte ((byte)HexChars [idx]);  		idx = c & 0x0F;  		result.WriteByte ((byte)HexChars [idx]);  	} else {  		// A safe character just write.  		result.WriteByte ((byte)c);  	}  }  
Magic Number,ZetaHtmlEditControl.Code.Helper,PathHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Helper\PathHelper.cs,urlEncodeToBytes,The following statement contains a magic number: if (isUnsafe) {  	// An unsafe character' must escape.  	result.WriteByte ((byte)'%');  	var idx = c >> 4;  	result.WriteByte ((byte)HexChars [idx]);  	idx = c & 0x0F;  	result.WriteByte ((byte)HexChars [idx]);  } else {  	// A safe character just write.  	result.WriteByte ((byte)c);  }  
Magic Number,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,InitializeComponent,The following statement contains a magic number: this.fontNameToolStripComboBox.DropDownWidth = 171;  
Magic Number,ZetaHtmlEditControl.UI,HtmlEditUserControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\HtmlEditUserControl.cs,InitializeComponent,The following statement contains a magic number: this.fontSizeToolStripComboBox.DropDownWidth = 30;  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (containsHeadlineCheckBox.CheckState != CheckState.Indeterminate) {  	string newTagName = containsHeadlineCheckBox.CheckState == CheckState.Checked ? @"th" : @"td";  	string tagName = cellElement.tagName.ToLowerInvariant ();  	if (tagName != newTagName) {  		var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  		// Replace start.  		outerHtmlSb [1] = newTagName [0];  		outerHtmlSb [2] = newTagName [1];  		// Replace end.  		outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  		outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  		string outerHtml = outerHtmlSb.ToString ();  		// --  		const int startPos1 = 0;  		int endPos1 = outerHtml.IndexOf ('>');  		int startPos2 = outerHtml.LastIndexOf ('<');  		int endPos2 = outerHtml.Length - 1;  		Debug.Assert (startPos1 != -1);  		Debug.Assert (endPos1 != -1);  		Debug.Assert (startPos2 != -1);  		Debug.Assert (endPos2 != -1);  		string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  		string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  		// --  		var cellNode = (IHTMLDOMNode2)cell;  		var doc = (IHTMLDocument2)cellNode.ownerDocument;  		var newElement = doc.createElement (newHtmlTag);  		newElement.innerHTML = newHtmlInnerHtml;  		var newNode = newElement as IHTMLDOMNode;  		// Set the new.  		var cellNode1 = (IHTMLDOMNode)cell;  		cellNode1.replaceNode (newNode);  	}  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (containsHeadlineCheckBox.CheckState != CheckState.Indeterminate) {  	string newTagName = containsHeadlineCheckBox.CheckState == CheckState.Checked ? @"th" : @"td";  	string tagName = cellElement.tagName.ToLowerInvariant ();  	if (tagName != newTagName) {  		var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  		// Replace start.  		outerHtmlSb [1] = newTagName [0];  		outerHtmlSb [2] = newTagName [1];  		// Replace end.  		outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  		outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  		string outerHtml = outerHtmlSb.ToString ();  		// --  		const int startPos1 = 0;  		int endPos1 = outerHtml.IndexOf ('>');  		int startPos2 = outerHtml.LastIndexOf ('<');  		int endPos2 = outerHtml.Length - 1;  		Debug.Assert (startPos1 != -1);  		Debug.Assert (endPos1 != -1);  		Debug.Assert (startPos2 != -1);  		Debug.Assert (endPos2 != -1);  		string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  		string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  		// --  		var cellNode = (IHTMLDOMNode2)cell;  		var doc = (IHTMLDocument2)cellNode.ownerDocument;  		var newElement = doc.createElement (newHtmlTag);  		newElement.innerHTML = newHtmlInnerHtml;  		var newNode = newElement as IHTMLDOMNode;  		// Set the new.  		var cellNode1 = (IHTMLDOMNode)cell;  		cellNode1.replaceNode (newNode);  	}  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (containsHeadlineCheckBox.CheckState != CheckState.Indeterminate) {  	string newTagName = containsHeadlineCheckBox.CheckState == CheckState.Checked ? @"th" : @"td";  	string tagName = cellElement.tagName.ToLowerInvariant ();  	if (tagName != newTagName) {  		var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  		// Replace start.  		outerHtmlSb [1] = newTagName [0];  		outerHtmlSb [2] = newTagName [1];  		// Replace end.  		outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  		outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  		string outerHtml = outerHtmlSb.ToString ();  		// --  		const int startPos1 = 0;  		int endPos1 = outerHtml.IndexOf ('>');  		int startPos2 = outerHtml.LastIndexOf ('<');  		int endPos2 = outerHtml.Length - 1;  		Debug.Assert (startPos1 != -1);  		Debug.Assert (endPos1 != -1);  		Debug.Assert (startPos2 != -1);  		Debug.Assert (endPos2 != -1);  		string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  		string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  		// --  		var cellNode = (IHTMLDOMNode2)cell;  		var doc = (IHTMLDocument2)cellNode.ownerDocument;  		var newElement = doc.createElement (newHtmlTag);  		newElement.innerHTML = newHtmlInnerHtml;  		var newNode = newElement as IHTMLDOMNode;  		// Set the new.  		var cellNode1 = (IHTMLDOMNode)cell;  		cellNode1.replaceNode (newNode);  	}  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (tagName != newTagName) {  	var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  	// Replace start.  	outerHtmlSb [1] = newTagName [0];  	outerHtmlSb [2] = newTagName [1];  	// Replace end.  	outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  	outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  	string outerHtml = outerHtmlSb.ToString ();  	// --  	const int startPos1 = 0;  	int endPos1 = outerHtml.IndexOf ('>');  	int startPos2 = outerHtml.LastIndexOf ('<');  	int endPos2 = outerHtml.Length - 1;  	Debug.Assert (startPos1 != -1);  	Debug.Assert (endPos1 != -1);  	Debug.Assert (startPos2 != -1);  	Debug.Assert (endPos2 != -1);  	string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  	string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  	// --  	var cellNode = (IHTMLDOMNode2)cell;  	var doc = (IHTMLDocument2)cellNode.ownerDocument;  	var newElement = doc.createElement (newHtmlTag);  	newElement.innerHTML = newHtmlInnerHtml;  	var newNode = newElement as IHTMLDOMNode;  	// Set the new.  	var cellNode1 = (IHTMLDOMNode)cell;  	cellNode1.replaceNode (newNode);  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (tagName != newTagName) {  	var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  	// Replace start.  	outerHtmlSb [1] = newTagName [0];  	outerHtmlSb [2] = newTagName [1];  	// Replace end.  	outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  	outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  	string outerHtml = outerHtmlSb.ToString ();  	// --  	const int startPos1 = 0;  	int endPos1 = outerHtml.IndexOf ('>');  	int startPos2 = outerHtml.LastIndexOf ('<');  	int endPos2 = outerHtml.Length - 1;  	Debug.Assert (startPos1 != -1);  	Debug.Assert (endPos1 != -1);  	Debug.Assert (startPos2 != -1);  	Debug.Assert (endPos2 != -1);  	string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  	string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  	// --  	var cellNode = (IHTMLDOMNode2)cell;  	var doc = (IHTMLDocument2)cellNode.ownerDocument;  	var newElement = doc.createElement (newHtmlTag);  	newElement.innerHTML = newHtmlInnerHtml;  	var newNode = newElement as IHTMLDOMNode;  	// Set the new.  	var cellNode1 = (IHTMLDOMNode)cell;  	cellNode1.replaceNode (newNode);  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: if (tagName != newTagName) {  	var outerHtmlSb = new StringBuilder (cellElement.outerHTML.Trim ());  	// Replace start.  	outerHtmlSb [1] = newTagName [0];  	outerHtmlSb [2] = newTagName [1];  	// Replace end.  	outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  	outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  	string outerHtml = outerHtmlSb.ToString ();  	// --  	const int startPos1 = 0;  	int endPos1 = outerHtml.IndexOf ('>');  	int startPos2 = outerHtml.LastIndexOf ('<');  	int endPos2 = outerHtml.Length - 1;  	Debug.Assert (startPos1 != -1);  	Debug.Assert (endPos1 != -1);  	Debug.Assert (startPos2 != -1);  	Debug.Assert (endPos2 != -1);  	string newHtmlTag = outerHtml.Substring (startPos1' endPos1 - startPos1 + 1);  	string newHtmlInnerHtml = outerHtml.Substring (endPos1 + 1' startPos2 - endPos1 - 1);  	// --  	var cellNode = (IHTMLDOMNode2)cell;  	var doc = (IHTMLDocument2)cellNode.ownerDocument;  	var newElement = doc.createElement (newHtmlTag);  	newElement.innerHTML = newHtmlInnerHtml;  	var newNode = newElement as IHTMLDOMNode;  	// Set the new.  	var cellNode1 = (IHTMLDOMNode)cell;  	cellNode1.replaceNode (newNode);  }  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: outerHtmlSb [2] = newTagName [1];  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: outerHtmlSb [outerHtmlSb.Length - 3] = newTagName [0];  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following statement contains a magic number: outerHtmlSb [outerHtmlSb.Length - 2] = newTagName [1];  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,InitializeComponent,The following statement contains a magic number: this.columnsUpDown.Value = new decimal (new int[] {  	3'  	0'  	0'  	0  });  
Magic Number,ZetaHtmlEditControl.UI.Tools,HtmlEditorTableNewForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorTableNewForm.cs,InitializeComponent,The following statement contains a magic number: this.rowsUpDown.Value = new decimal (new int[] {  	5'  	0'  	0'  	0  });  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,checkSendText,The following statement contains a magic number: if (!string.IsNullOrEmpty (request.Headers [@"if-Modified-Since"])) {  	#pragma  	response.Status = HttpStatusCode.OK;  	#pragma  }  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,checkSendText,The following statement contains a magic number: if (!string.IsNullOrEmpty (request.Headers [@"if-Modified-Since"])) {  	#pragma  	response.Status = HttpStatusCode.OK;  	#pragma  }  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,addNeverCache,The following statement contains a magic number: response.AddHeader (@"Last-modified"' new DateTime (2005' 1' 1).ToUniversalTime ().ToString (@"r"));  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,getFreePort,The following statement contains a magic number: for (var i = 0; i < 10; ++i) {  	var port = Random.Next (9000' 15000);  	if (isPortFree (port)) {  		ReservedPorts.Add (port);  		return port;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,getFreePort,The following statement contains a magic number: for (var i = 0; i < 10; ++i) {  	var port = Random.Next (9000' 15000);  	if (isPortFree (port)) {  		ReservedPorts.Add (port);  		return port;  	}  }  
Magic Number,ZetaHtmlEditControl.Code.HttpServer,WebServer,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\HttpServer\WebServer.cs,getFreePort,The following statement contains a magic number: for (var i = 0; i < 10; ++i) {  	var port = Random.Next (9000' 15000);  	if (isPortFree (port)) {  		ReservedPorts.Add (port);  		return port;  	}  }  
Missing Default,ZetaHtmlEditControl.Code.Html,HtmlConversionHelper,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\Code\Html\HtmlConversionHelper.cs,FindImgs,The following switch statement is missing a default case: switch (r.Name.ToLowerInvariant ()) {  case @"src":  	ii.Source = r.Value;  	break;  case @"width":  	ii.Width = ConvertHelper.ToInt32 (r.Value);  	break;  case @"height":  	ii.Height = ConvertHelper.ToInt32 (r.Value);  	break;  }  
Missing Default,ZetaHtmlEditControl.UI.EditControlBases,CoreHtmlEditControl,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\CoreHtmlEditControl.Base.cs,GetCurrentSelection,The following switch statement is missing a default case: switch (st) {  case @"none":  	{  		var ds = (IDisplayServices)DomDocument;  		IHTMLCaret caret;  		ds.GetCaret (out caret);  		caret.MoveMarkupPointerToCaret (selectionMPStart);  		caret.MoveMarkupPointerToCaret (selectionMPEnd);  		// Set gravity' as in "Introduction to Markup Services" in MSDN.  		// http://msdn.microsoft.com/en-us/library/bb508514(v=vs.85).aspx  		selectionMPStart.SetGravity (_POINTER_GRAVITY.POINTER_GRAVITY_Right);  	}  	break;  case @"text":  	{  		// MoveToSelectionAnchor does only work with "text" selections.  		var selectionText = DomDocument.selection;  		var range = (IHTMLTxtRange)selectionText.createRange ();  		ms.MovePointersToRange (range' selectionMPStart' selectionMPEnd);  		// swap if wrong direction.  		if (compareGt (selectionMPStart' selectionMPEnd)) {  			var tmp = selectionMPStart;  			selectionMPStart = selectionMPEnd;  			selectionMPEnd = tmp;  		}  		// Set gravity' as in "Introduction to Markup Services" in MSDN.  		// http://msdn.microsoft.com/en-us/library/bb508514(v=vs.85).aspx  		selectionMPStart.SetGravity (_POINTER_GRAVITY.POINTER_GRAVITY_Right);  	}  	break;  case @"control":  	{  		// MoveToSelectionAnchor does only work with "text" selections.  		var selectionControl = DomDocument.selection;  		var range = selectionControl.createRange () as IHTMLControlRange;  		// Strangly' range was null sometimes.  		// E.g. when I resized a table (=control selection)  		// and then did an undo.  		if (range != null) {  			if (range.length > 0) {  				var start = range.item (0);  				var end = range.item (range.length - 1);  				selectionMPStart.MoveAdjacentToElement (start' _ELEMENT_ADJACENCY.ELEM_ADJ_BeforeBegin);  				selectionMPEnd.MoveAdjacentToElement (end' _ELEMENT_ADJACENCY.ELEM_ADJ_AfterEnd);  			}  		}  	}  	break;  }  
Missing Default,ZetaHtmlEditControl.UI.EditControlBases,HtmlEditHost,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\EditControlBases\HtmlEditHost.cs,SnapRect,The following switch statement is missing a default case: switch (eHandle) {  case _ELEMENT_CORNER.ELEMENT_CORNER_RIGHT:  case _ELEMENT_CORNER.ELEMENT_CORNER_LEFT:  	{  		var fac = initialSize.Height / (float)initialSize.Width;  		var newWidth = prcNew.right - prcNew.left;  		var newHeight = fac * newWidth;  		// Niemals > 100%.  		newWidth = Math.Min (newWidth' initialSize.Width);  		newHeight = Math.Min (newHeight' initialSize.Height);  		prcNew.right = prcNew.left + newWidth;  		prcNew.bottom = (int)(prcNew.top + newHeight);  		img.width = newWidth;  		img.height = (int)newHeight;  	}  	break;  case _ELEMENT_CORNER.ELEMENT_CORNER_TOP:  case _ELEMENT_CORNER.ELEMENT_CORNER_BOTTOM:  case _ELEMENT_CORNER.ELEMENT_CORNER_BOTTOMLEFT:  case _ELEMENT_CORNER.ELEMENT_CORNER_BOTTOMRIGHT:  case _ELEMENT_CORNER.ELEMENT_CORNER_TOPLEFT:  case _ELEMENT_CORNER.ELEMENT_CORNER_TOPRIGHT:  	{  		var fac = initialSize.Width / (float)initialSize.Height;  		var newHeight = prcNew.bottom - prcNew.top;  		var newWidth = fac * newHeight;  		// Niemals > 100%.  		newWidth = Math.Min (newWidth' initialSize.Width);  		newHeight = Math.Min (newHeight' initialSize.Height);  		prcNew.right = (int)(prcNew.left + newWidth);  		prcNew.bottom = prcNew.top + newHeight;  		img.width = (int)newWidth;  		img.height = newHeight;  	}  	break;  // TODO  }  
Missing Default,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following switch statement is missing a default case: switch (p.Item2) {  case HorizontalAlignmentType.Standard:  	a = string.Empty;  	break;  case HorizontalAlignmentType.Center:  	a = @"center";  	break;  case HorizontalAlignmentType.Left:  	a = @"left";  	break;  case HorizontalAlignmentType.Right:  	a = @"right";  	break;  case HorizontalAlignmentType.Justify:  	a = @"justify";  	break;  }  
Missing Default,ZetaHtmlEditControl.UI.Tools,HtmlEditorCellPropertiesForm,D:\newReposJune17\UweKeim_ZetaHtmlEditControl\Source\Control\UI\Tools\HtmlEditorCellPropertiesForm.cs,FillDialogControlsToCellValue,The following switch statement is missing a default case: switch (p.Item2) {  case VerticalAlignmentType.Standard:  	a = string.Empty;  	break;  case VerticalAlignmentType.BaseLine:  	a = @"baseline";  	break;  case VerticalAlignmentType.Bottom:  	a = @"bottom";  	break;  case VerticalAlignmentType.Top:  	a = @"top";  	break;  case VerticalAlignmentType.Middle:  	a = @"middle";  	break;  }  
