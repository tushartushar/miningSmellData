Implementation smell,Namespace,Class,File,Method,Description
Long Method,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The method has 106 lines of code.
Long Method,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The method has 134 lines of code.
Complex Method,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,MoonSharp.Hardwire,HardwireCodeGenerationContext,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\HardwireCodeGenerationContext.cs,DispatchTablePairs,Cyclomatic complexity of the method is 8
Long Parameter List,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateCall,The method has 11 parameters. Parameters: table' generator' isVoid' isCtor' isStatic' isExtension' arguments' paramThis' declaringType' specialName' refparCount
Long Parameter List,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The method has 11 parameters. Parameters: table' generator' isVoid' isCtor' isStatic' isExtension' arguments' paramThis' declaringType' specialName' coll
Long Statement,MoonSharp.Hardwire.Generators,ArrayMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\ArrayMemberDescriptorGenerator.cs,Generate,The length of the statement  "				ctor.BaseConstructorArgs.Add(new CodeArrayCreateExpression(typeof(ParameterDescriptor)' paramDescs.Select(e => e.Expression).ToArray())); " is 137.
Long Statement,MoonSharp.Hardwire.Generators,AssignableMemberDescriptorGeneratorBase,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\Base\AssignableMemberDescriptorGeneratorBase.cs,Generate,The length of the statement  "			ctor.BaseConstructorArgs.Add(new CodeCastExpression(typeof(MemberDescriptorAccess)' new CodePrimitiveExpression((int)access))); " is 127.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "			List<HardwireParameterDescriptor> paramDescs = HardwireParameterDescriptor.LoadDescriptorsFromTable(table.Get("params").Table); " is 127.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "			ctor.Statements.Add(new CodeMethodInvokeExpression(new CodeThisReferenceExpression()' "Initialize"' initParams.ToArray())); " is 123.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "			// Create the Invoke method : protected override object Invoke(Script script' object obj' object[] pars' int argscount); " is 120.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "				CodeExpression paramExp = new CodeCastExpression(paramDescs[i].ParamType' new CodeArrayIndexerExpression(paramArray' new CodePrimitiveExpression(i))); " is 150.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "				var ifs = new CodeConditionStatement(condition' GenerateCall(table' generator' isVoid' isCtor' isStatic' isExtension' calls[i]' paramThis' declType' specialName' refparCount).OfType<CodeStatement>().ToArray()); " is 210.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,Generate,The length of the statement  "			m.Statements.AddRange(GenerateCall(table' generator' isVoid' isCtor' isStatic' isExtension' calls[calls.Count - 1]' paramThis' declType' specialName' refparCount)); " is 164.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateCall,The length of the statement  "					retVal = new CodePropertyReferenceExpression(new CodeTypeReferenceExpression(typeof(DynValue))' (refparCount == 0) ? "Void" : "Nil"); " is 133.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support decrement operators."' generator.TargetLanguage.Name)); " is 146.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support XOR operators."' generator.TargetLanguage.Name)); " is 140.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support increment operators."' generator.TargetLanguage.Name)); " is 146.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support logical NOT operators."' generator.TargetLanguage.Name)); " is 148.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support bitwise NOT operators."' generator.TargetLanguage.Name)); " is 148.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support negation operators."' generator.TargetLanguage.Name)); " is 145.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					if (exp == null) EmitInvalid(generator' coll' string.Format("Language {0} does not support unary + operators."' generator.TargetLanguage.Name)); " is 144.
Long Statement,MoonSharp.Hardwire.Generators,MethodMemberDescriptorGenerator,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\Generators\MethodMemberDescriptorGenerator.cs,GenerateSpecialNameCall,The length of the statement  "					coll.Add(new CodeThrowExceptionStatement(new CodeObjectCreateExpression(typeof(InvalidOperationException)' new CodePrimitiveExpression("Access to event special methods is not supported by hardwired decriptors.")))); " is 215.
Long Statement,MoonSharp.Hardwire,HardwireCodeGenerationContext,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\HardwireCodeGenerationContext.cs,GenerateCode,The length of the statement  "					exp => m_InitStatements.Add(new CodeMethodInvokeExpression(new CodeTypeReferenceExpression(typeof(UserData))' "RegisterType"' exp))); " is 133.
Long Statement,MoonSharp.Hardwire,HardwireCodeGenerationContext,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\HardwireCodeGenerationContext.cs,DispatchTablePairs,The length of the statement  "						Warning("Type/Member '{0}' cannot be hardwired because its visibility is '{1}' (stack = {2})."' key.String ?? "(null)"' value.Table.Get("visibility").String' GetStackTrace()); " is 175.
Long Statement,MoonSharp.Hardwire,HardwireCodeGenerationContext,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\HardwireCodeGenerationContext.cs,DispatchTablePairs,The length of the statement  "						Error("Type/Member '{0}' cannot be hardwired' error = '{1}' (stack = {2})."' key.String ?? "(null)"' value.String ?? "(null)"' GetStackTrace()); " is 144.
Virtual Method Call from Constructor,MoonSharp.Hardwire,HardwireCodeGenerationContext,C:\repos\xanathar_moonsharp\src\MoonSharp.Hardwire\HardwireCodeGenerationContext.cs,HardwireCodeGenerationContext,The constructor "HardwireCodeGenerationContext" calls a virtual method "GetInitialComment".
