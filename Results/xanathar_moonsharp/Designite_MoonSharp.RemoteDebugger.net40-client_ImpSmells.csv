Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,GetAction,Cyclomatic complexity of the method is 8
Complex Method,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,m_Server_DataReceived,Cyclomatic complexity of the method is 18
Complex Method,MoonSharp.RemoteDebugger.Network,HttpResource,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpResource.cs,GetContentTypeString,Cyclomatic complexity of the method is 10
Long Parameter List,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,DebugServer,The method has 5 parameters. Parameters: appName' script' port' options' freeRunAfterAttach
Long Parameter List,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,SendHttp,The method has 5 parameters. Parameters: peer' responseCode' contentType' data' extraHeaders
Long Parameter List,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,SendHttp,The method has 5 parameters. Parameters: peer' responseCode' contentType' data' extraHeaders
Long Statement,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,m_Server_DataReceived,The length of the statement  "							m_WatchesChanging.UnionWith(arg.Split(new char[] { ''' }' StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim())); " is 120.
Long Statement,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ExecHttpRequest,The length of the statement  "						SendHttp(peer' "401 Not Authorized"' "text/html"' ERROR_401' "WWW-Authenticate: Basic realm=\"moonsharp-remote-debugger\""); " is 124.
Long Statement,MoonSharp.RemoteDebugger.Network,Utf8TcpPeer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\Utf8TcpPeer.cs,OnDataReceived,The length of the statement  "					m_Socket.BeginReceive(m_RecvBuffer' m_PrevSize' m_RecvBuffer.Length - m_PrevSize' SocketFlags.None' OnDataReceived' null); " is 122.
Empty Catch Block,MoonSharp.RemoteDebugger.Network,Utf8TcpPeer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\Utf8TcpPeer.cs,CloseConnection,The method has an empty catch block.
Empty Catch Block,MoonSharp.RemoteDebugger.Network,Utf8TcpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\Utf8TcpServer.cs,OnPeerDisconnected,The method has an empty catch block.
Empty Catch Block,MoonSharp.RemoteDebugger.Network,Utf8TcpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\Utf8TcpServer.cs,BroadcastMessage,The method has an empty catch block.
Magic Number,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,DebugServer,The following statement contains a magic number: m_Server = new Utf8TcpServer(port' 1 << 20' '\0'' options);
Magic Number,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,GetAction,The following statement contains a magic number: da.Age < TimeSpan.FromMilliseconds(100)
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,HttpServer,The following statement contains a magic number: m_Server = new Utf8TcpServer(port' 100 << 10' '\n'' options);
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,HttpServer,The following statement contains a magic number: m_Server = new Utf8TcpServer(port' 100 << 10' '\n'' options);
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseAuthenticationString,The following statement contains a magic number: parts.Length < 3
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseAuthenticationString,The following statement contains a magic number: byte[] credentialBytes = Convert.FromBase64String(parts[2]);
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseAuthenticationString,The following statement contains a magic number: string[] credentials = credentialString.Split(new char[] { ':' }' 2);
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseAuthenticationString,The following statement contains a magic number: credentials.Length != 2
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,GetResourceFromPath,The following statement contains a magic number: parts.Length < 2
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseArgument,The following statement contains a magic number: string[] parts = t.Split(new char[] { '=' }' 2);
Magic Number,MoonSharp.RemoteDebugger.Network,HttpServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\Network\HttpServer.cs,ParseArgument,The following statement contains a magic number: parts.Length == 2
Missing Default,MoonSharp.RemoteDebugger,DebugServer,D:\research\architectureSmells\repos\xanathar_moonsharp\src\MoonSharp.RemoteDebugger\DebugServer.cs,m_Server_DataReceived,The following switch statement is missing a default case: switch (cmd)  				{  					case "handshake":  						SendWelcome();    						for (int i = 0; i < m_Script.SourceCodeCount; i++)  							SetSourceCode(m_Script.GetSourceCode(i));  						break;  					case "stepin":  						QueueAction(new DebuggerAction() { Action = DebuggerAction.ActionType.StepIn });  						break;  					case "refresh":  						lock (m_Lock)  						{  							for (int i = 0; i < (int)WatchType.MaxValue; i++)  								m_CachedWatches[i] = null;  						}  						QueueRefresh();  						break;  					case "run":  						QueueAction(new DebuggerAction() { Action = DebuggerAction.ActionType.Run });  						break;  					case "stepover":  						QueueAction(new DebuggerAction() { Action = DebuggerAction.ActionType.StepOver });  						break;  					case "stepout":  						QueueAction(new DebuggerAction() { Action = DebuggerAction.ActionType.StepOut });  						break;  					case "pause":  						m_RequestPause = true;  						break;  					case "error_rx":  						m_ErrorRegEx = new Regex(arg.Trim());  						SendOption("error_rx"' m_ErrorRegEx.ToString());  						break;  					case "addwatch":  						lock (m_Lock)  							m_WatchesChanging.UnionWith(arg.Split(new char[] { ''' }' StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim()));    						QueueRefresh();  						break;  					case "delwatch":  						lock (m_Lock)  						{  							var args = arg.Split(new char[] { ''' }' StringSplitOptions.RemoveEmptyEntries);    							foreach (var a in args)  								m_WatchesChanging.Remove(a);  						}  						QueueRefresh();  						break;  					case "breakpoint":  						DebuggerAction.ActionType action = DebuggerAction.ActionType.ToggleBreakpoint;    						if (arg == "set") action = DebuggerAction.ActionType.SetBreakpoint;  						else if (arg == "clear") action = DebuggerAction.ActionType.ClearBreakpoint;    						QueueAction(new DebuggerAction()  						{  							Action = action'  							SourceID = int.Parse(xdoc.DocumentElement.GetAttribute("src"))'  							SourceLine = int.Parse(xdoc.DocumentElement.GetAttribute("line"))'  							SourceCol = int.Parse(xdoc.DocumentElement.GetAttribute("col"))'  						});  						break;  				}
