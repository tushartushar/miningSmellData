Implementation smell,Namespace,Class,File,Method,Description
Long Method,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The method has 132 lines of code.
Long Method,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The method has 114 lines of code.
Complex Method,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,TrueEqualsDictionary,Cyclomatic complexity of the method is 8
Complex Method,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,TrueEqualsListDynamic,Cyclomatic complexity of the method is 9
Complex Method,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,Cyclomatic complexity of the method is 25
Complex Method,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,JilDeserializeDynamic,Cyclomatic complexity of the method is 10
Complex Method,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,Cyclomatic complexity of the method is 16
Complex Method,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,Cyclomatic complexity of the method is 8
Complex Method,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,Cyclomatic complexity of the method is 9
Long Parameter List,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTest,The method has 5 parameters. Parameters: serializerName' niceTypeName' serializeFunc' deserializeFunc' obj
Long Identifier,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,,The length of the parameter _ServiceStackDeserializeDynamic is 31.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 0:name = "Jil Static"; serializer = jilSerializer; deserializer = jilStaticDeserializer; resultType = typeof(string); break; " is 129.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 1: name = "Jil Dynamic"; serializer = jilSerializer; deserializer = jilDynamicDeserializer; resultType = typeof(string); break; " is 132.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                        var results = (List<Result>)serialize.Invoke(null' new object[] { name' typeName' serializer' deserializer' singleObj }); " is 121.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 0: name = "Jil Static"; serializer = jilSerializer; deserializer = jilStaticDeserializer; resultType = typeof(string); break; " is 130.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 1: name = "Jil Dynamic"; serializer = jilSerializer; deserializer = jilDynamicDeserializer; resultType = typeof(string); break; " is 132.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 0: name = "Jil Static"; serializer = jilSerializer; deserializer = jilStaticDeserializer; resultType = typeof(string); break; " is 130.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The length of the statement  "                            case 1: name = "Jil Dynamic"; serializer = jilSerializer; deserializer = jilDynamicDeserializer; resultType = typeof(string); break; " is 132.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                question = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Question)' SpeedTestMode.Single)).ToList(); " is 140.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                answer = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Answer)' SpeedTestMode.Single)).ToList(); " is 136.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                user = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.User)' SpeedTestMode.Single)).ToList(); " is 132.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                questionList = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Question)' SpeedTestMode.List)).ToList(); " is 142.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                answerList = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Answer)' SpeedTestMode.List)).ToList(); " is 138.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                userList = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.User)' SpeedTestMode.List)).ToList(); " is 134.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                questionDict = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Question)' SpeedTestMode.Dictionary)).ToList(); " is 148.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                answerDict = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.Answer)' SpeedTestMode.Dictionary)).ToList(); " is 144.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "                userDict = Enumerable.Range(0' runCount).SelectMany(_ => DoSpeedTestsFor(typeof(Benchmark.Models.User)' SpeedTestMode.Dictionary)).ToList(); " is 140.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "            Func<List<Result>' Func<Result' bool>' double> jilStatic = (r' f) => r.Where(w => f(w) && w.Serializer.StartsWith("Jil Static")).Select(x => x.Elapsed.TotalMilliseconds).Median(); " is 179.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The length of the statement  "            Func<List<Result>' Func<Result' bool>' double> jilDynamic = (r' f) => r.Where(w => f(w) && w.Serializer.StartsWith("Jil Dynamic")).Select(x => x.Elapsed.TotalMilliseconds).Median(); " is 181.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Answer\t" + answerSpeed[JilIndex] + "\t" + answerSpeed[NewtonSoftIndex] + "\t" + answerSpeed[ProtobufIndex] + "\t" + answerSpeed[ServiceStackIndex]); " is 168.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Question\t" + questionSpeed[JilIndex] + "\t" + questionSpeed[NewtonSoftIndex] + "\t" + questionSpeed[ProtobufIndex] + "\t" + questionSpeed[ServiceStackIndex]); " is 178.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("User\t" + userSpeed[JilIndex] + "\t" + userSpeed[NewtonSoftIndex] + "\t" + userSpeed[ProtobufIndex] + "\t" + userSpeed[ServiceStackIndex]); " is 158.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<Answer>\t" + answerListSpeed[JilIndex] + "\t" + answerListSpeed[NewtonSoftIndex] + "\t" + answerListSpeed[ProtobufIndex] + "\t" + answerListSpeed[ServiceStackIndex]); " is 190.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<Question>\t" + questionListSpeed[JilIndex] + "\t" + questionListSpeed[NewtonSoftIndex] + "\t" + questionListSpeed[ProtobufIndex] + "\t" + questionListSpeed[ServiceStackIndex]); " is 200.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<User>\t" + userListSpeed[JilIndex] + "\t" + userListSpeed[NewtonSoftIndex] + "\t" + userListSpeed[ProtobufIndex] + "\t" + userListSpeed[ServiceStackIndex]); " is 180.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    double[] answerDictSpeed = CompareSerializers((Dictionary<string' Answer>)MakeDictionaryObject(typeof(Answer))' TestRuns); " is 122.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'Answer>\t" + answerDictSpeed[JilIndex] + "\t" + answerDictSpeed[NewtonSoftIndex] + "\t" + answerDictSpeed[ProtobufIndex] + "\t" + answerDictSpeed[ServiceStackIndex]); " is 203.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    double[] questionDictSpeed = CompareSerializers((Dictionary<string' Question>)MakeDictionaryObject(typeof(Question))' TestRuns); " is 128.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'Question>\t" + questionDictSpeed[JilIndex] + "\t" + questionDictSpeed[NewtonSoftIndex] + "\t" + questionDictSpeed[ProtobufIndex] + "\t" + questionDictSpeed[ServiceStackIndex]); " is 213.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'User>\t" + userDictSpeed[JilIndex] + "\t" + userDictSpeed[NewtonSoftIndex] + "\t" + userDictSpeed[ProtobufIndex] + "\t" + userDictSpeed[ServiceStackIndex]); " is 193.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Answer\t" + answerSpeed[JilIndex] + "\t" + answerSpeed[NewtonSoftIndex] + "\t" + answerSpeed[ProtobufIndex] + "\t" + answerSpeed[ServiceStackIndex]); " is 168.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Question\t" + questionSpeed[JilIndex] + "\t" + questionSpeed[NewtonSoftIndex] + "\t" + questionSpeed[ProtobufIndex] + "\t" + questionSpeed[ServiceStackIndex]); " is 178.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("User\t" + userSpeed[JilIndex] + "\t" + userSpeed[NewtonSoftIndex] + "\t" + userSpeed[ProtobufIndex] + "\t" + userSpeed[ServiceStackIndex]); " is 158.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<Answer>\t" + answerListSpeed[JilIndex] + "\t" + answerListSpeed[NewtonSoftIndex] + "\t" + answerListSpeed[ProtobufIndex] + "\t" + answerListSpeed[ServiceStackIndex]); " is 190.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<Question>\t" + questionListSpeed[JilIndex] + "\t" + questionListSpeed[NewtonSoftIndex] + "\t" + questionListSpeed[ProtobufIndex] + "\t" + questionListSpeed[ServiceStackIndex]); " is 200.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("List<User>\t" + userListSpeed[JilIndex] + "\t" + userListSpeed[NewtonSoftIndex] + "\t" + userListSpeed[ProtobufIndex] + "\t" + userListSpeed[ServiceStackIndex]); " is 180.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    double[] answerDictSpeed = CompareDeserializers((Dictionary<string' Answer>)MakeDictionaryObject(typeof(Answer))' TestRuns); " is 124.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'Answer>\t" + answerDictSpeed[JilIndex] + "\t" + answerDictSpeed[NewtonSoftIndex] + "\t" + answerDictSpeed[ProtobufIndex] + "\t" + answerDictSpeed[ServiceStackIndex]); " is 203.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    double[] questionDictSpeed = CompareDeserializers((Dictionary<string' Question>)MakeDictionaryObject(typeof(Question))' TestRuns); " is 130.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'Question>\t" + questionDictSpeed[JilIndex] + "\t" + questionDictSpeed[NewtonSoftIndex] + "\t" + questionDictSpeed[ProtobufIndex] + "\t" + questionDictSpeed[ServiceStackIndex]); " is 213.
Long Statement,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The length of the statement  "                    Console.WriteLine("Dictionary<string'User>\t" + userDictSpeed[JilIndex] + "\t" + userDictSpeed[NewtonSoftIndex] + "\t" + userDictSpeed[ProtobufIndex] + "\t" + userDictSpeed[ServiceStackIndex]); " is 193.
Long Statement,Benchmark.Models,MobileFeed,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Models\Feed.cs,EqualsDynamic,The length of the statement  "                this.cross_site_interesting_questions.TrueEqualsListDynamic((IEnumerable<dynamic>)obj.cross_site_interesting_questions) && " is 122.
Long Statement,Benchmark.Models,SearchExcerpt,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Models\SearchExcerpt.cs,EqualsDynamic,The length of the statement  "                (this.last_activity_user == null && obj.last_activity_user == null || this.last_activity_user.EqualsDynamic(obj.last_activity_user)) && " is 135.
Long Statement,Benchmark.Models,TagWiki,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Models\TagWiki.cs,EqualsDynamic,The length of the statement  "                (this.last_body_editor == null && obj.last_body_editor == null || this.last_body_editor.EqualsDynamic(obj.last_body_editor)) && " is 127.
Long Statement,Benchmark.Models,TagWiki,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Models\TagWiki.cs,EqualsDynamic,The length of the statement  "                (this.last_excerpt_editor == null && obj.last_excerpt_editor == null || this.last_excerpt_editor.EqualsDynamic(obj.last_excerpt_editor)) && " is 139.
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[8];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[8];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[8];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: return (rand.Next(2) == 1);
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var len = rand.Next(500);
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: rand.Next(2) == 0
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: rand.Next(2) == 0 || depth >= 10
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: rand.Next(2) == 0 || depth >= 10
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: var len = rand.Next(20);
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,RandomValue,The following statement contains a magic number: rand.Next(2) == 0
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,Median,The following statement contains a magic number: return inOrder[inOrder.Count / 2 + 1];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,Median,The following statement contains a magic number: inOrder.Count % 2 == 1
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,Median,The following statement contains a magic number: var a = inOrder[inOrder.Count / 2];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,Median,The following statement contains a magic number: var b = inOrder[inOrder.Count / 2 + 1];
Magic Number,Benchmark,ExtensionMethods,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\ExtensionMethods.cs,Median,The following statement contains a magic number: return (a + b) / 2.0;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,ResetRand,The following statement contains a magic number: Rand = new Random(314159265);
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,MakeDictionaryObject,The following statement contains a magic number: var len = Rand.Next(30) + 20;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,MakeDictionaryObject,The following statement contains a magic number: var len = Rand.Next(30) + 20;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTest,The following statement contains a magic number: const int TestRuns = 100;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The following statement contains a magic number: System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The following statement contains a magic number: System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoSpeedTestsFor,The following statement contains a magic number: System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoQuickGraph,The following statement contains a magic number: const int runCount = 10;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,DoComparisonGraph,The following statement contains a magic number: const int TestRuns = 10000;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: Action jil =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[JilIndex] = AverageRuntime(() => jilDeserializer(json)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: Action newtonSoft =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[NewtonSoftIndex] = AverageRuntime(() => newtonSoftDeserializer(json)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: Action protobuf =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[ProtobufIndex] = AverageRuntime(() => protobufDeserializer(bytes)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: Action serviceStack =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[ServiceStackIndex] = AverageRuntime(() => serviceStackDeserializer(json)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: ret = new double[4];
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: switch (ix)                      {                          case 0: jil(); break;                          case 1: newtonSoft(); break;                          case 2: protobuf(); break;                          case 3: serviceStack(); break;                          default: throw new InvalidOperationException();                      }
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: switch (ix)                      {                          case 0: jil(); break;                          case 1: newtonSoft(); break;                          case 2: protobuf(); break;                          case 3: serviceStack(); break;                          default: throw new InvalidOperationException();                      }
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: Permutate(4)
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: var medians = new double[4];
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: medians[i] = (allForI[1] + allForI[2]) / 2.0;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: medians[i] = (allForI[1] + allForI[2]) / 2.0;
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareDeserializers,The following statement contains a magic number: i < 4
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: Action jil =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[JilIndex] = AverageRuntime(() => jilSerializer(obj)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: Action newtonSoft =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[NewtonSoftIndex] = AverageRuntime(() => newtonSoftSerializer(obj)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: Action protobuf =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[ProtobufIndex] = AverageRuntime(() => protobufSerializer(obj)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: Action serviceStack =                  () =>                  {                      System.GC.Collect(2' GCCollectionMode.Forced' blocking: true);                      ret[ServiceStackIndex] = AverageRuntime(() => serviceStackSerializer(obj)' testRuns);                  };
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: ret = new double[4];
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: switch (ix)                      {                          case 0: jil(); break;                          case 1: newtonSoft(); break;                          case 2: protobuf(); break;                          case 3: serviceStack(); break;                          default: throw new InvalidOperationException();                      }
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: switch (ix)                      {                          case 0: jil(); break;                          case 1: newtonSoft(); break;                          case 2: protobuf(); break;                          case 3: serviceStack(); break;                          default: throw new InvalidOperationException();                      }
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: Permutate(4)
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: var medians = new double[4];
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: medians[i] = allForI[allForI.Length / 2];
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: allForI.Length % 2 == 1
Magic Number,Benchmark,Program,D:\research\architectureSmells\repos\kevin-montrose_Jil\Benchmark\Program.cs,CompareSerializers,The following statement contains a magic number: i < 4
