Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,Cyclomatic complexity of the method is 17
Complex Method,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,Analyze,Cyclomatic complexity of the method is 10
Complex Method,Gentle.Provider.Firebird,FirebirdFactory,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdFactory.cs,GetDbType,Cyclomatic complexity of the method is 10
Complex Method,Gentle.Provider.Firebird,FirebirdFactory,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdFactory.cs,GetDbType,Cyclomatic complexity of the method is 16
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdAnalyzer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdAnalyzer.cs,GetFbDbType,The following statement contains a magic number: switch( blrType )  			{  				case 37:  				case 38:  					return FbDbType.VarChar;    				case 14:  				case 15:  					return FbDbType.Char;    				case 40:  				case 41:  					return FbDbType.Text;    				case 7:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.SmallInt;  					}    				case 8:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.Integer;  					}    				case 9:  				case 16:  				case 45:  					if( scale < 0 )  					{  						return FbDbType.Decimal;  					}  					else  					{  						return FbDbType.BigInt;  					}    				case 27:  				case 11:  					return FbDbType.Double;    				case 10:  					return FbDbType.Float;    				case 12:  					return FbDbType.Date;    				case 13:  					return FbDbType.Time;    				case 35:  					return FbDbType.TimeStamp;    				case 261:  					if( subType == 1 )  					{  						return FbDbType.Text;  					}  					else  					{  						return FbDbType.Binary;  					}    				default:  					throw new GentleException( Error.UnsupportedColumnType' "Unsupported column data type." );  			}
Magic Number,Gentle.Provider.Firebird,FirebirdFactory,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Common-MP-TVE3\External\Gentle.NET\Source\Gentle.Provider.Firebird\FirebirdFactory.cs,GetIdentitySelect,The following statement contains a magic number: provider.ProviderInformation.Version.Major >= 2
