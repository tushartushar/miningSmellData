Implementation smell,Namespace,Class,File,Method,Description
Long Method,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The method has 201 lines of code.
Long Method,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The method has 103 lines of code.
Long Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_10,The method has 115 lines of code.
Long Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_14,The method has 114 lines of code.
Long Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_6937_EU,The method has 362 lines of code.
Long Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,is_ISO_6937,The method has 398 lines of code.
Complex Method,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,Cyclomatic complexity of the method is 10
Complex Method,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,Cyclomatic complexity of the method is 33
Complex Method,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,Cyclomatic complexity of the method is 9
Complex Method,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,Cyclomatic complexity of the method is 9
Complex Method,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,Cyclomatic complexity of the method is 9
Complex Method,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,Cyclomatic complexity of the method is 39
Complex Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_10,Cyclomatic complexity of the method is 101
Complex Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_14,Cyclomatic complexity of the method is 101
Complex Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_6937_EU,Cyclomatic complexity of the method is 237
Complex Method,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,is_ISO_6937,Cyclomatic complexity of the method is 40
Complex Method,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,readConfiguration,Cyclomatic complexity of the method is 10
Complex Method,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,Cyclomatic complexity of the method is 8
Complex Method,TvLibrary.Channels,DVBBaseChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBBaseChannel.cs,Equals,Cyclomatic complexity of the method is 13
Complex Method,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,Cyclomatic complexity of the method is 12
Complex Method,TvLibrary.Channels,DVBSChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,Equals,Cyclomatic complexity of the method is 13
Complex Method,TvLibrary.Implementations,AnalogChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\AnalogChannel.cs,Equals,Cyclomatic complexity of the method is 12
Complex Method,similaritymetrics,Levenstein,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\Levenstein.cs,calcLevenDistance,Cyclomatic complexity of the method is 8
Long Parameter List,TvLibrary.Epg,EpgLanguageText,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Epg\EpgLanguageText.cs,EpgLanguageText,The method has 7 parameters. Parameters: language' title' description' genre' starRating' classification' parentalRating
Long Parameter List,TvLibrary.Implementations.Analog.GraphComponents,VideoQuality,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\GraphComponents\Capture.cs,VideoQuality,The method has 6 parameters. Parameters: minValue' maxValue' steppingDelta' defaultValue' manual' value
Long Parameter List,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The method has 5 parameters. Parameters: parameters' band' lof1' lof2' sw
Long Parameter List,TvLibrary.Streaming,RtspClient,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\RtspClient.cs,RtspClient,The method has 5 parameters. Parameters: isActive' ipadress' streamName' description' started
Long Statement,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The length of the statement  "                    Log.Log.Debug("PMT: program descriptor {0} is invalid"' pmt._programDescriptors.Count + pmt._programCaDescriptors.Count + 1); " is 125.
Long Statement,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The length of the statement  "                        Log.Log.Debug("PMT: elementary stream descriptor {0} for PID {1} (0x{1:x}) is invalid"' es.Descriptors.Count + es.CaDescriptors.Count + 1' es.Pid); " is 147.
Long Statement,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The length of the statement  "            byte[] tempCaPmt = new byte[4096];  // Max PMT length is 1024' and since CA PMT is a cut-down version of PMT this should be very safe. " is 134.
Long Statement,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The length of the statement  "                // 09 11 01 00 F6 A1 33 17 FF 40 20 0C 00 00 00 00 04 2C E3 F6 9F 33 11 FF 00 00 0C 00 08 00 00 02 2C E3 F6 A0 A8 21 FF 51 70 C1 03 00 00 01 4E 2C E3 " is 149.
Long Statement,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The length of the statement  "      //   Log.Log.Debug("DVBTextConverter: converted string with given lang {0}(->{1})' encoding detected: {2}. resulting string: \"{3}\""' " is 134.
Long Statement,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_6937_EU,The length of the statement  "          case 0xA4: ch = (char)0x20AC; break; //Euro sign in DVB Standard "ETSI EN 300 468" as "Character code table 00" - the only difference to ISO 6937 " is 145.
Long Statement,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The length of the statement  "      //UPGRADE_TODO: Method 'java.lang.System.currentTimeMillis' was converted to 'System.DateTime.Now' which has a different behavior. 'ms-help://MS.VSCC.2003/commoner/redir/redirect.htm?keyword="jlca1073_javalangSystemcurrentTimeMillis"' " is 234.
Long Statement,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The length of the statement  "      //UPGRADE_TODO: Method 'java.lang.System.currentTimeMillis' was converted to 'System.DateTime.Now' which has a different behavior. 'ms-help://MS.VSCC.2003/commoner/redir/redirect.htm?keyword="jlca1073_javalangSystemcurrentTimeMillis"' " is 234.
Long Statement,similaritymetrics,Levenstein,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\Levenstein.cs,getSimilarity,The length of the statement  "      //UPGRADE_WARNING: Narrowing conversions may produce unexpected results in C#. 'ms-help://MS.VSCC.2003/commoner/redir/redirect.htm?keyword="jlca1042"' " is 150.
Complex Conditional,TvLibrary.Interfaces,StreamTypeHelper,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,IsVideoStream,The conditional expression  "streamType == LogicalStreamType.Mpeg1Video ||                streamType == LogicalStreamType.Mpeg2Video ||                streamType == LogicalStreamType.Mpeg4Video ||                streamType == LogicalStreamType.AvcVideo"  is complex.
Complex Conditional,TvLibrary.Interfaces,StreamTypeHelper,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,IsAudioStream,The conditional expression  "streamType == LogicalStreamType.Mpeg1Audio ||                streamType == LogicalStreamType.Mpeg2Audio ||                streamType == LogicalStreamType.AdtsAac ||                streamType == LogicalStreamType.LatmAac ||                streamType == LogicalStreamType.Ac3 ||                streamType == LogicalStreamType.EnhancedAc3 ||                streamType == LogicalStreamType.Dts"  is complex.
Complex Conditional,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The conditional expression  "StreamTypeHelper.IsVideoStream(es.LogicalStreamType) ||                    StreamTypeHelper.IsAudioStream(es.LogicalStreamType) ||                    es.LogicalStreamType == LogicalStreamType.Subtitles ||                    es.LogicalStreamType == LogicalStreamType.Teletext"  is complex.
Complex Conditional,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The conditional expression  "descriptor.Tag != DescriptorTag.ConditionalAccess || descriptor.Length < 4 ||                descriptor.Data == null || descriptor.Data.Count < 4"  is complex.
Complex Conditional,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMmiData,The conditional expression  "tag == MmiTag.ListLast || tag == MmiTag.MenuLast ||                  tag == MmiTag.MenuMore || tag == MmiTag.ListMore"  is complex.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CreateBlankFile,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CreateBlankFile,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CheckLogPrepared,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CheckLogPrepared,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,WriteToFile,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CreateBlankFile,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CreateBlankFile,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,RotateLogs,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CheckLogPrepared,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CheckLogPrepared,The method has an empty catch block.
Empty Catch Block,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,WriteToFile,The method has an empty catch block.
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: data == null || data.Length < 12
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._sectionLength = (UInt16)(((data[1] & 0x0f) << 8) + data[2]);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._sectionLength = (UInt16)(((data[1] & 0x0f) << 8) + data[2]);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: 3 + cat._sectionLength > data.Length
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._version = (byte)((data[5] & 0x3e) >> 1);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._currentNextIndicator = (byte)(data[5] & 0x01);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._sectionNumber = data[6];
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._lastSectionNumber = data[7];
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: int offset = 8;
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: int endDescriptors = data.Length - 4;
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += d.Length + 2;
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: cat._crc = new byte[4];
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(data' offset' cat._crc' 0' 4);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Dump,The following statement contains a magic number: Log.Log.Debug("  CRC                      = 0x{0:x}{1:x}{2:x}{3:x}"' _crc[0]' _crc[1]' _crc[2]' _crc[3]);
Magic Number,TvLibrary.Interfaces,Cat,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Dump,The following statement contains a magic number: Log.Log.Debug("  CRC                      = 0x{0:x}{1:x}{2:x}{3:x}"' _crc[0]' _crc[1]' _crc[2]' _crc[3]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: data == null || data.Length < 16
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: data[6] != 0
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: data[7] != 0
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._sectionLength = (UInt16)(((data[1] & 0x0f) << 8) + data[2]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._sectionLength = (UInt16)(((data[1] & 0x0f) << 8) + data[2]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: 3 + pmt._sectionLength != data.Length
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programNumber = (UInt16)((data[3] << 8) + data[4]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programNumber = (UInt16)((data[3] << 8) + data[4]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programNumber = (UInt16)((data[3] << 8) + data[4]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._version = (byte)((data[5] & 0x3e) >> 1);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._currentNextIndicator = (byte)(data[5] & 0x01);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._sectionNumber = data[6];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._lastSectionNumber = data[7];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._pcrPid = (UInt16)(((data[8] & 0x1f) << 8) + data[9]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._pcrPid = (UInt16)(((data[8] & 0x1f) << 8) + data[9]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._pcrPid = (UInt16)(((data[8] & 0x1f) << 8) + data[9]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programInfoLength = (UInt16)(((data[10] & 0x0f) << 8) + data[11]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programInfoLength = (UInt16)(((data[10] & 0x0f) << 8) + data[11]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._programInfoLength = (UInt16)(((data[10] & 0x0f) << 8) + data[11]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: 12 + pmt._programInfoLength + 4 > data.Length
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: 12 + pmt._programInfoLength + 4 > data.Length
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: int offset = 12;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += d.Length + 2;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: int endEsData = data.Length - 4;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: es.Pid = (UInt16)(((data[offset] & 0x1f) << 8) + data[offset + 1]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += 2;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: es.EsInfoLength = (UInt16)(((data[offset] & 0x0f) << 8) + data[offset + 1]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += 2;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += d.Length + 2;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset + 4 < endEsData
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: pmt._crc = new byte[4];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(data' offset' pmt._crc' 0' 4);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset = 12 + pmt._programInfoLength;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset += 5 + es.EsInfoLength;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: byte[] tempCaPmt = new byte[4096];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[1] = _rawPmt[3];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[2] = _rawPmt[4];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[2] = _rawPmt[4];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[3] = _rawPmt[5];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[3] = _rawPmt[5];
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: int offset = 6;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[4] = (byte)((programInfoLength >> 8) & 0x0f);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[4] = (byte)((programInfoLength >> 8) & 0x0f);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[5] = (byte)(programInfoLength & 0xff);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[offset++] = (byte)((es.Pid >> 8) & 0x1f);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: offset += 2;
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,GetCaPmt,The following statement contains a magic number: tempCaPmt[esInfoLengthOffset++] = (byte)((esInfoLength >> 8) & 0x0f);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Dump,The following statement contains a magic number: Log.Log.Debug("  CRC                      = 0x{0:x}{1:x}{2:x}{3:x}"' _crc[0]' _crc[1]' _crc[2]' _crc[3]);
Magic Number,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Dump,The following statement contains a magic number: Log.Log.Debug("  CRC                      = 0x{0:x}{1:x}{2:x}{3:x}"' _crc[0]' _crc[1]' _crc[2]' _crc[3]);
Magic Number,TvLibrary.Interfaces,Descriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: offset + 2 + length >= data.Length
Magic Number,TvLibrary.Interfaces,Descriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(data' offset + 2' descData' 0' length);
Magic Number,TvLibrary.Interfaces,Descriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._rawData = new byte[2 + d._length];
Magic Number,TvLibrary.Interfaces,Descriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(data' offset' d._rawData' 0' 2 + length);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: descriptor.Tag != DescriptorTag.ConditionalAccess || descriptor.Length < 4 ||                descriptor.Data == null || descriptor.Data.Count < 4
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: descriptor.Tag != DescriptorTag.ConditionalAccess || descriptor.Length < 4 ||                descriptor.Data == null || descriptor.Data.Count < 4
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._caSystemId = (UInt16)((descriptor.Data[0] << 8) + descriptor.Data[1]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._caPid = (UInt16)(((descriptor.Data[2] & 0x1f) << 8) + descriptor.Data[3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._caPid = (UInt16)(((descriptor.Data[2] & 0x1f) << 8) + descriptor.Data[3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._caPid = (UInt16)(((descriptor.Data[2] & 0x1f) << 8) + descriptor.Data[3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: d._privateData = new byte[d._length - 4];
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(d._data' 4' d._privateData' 0' d._length - 4);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy(d._data' 4' d._privateData' 0' d._length - 4);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset] << 16) + (d._privateData[offset + 1] << 8) +                                            d._privateData[offset + 2]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset] << 16) + (d._privateData[offset + 1] << 8) +                                            d._privateData[offset + 2]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset] << 16) + (d._privateData[offset + 1] << 8) +                                            d._privateData[offset + 2]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following statement contains a magic number: tagInd == 0x14 && tagLen >= 2
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: providerId = (UInt32)(((d._privateData[0] & 0x1f) << 8) + d._privateData[1]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: offset = 13;
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: pid = (UInt16)(((d._privateData[offset] & 0x1f) << 8) + d._privateData[offset + 1]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset + 2] << 8) + d._privateData[offset + 3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset + 2] << 8) + d._privateData[offset + 3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: providerId = (UInt32)((d._privateData[offset + 2] << 8) + d._privateData[offset + 3]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: offset += 15;
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: offset + 3 < d._privateData.Length
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: d._privateData.Length >= 3 && d._privateData[2] == 0xff
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleCanalPlusDescriptor,The following statement contains a magic number: d._privateData.Length >= 3 && d._privateData[2] == 0xff
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleNagraDescriptor,The following statement contains a magic number: UInt32 providerId = (UInt32)((d._privateData[offset] << 8) + d._privateData[offset + 1]);
Magic Number,TvLibrary.Interfaces,ConditionalAccessDescriptor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleNagraDescriptor,The following statement contains a magic number: offset += 2;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMmiData,The following statement contains a magic number: mmi == null || mmi.Length < 4
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMmiData,The following statement contains a magic number: int apduLength = ReadLength(mmi' 3' out countLengthBytes);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMmiData,The following statement contains a magic number: int offset = 3 + countLengthBytes;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleEnquiry,The following statement contains a magic number: offset + 4 >= apdu.Length
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleEnquiry,The following statement contains a magic number: String prompt = System.Text.Encoding.ASCII.GetString(apdu' offset + 2' apdu.Length - offset - 2);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleEnquiry,The following statement contains a magic number: String prompt = System.Text.Encoding.ASCII.GetString(apdu' offset + 2' apdu.Length - offset - 2);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: entries.Count < 3
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: entryCount = (byte)(entries.Count - 3);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: Log.Log.Debug("  footer    = {0}"' entries[2]);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: ciMenuHandler.OnCiMenu(entries[0]' entries[1]' entries[2]' entryCount);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: Log.Log.Debug("  entry {0'-2}  = {1}"' i + 1' entries[i + 3]);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,HandleMenu,The following statement contains a magic number: ciMenuHandler.OnCiMenuChoice(i' entries[i + 3]);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadMmiTag,The following statement contains a magic number: offset + 2 >= sourceData.Length
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadMmiTag,The following statement contains a magic number: return (MmiTag)                ((sourceData[offset] << 16) | (sourceData[offset + 1] << 8) | (sourceData[offset + 2]));
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadMmiTag,The following statement contains a magic number: return (MmiTag)                ((sourceData[offset] << 16) | (sourceData[offset + 1] << 8) | (sourceData[offset + 2]));
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadMmiTag,The following statement contains a magic number: return (MmiTag)                ((sourceData[offset] << 16) | (sourceData[offset + 1] << 8) | (sourceData[offset + 2]));
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteMmiTag,The following statement contains a magic number: outputData == null || offset + 2 >= outputData.Length
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteMmiTag,The following statement contains a magic number: outputData[offset++] = (byte)(((int)tag >> 16) & 0xff);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteMmiTag,The following statement contains a magic number: outputData[offset++] = (byte)(((int)tag >> 8) & 0xff);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadLength,The following statement contains a magic number: bytesRead > 4
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadLength,The following statement contains a magic number: value = (value << 8) + sourceData[offset++];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteLength,The following statement contains a magic number: tempLength = tempLength >> 8;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteLength,The following statement contains a magic number: tempLength > 255
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteLength,The following statement contains a magic number: length > 127
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteLength,The following statement contains a magic number: length < 128
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,WriteLength,The following statement contains a magic number: length = length >> 8;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadText,The following statement contains a magic number: int length = ReadLength(sourceData' offset + 3' out lengthByteCount);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadText,The following statement contains a magic number: bytesRead = 3 + lengthByteCount;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ReadText,The following statement contains a magic number: return System.Text.Encoding.ASCII.GetString(sourceData' offset + 3 + lengthByteCount' length);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiClose,The following statement contains a magic number: apdu = new byte[6];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiClose,The following statement contains a magic number: apdu[3] = 2;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiClose,The following statement contains a magic number: apdu[3] = 2;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiClose,The following statement contains a magic number: apdu[4] = (byte)MmiCloseType.Delayed;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiClose,The following statement contains a magic number: apdu[5] = delay;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiMenuAnswer,The following statement contains a magic number: byte[] apdu = new byte[5];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiMenuAnswer,The following statement contains a magic number: apdu[3] = 1;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiMenuAnswer,The following statement contains a magic number: apdu[4] = choice;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiEnquiryAnswer,The following statement contains a magic number: byte[] length = new byte[5];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiEnquiryAnswer,The following statement contains a magic number: byte[] apdu = new byte[answerChars.Length + lengthByteCount + 4];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiEnquiryAnswer,The following statement contains a magic number: Buffer.BlockCopy(length' 0' apdu' 3' lengthByteCount);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiEnquiryAnswer,The following statement contains a magic number: apdu[3 + lengthByteCount] = (byte)responseType;
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateMmiEnquiryAnswer,The following statement contains a magic number: Buffer.BlockCopy(answerChars' 0' apdu' 4 + lengthByteCount' answerChars.Length);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateCaPmtRequest,The following statement contains a magic number: byte[] length = new byte[5];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateCaPmtRequest,The following statement contains a magic number: byte[] apdu = new byte[caPmt.Length + lengthByteCount + 3];
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateCaPmtRequest,The following statement contains a magic number: Buffer.BlockCopy(length' 0' apdu' 3' lengthByteCount);
Magic Number,TvLibrary.Interfaces,DvbMmiHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,CreateCaPmtRequest,The following statement contains a magic number: Buffer.BlockCopy(caPmt' 0' apdu' 3 + lengthByteCount' caPmt.Length);
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ToSafeAscii,The following statement contains a magic number: b >= 32 && b <= 126
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,ToSafeAscii,The following statement contains a magic number: b >= 32 && b <= 126
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,DumpBinary,The following statement contains a magic number: Log.Log.WriteFile(String.Format("{0}|{1}"' row.ToString().PadRight(55' ' ')'                                                          rowText.ToString().PadRight(16' ' ')));
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,DumpBinary,The following statement contains a magic number: Log.Log.WriteFile(String.Format("{0}|{1}"' row.ToString().PadRight(55' ' ')'                                                          rowText.ToString().PadRight(16' ' ')));
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,DumpBinary,The following statement contains a magic number: Log.Log.WriteFile(String.Format("{0}|{1}"' row.ToString().PadRight(55' ' ')'                                                  rowText.ToString().PadRight(16' ' ')));
Magic Number,TvLibrary.Interfaces,DVB_MMI,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,DumpBinary,The following statement contains a magic number: Log.Log.WriteFile(String.Format("{0}|{1}"' row.ToString().PadRight(55' ' ')'                                                  rowText.ToString().PadRight(16' ' ')));
Magic Number,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following statement contains a magic number: encoding = 20269;
Magic Number,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following statement contains a magic number: encoding = 28595;
Magic Number,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following statement contains a magic number: encoding == 20269
Magic Number,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following statement contains a magic number: encoding == 20269
Magic Number,TvLibrary.Epg,Languages,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Epg\Languages.cs,GetLanguageFromCode,The following statement contains a magic number: code.Length > 3
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,Configuration,The following statement contains a magic number: _customQualityValue = 50;
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,Configuration,The following statement contains a magic number: _customPeakQualityValue = 75;
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,readConfiguration,The following statement contains a magic number: tempValue < 0 || tempValue > 2
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,readConfiguration,The following statement contains a magic number: tempValue < 1 || tempValue > 6
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,readConfiguration,The following statement contains a magic number: tempValue < 0 || tempValue > 2
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,readConfiguration,The following statement contains a magic number: tempValue < 1 || tempValue > 6
Magic Number,TvLibrary.Implementations.Analog,Configuration,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Analog\Configuration.cs,writeConfiguration,The following statement contains a magic number: writer.IndentChar = (char)9;
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 100 + ((carrierFrequency - 651000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 100 + ((carrierFrequency - 651000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 100 + ((carrierFrequency - 651000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 651000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 23 + ((carrierFrequency - 219000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 23 + ((carrierFrequency - 219000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 23 + ((carrierFrequency - 219000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 219000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 7 + ((carrierFrequency - 177000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 7 + ((carrierFrequency - 177000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 7 + ((carrierFrequency - 177000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 177000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 14 + ((carrierFrequency - 123000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 14 + ((carrierFrequency - 123000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 14 + ((carrierFrequency - 123000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 123000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 95 + ((carrierFrequency - 93000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 95 + ((carrierFrequency - 93000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 95 + ((carrierFrequency - 93000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 93000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 5 + ((carrierFrequency - 79000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 5 + ((carrierFrequency - 79000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 5 + ((carrierFrequency - 79000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 79000
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 2 + ((carrierFrequency - 57000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 2 + ((carrierFrequency - 57000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: return 2 + ((carrierFrequency - 57000) / 6000);
Magic Number,TvLibrary.Channels,ATSCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\ATSCChannel.cs,GetPhysicalChannelFromFrequency,The following statement contains a magic number: carrierFrequency >= 57000
Magic Number,TvLibrary.Channels,DVBBaseChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBBaseChannel.cs,DVBBaseChannel,The following statement contains a magic number: _lcn = 10000;
Magic Number,TvLibrary.Channels,DVBCChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBCChannel.cs,DVBCChannel,The following statement contains a magic number: SymbolRate = 6875;
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetAntennaNr,The following statement contains a magic number: switch (channel.DisEqc)        {          case DisEqcType.None:            disEqcPort = 0; //no diseqc            break;          case DisEqcType.SimpleA: //simple A            disEqcPort = 1;            break;          case DisEqcType.SimpleB: //simple B            disEqcPort = 2;            break;          case DisEqcType.Level1AA: //Level 1 A/A            disEqcPort = 1;            break;          case DisEqcType.Level1AB: //Level 1 A/B            disEqcPort = 2;            break;          case DisEqcType.Level1BA: //Level 1 B/A            disEqcPort = 3;            break;          case DisEqcType.Level1BB: //Level 1 B/B            disEqcPort = 4;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetAntennaNr,The following statement contains a magic number: switch (channel.DisEqc)        {          case DisEqcType.None:            disEqcPort = 0; //no diseqc            break;          case DisEqcType.SimpleA: //simple A            disEqcPort = 1;            break;          case DisEqcType.SimpleB: //simple B            disEqcPort = 2;            break;          case DisEqcType.Level1AA: //Level 1 A/A            disEqcPort = 1;            break;          case DisEqcType.Level1AB: //Level 1 A/B            disEqcPort = 2;            break;          case DisEqcType.Level1BA: //Level 1 B/A            disEqcPort = 3;            break;          case DisEqcType.Level1BB: //Level 1 B/B            disEqcPort = 4;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetAntennaNr,The following statement contains a magic number: switch (channel.DisEqc)        {          case DisEqcType.None:            disEqcPort = 0; //no diseqc            break;          case DisEqcType.SimpleA: //simple A            disEqcPort = 1;            break;          case DisEqcType.SimpleB: //simple B            disEqcPort = 2;            break;          case DisEqcType.Level1AA: //Level 1 A/A            disEqcPort = 1;            break;          case DisEqcType.Level1AB: //Level 1 A/B            disEqcPort = 2;            break;          case DisEqcType.Level1BA: //Level 1 B/A            disEqcPort = 3;            break;          case DisEqcType.Level1BB: //Level 1 B/B            disEqcPort = 4;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetAntennaNr,The following statement contains a magic number: switch (channel.DisEqc)        {          case DisEqcType.None:            disEqcPort = 0; //no diseqc            break;          case DisEqcType.SimpleA: //simple A            disEqcPort = 1;            break;          case DisEqcType.SimpleB: //simple B            disEqcPort = 2;            break;          case DisEqcType.Level1AA: //Level 1 A/A            disEqcPort = 1;            break;          case DisEqcType.Level1AB: //Level 1 A/B            disEqcPort = 2;            break;          case DisEqcType.Level1BA: //Level 1 B/A            disEqcPort = 3;            break;          case DisEqcType.Level1BB: //Level 1 B/B            disEqcPort = 4;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,IsHiBand,The following statement contains a magic number: return channel.Frequency >= (sw * 1000);
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following statement contains a magic number: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Magic Number,TvLibrary.Channels,DVBTChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBTChannel.cs,DVBTChannel,The following statement contains a magic number: BandWidth = 8;
Magic Number,TvLibrary.Implementations,RadioWebStreamChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\RadioWebStreamChannel.cs,RadioWebStreamChannel,The following statement contains a magic number: _country = collection.GetTunerCountryFromID(31);
Magic Number,TvLibrary.Implementations,AnalogChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\AnalogChannel.cs,AnalogChannel,The following statement contains a magic number: _country = collection.GetTunerCountryFromID(31);
Magic Number,TvLibrary.Implementations,AnalogChannel,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\AnalogChannel.cs,AnalogChannel,The following statement contains a magic number: _channelNumber = 4;
Magic Number,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,RotateLogs,The following statement contains a magic number: List<string> physicalLogFiles = new List<string>(3);
Magic Number,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CheckLogPrepared,The following statement contains a magic number: logFi.Length > _maxLogSizeMb * 1000 * 1000
Magic Number,TvLibrary.Log,FileLogger,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\FileLogger.cs,CheckLogPrepared,The following statement contains a magic number: logFi.Length > _maxLogSizeMb * 1000 * 1000
Magic Number,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,RotateLogs,The following statement contains a magic number: List<string> physicalLogFiles = new List<string>(3);
Magic Number,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CheckLogPrepared,The following statement contains a magic number: logFi.Length > _maxLogSizeMb * 1000 * 1000
Magic Number,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,CheckLogPrepared,The following statement contains a magic number: logFi.Length > _maxLogSizeMb * 1000 * 1000
Magic Number,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The following statement contains a magic number: long timeBefore = (DateTime.Now.Ticks - 621355968000000000) / 10000;
Magic Number,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The following statement contains a magic number: long timeBefore = (DateTime.Now.Ticks - 621355968000000000) / 10000;
Magic Number,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The following statement contains a magic number: long timeAfter = (DateTime.Now.Ticks - 621355968000000000) / 10000;
Magic Number,api,AbstractStringMetric,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\AbstractStringMetric.cs,getSimilarityTimingActual,The following statement contains a magic number: long timeAfter = (DateTime.Now.Ticks - 621355968000000000) / 10000;
Magic Number,similaritymetrics,Levenstein,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Simmetrics\Levenstein.cs,getSimilarityTimingEstimated,The following statement contains a magic number: return str1Length * str2Length * 0.00018F;
Missing Default,TvLibrary.Interfaces,Pmt,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbConditionalAccess.cs,Decode,The following switch statement is missing a default case: switch (d.Tag)                              {                                  case DescriptorTag.Mpeg4Video:                                      es.LogicalStreamType = LogicalStreamType.Mpeg4Video;                                      break;                                  case DescriptorTag.AvcVideo:                                      es.LogicalStreamType = LogicalStreamType.AvcVideo;                                      break;                                  case DescriptorTag.Mpeg2AacAudio:                                      es.LogicalStreamType = LogicalStreamType.AdtsAac;                                      break;                                  case DescriptorTag.Mpeg4Audio:                                  case DescriptorTag.Aac:                                      es.LogicalStreamType = LogicalStreamType.LatmAac;                                      es.LogicalStreamType = LogicalStreamType.LatmAac;                                      break;                                  case DescriptorTag.Ac3:         // DVB                                  case DescriptorTag.Ac3Audio:    // ATSC                                      es.LogicalStreamType = LogicalStreamType.Ac3;                                      break;                                  case DescriptorTag.EnhancedAc3: // DVB                                  case DescriptorTag.Eac3:        // ATSC                                      es.LogicalStreamType = LogicalStreamType.EnhancedAc3;                                      break;                                  case DescriptorTag.Dts:                                      es.LogicalStreamType = LogicalStreamType.Dts;                                      break;                                  case DescriptorTag.Subtitling:                                      es.LogicalStreamType = LogicalStreamType.Subtitles;                                      break;                                  case DescriptorTag.Teletext:                                  case DescriptorTag.VbiTeletext:                                      es.LogicalStreamType = LogicalStreamType.Teletext;                                      break;                              }
Missing Default,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following switch statement is missing a default case: switch (c)            {              case 0x00: return "";              case 0x01: encoding = 28595; /* ISO-8859-5  */  break;              case 0x02: encoding = 28596; /* ISO-8859-6  */  break;              case 0x03: encoding = 28597; /* ISO-8859-7  */  break;              case 0x04: encoding = 28598; /* ISO-8859-8  */  break;              case 0x05: encoding = 28599; /* ISO-8859-9  */  break;              case 0x06: encoding = 28600; /* ISO-8859-10 */  break;              case 0x07: encoding = 874;   /* ISO-8859-11 */  break;              //case 0x08: encoding = 28602; /* ISO-8859-12 doesn't exist */  break;              case 0x09: encoding = 28603; /* ISO-8859-13 */  break;              case 0x0A: encoding = 28604; /* ISO-8859-14 */  break;              case 0x0B: encoding = 28605; /* ISO-8859-15 */  break;              case 0x10:                {                  pos = 3;                  c = Marshal.ReadByte(ptr' 2);                  switch (c)                  {                    case 0x01: encoding = 28591; /* ISO-8859-1  */  break;                    case 0x02: encoding = 28592; /* ISO-8859-2  */  break;                    case 0x03: encoding = 28593; /* ISO-8859-3  */  break;                    case 0x04: encoding = 28594; /* ISO-8859-4  */  break;                    case 0x05: encoding = 28595; /* ISO-8859-5  */  break;                    case 0x06: encoding = 28596; /* ISO-8859-6  */  break;                    case 0x07: encoding = 28597; /* ISO-8859-7  */  break;                    case 0x08: encoding = 28598; /* ISO-8859-8  */  break;                    case 0x09: encoding = 28599; /* ISO-8859-9  */  break;                    case 0x0A: encoding = 28600; /* ISO-8859-10 */  break;                    case 0x0B: encoding = 874;   /* ISO-8859-11 */  break;                    //case 0x0C: encoding = 28602; /* ISO-8859-12 doesn't exist */  break;                    case 0x0D: encoding = 28603; /* ISO-8859-13 */  break;                    case 0x0E: encoding = 28604; /* ISO-8859-14 */  break;                    case 0x0F: encoding = 28605; /* ISO-8859-15 */  break;                  }                  break;                }              case 0x11: encoding = 1200;  /* ISO/IEC 10646-1 */ break;              case 0x12: encoding = 949;   /* KSC5601-1987   */  break;              case 0x13: encoding = 20936; /* GB-2312-1980   */  break;              case 0x14: encoding = 950;   /* Big5 */            break;              case 0x15: encoding = 65001; /* UTF-8 */           break;            }
Missing Default,TvLibrary.Interfaces,DvbTextConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\DvbTextConverter.cs,Convert,The following switch statement is missing a default case: switch (c)                  {                    case 0x01: encoding = 28591; /* ISO-8859-1  */  break;                    case 0x02: encoding = 28592; /* ISO-8859-2  */  break;                    case 0x03: encoding = 28593; /* ISO-8859-3  */  break;                    case 0x04: encoding = 28594; /* ISO-8859-4  */  break;                    case 0x05: encoding = 28595; /* ISO-8859-5  */  break;                    case 0x06: encoding = 28596; /* ISO-8859-6  */  break;                    case 0x07: encoding = 28597; /* ISO-8859-7  */  break;                    case 0x08: encoding = 28598; /* ISO-8859-8  */  break;                    case 0x09: encoding = 28599; /* ISO-8859-9  */  break;                    case 0x0A: encoding = 28600; /* ISO-8859-10 */  break;                    case 0x0B: encoding = 874;   /* ISO-8859-11 */  break;                    //case 0x0C: encoding = 28602; /* ISO-8859-12 doesn't exist */  break;                    case 0x0D: encoding = 28603; /* ISO-8859-13 */  break;                    case 0x0E: encoding = 28604; /* ISO-8859-14 */  break;                    case 0x0F: encoding = 28605; /* ISO-8859-15 */  break;                  }
Missing Default,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_10,The following switch statement is missing a default case: switch(b)            {              case 0xA0: result += (char)0x00A0; break; //NO-BREAK SPACE              case 0xA1: result += (char)0x0104; break; //LATIN CAPITAL LETTER A WITH OGONEK              case 0xA2: result += (char)0x0112; break; //LATIN CAPITAL LETTER E WITH MACRON              case 0xA3: result += (char)0x0122; break; //LATIN CAPITAL LETTER G WITH CEDILLA              case 0xA4: result += (char)0x012A; break; //LATIN CAPITAL LETTER I WITH MACRON              case 0xA5: result += (char)0x0128; break; //LATIN CAPITAL LETTER I WITH TILDE              case 0xA6: result += (char)0x0136; break; //LATIN CAPITAL LETTER K WITH CEDILLA              case 0xA7: result += (char)0x00A7; break; //SECTION SIGN              case 0xA8: result += (char)0x013B; break; //LATIN CAPITAL LETTER L WITH CEDILLA              case 0xA9: result += (char)0x0110; break; //LATIN CAPITAL LETTER D WITH STROKE              case 0xAA: result += (char)0x0160; break; //LATIN CAPITAL LETTER S WITH CARON              case 0xAB: result += (char)0x0166; break; //LATIN CAPITAL LETTER T WITH STROKE              case 0xAC: result += (char)0x017D; break; //LATIN CAPITAL LETTER Z WITH CARON              case 0xAD: result += (char)0x00AD; break; //SOFT HYPHEN              case 0xAE: result += (char)0x016A; break; //LATIN CAPITAL LETTER U WITH MACRON              case 0xAF: result += (char)0x014A; break; //LATIN CAPITAL LETTER ENG              case 0xB0: result += (char)0x00B0; break; //DEGREE SIGN              case 0xB1: result += (char)0x0105; break; //LATIN SMALL LETTER A WITH OGONEK              case 0xB2: result += (char)0x0113; break; //LATIN SMALL LETTER E WITH MACRON              case 0xB3: result += (char)0x0123; break; //LATIN SMALL LETTER G WITH CEDILLA              case 0xB4: result += (char)0x012B; break; //LATIN SMALL LETTER I WITH MACRON              case 0xB5: result += (char)0x0129; break; //LATIN SMALL LETTER I WITH TILDE              case 0xB6: result += (char)0x0137; break; //LATIN SMALL LETTER K WITH CEDILLA              case 0xB7: result += (char)0x00B7; break; //MIDDLE DOT              case 0xB8: result += (char)0x013C; break; //LATIN SMALL LETTER L WITH CEDILLA              case 0xB9: result += (char)0x0111; break; //LATIN SMALL LETTER D WITH STROKE              case 0xBA: result += (char)0x0161; break; //LATIN SMALL LETTER S WITH CARON              case 0xBB: result += (char)0x0167; break; //LATIN SMALL LETTER T WITH STROKE              case 0xBC: result += (char)0x017E; break; //LATIN SMALL LETTER Z WITH CARON              case 0xBD: result += (char)0x2015; break; //HORIZONTAL BAR              case 0xBE: result += (char)0x016B; break; //LATIN SMALL LETTER U WITH MACRON              case 0xBF: result += (char)0x014B; break; //LATIN SMALL LETTER ENG              case 0xC0: result += (char)0x0100; break; //LATIN CAPITAL LETTER A WITH MACRON              case 0xC1: result += (char)0x00C1; break; //LATIN CAPITAL LETTER A WITH ACUTE              case 0xC2: result += (char)0x00C2; break; //LATIN CAPITAL LETTER A WITH CIRCUMFLEX              case 0xC3: result += (char)0x00C3; break; //LATIN CAPITAL LETTER A WITH TILDE              case 0xC4: result += (char)0x00C4; break; //LATIN CAPITAL LETTER A WITH DIAERESIS              case 0xC5: result += (char)0x00C5; break; //LATIN CAPITAL LETTER A WITH RING ABOVE              case 0xC6: result += (char)0x00C6; break; //LATIN CAPITAL LETTER AE              case 0xC7: result += (char)0x012E; break; //LATIN CAPITAL LETTER I WITH OGONEK              case 0xC8: result += (char)0x010C; break; //LATIN CAPITAL LETTER C WITH CARON              case 0xC9: result += (char)0x00C9; break; //LATIN CAPITAL LETTER E WITH ACUTE              case 0xCA: result += (char)0x0118; break; //LATIN CAPITAL LETTER E WITH OGONEK              case 0xCB: result += (char)0x00CB; break; //LATIN CAPITAL LETTER E WITH DIAERESIS              case 0xCC: result += (char)0x0116; break; //LATIN CAPITAL LETTER E WITH DOT ABOVE              case 0xCD: result += (char)0x00CD; break; //LATIN CAPITAL LETTER I WITH ACUTE              case 0xCE: result += (char)0x00CE; break; //LATIN CAPITAL LETTER I WITH CIRCUMFLEX              case 0xCF: result += (char)0x00CF; break; //LATIN CAPITAL LETTER I WITH DIAERESIS              case 0xD0: result += (char)0x00D0; break; //LATIN CAPITAL LETTER ETH (Icelandic)              case 0xD1: result += (char)0x0145; break; //LATIN CAPITAL LETTER N WITH CEDILLA              case 0xD2: result += (char)0x014C; break; //LATIN CAPITAL LETTER O WITH MACRON              case 0xD3: result += (char)0x00D3; break; //LATIN CAPITAL LETTER O WITH ACUTE              case 0xD4: result += (char)0x00D4; break; //LATIN CAPITAL LETTER O WITH CIRCUMFLEX              case 0xD5: result += (char)0x00D5; break; //LATIN CAPITAL LETTER O WITH TILDE              case 0xD6: result += (char)0x00D6; break; //LATIN CAPITAL LETTER O WITH DIAERESIS              case 0xD7: result += (char)0x0168; break; //LATIN CAPITAL LETTER U WITH TILDE              case 0xD8: result += (char)0x00D8; break; //LATIN CAPITAL LETTER O WITH STROKE              case 0xD9: result += (char)0x0172; break; //LATIN CAPITAL LETTER U WITH OGONEK              case 0xDA: result += (char)0x00DA; break; //LATIN CAPITAL LETTER U WITH ACUTE              case 0xDB: result += (char)0x00DB; break; //LATIN CAPITAL LETTER U WITH CIRCUMFLEX              case 0xDC: result += (char)0x00DC; break; //LATIN CAPITAL LETTER U WITH DIAERESIS              case 0xDD: result += (char)0x00DD; break; //LATIN CAPITAL LETTER Y WITH ACUTE              case 0xDE: result += (char)0x00DE; break; //LATIN CAPITAL LETTER THORN (Icelandic)              case 0xDF: result += (char)0x00DF; break; //LATIN SMALL LETTER SHARP S (German)              case 0xE0: result += (char)0x0101; break; //LATIN SMALL LETTER A WITH MACRON              case 0xE1: result += (char)0x00E1; break; //LATIN SMALL LETTER A WITH ACUTE              case 0xE2: result += (char)0x00E2; break; //LATIN SMALL LETTER A WITH CIRCUMFLEX              case 0xE3: result += (char)0x00E3; break; //LATIN SMALL LETTER A WITH TILDE              case 0xE4: result += (char)0x00E4; break; //LATIN SMALL LETTER A WITH DIAERESIS              case 0xE5: result += (char)0x00E5; break; //LATIN SMALL LETTER A WITH RING ABOVE              case 0xE6: result += (char)0x00E6; break; //LATIN SMALL LETTER AE              case 0xE7: result += (char)0x012F; break; //LATIN SMALL LETTER I WITH OGONEK              case 0xE8: result += (char)0x010D; break; //LATIN SMALL LETTER C WITH CARON              case 0xE9: result += (char)0x00E9; break; //LATIN SMALL LETTER E WITH ACUTE              case 0xEA: result += (char)0x0119; break; //LATIN SMALL LETTER E WITH OGONEK              case 0xEB: result += (char)0x00EB; break; //LATIN SMALL LETTER E WITH DIAERESIS              case 0xEC: result += (char)0x0117; break; //LATIN SMALL LETTER E WITH DOT ABOVE              case 0xED: result += (char)0x00ED; break; //LATIN SMALL LETTER I WITH ACUTE              case 0xEE: result += (char)0x00EE; break; //LATIN SMALL LETTER I WITH CIRCUMFLEX              case 0xEF: result += (char)0x00EF; break; //LATIN SMALL LETTER I WITH DIAERESIS              case 0xF0: result += (char)0x00F0; break; //LATIN SMALL LETTER ETH (Icelandic)              case 0xF1: result += (char)0x0146; break; //LATIN SMALL LETTER N WITH CEDILLA              case 0xF2: result += (char)0x014D; break; //LATIN SMALL LETTER O WITH MACRON              case 0xF3: result += (char)0x00F3; break; //LATIN SMALL LETTER O WITH ACUTE              case 0xF4: result += (char)0x00F4; break; //LATIN SMALL LETTER O WITH CIRCUMFLEX              case 0xF5: result += (char)0x00F5; break; //LATIN SMALL LETTER O WITH TILDE              case 0xF6: result += (char)0x00F6; break; //LATIN SMALL LETTER O WITH DIAERESIS              case 0xF7: result += (char)0x0169; break; //LATIN SMALL LETTER U WITH TILDE              case 0xF8: result += (char)0x00F8; break; //LATIN SMALL LETTER O WITH STROKE              case 0xF9: result += (char)0x0173; break; //LATIN SMALL LETTER U WITH OGONEK              case 0xFA: result += (char)0x00FA; break; //LATIN SMALL LETTER U WITH ACUTE              case 0xFB: result += (char)0x00FB; break; //LATIN SMALL LETTER U WITH CIRCUMFLEX              case 0xFC: result += (char)0x00FC; break; //LATIN SMALL LETTER U WITH DIAERESIS              case 0xFD: result += (char)0x00FD; break; //LATIN SMALL LETTER Y WITH ACUTE              case 0xFE: result += (char)0x00FE; break; //LATIN SMALL LETTER THORN (Icelandic)              case 0xFF: result += (char)0x0138; break; //LATIN SMALL LETTER KRA            }
Missing Default,TvLibrary.Interfaces,ISOTextDecoder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\ISOTextDecoder.cs,from_ISO_8859_14,The following switch statement is missing a default case: switch (b)            {              case 0xA0: result += (char)0x00A0; break; //NO-BREAK SPACE              case 0xA1: result += (char)0x1E02; break; //LATIN CAPITAL LETTER B WITH DOT ABOVE              case 0xA2: result += (char)0x1E03; break; //LATIN SMALL LETTER B WITH DOT ABOVE              case 0xA3: result += (char)0x00A3; break; //POUND SIGN              case 0xA4: result += (char)0x010A; break; //LATIN CAPITAL LETTER C WITH DOT ABOVE              case 0xA5: result += (char)0x010B; break; //LATIN SMALL LETTER C WITH DOT ABOVE              case 0xA6: result += (char)0x1E0A; break; //LATIN CAPITAL LETTER D WITH DOT ABOVE              case 0xA7: result += (char)0x00A7; break; //SECTION SIGN              case 0xA8: result += (char)0x1E80; break; //LATIN CAPITAL LETTER W WITH GRAVE              case 0xA9: result += (char)0x00A9; break; //COPYRIGHT SIGN              case 0xAA: result += (char)0x1E82; break; //LATIN CAPITAL LETTER W WITH ACUTE              case 0xAB: result += (char)0x1E0B; break; //LATIN SMALL LETTER D WITH DOT ABOVE              case 0xAC: result += (char)0x1EF2; break; //LATIN CAPITAL LETTER Y WITH GRAVE              case 0xAD: result += (char)0x00AD; break; //SOFT HYPHEN              case 0xAE: result += (char)0x00AE; break; //REGISTERED SIGN              case 0xAF: result += (char)0x0178; break; //LATIN CAPITAL LETTER Y WITH DIAERESIS              case 0xB0: result += (char)0x1E1E; break; //LATIN CAPITAL LETTER F WITH DOT ABOVE              case 0xB1: result += (char)0x1E1F; break; //LATIN SMALL LETTER F WITH DOT ABOVE              case 0xB2: result += (char)0x0120; break; //LATIN CAPITAL LETTER G WITH DOT ABOVE              case 0xB3: result += (char)0x0121; break; //LATIN SMALL LETTER G WITH DOT ABOVE              case 0xB4: result += (char)0x1E40; break; //LATIN CAPITAL LETTER M WITH DOT ABOVE              case 0xB5: result += (char)0x1E41; break; //LATIN SMALL LETTER M WITH DOT ABOVE              case 0xB6: result += (char)0x00B6; break; //PILCROW SIGN              case 0xB7: result += (char)0x1E56; break; //LATIN CAPITAL LETTER P WITH DOT ABOVE              case 0xB8: result += (char)0x1E81; break; //LATIN SMALL LETTER W WITH GRAVE              case 0xB9: result += (char)0x1E57; break; //LATIN SMALL LETTER P WITH DOT ABOVE              case 0xBA: result += (char)0x1E83; break; //LATIN SMALL LETTER W WITH ACUTE              case 0xBB: result += (char)0x1E60; break; //LATIN CAPITAL LETTER S WITH DOT ABOVE              case 0xBC: result += (char)0x1EF3; break; //LATIN SMALL LETTER Y WITH GRAVE              case 0xBD: result += (char)0x1E84; break; //LATIN CAPITAL LETTER W WITH DIAERESIS              case 0xBE: result += (char)0x1E85; break; //LATIN SMALL LETTER W WITH DIAERESIS              case 0xBF: result += (char)0x1E61; break; //LATIN SMALL LETTER S WITH DOT ABOVE              case 0xC0: result += (char)0x00C0; break; //LATIN CAPITAL LETTER A WITH GRAVE              case 0xC1: result += (char)0x00C1; break; //LATIN CAPITAL LETTER A WITH ACUTE              case 0xC2: result += (char)0x00C2; break; //LATIN CAPITAL LETTER A WITH CIRCUMFLEX              case 0xC3: result += (char)0x00C3; break; //LATIN CAPITAL LETTER A WITH TILDE              case 0xC4: result += (char)0x00C4; break; //LATIN CAPITAL LETTER A WITH DIAERESIS              case 0xC5: result += (char)0x00C5; break; //LATIN CAPITAL LETTER A WITH RING ABOVE              case 0xC6: result += (char)0x00C6; break; //LATIN CAPITAL LETTER AE              case 0xC7: result += (char)0x00C7; break; //LATIN CAPITAL LETTER C WITH CEDILLA              case 0xC8: result += (char)0x00C8; break; //LATIN CAPITAL LETTER E WITH GRAVE              case 0xC9: result += (char)0x00C9; break; //LATIN CAPITAL LETTER E WITH ACUTE              case 0xCA: result += (char)0x00CA; break; //LATIN CAPITAL LETTER E WITH CIRCUMFLEX              case 0xCB: result += (char)0x00CB; break; //LATIN CAPITAL LETTER E WITH DIAERESIS              case 0xCC: result += (char)0x00CC; break; //LATIN CAPITAL LETTER I WITH GRAVE              case 0xCD: result += (char)0x00CD; break; //LATIN CAPITAL LETTER I WITH ACUTE              case 0xCE: result += (char)0x00CE; break; //LATIN CAPITAL LETTER I WITH CIRCUMFLEX              case 0xCF: result += (char)0x00CF; break; //LATIN CAPITAL LETTER I WITH DIAERESIS              case 0xD0: result += (char)0x0174; break; //LATIN CAPITAL LETTER W WITH CIRCUMFLEX              case 0xD1: result += (char)0x00D1; break; //LATIN CAPITAL LETTER N WITH TILDE              case 0xD2: result += (char)0x00D2; break; //LATIN CAPITAL LETTER O WITH GRAVE              case 0xD3: result += (char)0x00D3; break; //LATIN CAPITAL LETTER O WITH ACUTE              case 0xD4: result += (char)0x00D4; break; //LATIN CAPITAL LETTER O WITH CIRCUMFLEX              case 0xD5: result += (char)0x00D5; break; //LATIN CAPITAL LETTER O WITH TILDE              case 0xD6: result += (char)0x00D6; break; //LATIN CAPITAL LETTER O WITH DIAERESIS              case 0xD7: result += (char)0x1E6A; break; //LATIN CAPITAL LETTER T WITH DOT ABOVE              case 0xD8: result += (char)0x00D8; break; //LATIN CAPITAL LETTER O WITH STROKE              case 0xD9: result += (char)0x00D9; break; //LATIN CAPITAL LETTER U WITH GRAVE              case 0xDA: result += (char)0x00DA; break; //LATIN CAPITAL LETTER U WITH ACUTE              case 0xDB: result += (char)0x00DB; break; //LATIN CAPITAL LETTER U WITH CIRCUMFLEX              case 0xDC: result += (char)0x00DC; break; //LATIN CAPITAL LETTER U WITH DIAERESIS              case 0xDD: result += (char)0x00DD; break; //LATIN CAPITAL LETTER Y WITH ACUTE              case 0xDE: result += (char)0x0176; break; //LATIN CAPITAL LETTER Y WITH CIRCUMFLEX              case 0xDF: result += (char)0x00DF; break; //LATIN SMALL LETTER SHARP S              case 0xE0: result += (char)0x00E0; break; //LATIN SMALL LETTER A WITH GRAVE              case 0xE1: result += (char)0x00E1; break; //LATIN SMALL LETTER A WITH ACUTE              case 0xE2: result += (char)0x00E2; break; //LATIN SMALL LETTER A WITH CIRCUMFLEX              case 0xE3: result += (char)0x00E3; break; //LATIN SMALL LETTER A WITH TILDE              case 0xE4: result += (char)0x00E4; break; //LATIN SMALL LETTER A WITH DIAERESIS              case 0xE5: result += (char)0x00E5; break; //LATIN SMALL LETTER A WITH RING ABOVE              case 0xE6: result += (char)0x00E6; break; //LATIN SMALL LETTER AE              case 0xE7: result += (char)0x00E7; break; //LATIN SMALL LETTER C WITH CEDILLA              case 0xE8: result += (char)0x00E8; break; //LATIN SMALL LETTER E WITH GRAVE              case 0xE9: result += (char)0x00E9; break; //LATIN SMALL LETTER E WITH ACUTE              case 0xEA: result += (char)0x00EA; break; //LATIN SMALL LETTER E WITH CIRCUMFLEX              case 0xEB: result += (char)0x00EB; break; //LATIN SMALL LETTER E WITH DIAERESIS              case 0xEC: result += (char)0x00EC; break; //LATIN SMALL LETTER I WITH GRAVE              case 0xED: result += (char)0x00ED; break; //LATIN SMALL LETTER I WITH ACUTE              case 0xEE: result += (char)0x00EE; break; //LATIN SMALL LETTER I WITH CIRCUMFLEX              case 0xEF: result += (char)0x00EF; break; //LATIN SMALL LETTER I WITH DIAERESIS              case 0xF0: result += (char)0x0175; break; //LATIN SMALL LETTER W WITH CIRCUMFLEX              case 0xF1: result += (char)0x00F1; break; //LATIN SMALL LETTER N WITH TILDE              case 0xF2: result += (char)0x00F2; break; //LATIN SMALL LETTER O WITH GRAVE              case 0xF3: result += (char)0x00F3; break; //LATIN SMALL LETTER O WITH ACUTE              case 0xF4: result += (char)0x00F4; break; //LATIN SMALL LETTER O WITH CIRCUMFLEX              case 0xF5: result += (char)0x00F5; break; //LATIN SMALL LETTER O WITH TILDE              case 0xF6: result += (char)0x00F6; break; //LATIN SMALL LETTER O WITH DIAERESIS              case 0xF7: result += (char)0x1E6B; break; //LATIN SMALL LETTER T WITH DOT ABOVE              case 0xF8: result += (char)0x00F8; break; //LATIN SMALL LETTER O WITH STROKE              case 0xF9: result += (char)0x00F9; break; //LATIN SMALL LETTER U WITH GRAVE              case 0xFA: result += (char)0x00FA; break; //LATIN SMALL LETTER U WITH ACUTE              case 0xFB: result += (char)0x00FB; break; //LATIN SMALL LETTER U WITH CIRCUMFLEX              case 0xFC: result += (char)0x00FC; break; //LATIN SMALL LETTER U WITH DIAERESIS              case 0xFD: result += (char)0x00FD; break; //LATIN SMALL LETTER Y WITH ACUTE              case 0xFE: result += (char)0x0177; break; //LATIN SMALL LETTER Y WITH CIRCUMFLEX              case 0xFF: result += (char)0x00FF; break; //LATIN SMALL LETTER Y WITH DIAERESIS            }
Missing Default,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetAntennaNr,The following switch statement is missing a default case: switch (channel.DisEqc)        {          case DisEqcType.None:            disEqcPort = 0; //no diseqc            break;          case DisEqcType.SimpleA: //simple A            disEqcPort = 1;            break;          case DisEqcType.SimpleB: //simple B            disEqcPort = 2;            break;          case DisEqcType.Level1AA: //Level 1 A/A            disEqcPort = 1;            break;          case DisEqcType.Level1AB: //Level 1 A/B            disEqcPort = 2;            break;          case DisEqcType.Level1BA: //Level 1 B/A            disEqcPort = 3;            break;          case DisEqcType.Level1BB: //Level 1 B/B            disEqcPort = 4;            break;        }
Missing Default,TvLibrary.Channels,BandTypeConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Implementations\Channels\DVBSChannel.cs,GetDefaultLnbSetup,The following switch statement is missing a default case: switch (band)        {          case BandType.Universal:            lof1 = 9750;            lof2 = 10600;            sw = 11700;            break;          case BandType.Circular:            lof1 = 10750;            lof2 = 0;            sw = 0;            break;          case BandType.CBand:            lof1 = 5150;            lof2 = 0;            sw = 0;            break;          case BandType.NaBandStackedDpKuHi:            lof1 = 11250;            lof2 = 14350;            sw = 0;            break;          case BandType.NaBandStackedDpKuLo:            lof1 = 10750;            lof2 = 13850;            sw = 0;            break;          case BandType.NaBandStackedKuHi:            lof1 = 11250;            lof2 = 10675;            sw = 0;            break;          case BandType.NaBandStackedKuLo:            lof1 = 10750;            lof2 = 10175;            sw = 0;            break;          case BandType.NaBandStackedC:            lof1 = 5150;            lof2 = 5750;            sw = 0;            break;          case BandType.NaLegacy:            lof1 = 11250;            lof2 = 0;            sw = 0;            break;          case BandType.NaCustom1:            lof1 = 11250;            lof2 = 11250;            sw = 12700;            break;          case BandType.NaCustom2:            lof1 = 11250;            lof2 = 11250;            sw = 12200;            break;        }
Missing Default,TvLibrary.Log,Log,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TvLibrary.Interfaces\Logging\Log.cs,WriteToFile,The following switch statement is missing a default case: switch (logType)            {              case LogType.Debug: CommonLogger.Instance.Debug(CommonLogType.Log' format' arg); break;              case LogType.Info: CommonLogger.Instance.Info(CommonLogType.Log' format' arg); break;              case LogType.Error:CommonLogger.Instance.Error(CommonLogType.Log' format' arg); break;              case LogType.Epg: CommonLogger.Instance.Info(CommonLogType.EPG' format' arg); break;            }
