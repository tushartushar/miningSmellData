Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeployVersionGIT,Program,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\Program.cs,Main,The method has 132 lines of code.
Complex Method,DeployVersionGIT,Program,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\Program.cs,Main,Cyclomatic complexity of the method is 13
Complex Method,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,Cyclomatic complexity of the method is 8
Long Statement,DeployVersionGIT,AssemblyUpdate,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\AssemblyUpdate.cs,UpdateFile,The length of the statement  "            newtext = Regex.Replace(newtext' "^(.*AssemblyInformationalVersion.*)$"' "//[assembly: AssemblyInformationalVersion(\"\")]\r"' RegexOptions.Multiline); " is 151.
Long Statement,DeployVersionGIT,AssemblyUpdate,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\AssemblyUpdate.cs,UpdateFile,The length of the statement  "            newtext = Regex.Replace(newtext' "^(.*AssemblyInformationalVersion.*)$"' "[assembly: AssemblyInformationalVersion(\"" + _fullVersion + "\")]\r"' RegexOptions.Multiline); " is 169.
Long Statement,DeployVersionGIT,VersionGIT,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\VersionGIT.cs,RunGitCommand,The length of the statement  "      string programFiles = Environment.GetEnvironmentVariable("ProgramFiles(x86)") ?? Environment.GetEnvironmentVariable("ProgramFiles"); " is 132.
Long Statement,DeployVersionGIT,VersionGIT,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\VersionGIT.cs,GetCurrentBranch,The length of the statement  "        var proc = RunGitCommand(string.Format("--git-dir=\"{0}\" name-rev --refs=\"refs/heads/*\" --name-only {1} "' gitDir' committish))) " is 131.
Long Statement,DeployVersionGIT,VersionGIT,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\VersionGIT.cs,GitDescribe,The length of the statement  "          var proc = RunGitCommand(String.Format("--git-dir=\"{0}\" --no-pager log  --oneline --decorate=short --first-parent"' gitDir))) " is 127.
Long Statement,DeployVersionGIT,VersionGIT,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\VersionGIT.cs,GitDescribe,The length of the statement  "        var proc = RunGitCommand(String.Format("--git-dir=\"{0}\" --no-pager describe --tags --match \"{1}\" --abbrev={2}"' gitDir' pattern' DEFAULT_COMMITTISH_LEN))) " is 158.
Magic Number,DeployVersionGIT,AssemblyUpdate,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\AssemblyUpdate.cs,UpdateFile,The following statement contains a magic number: StreamReader read = new StreamReader(file.FullName' Encoding.GetEncoding(1252)' true);
Magic Number,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,The following statement contains a magic number: string[] parts = Spliter.Split(txt' 3);
Magic Number,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,The following statement contains a magic number: switch (parts.Length)          {              // Found a value (for the last parameter               // found (space separator))            case 1:              if (parameter != null)              {                options.SetOption(parameter' Remover.Replace(parts[0]' "$1"));                parameter = null;              }              else              {                // else Error: no parameter waiting for a value (skipped)                throw (new ArgumentException());              }              break;                // Found just a parameter            case 2:              // The last parameter is still waiting.               // With no value' set it to null.              if (parameter != null)              {                options.SetOption(parameter' null);              }                parameter = parts[1];              break;                // Parameter with enclosed value            case 3:              // The last parameter is still waiting.               // With no value' set it to null              if (parameter != null)              {                options.SetOption(parameter' null);              }                // Set Option              options.SetOption(parts[1]' Remover.Replace(parts[2]' "$1"));                // clear parameter              parameter = null;              break;          }
Magic Number,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,The following statement contains a magic number: switch (parts.Length)          {              // Found a value (for the last parameter               // found (space separator))            case 1:              if (parameter != null)              {                options.SetOption(parameter' Remover.Replace(parts[0]' "$1"));                parameter = null;              }              else              {                // else Error: no parameter waiting for a value (skipped)                throw (new ArgumentException());              }              break;                // Found just a parameter            case 2:              // The last parameter is still waiting.               // With no value' set it to null.              if (parameter != null)              {                options.SetOption(parameter' null);              }                parameter = parts[1];              break;                // Parameter with enclosed value            case 3:              // The last parameter is still waiting.               // With no value' set it to null              if (parameter != null)              {                options.SetOption(parameter' null);              }                // Set Option              options.SetOption(parts[1]' Remover.Replace(parts[2]' "$1"));                // clear parameter              parameter = null;              break;          }
Magic Number,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,The following statement contains a magic number: switch (parts.Length)          {              // Found a value (for the last parameter               // found (space separator))            case 1:              if (parameter != null)              {                options.SetOption(parameter' Remover.Replace(parts[0]' "$1"));                parameter = null;              }              else              {                // else Error: no parameter waiting for a value (skipped)                throw (new ArgumentException());              }              break;                // Found just a parameter            case 2:              // The last parameter is still waiting.               // With no value' set it to null.              if (parameter != null)              {                options.SetOption(parameter' null);              }                parameter = parts[1];              break;                // Parameter with enclosed value            case 3:              // The last parameter is still waiting.               // With no value' set it to null              if (parameter != null)              {                options.SetOption(parameter' null);              }                // Set Option              options.SetOption(parts[1]' Remover.Replace(parts[2]' "$1"));                // clear parameter              parameter = null;              break;          }
Missing Default,MediaPortal.Utilities.CommandLine,CommandLine,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\Script & Batch tools\DeployVersionGIT\DeployVersionGIT\CommandLine.cs,Parse,The following switch statement is missing a default case: switch (parts.Length)          {              // Found a value (for the last parameter               // found (space separator))            case 1:              if (parameter != null)              {                options.SetOption(parameter' Remover.Replace(parts[0]' "$1"));                parameter = null;              }              else              {                // else Error: no parameter waiting for a value (skipped)                throw (new ArgumentException());              }              break;                // Found just a parameter            case 2:              // The last parameter is still waiting.               // With no value' set it to null.              if (parameter != null)              {                options.SetOption(parameter' null);              }                parameter = parts[1];              break;                // Parameter with enclosed value            case 3:              // The last parameter is still waiting.               // With no value' set it to null              if (parameter != null)              {                options.SetOption(parameter' null);              }                // Set Option              options.SetOption(parts[1]' Remover.Replace(parts[2]' "$1"));                // clear parameter              parameter = null;              break;          }
