Implementation smell,Namespace,Class,File,Method,Description
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The method has 107 lines of code.
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The method has 121 lines of code.
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The method has 143 lines of code.
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetProgramsForAllChannels,The method has 121 lines of code.
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetNowAndNext,The method has 105 lines of code.
Long Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,The method has 178 lines of code.
Long Method,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,ImportPrograms,The method has 101 lines of code.
Complex Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,Cyclomatic complexity of the method is 8
Complex Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,Cyclomatic complexity of the method is 8
Complex Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetConflictingSchedules,Cyclomatic complexity of the method is 15
Complex Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AssignSchedulesToCard,Cyclomatic complexity of the method is 8
Complex Method,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,Cyclomatic complexity of the method is 33
Complex Method,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,ImportPrograms,Cyclomatic complexity of the method is 16
Complex Method,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,IsInsertAllowed,Cyclomatic complexity of the method is 8
Complex Method,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetEPGLanguage,Cyclomatic complexity of the method is 10
Complex Method,TvDatabase,MatroskaTagHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\MatroskaTagLib.cs,ReadTag,Cyclomatic complexity of the method is 13
Complex Method,TvDatabase,ProgramList,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\ProgramList.cs,RemoveOverlappingPrograms,Cyclomatic complexity of the method is 14
Complex Method,TvDatabase,ProgramList,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\ProgramList.cs,RemoveOverlappingPrograms,Cyclomatic complexity of the method is 8
Complex Method,TvDatabase,ProgramList,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\ProgramList.cs,Compare,Cyclomatic complexity of the method is 9
Long Parameter List,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddSchedule,The method has 5 parameters. Parameters: idChannel' programName' startTime' endTime' scheduleType
Long Parameter List,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetSchedule,The method has 5 parameters. Parameters: idChannel' programName' startTime' endTime' scheduleType
Long Parameter List,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetEPGLanguage,The method has 7 parameters. Parameters: texts' title' description' genre' starRating' classification' parentalRating
Long Parameter List,TvDatabase,NowAndNext,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\NowAndNext.cs,NowAndNext,The method has 17 parameters. Parameters: idChannel' nowStart' nowEnd' nextStart' nextEnd' titleNow' titleNext' idProgramNow' idProgramNext' episodeName' episodeNameNext' seriesNum' seriesNumNext' episodeNum' EpisodeNumNext' episodePart' episodePartNext
Long Identifier,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,,The length of the parameter _storeOnlySelectedChannelsRadio is 31.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddCard,The length of the statement  "      // Card(devicePath' name' priority' grabEPG' lastEpgGrab' recordingFolder' idServer' enabled' camType' timeshiftingFolder' recordingFormat' decryptLimit) " is 153.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRadioGuideChannelsForGroup,The length of the statement  "                                                      "select c.* from Channel c inner join RadioGroupMap g on (c.idChannel=g.idChannel and g.idGroup = '{0}') where visibleInGuide = 1 and isRadio = 1 order by g.sortOrder"' " is 168.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTVGuideChannelsForGroup,The length of the statement  "                                                      "select c.* from Channel c inner join GroupMap g on (c.idChannel=g.idChannel and g.idGroup = '{0}') where visibleInGuide = 1 and isTv = 1 order by g.sortOrder"' " is 160.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetPrograms,The length of the statement  "        "where ((EndTime > '{0}' and EndTime < '{1}') or (StartTime >= '{0}' and StartTime <= '{1}') or (StartTime <= '{0}' and EndTime >= '{1}')) and c.visibleInGuide = 1 order by startTime"' " is 184.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetProgramsByTitle,The length of the statement  "        "where ((EndTime > '{0}' and EndTime < '{1}') or (StartTime >= '{0}' and StartTime <= '{1}') or (StartTime <= '{0}' and EndTime >= '{1}')) and title = '{2}' and c.visibleInGuide = 1 order by startTime"' " is 202.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetMpGenres,The length of the statement  "      // Each genre map value is a '{' delimited list of "program" genre names (those that may be compared with the genre from the program listings). " is 143.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetMpGenres,The length of the statement  "      // It is an error if a single "program" genre is mapped to more than one guide genre; behavior is undefined for this condition. " is 127.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetMpGenres,The length of the statement  "        // The genremap key is an integer value that is added to a base value in order to locate the correct localized genre name string. " is 129.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,BuildCommandTextMiniGuide,The length of the statement  "              "(SELECT idChannel'idProgram'starttime'endtime'title'episodeName'seriesNum'episodeNum'episodePart FROM Program WHERE idChannel={0} AND (Program.endtime >= NOW()) order by starttime limit 2)  UNION  "' " is 200.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,BuildCommandTextMiniGuide,The length of the statement  "          //  sbSelect.AppendFormat("(SELECT TOP 2 idChannel'idProgram'starttime'endtime'title FROM Program WHERE idChannel={0} AND (Program.endtime >= getdate()))  UNION ALL  "' ch.IdChannel); " is 183.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,BuildCommandTextMiniGuide,The length of the statement  "          //completeStatement = completeStatement + " ORDER BY idChannel' startTime";   // MSSQL does not support order by in single UNION selects " is 136.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsMySqlCommand,The length of the statement  "        "DELETE FROM Program WHERE idChannel = ?idChannel AND ((endTime > ?rangeStart AND startTime < ?rangeEnd) OR (startTime = endTime AND startTime BETWEEN ?rangeStart AND ?rangeEnd))"; " is 180.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteInsertProgramsMySqlCommand,The length of the statement  "        "INSERT INTO Program (idChannel' startTime' endTime' title' description' seriesNum' episodeNum' genre' originalAirDate' classification' starRating' state' parentalRating' episodeName' episodePart) VALUES (?idChannel' ?startTime' ?endTime' ?title' ?description' ?seriesNum' ?episodeNum' ?genre' ?originalAirDate' ?classification' ?starRating' ?state' ?parentalRating' ?episodeName' ?episodePart)"; " is 396.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsSqlServerCommand,The length of the statement  "        "DELETE FROM Program WHERE idChannel = @idChannel AND ((endTime > @rangeStart AND startTime < @rangeEnd) OR (startTime = endTime AND startTime BETWEEN @rangeStart AND @rangeEnd))"; " is 180.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteInsertProgramsSqlServerCommand,The length of the statement  "        "INSERT INTO Program (idChannel' startTime' endTime' title' description' seriesNum' episodeNum' genre' originalAirDate' classification' starRating' state' parentalRating' episodeName' episodePart) VALUES (@idChannel' @startTime' @endTime' @title' @description' @seriesNum' @episodeNum' @genre' @originalAirDate' @classification' @starRating' @state' @parentalRating' @episodeName' @episodePart)"; " is 396.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetConflictingSchedules,The length of the statement  "      // GEMX: Assign all already scheduled timers to cards. Assume that even possibly overlapping schedulues are ok to the user' " is 123.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,The length of the statement  "          // Log.Debug("BusinessLayer.cs Program prog in programs WeeklyEveryTimeOnThisChannel: {0} {1} prog.StartTime.DayOfWeek == rec.StartTime.DayOfWeek {2} == {3}"' rec.ProgramName' rec.ReferencedChannel().Name' prog.StartTime.DayOfWeek' rec.StartTime.DayOfWeek); " is 257.
Long Statement,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,The length of the statement  "            //Log.Debug("BusinessLayer.cs Added Recording WeeklyEveryTimeOnThisChannel: {0} {1} prog.StartTime.DayOfWeek == rec.StartTime.DayOfWeek {2} == {3}"' rec.ProgramName' rec.ReferencedChannel().Name' prog.StartTime.DayOfWeek' rec.StartTime.DayOfWeek); " is 247.
Complex Conditional,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,IsInsertAllowed,The conditional expression  "(dbChannel.IsRadio && _storeOnlySelectedChannelsRadio) || (!dbChannel.IsRadio && _storeOnlySelectedChannels)"  is complex.
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddCard,The following statement contains a magic number: Card newCard = new Card(devicePath' name' 1' true' new DateTime(2000' 1' 1)' ""' server.IdServer' true' 0' ""' 0'                                0' false' true' false' (int)TvDatabase.DbNetworkProvider.Generic);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddNewChannel,The following statement contains a magic number: Channel newChannel = new Channel(false' false' 0' new DateTime(2000' 1' 1)' false' new DateTime(2000' 1' 1)'                                         -1' true' ""' name' channelNumber);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddNewChannel,The following statement contains a magic number: Channel newChannel = new Channel(false' false' 0' new DateTime(2000' 1' 1)' false' new DateTime(2000' 1' 1)'                                         -1' true' ""' name' channelNumber);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddNewChannel,The following statement contains a magic number: return AddNewChannel(name' 10000);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,CreateGroup,The following statement contains a magic number: group = new ChannelGroup(groupName' 9999);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetChannelType,The following statement contains a magic number: channelType = 4;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The following statement contains a magic number: switch (detail.ChannelType)        {          case 0: //AnalogChannel            AnalogChannel analogChannel = new AnalogChannel();            analogChannel.ChannelNumber = detail.ChannelNumber;            CountryCollection collection = new CountryCollection();            analogChannel.Country = collection.Countries[detail.CountryId];            analogChannel.Frequency = detail.Frequency;            analogChannel.IsRadio = detail.IsRadio;            analogChannel.IsTv = detail.IsTv;            analogChannel.Name = detail.Name;            analogChannel.TunerSource = (TunerInputType)detail.TuningSource;            analogChannel.VideoSource = (AnalogChannel.VideoInputType)detail.VideoSource;            analogChannel.AudioSource = (AnalogChannel.AudioInputType)detail.AudioSource;            return analogChannel;          case 1: //ATSCChannel            ATSCChannel atscChannel = new ATSCChannel();            atscChannel.MajorChannel = detail.MajorChannel;            atscChannel.MinorChannel = detail.MinorChannel;            atscChannel.PhysicalChannel = detail.ChannelNumber;            atscChannel.FreeToAir = detail.FreeToAir;            atscChannel.Frequency = detail.Frequency;            atscChannel.IsRadio = detail.IsRadio;            atscChannel.IsTv = detail.IsTv;            atscChannel.Name = detail.Name;            atscChannel.NetworkId = detail.NetworkId;            atscChannel.PmtPid = detail.PmtPid;            atscChannel.Provider = detail.Provider;            atscChannel.ServiceId = detail.ServiceId;            atscChannel.LogicalChannelNumber = detail.ChannelNumber;            //atscChannel.SymbolRate = detail.Symbolrate;            atscChannel.TransportId = detail.TransportId;            atscChannel.ModulationType = (ModulationType)detail.Modulation;            return atscChannel;          case 2: //DVBCChannel            DVBCChannel dvbcChannel = new DVBCChannel();            dvbcChannel.ModulationType = (ModulationType)detail.Modulation;            dvbcChannel.FreeToAir = detail.FreeToAir;            dvbcChannel.Frequency = detail.Frequency;            dvbcChannel.IsRadio = detail.IsRadio;            dvbcChannel.IsTv = detail.IsTv;            dvbcChannel.Name = detail.Name;            dvbcChannel.NetworkId = detail.NetworkId;            dvbcChannel.PmtPid = detail.PmtPid;            dvbcChannel.Provider = detail.Provider;            dvbcChannel.ServiceId = detail.ServiceId;            dvbcChannel.SymbolRate = detail.Symbolrate;            dvbcChannel.TransportId = detail.TransportId;            dvbcChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbcChannel;          case 3: //DVBSChannel            DVBSChannel dvbsChannel = new DVBSChannel();            dvbsChannel.DisEqc = (DisEqcType)detail.Diseqc;            dvbsChannel.Polarisation = (Polarisation)detail.Polarisation;            dvbsChannel.SwitchingFrequency = detail.SwitchingFrequency;            dvbsChannel.FreeToAir = detail.FreeToAir;            dvbsChannel.Frequency = detail.Frequency;            dvbsChannel.IsRadio = detail.IsRadio;            dvbsChannel.IsTv = detail.IsTv;            dvbsChannel.Name = detail.Name;            dvbsChannel.NetworkId = detail.NetworkId;            dvbsChannel.PmtPid = detail.PmtPid;            dvbsChannel.Provider = detail.Provider;            dvbsChannel.ServiceId = detail.ServiceId;            dvbsChannel.SymbolRate = detail.Symbolrate;            dvbsChannel.TransportId = detail.TransportId;            dvbsChannel.BandType = (BandType)detail.Band;            dvbsChannel.SatelliteIndex = detail.SatIndex;            dvbsChannel.ModulationType = (ModulationType)detail.Modulation;            dvbsChannel.InnerFecRate = (BinaryConvolutionCodeRate)detail.InnerFecRate;            dvbsChannel.Pilot = (Pilot)detail.Pilot;            dvbsChannel.Rolloff = (RollOff)detail.RollOff;            dvbsChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbsChannel;          case 4: //DVBTChannel            DVBTChannel dvbtChannel = new DVBTChannel();            dvbtChannel.BandWidth = detail.Bandwidth;            dvbtChannel.FreeToAir = detail.FreeToAir;            dvbtChannel.Frequency = detail.Frequency;            dvbtChannel.IsRadio = detail.IsRadio;            dvbtChannel.IsTv = detail.IsTv;            dvbtChannel.Name = detail.Name;            dvbtChannel.NetworkId = detail.NetworkId;            dvbtChannel.PmtPid = detail.PmtPid;            dvbtChannel.Provider = detail.Provider;            dvbtChannel.ServiceId = detail.ServiceId;            dvbtChannel.TransportId = detail.TransportId;            dvbtChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbtChannel;          case 7: //DVBIPChannel            DVBIPChannel dvbipChannel = new DVBIPChannel();            dvbipChannel.FreeToAir = detail.FreeToAir;            dvbipChannel.IsRadio = detail.IsRadio;            dvbipChannel.IsTv = detail.IsTv;            dvbipChannel.Name = detail.Name;            dvbipChannel.NetworkId = detail.NetworkId;            dvbipChannel.PmtPid = detail.PmtPid;            dvbipChannel.Provider = detail.Provider;            dvbipChannel.ServiceId = detail.ServiceId;            dvbipChannel.TransportId = detail.TransportId;            dvbipChannel.LogicalChannelNumber = detail.ChannelNumber;            dvbipChannel.Url = detail.Url;            return dvbipChannel;        }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The following statement contains a magic number: switch (detail.ChannelType)        {          case 0: //AnalogChannel            AnalogChannel analogChannel = new AnalogChannel();            analogChannel.ChannelNumber = detail.ChannelNumber;            CountryCollection collection = new CountryCollection();            analogChannel.Country = collection.Countries[detail.CountryId];            analogChannel.Frequency = detail.Frequency;            analogChannel.IsRadio = detail.IsRadio;            analogChannel.IsTv = detail.IsTv;            analogChannel.Name = detail.Name;            analogChannel.TunerSource = (TunerInputType)detail.TuningSource;            analogChannel.VideoSource = (AnalogChannel.VideoInputType)detail.VideoSource;            analogChannel.AudioSource = (AnalogChannel.AudioInputType)detail.AudioSource;            return analogChannel;          case 1: //ATSCChannel            ATSCChannel atscChannel = new ATSCChannel();            atscChannel.MajorChannel = detail.MajorChannel;            atscChannel.MinorChannel = detail.MinorChannel;            atscChannel.PhysicalChannel = detail.ChannelNumber;            atscChannel.FreeToAir = detail.FreeToAir;            atscChannel.Frequency = detail.Frequency;            atscChannel.IsRadio = detail.IsRadio;            atscChannel.IsTv = detail.IsTv;            atscChannel.Name = detail.Name;            atscChannel.NetworkId = detail.NetworkId;            atscChannel.PmtPid = detail.PmtPid;            atscChannel.Provider = detail.Provider;            atscChannel.ServiceId = detail.ServiceId;            atscChannel.LogicalChannelNumber = detail.ChannelNumber;            //atscChannel.SymbolRate = detail.Symbolrate;            atscChannel.TransportId = detail.TransportId;            atscChannel.ModulationType = (ModulationType)detail.Modulation;            return atscChannel;          case 2: //DVBCChannel            DVBCChannel dvbcChannel = new DVBCChannel();            dvbcChannel.ModulationType = (ModulationType)detail.Modulation;            dvbcChannel.FreeToAir = detail.FreeToAir;            dvbcChannel.Frequency = detail.Frequency;            dvbcChannel.IsRadio = detail.IsRadio;            dvbcChannel.IsTv = detail.IsTv;            dvbcChannel.Name = detail.Name;            dvbcChannel.NetworkId = detail.NetworkId;            dvbcChannel.PmtPid = detail.PmtPid;            dvbcChannel.Provider = detail.Provider;            dvbcChannel.ServiceId = detail.ServiceId;            dvbcChannel.SymbolRate = detail.Symbolrate;            dvbcChannel.TransportId = detail.TransportId;            dvbcChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbcChannel;          case 3: //DVBSChannel            DVBSChannel dvbsChannel = new DVBSChannel();            dvbsChannel.DisEqc = (DisEqcType)detail.Diseqc;            dvbsChannel.Polarisation = (Polarisation)detail.Polarisation;            dvbsChannel.SwitchingFrequency = detail.SwitchingFrequency;            dvbsChannel.FreeToAir = detail.FreeToAir;            dvbsChannel.Frequency = detail.Frequency;            dvbsChannel.IsRadio = detail.IsRadio;            dvbsChannel.IsTv = detail.IsTv;            dvbsChannel.Name = detail.Name;            dvbsChannel.NetworkId = detail.NetworkId;            dvbsChannel.PmtPid = detail.PmtPid;            dvbsChannel.Provider = detail.Provider;            dvbsChannel.ServiceId = detail.ServiceId;            dvbsChannel.SymbolRate = detail.Symbolrate;            dvbsChannel.TransportId = detail.TransportId;            dvbsChannel.BandType = (BandType)detail.Band;            dvbsChannel.SatelliteIndex = detail.SatIndex;            dvbsChannel.ModulationType = (ModulationType)detail.Modulation;            dvbsChannel.InnerFecRate = (BinaryConvolutionCodeRate)detail.InnerFecRate;            dvbsChannel.Pilot = (Pilot)detail.Pilot;            dvbsChannel.Rolloff = (RollOff)detail.RollOff;            dvbsChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbsChannel;          case 4: //DVBTChannel            DVBTChannel dvbtChannel = new DVBTChannel();            dvbtChannel.BandWidth = detail.Bandwidth;            dvbtChannel.FreeToAir = detail.FreeToAir;            dvbtChannel.Frequency = detail.Frequency;            dvbtChannel.IsRadio = detail.IsRadio;            dvbtChannel.IsTv = detail.IsTv;            dvbtChannel.Name = detail.Name;            dvbtChannel.NetworkId = detail.NetworkId;            dvbtChannel.PmtPid = detail.PmtPid;            dvbtChannel.Provider = detail.Provider;            dvbtChannel.ServiceId = detail.ServiceId;            dvbtChannel.TransportId = detail.TransportId;            dvbtChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbtChannel;          case 7: //DVBIPChannel            DVBIPChannel dvbipChannel = new DVBIPChannel();            dvbipChannel.FreeToAir = detail.FreeToAir;            dvbipChannel.IsRadio = detail.IsRadio;            dvbipChannel.IsTv = detail.IsTv;            dvbipChannel.Name = detail.Name;            dvbipChannel.NetworkId = detail.NetworkId;            dvbipChannel.PmtPid = detail.PmtPid;            dvbipChannel.Provider = detail.Provider;            dvbipChannel.ServiceId = detail.ServiceId;            dvbipChannel.TransportId = detail.TransportId;            dvbipChannel.LogicalChannelNumber = detail.ChannelNumber;            dvbipChannel.Url = detail.Url;            return dvbipChannel;        }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The following statement contains a magic number: switch (detail.ChannelType)        {          case 0: //AnalogChannel            AnalogChannel analogChannel = new AnalogChannel();            analogChannel.ChannelNumber = detail.ChannelNumber;            CountryCollection collection = new CountryCollection();            analogChannel.Country = collection.Countries[detail.CountryId];            analogChannel.Frequency = detail.Frequency;            analogChannel.IsRadio = detail.IsRadio;            analogChannel.IsTv = detail.IsTv;            analogChannel.Name = detail.Name;            analogChannel.TunerSource = (TunerInputType)detail.TuningSource;            analogChannel.VideoSource = (AnalogChannel.VideoInputType)detail.VideoSource;            analogChannel.AudioSource = (AnalogChannel.AudioInputType)detail.AudioSource;            return analogChannel;          case 1: //ATSCChannel            ATSCChannel atscChannel = new ATSCChannel();            atscChannel.MajorChannel = detail.MajorChannel;            atscChannel.MinorChannel = detail.MinorChannel;            atscChannel.PhysicalChannel = detail.ChannelNumber;            atscChannel.FreeToAir = detail.FreeToAir;            atscChannel.Frequency = detail.Frequency;            atscChannel.IsRadio = detail.IsRadio;            atscChannel.IsTv = detail.IsTv;            atscChannel.Name = detail.Name;            atscChannel.NetworkId = detail.NetworkId;            atscChannel.PmtPid = detail.PmtPid;            atscChannel.Provider = detail.Provider;            atscChannel.ServiceId = detail.ServiceId;            atscChannel.LogicalChannelNumber = detail.ChannelNumber;            //atscChannel.SymbolRate = detail.Symbolrate;            atscChannel.TransportId = detail.TransportId;            atscChannel.ModulationType = (ModulationType)detail.Modulation;            return atscChannel;          case 2: //DVBCChannel            DVBCChannel dvbcChannel = new DVBCChannel();            dvbcChannel.ModulationType = (ModulationType)detail.Modulation;            dvbcChannel.FreeToAir = detail.FreeToAir;            dvbcChannel.Frequency = detail.Frequency;            dvbcChannel.IsRadio = detail.IsRadio;            dvbcChannel.IsTv = detail.IsTv;            dvbcChannel.Name = detail.Name;            dvbcChannel.NetworkId = detail.NetworkId;            dvbcChannel.PmtPid = detail.PmtPid;            dvbcChannel.Provider = detail.Provider;            dvbcChannel.ServiceId = detail.ServiceId;            dvbcChannel.SymbolRate = detail.Symbolrate;            dvbcChannel.TransportId = detail.TransportId;            dvbcChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbcChannel;          case 3: //DVBSChannel            DVBSChannel dvbsChannel = new DVBSChannel();            dvbsChannel.DisEqc = (DisEqcType)detail.Diseqc;            dvbsChannel.Polarisation = (Polarisation)detail.Polarisation;            dvbsChannel.SwitchingFrequency = detail.SwitchingFrequency;            dvbsChannel.FreeToAir = detail.FreeToAir;            dvbsChannel.Frequency = detail.Frequency;            dvbsChannel.IsRadio = detail.IsRadio;            dvbsChannel.IsTv = detail.IsTv;            dvbsChannel.Name = detail.Name;            dvbsChannel.NetworkId = detail.NetworkId;            dvbsChannel.PmtPid = detail.PmtPid;            dvbsChannel.Provider = detail.Provider;            dvbsChannel.ServiceId = detail.ServiceId;            dvbsChannel.SymbolRate = detail.Symbolrate;            dvbsChannel.TransportId = detail.TransportId;            dvbsChannel.BandType = (BandType)detail.Band;            dvbsChannel.SatelliteIndex = detail.SatIndex;            dvbsChannel.ModulationType = (ModulationType)detail.Modulation;            dvbsChannel.InnerFecRate = (BinaryConvolutionCodeRate)detail.InnerFecRate;            dvbsChannel.Pilot = (Pilot)detail.Pilot;            dvbsChannel.Rolloff = (RollOff)detail.RollOff;            dvbsChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbsChannel;          case 4: //DVBTChannel            DVBTChannel dvbtChannel = new DVBTChannel();            dvbtChannel.BandWidth = detail.Bandwidth;            dvbtChannel.FreeToAir = detail.FreeToAir;            dvbtChannel.Frequency = detail.Frequency;            dvbtChannel.IsRadio = detail.IsRadio;            dvbtChannel.IsTv = detail.IsTv;            dvbtChannel.Name = detail.Name;            dvbtChannel.NetworkId = detail.NetworkId;            dvbtChannel.PmtPid = detail.PmtPid;            dvbtChannel.Provider = detail.Provider;            dvbtChannel.ServiceId = detail.ServiceId;            dvbtChannel.TransportId = detail.TransportId;            dvbtChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbtChannel;          case 7: //DVBIPChannel            DVBIPChannel dvbipChannel = new DVBIPChannel();            dvbipChannel.FreeToAir = detail.FreeToAir;            dvbipChannel.IsRadio = detail.IsRadio;            dvbipChannel.IsTv = detail.IsTv;            dvbipChannel.Name = detail.Name;            dvbipChannel.NetworkId = detail.NetworkId;            dvbipChannel.PmtPid = detail.PmtPid;            dvbipChannel.Provider = detail.Provider;            dvbipChannel.ServiceId = detail.ServiceId;            dvbipChannel.TransportId = detail.TransportId;            dvbipChannel.LogicalChannelNumber = detail.ChannelNumber;            dvbipChannel.Url = detail.Url;            return dvbipChannel;        }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The following statement contains a magic number: switch (detail.ChannelType)        {          case 0: //AnalogChannel            AnalogChannel analogChannel = new AnalogChannel();            analogChannel.ChannelNumber = detail.ChannelNumber;            CountryCollection collection = new CountryCollection();            analogChannel.Country = collection.Countries[detail.CountryId];            analogChannel.Frequency = detail.Frequency;            analogChannel.IsRadio = detail.IsRadio;            analogChannel.IsTv = detail.IsTv;            analogChannel.Name = detail.Name;            analogChannel.TunerSource = (TunerInputType)detail.TuningSource;            analogChannel.VideoSource = (AnalogChannel.VideoInputType)detail.VideoSource;            analogChannel.AudioSource = (AnalogChannel.AudioInputType)detail.AudioSource;            return analogChannel;          case 1: //ATSCChannel            ATSCChannel atscChannel = new ATSCChannel();            atscChannel.MajorChannel = detail.MajorChannel;            atscChannel.MinorChannel = detail.MinorChannel;            atscChannel.PhysicalChannel = detail.ChannelNumber;            atscChannel.FreeToAir = detail.FreeToAir;            atscChannel.Frequency = detail.Frequency;            atscChannel.IsRadio = detail.IsRadio;            atscChannel.IsTv = detail.IsTv;            atscChannel.Name = detail.Name;            atscChannel.NetworkId = detail.NetworkId;            atscChannel.PmtPid = detail.PmtPid;            atscChannel.Provider = detail.Provider;            atscChannel.ServiceId = detail.ServiceId;            atscChannel.LogicalChannelNumber = detail.ChannelNumber;            //atscChannel.SymbolRate = detail.Symbolrate;            atscChannel.TransportId = detail.TransportId;            atscChannel.ModulationType = (ModulationType)detail.Modulation;            return atscChannel;          case 2: //DVBCChannel            DVBCChannel dvbcChannel = new DVBCChannel();            dvbcChannel.ModulationType = (ModulationType)detail.Modulation;            dvbcChannel.FreeToAir = detail.FreeToAir;            dvbcChannel.Frequency = detail.Frequency;            dvbcChannel.IsRadio = detail.IsRadio;            dvbcChannel.IsTv = detail.IsTv;            dvbcChannel.Name = detail.Name;            dvbcChannel.NetworkId = detail.NetworkId;            dvbcChannel.PmtPid = detail.PmtPid;            dvbcChannel.Provider = detail.Provider;            dvbcChannel.ServiceId = detail.ServiceId;            dvbcChannel.SymbolRate = detail.Symbolrate;            dvbcChannel.TransportId = detail.TransportId;            dvbcChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbcChannel;          case 3: //DVBSChannel            DVBSChannel dvbsChannel = new DVBSChannel();            dvbsChannel.DisEqc = (DisEqcType)detail.Diseqc;            dvbsChannel.Polarisation = (Polarisation)detail.Polarisation;            dvbsChannel.SwitchingFrequency = detail.SwitchingFrequency;            dvbsChannel.FreeToAir = detail.FreeToAir;            dvbsChannel.Frequency = detail.Frequency;            dvbsChannel.IsRadio = detail.IsRadio;            dvbsChannel.IsTv = detail.IsTv;            dvbsChannel.Name = detail.Name;            dvbsChannel.NetworkId = detail.NetworkId;            dvbsChannel.PmtPid = detail.PmtPid;            dvbsChannel.Provider = detail.Provider;            dvbsChannel.ServiceId = detail.ServiceId;            dvbsChannel.SymbolRate = detail.Symbolrate;            dvbsChannel.TransportId = detail.TransportId;            dvbsChannel.BandType = (BandType)detail.Band;            dvbsChannel.SatelliteIndex = detail.SatIndex;            dvbsChannel.ModulationType = (ModulationType)detail.Modulation;            dvbsChannel.InnerFecRate = (BinaryConvolutionCodeRate)detail.InnerFecRate;            dvbsChannel.Pilot = (Pilot)detail.Pilot;            dvbsChannel.Rolloff = (RollOff)detail.RollOff;            dvbsChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbsChannel;          case 4: //DVBTChannel            DVBTChannel dvbtChannel = new DVBTChannel();            dvbtChannel.BandWidth = detail.Bandwidth;            dvbtChannel.FreeToAir = detail.FreeToAir;            dvbtChannel.Frequency = detail.Frequency;            dvbtChannel.IsRadio = detail.IsRadio;            dvbtChannel.IsTv = detail.IsTv;            dvbtChannel.Name = detail.Name;            dvbtChannel.NetworkId = detail.NetworkId;            dvbtChannel.PmtPid = detail.PmtPid;            dvbtChannel.Provider = detail.Provider;            dvbtChannel.ServiceId = detail.ServiceId;            dvbtChannel.TransportId = detail.TransportId;            dvbtChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbtChannel;          case 7: //DVBIPChannel            DVBIPChannel dvbipChannel = new DVBIPChannel();            dvbipChannel.FreeToAir = detail.FreeToAir;            dvbipChannel.IsRadio = detail.IsRadio;            dvbipChannel.IsTv = detail.IsTv;            dvbipChannel.Name = detail.Name;            dvbipChannel.NetworkId = detail.NetworkId;            dvbipChannel.PmtPid = detail.PmtPid;            dvbipChannel.Provider = detail.Provider;            dvbipChannel.ServiceId = detail.ServiceId;            dvbipChannel.TransportId = detail.TransportId;            dvbipChannel.LogicalChannelNumber = detail.ChannelNumber;            dvbipChannel.Url = detail.Url;            return dvbipChannel;        }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: int country = 31;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: int bandwidth = 8;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: channelType = 2;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: channelType = 3;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: channelType = 4;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddTuningDetails,The following statement contains a magic number: channelType = 7;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: int country = 31;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: int bandwidth = 8;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: channelType = 2;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: channelType = 3;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: channelType = 4;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,UpdateTuningDetails,The following statement contains a magic number: channelType = 7;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddWebStreamTuningDetails,The following statement contains a magic number: const int country = 31;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddWebStreamTuningDetails,The following statement contains a magic number: const int bandwidth = 8;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,AddWebStreamTuningDetails,The following statement contains a magic number: const int channelType = 5;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetPrograms,The following statement contains a magic number: startTime = startTime.AddYears(1900);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertPrograms,The following statement contains a magic number: int sleepTime = 10;
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertPrograms,The following statement contains a magic number: switch (aThreadPriority)          {            case ThreadPriority.Highest:            case ThreadPriority.AboveNormal:              aThreadPriority = ThreadPriority.Normal;              sleepTime = 0;              break;            case ThreadPriority.Normal:              // this is almost enough on dualcore systems for one cpu to gather epg and the other to insert it              sleepTime = 10;              break;            case ThreadPriority.BelowNormal: // on faster systems this might be enough for background importing              sleepTime = 20;              break;            case ThreadPriority.Lowest: // even a single core system is enough to use MP while importing.              sleepTime = 40;              break;          }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertPrograms,The following statement contains a magic number: switch (aThreadPriority)          {            case ThreadPriority.Highest:            case ThreadPriority.AboveNormal:              aThreadPriority = ThreadPriority.Normal;              sleepTime = 0;              break;            case ThreadPriority.Normal:              // this is almost enough on dualcore systems for one cpu to gather epg and the other to insert it              sleepTime = 10;              break;            case ThreadPriority.BelowNormal: // on faster systems this might be enough for background importing              sleepTime = 20;              break;            case ThreadPriority.Lowest: // even a single core system is enough to use MP while importing.              sleepTime = 40;              break;          }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertPrograms,The following statement contains a magic number: switch (aThreadPriority)          {            case ThreadPriority.Highest:            case ThreadPriority.AboveNormal:              aThreadPriority = ThreadPriority.Normal;              sleepTime = 0;              break;            case ThreadPriority.Normal:              // this is almost enough on dualcore systems for one cpu to gather epg and the other to insert it              sleepTime = 10;              break;            case ThreadPriority.BelowNormal: // on faster systems this might be enough for background importing              sleepTime = 20;              break;            case ThreadPriority.Lowest: // even a single core system is enough to use MP while importing.              sleepTime = 40;              break;          }
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertProgramsThreadStart,The following statement contains a magic number: lastImport.AddSeconds(60) < DateTime.Now
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertProgramsThreadStart,The following statement contains a magic number: _pendingProgramInserts.WaitOne(10000);
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsMySqlCommand,The following statement contains a magic number: aCounter % 3 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsMySqlCommand,The following statement contains a magic number: aCounter % 3 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteInsertProgramsMySqlCommand,The following statement contains a magic number: aCounter % 3 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsSqlServerCommand,The following statement contains a magic number: aCounter % 2 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteDeleteProgramsSqlServerCommand,The following statement contains a magic number: aCounter % 2 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,ExecuteInsertProgramsSqlServerCommand,The following statement contains a magic number: aCounter % 2 == 0
Magic Number,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,The following statement contains a magic number: return GetRecordingTimes(rec' 10);
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,ReloadConfig,The following statement contains a magic number: _epgReGrabAfter = 240;
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,ImportPrograms,The following statement contains a magic number: diff.TotalMinutes > 5
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,ImportPrograms,The following statement contains a magic number: diff.Minutes > 5
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Magic Number,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following statement contains a magic number: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Duplicate Code,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetRecordingTimes,The method contains a code clone-set at the following line numbers (starting from the method definition): ((48' 76)' (107' 135))
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetTuningChannel,The following switch statement is missing a default case: switch (detail.ChannelType)        {          case 0: //AnalogChannel            AnalogChannel analogChannel = new AnalogChannel();            analogChannel.ChannelNumber = detail.ChannelNumber;            CountryCollection collection = new CountryCollection();            analogChannel.Country = collection.Countries[detail.CountryId];            analogChannel.Frequency = detail.Frequency;            analogChannel.IsRadio = detail.IsRadio;            analogChannel.IsTv = detail.IsTv;            analogChannel.Name = detail.Name;            analogChannel.TunerSource = (TunerInputType)detail.TuningSource;            analogChannel.VideoSource = (AnalogChannel.VideoInputType)detail.VideoSource;            analogChannel.AudioSource = (AnalogChannel.AudioInputType)detail.AudioSource;            return analogChannel;          case 1: //ATSCChannel            ATSCChannel atscChannel = new ATSCChannel();            atscChannel.MajorChannel = detail.MajorChannel;            atscChannel.MinorChannel = detail.MinorChannel;            atscChannel.PhysicalChannel = detail.ChannelNumber;            atscChannel.FreeToAir = detail.FreeToAir;            atscChannel.Frequency = detail.Frequency;            atscChannel.IsRadio = detail.IsRadio;            atscChannel.IsTv = detail.IsTv;            atscChannel.Name = detail.Name;            atscChannel.NetworkId = detail.NetworkId;            atscChannel.PmtPid = detail.PmtPid;            atscChannel.Provider = detail.Provider;            atscChannel.ServiceId = detail.ServiceId;            atscChannel.LogicalChannelNumber = detail.ChannelNumber;            //atscChannel.SymbolRate = detail.Symbolrate;            atscChannel.TransportId = detail.TransportId;            atscChannel.ModulationType = (ModulationType)detail.Modulation;            return atscChannel;          case 2: //DVBCChannel            DVBCChannel dvbcChannel = new DVBCChannel();            dvbcChannel.ModulationType = (ModulationType)detail.Modulation;            dvbcChannel.FreeToAir = detail.FreeToAir;            dvbcChannel.Frequency = detail.Frequency;            dvbcChannel.IsRadio = detail.IsRadio;            dvbcChannel.IsTv = detail.IsTv;            dvbcChannel.Name = detail.Name;            dvbcChannel.NetworkId = detail.NetworkId;            dvbcChannel.PmtPid = detail.PmtPid;            dvbcChannel.Provider = detail.Provider;            dvbcChannel.ServiceId = detail.ServiceId;            dvbcChannel.SymbolRate = detail.Symbolrate;            dvbcChannel.TransportId = detail.TransportId;            dvbcChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbcChannel;          case 3: //DVBSChannel            DVBSChannel dvbsChannel = new DVBSChannel();            dvbsChannel.DisEqc = (DisEqcType)detail.Diseqc;            dvbsChannel.Polarisation = (Polarisation)detail.Polarisation;            dvbsChannel.SwitchingFrequency = detail.SwitchingFrequency;            dvbsChannel.FreeToAir = detail.FreeToAir;            dvbsChannel.Frequency = detail.Frequency;            dvbsChannel.IsRadio = detail.IsRadio;            dvbsChannel.IsTv = detail.IsTv;            dvbsChannel.Name = detail.Name;            dvbsChannel.NetworkId = detail.NetworkId;            dvbsChannel.PmtPid = detail.PmtPid;            dvbsChannel.Provider = detail.Provider;            dvbsChannel.ServiceId = detail.ServiceId;            dvbsChannel.SymbolRate = detail.Symbolrate;            dvbsChannel.TransportId = detail.TransportId;            dvbsChannel.BandType = (BandType)detail.Band;            dvbsChannel.SatelliteIndex = detail.SatIndex;            dvbsChannel.ModulationType = (ModulationType)detail.Modulation;            dvbsChannel.InnerFecRate = (BinaryConvolutionCodeRate)detail.InnerFecRate;            dvbsChannel.Pilot = (Pilot)detail.Pilot;            dvbsChannel.Rolloff = (RollOff)detail.RollOff;            dvbsChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbsChannel;          case 4: //DVBTChannel            DVBTChannel dvbtChannel = new DVBTChannel();            dvbtChannel.BandWidth = detail.Bandwidth;            dvbtChannel.FreeToAir = detail.FreeToAir;            dvbtChannel.Frequency = detail.Frequency;            dvbtChannel.IsRadio = detail.IsRadio;            dvbtChannel.IsTv = detail.IsTv;            dvbtChannel.Name = detail.Name;            dvbtChannel.NetworkId = detail.NetworkId;            dvbtChannel.PmtPid = detail.PmtPid;            dvbtChannel.Provider = detail.Provider;            dvbtChannel.ServiceId = detail.ServiceId;            dvbtChannel.TransportId = detail.TransportId;            dvbtChannel.LogicalChannelNumber = detail.ChannelNumber;            return dvbtChannel;          case 7: //DVBIPChannel            DVBIPChannel dvbipChannel = new DVBIPChannel();            dvbipChannel.FreeToAir = detail.FreeToAir;            dvbipChannel.IsRadio = detail.IsRadio;            dvbipChannel.IsTv = detail.IsTv;            dvbipChannel.Name = detail.Name;            dvbipChannel.NetworkId = detail.NetworkId;            dvbipChannel.PmtPid = detail.PmtPid;            dvbipChannel.Provider = detail.Provider;            dvbipChannel.ServiceId = detail.ServiceId;            dvbipChannel.TransportId = detail.TransportId;            dvbipChannel.LogicalChannelNumber = detail.ChannelNumber;            dvbipChannel.Url = detail.Url;            return dvbipChannel;        }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetProgramsForAllChannels,The following switch statement is missing a default case: switch (provider)            {              case "sqlserver":                if (MsSqlAdapter != null)                {                  MsSqlAdapter.Fill(dataSet);                }                break;              case "mysql":                if (MySQLAdapter != null)                {                  MySQLAdapter.Fill(dataSet);                }                break;            }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetProgramsForAllChannels,The following switch statement is missing a default case: switch (provider)            {              case "mysql":                if (MySQLConnect != null)                {                  MySQLConnect.Close();                }                if (MySQLAdapter != null)                {                  MySQLAdapter.Dispose();                }                if (MySQLCmd != null)                {                  MySQLCmd.Dispose();                }                if (MySQLConnect != null)                {                  MySQLConnect.Dispose();                }                break;              case "sqlserver":                if (MsSqlConnect != null)                {                  MsSqlConnect.Close();                }                if (MsSqlAdapter != null)                {                  MsSqlAdapter.Dispose();                }                if (MsSqlCmd != null)                {                  MsSqlCmd.Dispose();                }                if (MsSqlConnect != null)                {                  MsSqlConnect.Dispose();                }                break;            }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,SearchProgramsPerGenre,The following switch statement is missing a default case: switch (channelType)        {          case ChannelType.Radio:            SqlSelectCommand.Append("and c.isTv=0 ");            break;          case ChannelType.Tv:            SqlSelectCommand.Append("and c.isTv=1 ");            break;        }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,SearchPrograms,The following switch statement is missing a default case: switch (channelType)        {          case ChannelType.Radio:            SqlSelectCommand.Append("and c.isTv=0 ");            break;          case ChannelType.Tv:            SqlSelectCommand.Append("and c.isTv=1 ");            break;        }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,SearchProgramsByDescription,The following switch statement is missing a default case: switch (channelType)        {          case ChannelType.Radio:            SqlSelectCommand.Append("and c.isTv=0 ");            break;          case ChannelType.Tv:            SqlSelectCommand.Append("and c.isTv=1 ");            break;        }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetNowAndNext,The following switch statement is missing a default case: switch (provider)            {              case "sqlserver":                if (MsSqlAdapter != null)                {                  MsSqlAdapter.Fill(dataSet);                }                break;              case "mysql":                if (MySQLAdapter != null)                {                  MySQLAdapter.Fill(dataSet);                }                break;            }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,GetNowAndNext,The following switch statement is missing a default case: switch (provider)          {            case "mysql":              if (MySQLConnect != null)              {                MySQLConnect.Close();              }              if (MySQLAdapter != null)              {                MySQLAdapter.Dispose();              }              if (MySQLCmd != null)              {                MySQLCmd.Dispose();              }              if (MySQLConnect != null)              {                MySQLConnect.Dispose();              }              break;            case "sqlserver":              if (MsSqlConnect != null)              {                MsSqlConnect.Close();              }              if (MsSqlAdapter != null)              {                MsSqlAdapter.Dispose();              }              if (MsSqlCmd != null)              {                MsSqlCmd.Dispose();              }              if (MsSqlConnect != null)              {                MsSqlConnect.Dispose();              }              break;          }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertPrograms,The following switch statement is missing a default case: switch (aThreadPriority)          {            case ThreadPriority.Highest:            case ThreadPriority.AboveNormal:              aThreadPriority = ThreadPriority.Normal;              sleepTime = 0;              break;            case ThreadPriority.Normal:              // this is almost enough on dualcore systems for one cpu to gather epg and the other to insert it              sleepTime = 10;              break;            case ThreadPriority.BelowNormal: // on faster systems this might be enough for background importing              sleepTime = 20;              break;            case ThreadPriority.Lowest: // even a single core system is enough to use MP while importing.              sleepTime = 40;              break;          }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertProgramsMySql,The following switch statement is missing a default case: switch (aImportParam.ProgamsToDelete)            {              case DeleteBeforeImportOption.OverlappingPrograms:                IEnumerable<ProgramListPartition> partitions = aImportParam.ProgramList.GetPartitions();                deletePrograms =                  () => ExecuteDeleteProgramsMySqlCommand(partitions' connection' transact' aImportParam.SleepTime);                break;              case DeleteBeforeImportOption.ProgramsOnSameChannel:                IEnumerable<int> channelIds = aImportParam.ProgramList.GetChannelIds();                deletePrograms =                  () => ExecuteDeleteProgramsMySqlCommand(channelIds' connection' transact' aImportParam.SleepTime);                break;            }
Missing Default,TvDatabase,TvBusinessLayer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\BusinessLayer.cs,InsertProgramsSqlServer,The following switch statement is missing a default case: switch (aImportParam.ProgamsToDelete)            {              case DeleteBeforeImportOption.OverlappingPrograms:                IEnumerable<ProgramListPartition> partitions = aImportParam.ProgramList.GetPartitions();                deletePrograms =                  () => ExecuteDeleteProgramsSqlServerCommand(partitions' connection' transact' aImportParam.SleepTime);                break;              case DeleteBeforeImportOption.ProgramsOnSameChannel:                IEnumerable<int> channelIds = aImportParam.ProgramList.GetChannelIds();                deletePrograms =                  () => ExecuteDeleteProgramsSqlServerCommand(channelIds' connection' transact' aImportParam.SleepTime);                break;            }
Missing Default,TvDatabase,EpgDBUpdater,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\EpgDBUpdater.cs,GetStarRatingStr,The following switch statement is missing a default case: switch (starRating)        {          case 1:            rating = "*";            break;          case 2:            rating = "*+";            break;          case 3:            rating = "**";            break;          case 4:            rating = "**+";            break;          case 5:            rating = "***";            break;          case 6:            rating = "***+";            break;          case 7:            rating = "****";            break;        }
Missing Default,TvDatabase,MatroskaTagHandler,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\TVDatabase\TvBusinessLayer\MatroskaTagLib.cs,ReadTag,The following switch statement is missing a default case: switch (tagName)            {              case "TITLE":                info.title = simpleTag.ChildNodes[1].InnerText;                break;              case "COMMENT":                info.description = simpleTag.ChildNodes[1].InnerText;                break;              case "GENRE":                info.genre = simpleTag.ChildNodes[1].InnerText;                break;              case "CHANNEL_NAME":                info.channelName = simpleTag.ChildNodes[1].InnerText;                break;              case "SERIESNUM":                info.seriesNum = simpleTag.ChildNodes[1].InnerText;                break;              case "EPISODENUM":                info.episodeNum = simpleTag.ChildNodes[1].InnerText;                break;              case "EPISODEPART":                info.episodePart = simpleTag.ChildNodes[1].InnerText;                break;              case "EPISODENAME":                info.episodeName = simpleTag.ChildNodes[1].InnerText;                break;              case "STARTTIME":                try                {                  info.startTime = DateTime.ParseExact(simpleTag.ChildNodes[1].InnerText' "yyyy-MM-dd HH:mm"' null);                }                catch (Exception)                {                  info.startTime = SqlDateTime.MinValue.Value;                }                break;              case "ENDTIME":                try                {                  info.endTime = DateTime.ParseExact(simpleTag.ChildNodes[1].InnerText' "yyyy-MM-dd HH:mm"' null);                }                catch (Exception)                {                  info.endTime = SqlDateTime.MinValue.Value;                }                break;            }
