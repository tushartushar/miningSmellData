Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,MpeStringEditorForm,The method has 122 lines of code.
Long Method,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The method has 188 lines of code.
Long Method,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,PrepareControl,The method has 182 lines of code.
Long Method,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The method has 182 lines of code.
Long Method,Mpe.Controls,MpeScreen,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeScreen.cs,Load,The method has 113 lines of code.
Long Method,Mpe.Controls,MpeScreen,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeScreen.cs,Save,The method has 112 lines of code.
Long Method,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,Save,The method has 138 lines of code.
Long Method,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,Save,The method has 100 lines of code.
Long Method,Mpe.Controls,MpeTextArea,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeTextArea.cs,Save,The method has 104 lines of code.
Long Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseMove,The method has 193 lines of code.
Long Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,ProcessCmdKey,The method has 288 lines of code.
Long Method,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnAfterLabelEdit,The method has 128 lines of code.
Long Method,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The method has 281 lines of code.
Long Method,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The method has 162 lines of code.
Complex Method,Mpe.Controls,MpeButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeButton.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,PrepareControl,Cyclomatic complexity of the method is 31
Complex Method,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,Cyclomatic complexity of the method is 29
Complex Method,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Save,Cyclomatic complexity of the method is 12
Complex Method,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,OnLockChanged,Cyclomatic complexity of the method is 13
Complex Method,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,Load,Cyclomatic complexity of the method is 11
Complex Method,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,Cyclomatic complexity of the method is 14
Complex Method,Mpe.Controls,MpeImage,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeImage.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,Mpe.Controls,MpeItemManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeItemManager.cs,UpdateCollection,Cyclomatic complexity of the method is 10
Complex Method,Mpe.Controls,MpeScreen,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeScreen.cs,Load,Cyclomatic complexity of the method is 15
Complex Method,Mpe.Controls,MpeScreen,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeScreen.cs,Save,Cyclomatic complexity of the method is 14
Complex Method,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,Save,Cyclomatic complexity of the method is 26
Complex Method,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,Save,Cyclomatic complexity of the method is 17
Complex Method,Mpe.Controls,MpeTextArea,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeTextArea.cs,Save,Cyclomatic complexity of the method is 19
Complex Method,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,Cyclomatic complexity of the method is 23
Complex Method,Mpe.Designers.Mask,MaskBottom,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskBottom.cs,OnMouseMove,Cyclomatic complexity of the method is 11
Complex Method,Mpe.Designers.Mask,MaskTop,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskTop.cs,OnMouseMove,Cyclomatic complexity of the method is 11
Complex Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,Cyclomatic complexity of the method is 12
Complex Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseMove,Cyclomatic complexity of the method is 34
Complex Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMenuSelection,Cyclomatic complexity of the method is 12
Complex Method,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,ProcessCmdKey,Cyclomatic complexity of the method is 58
Complex Method,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,UpdateContextMenu,Cyclomatic complexity of the method is 9
Complex Method,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,Cyclomatic complexity of the method is 38
Complex Method,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,AddDesigner,Cyclomatic complexity of the method is 8
Complex Method,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,OnMenuClose,Cyclomatic complexity of the method is 10
Complex Method,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Destroy,Cyclomatic complexity of the method is 11
Long Parameter List,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,PaintTexture,The method has 5 parameters. Parameters: g' measureOnly' textureScale' textureWidth' textureHeight
Long Parameter List,SkinEditor,FontDataDataTable,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeData.Designer.cs,AddFontDataRow,The method has 5 parameters. Parameters: Index' X' Y' Width' Height
Long Statement,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnAfterLabelEdit,The length of the statement  "                            "The image cannot be renamed because it is locked by another process.\n\nIf the image is currently open inside the MediaPortal Editor' please close the image' and try again."' " is 175.
Long Statement,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnAfterLabelEdit,The length of the statement  "                            "The screen cannot be renamed because it is locked by another process.\n\nIf the screen is currently open inside the MediaPortal Editor' please close the screen' and try again."' " is 178.
Long Statement,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,CreateStringTable,The length of the statement  "              System.Windows.Forms.MessageBox.Show(iterator.Current.GetAttribute("Id"'"/Language/Section/String")+iterator.Current.Value.Trim()); " is 131.
Complex Conditional,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,PrepareControl,The conditional expression  "label != null && imageGroup != null && imageUp != null && imageDown != null"  is complex.
Complex Conditional,Mpe.Controls.Properties,MpeControlPadding,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeControlPadding.cs,Equals,The conditional expression  "p.Left == Left && p.Right == Right && p.Top == Top && p.Bottom == Bottom"  is complex.
Complex Conditional,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,OnPropertyValueChanged,The conditional expression  "property != null &&              (property.Equals("Location") || property.Equals("Size") || property.Equals("LocationLocked") ||               property.Equals("SizeLocked"))"  is complex.
Virtual Method Call from Constructor,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,MpeContainer,The constructor "MpeContainer" calls a virtual method "Copy".
Empty Catch Block,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,OnMenuClose,The method has an empty catch block.
Empty Catch Block,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,GetInt,The method has an empty catch block.
Empty Catch Block,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlPoint,The method has an empty catch block.
Empty Catch Block,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlSize,The method has an empty catch block.
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(3' 3);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Location = new System.Drawing.Point(3' 3);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(341' 21);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBox1.Size = new System.Drawing.Size(341' 21);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Location = new System.Drawing.Point(3' 51);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Location = new System.Drawing.Point(3' 51);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Size = new System.Drawing.Size(341' 239);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Size = new System.Drawing.Size(341' 239);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(3' 30);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(3' 30);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(59' 17);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(59' 17);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.TabIndex = 3;
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(347' 293);
Magic Number,Mpe.Controls.Design,MpeAnimationEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeAnimationEditorForm.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(347' 293);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: imageList.Location = new Point(140' 4);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: imageList.Location = new Point(140' 4);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: imageList.Size = new Size(256' 130);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: imageList.Size = new Size(256' 130);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: imageList.TabIndex = 5;
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPanel.Location = new Point(4' 4);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPanel.Location = new Point(4' 4);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPanel.Size = new Size(132' 132);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPanel.Size = new Size(132' 132);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPanel.TabIndex = 6;
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPictureBox.Location = new Point(2' 2);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPictureBox.Location = new Point(2' 2);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPictureBox.Size = new Size(128' 128);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPictureBox.Size = new Size(128' 128);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: thumbPictureBox.TabIndex = 4;
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(400' 140);
Magic Number,Mpe.Controls.Design,MpeImageEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeImageEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(400' 140);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,MpeStringEditorForm,The following statement contains a magic number: Height = 184;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringList.Size = new Size(272' 100);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringList.Size = new Size(272' 100);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: colId.Width = 46;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: colString.Width = 170;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(120' 156);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(120' 156);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(200' 156);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(200' 156);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.TabIndex = 3;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propertyList.Size = new Size(272' 69);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propertyList.Size = new Size(272' 69);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propertyList.TabIndex = 4;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Location = new Point(8' 0);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Size = new Size(272' 48);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Size = new Size(272' 48);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: groupBox1.TabIndex = 5;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propRadio.Location = new Point(184' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propRadio.Location = new Point(184' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propRadio.Size = new Size(80' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propRadio.Size = new Size(80' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propRadio.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringRadio.Location = new Point(96' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringRadio.Location = new Point(96' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringRadio.Size = new Size(64' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringRadio.Size = new Size(64' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleRadio.Location = new Point(8' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleRadio.Location = new Point(8' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleRadio.Size = new Size(64' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleRadio.Size = new Size(64' 24);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simplePanel.Location = new Point(8' 48);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simplePanel.Location = new Point(8' 48);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simplePanel.Size = new Size(272' 104);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simplePanel.Size = new Size(272' 104);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simplePanel.TabIndex = 6;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: checkBox1.Location = new Point(48' 32);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: checkBox1.Location = new Point(48' 32);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: checkBox1.Size = new Size(216' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: checkBox1.Size = new Size(216' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: checkBox1.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Size = new Size(26' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Size = new Size(26' 16);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleTextbox.Location = new Point(48' 5);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleTextbox.Location = new Point(48' 5);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleTextbox.Size = new Size(216' 20);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: simpleTextbox.Size = new Size(216' 20);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propPanel.Location = new Point(8' 232);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propPanel.Location = new Point(8' 232);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propPanel.Size = new Size(272' 72);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propPanel.Size = new Size(272' 72);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: propPanel.TabIndex = 7;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringPanel.Location = new Point(8' 312);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringPanel.Location = new Point(8' 312);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringPanel.Size = new Size(272' 100);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringPanel.Size = new Size(272' 100);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: stringPanel.TabIndex = 8;
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(288' 440);
Magic Number,Mpe.Controls.Design,MpeStringEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeStringEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(288' 440);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(48' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(48' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.TabIndex = 4;
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Size = new Size(34' 16);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label1.Size = new Size(34' 16);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbName.Location = new Point(48' 5);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbName.Location = new Point(48' 5);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbName.Size = new Size(240' 20);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbName.Size = new Size(240' 20);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbValue.Location = new Point(48' 29);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbValue.Location = new Point(48' 29);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbValue.Size = new Size(240' 20);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbValue.Size = new Size(240' 20);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: tbValue.TabIndex = 3;
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label2.Location = new Point(8' 32);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label2.Location = new Point(8' 32);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label2.Size = new Size(33' 16);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label2.Size = new Size(33' 16);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: label2.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(128' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(128' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.TabIndex = 5;
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: deleteButton.Location = new Point(208' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: deleteButton.Location = new Point(208' 56);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: deleteButton.TabIndex = 6;
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(296' 88);
Magic Number,Mpe.Controls.Design,MpeTagEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(296' 88);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: textbox.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: textbox.Location = new Point(8' 8);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: textbox.Size = new Size(320' 88);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: textbox.Size = new Size(320' 88);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(168' 104);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(168' 104);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(248' 104);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(248' 104);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.TabIndex = 2;
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(336' 136);
Magic Number,Mpe.Controls.Design,MpeTextAreaEditorForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTextAreaEditorForm.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(336' 136);
Magic Number,Mpe.Controls,MpeCheckBox,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeCheckBox.cs,MpeCheckBox,The following statement contains a magic number: spacing = 5;
Magic Number,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,MpeContainer,The following statement contains a magic number: gridSize = new Size(8' 8);
Magic Number,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,MpeContainer,The following statement contains a magic number: gridSize = new Size(8' 8);
Magic Number,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,PrepareControl,The following statement contains a magic number: int h = 64;
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: Size = new Size(64' 64);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: Size = new Size(64' 64);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: Location = new Point(8' 8);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: Location = new Point(8' 8);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: borderPen = new Pen(Color.FromArgb(128' 255' 255' 255)' 1.0f);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: borderPen = new Pen(Color.FromArgb(128' 255' 255' 255)' 1.0f);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: borderPen = new Pen(Color.FromArgb(128' 255' 255' 255)' 1.0f);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: borderPen = new Pen(Color.FromArgb(128' 255' 255' 255)' 1.0f);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: diffuseColor = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: diffuseColor = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: diffuseColor = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,MpeControl,The following statement contains a magic number: diffuseColor = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following statement contains a magic number: switch (i.Current.Value)                  {                    case "WindowOpen":                      pos = 0;                      break;                    case "WindowClose":                      pos = 1;                      break;                    case "Hidden":                      pos = 2;                      break;                    case "Focus":                      pos = 3;                      break;                    case "Unfocus":                      pos = 4;                      break;                    case "VisibleChange":                      pos = 5;                      break;                  }
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following statement contains a magic number: switch (i.Current.Value)                  {                    case "WindowOpen":                      pos = 0;                      break;                    case "WindowClose":                      pos = 1;                      break;                    case "Hidden":                      pos = 2;                      break;                    case "Focus":                      pos = 3;                      break;                    case "Unfocus":                      pos = 4;                      break;                    case "VisibleChange":                      pos = 5;                      break;                  }
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following statement contains a magic number: switch (i.Current.Value)                  {                    case "WindowOpen":                      pos = 0;                      break;                    case "WindowClose":                      pos = 1;                      break;                    case "Hidden":                      pos = 2;                      break;                    case "Focus":                      pos = 3;                      break;                    case "Unfocus":                      pos = 4;                      break;                    case "VisibleChange":                      pos = 5;                      break;                  }
Magic Number,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following statement contains a magic number: switch (i.Current.Value)                  {                    case "WindowOpen":                      pos = 0;                      break;                    case "WindowClose":                      pos = 1;                      break;                    case "Hidden":                      pos = 2;                      break;                    case "Focus":                      pos = 3;                      break;                    case "Unfocus":                      pos = 4;                      break;                    case "VisibleChange":                      pos = 5;                      break;                  }
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,MpeFont,The following statement contains a magic number: systemFont = new Font("Arial"' 10f);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,MpeFont,The following statement contains a magic number: startChar = 32;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,MpeFont,The following statement contains a magic number: endChar = 256;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GetStringRectangle,The following statement contains a magic number: Color c = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GetStringRectangle,The following statement contains a magic number: Color c = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GetStringRectangle,The following statement contains a magic number: Color c = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GetStringRectangle,The following statement contains a magic number: Color c = Color.FromArgb(255' 255' 255' 255);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,Load,The following statement contains a magic number: startChar = 32;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,Load,The following statement contains a magic number: startChar < 32
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,Load,The following statement contains a magic number: endChar = 256;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,Load,The following statement contains a magic number: endChar > 256
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GenerateTexture,The following statement contains a magic number: textureCoordinates = new float[(10 + endChar - startChar)'4];
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GenerateTexture,The following statement contains a magic number: textureCoordinates = new float[(10 + endChar - startChar)'4];
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,GenerateTexture,The following statement contains a magic number: textureWidth = textureHeight = 64;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,PaintTexture,The following statement contains a magic number: x = spacingPerChar = (int) Math.Ceiling(size.Height*0.3);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,PaintTexture,The following statement contains a magic number: textureCoordinates[c - startChar' 2] = ((float) (x + size.Width + spacingPerChar))/textureWidth;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,PaintTexture,The following statement contains a magic number: textureCoordinates[c - startChar' 3] = ((float) (y + size.Height + 0))/textureHeight;
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,PaintTexture,The following statement contains a magic number: x += size.Width + (2*spacingPerChar);
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,ConvertTextureData,The following statement contains a magic number: textureData[i] = new Rectangle(            (int) (texture.Width*textureCoordinates[i' 0])'            (int) (texture.Height*textureCoordinates[i' 1])'            (int) (texture.Width*(textureCoordinates[i' 2] - textureCoordinates[i' 0]))'            (int) (texture.Height*(textureCoordinates[i' 3] - textureCoordinates[i' 1]))            );
Magic Number,Mpe.Controls,MpeFont,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFont.cs,ConvertTextureData,The following statement contains a magic number: textureData[i] = new Rectangle(            (int) (texture.Width*textureCoordinates[i' 0])'            (int) (texture.Height*textureCoordinates[i' 1])'            (int) (texture.Width*(textureCoordinates[i' 2] - textureCoordinates[i' 0]))'            (int) (texture.Height*(textureCoordinates[i' 3] - textureCoordinates[i' 1]))            );
Magic Number,Mpe.Controls,MpeFontCharacterConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFontViewer.cs,GetStandardValues,The following statement contains a magic number: char[] list = new char[256 - 32];
Magic Number,Mpe.Controls,MpeFontCharacterConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFontViewer.cs,GetStandardValues,The following statement contains a magic number: char[] list = new char[256 - 32];
Magic Number,Mpe.Controls,MpeFontCharacterConverter,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeFontViewer.cs,GetStandardValues,The following statement contains a magic number: i < 256
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Left = x - 4;
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Top = y - 4;
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Controls[a].Left -= x - 4;
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Controls[a].Top -= y - 4;
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Width = r - x + 8;
Magic Number,Mpe.Controls,MpeGroup,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeGroup.cs,Load,The following statement contains a magic number: Height = b - y + 8;
Magic Number,Mpe.Controls,MpeImage,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeImage.cs,Load,The following statement contains a magic number: Size = new Size(64' 64);
Magic Number,Mpe.Controls,MpeImage,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeImage.cs,Load,The following statement contains a magic number: Size = new Size(64' 64);
Magic Number,Mpe.Controls,MpeImageViewer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeImageViewer.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(borderPen' 1' 1' Width - 4' Width - 4);
Magic Number,Mpe.Controls,MpeImageViewer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeImageViewer.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(borderPen' 1' 1' Width - 4' Width - 4);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,MpeSelectButton,The following statement contains a magic number: textureSize = new Size(32' 32);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,MpeSelectButton,The following statement contains a magic number: textureSize = new Size(32' 32);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,MpeSelectButton,The following statement contains a magic number: leftImage.Padding = new MpeControlPadding(8);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,MpeSelectButton,The following statement contains a magic number: rightImage.Padding = new MpeControlPadding(8);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,Load,The following statement contains a magic number: TexturePadding = new MpeControlPadding(x/2' (Height - textureSize.Height)/2);
Magic Number,Mpe.Controls,MpeSelectButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSelectButton.cs,Load,The following statement contains a magic number: TexturePadding = new MpeControlPadding(x/2' (Height - textureSize.Height)/2);
Magic Number,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,MpeSpinButton,The following statement contains a magic number: spacing = 5;
Magic Number,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,MpeSpinButton,The following statement contains a magic number: imageUp.Size = new Size(16' 16);
Magic Number,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,MpeSpinButton,The following statement contains a magic number: imageUp.Size = new Size(16' 16);
Magic Number,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,MpeSpinButton,The following statement contains a magic number: imageDown.Size = new Size(16' 16);
Magic Number,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,MpeSpinButton,The following statement contains a magic number: imageDown.Size = new Size(16' 16);
Magic Number,Mpe.Controls,MpeResourceCollection,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeResourceCollection.cs,GenerateUniqueId,The following statement contains a magic number: int i = 24;
Magic Number,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,The following statement contains a magic number: switch (i)            {              case 0:                value = MpeAnimationTypeEnum.WindowOpen.ToString();                break;              case 1:                value = MpeAnimationTypeEnum.WindowClose.ToString();                break;              case 2:                value = MpeAnimationTypeEnum.Hidden.ToString();                break;              case 3:                value = MpeAnimationTypeEnum.Focus.ToString();                break;              case 4:                value = MpeAnimationTypeEnum.Unfocus.ToString();                break;              case 5:                value = MpeAnimationTypeEnum.VisibleChange.ToString();                break;            }
Magic Number,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,The following statement contains a magic number: switch (i)            {              case 0:                value = MpeAnimationTypeEnum.WindowOpen.ToString();                break;              case 1:                value = MpeAnimationTypeEnum.WindowClose.ToString();                break;              case 2:                value = MpeAnimationTypeEnum.Hidden.ToString();                break;              case 3:                value = MpeAnimationTypeEnum.Focus.ToString();                break;              case 4:                value = MpeAnimationTypeEnum.Unfocus.ToString();                break;              case 5:                value = MpeAnimationTypeEnum.VisibleChange.ToString();                break;            }
Magic Number,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,The following statement contains a magic number: switch (i)            {              case 0:                value = MpeAnimationTypeEnum.WindowOpen.ToString();                break;              case 1:                value = MpeAnimationTypeEnum.WindowClose.ToString();                break;              case 2:                value = MpeAnimationTypeEnum.Hidden.ToString();                break;              case 3:                value = MpeAnimationTypeEnum.Focus.ToString();                break;              case 4:                value = MpeAnimationTypeEnum.Unfocus.ToString();                break;              case 5:                value = MpeAnimationTypeEnum.VisibleChange.ToString();                break;            }
Magic Number,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,The following statement contains a magic number: switch (i)            {              case 0:                value = MpeAnimationTypeEnum.WindowOpen.ToString();                break;              case 1:                value = MpeAnimationTypeEnum.WindowClose.ToString();                break;              case 2:                value = MpeAnimationTypeEnum.Hidden.ToString();                break;              case 3:                value = MpeAnimationTypeEnum.Focus.ToString();                break;              case 4:                value = MpeAnimationTypeEnum.Unfocus.ToString();                break;              case 5:                value = MpeAnimationTypeEnum.VisibleChange.ToString();                break;            }
Magic Number,Mpe.Designers.Mask,MaskBottom,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskBottom.cs,MaskBottom,The following statement contains a magic number: nodes = new Rectangle[3];
Magic Number,Mpe.Designers.Mask,MaskBottom,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskBottom.cs,Initialize,The following statement contains a magic number: nodes[1].Location = new Point(Width/2 - mask.NodeSize/2' 0);
Magic Number,Mpe.Designers.Mask,MaskBottom,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskBottom.cs,Initialize,The following statement contains a magic number: nodes[1].Location = new Point(Width/2 - mask.NodeSize/2' 0);
Magic Number,Mpe.Designers.Mask,MaskBottom,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskBottom.cs,Initialize,The following statement contains a magic number: nodes[2].Location = new Point(Width - mask.NodeSize' 0);
Magic Number,Mpe.Designers.Mask,MaskLeft,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskLeft.cs,Initialize,The following statement contains a magic number: nodes[0].Location = new Point(0' Height/2 - mask.NodeSize/2);
Magic Number,Mpe.Designers.Mask,MaskLeft,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskLeft.cs,Initialize,The following statement contains a magic number: nodes[0].Location = new Point(0' Height/2 - mask.NodeSize/2);
Magic Number,Mpe.Designers.Mask,MaskRight,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskRight.cs,Initialize,The following statement contains a magic number: nodes[0].Location = new Point(0' Height/2 - mask.NodeSize/2);
Magic Number,Mpe.Designers.Mask,MaskRight,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskRight.cs,Initialize,The following statement contains a magic number: nodes[0].Location = new Point(0' Height/2 - mask.NodeSize/2);
Magic Number,Mpe.Designers.Mask,MaskTop,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskTop.cs,MaskTop,The following statement contains a magic number: nodes = new Rectangle[3];
Magic Number,Mpe.Designers.Mask,MaskTop,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskTop.cs,Initialize,The following statement contains a magic number: nodes[1].Location = new Point(Width/2 - mask.NodeSize/2' 0);
Magic Number,Mpe.Designers.Mask,MaskTop,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskTop.cs,Initialize,The following statement contains a magic number: nodes[1].Location = new Point(Width/2 - mask.NodeSize/2' 0);
Magic Number,Mpe.Designers.Mask,MaskTop,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\Mask\MaskTop.cs,Initialize,The following statement contains a magic number: nodes[2].Location = new Point(Width - mask.NodeSize' 0);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: nodeSize = 6;
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: nodeBrush = new SolidBrush(Color.FromArgb(0' 255' 0));
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: barBrush = new SolidBrush(Color.FromArgb(96' 255' 255' 255));
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: barBrush = new SolidBrush(Color.FromArgb(96' 255' 255' 255));
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: barBrush = new SolidBrush(Color.FromArgb(96' 255' 255' 255));
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: barBrush = new SolidBrush(Color.FromArgb(96' 255' 255' 255));
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: components = new MaskComponent[4];
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: components[2] = new MaskBottom(this);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: components[3] = new MaskLeft(this);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: defaultGridSize = new Size(8' 8);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: defaultGridSize = new Size(8' 8);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: defaultMinControlSize = new Size(16' 16);
Magic Number,Mpe.Designers,MpeControlMask,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeControlMask.cs,MpeControlMask,The following statement contains a magic number: defaultMinControlSize = new Size(16' 16);
Magic Number,Mpe.Designers,MpeHelpBrowser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeHelpBrowser.cs,InitializeComponent,The following statement contains a magic number: browser.Size = new Size(368' 224);
Magic Number,Mpe.Designers,MpeHelpBrowser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeHelpBrowser.cs,InitializeComponent,The following statement contains a magic number: browser.Size = new Size(368' 224);
Magic Number,Mpe.Designers,MpeHelpBrowser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeHelpBrowser.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(368' 224);
Magic Number,Mpe.Designers,MpeHelpBrowser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeHelpBrowser.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(368' 224);
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,MpeResourceDesigner,The following statement contains a magic number: contextMenu.MenuCommands.Add(new MenuCommand("Parent"' menuImageList' 4));
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,MpeResourceDesigner,The following statement contains a magic number: contextMenu.MenuCommands.Add(new MenuCommand("Delete"' menuImageList' 2));
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,MpeResourceDesigner,The following statement contains a magic number: contextMenu.MenuCommands.Add(new MenuCommand("Properties"' menuImageList' 3));
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following statement contains a magic number: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(320' 240);
Magic Number,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(320' 240);
Magic Number,Mpe.Designers,MpeStringDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeStringDesigner.cs,InitializeComponent,The following statement contains a magic number: dataGrid.Location = new Point(4' 4);
Magic Number,Mpe.Designers,MpeStringDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeStringDesigner.cs,InitializeComponent,The following statement contains a magic number: dataGrid.Location = new Point(4' 4);
Magic Number,Mpe.Designers,MpeStringDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeStringDesigner.cs,InitializeComponent,The following statement contains a magic number: dataGrid.Size = new Size(368' 216);
Magic Number,Mpe.Designers,MpeStringDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeStringDesigner.cs,InitializeComponent,The following statement contains a magic number: dataGrid.Size = new Size(368' 216);
Magic Number,Mpe.Designers,MpeStringDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeStringDesigner.cs,InitializeComponent,The following statement contains a magic number: DockPadding.All = 4;
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(8' 8);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(8' 8);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(361' 96);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(361' 96);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(280' 144);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(280' 144);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(80' 23);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(80' 23);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(8' 112);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(8' 112);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(360' 24);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(360' 24);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size(5' 13);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size(5' 13);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(376' 176);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(376' 176);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: Color c = Color.FromArgb(128' 0' 0' 0);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: gdc.DrawRectangle(new Pen(c' 2.0f)' 10' 10' 100' 100);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: gdc.DrawRectangle(new Pen(c' 2.0f)' 10' 10' 100' 100);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: gdc.DrawRectangle(new Pen(c' 2.0f)' 10' 10' 100' 100);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: gdc.DrawRectangle(new Pen(c' 2.0f)' 10' 10' 100' 100);
Magic Number,Mpe.Forms,MpeAboutForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeAboutForm.cs,button1_Click,The following statement contains a magic number: gdc.DrawRectangle(new Pen(c' 2.0f)' 10' 10' 100' 100);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadImages,The following statement contains a magic number: imageNode.ImageIndex = 13;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadImages,The following statement contains a magic number: imageNode.SelectedImageIndex = 13;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadImages,The following statement contains a magic number: n.ImageIndex = 14;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadImages,The following statement contains a magic number: n.SelectedImageIndex = 14;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadFonts,The following statement contains a magic number: fontNode.ImageIndex = 11;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadFonts,The following statement contains a magic number: fontNode.SelectedImageIndex = 11;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadFonts,The following statement contains a magic number: n.ImageIndex = 12;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadFonts,The following statement contains a magic number: n.SelectedImageIndex = 12;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadControls,The following statement contains a magic number: controlNode.ImageIndex = 2;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadControls,The following statement contains a magic number: controlNode.SelectedImageIndex = 2;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadControls,The following statement contains a magic number: n.ImageIndex = 3;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadControls,The following statement contains a magic number: n.SelectedImageIndex = 3;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadScreens,The following statement contains a magic number: screenNode.ImageIndex = 5;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadScreens,The following statement contains a magic number: screenNode.SelectedImageIndex = 5;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadScreens,The following statement contains a magic number: n.ImageIndex = 7;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadScreens,The following statement contains a magic number: n.SelectedImageIndex = 7;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadLanguages,The following statement contains a magic number: languageNode.ImageIndex = 9;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadLanguages,The following statement contains a magic number: languageNode.SelectedImageIndex = 9;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadLanguages,The following statement contains a magic number: n.ImageIndex = 10;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,LoadLanguages,The following statement contains a magic number: n.SelectedImageIndex = 10;
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following statement contains a magic number: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: skinTreePanel.Size = new Size(312' 368);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: skinTreePanel.Size = new Size(312' 368);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: skinTree.Size = new Size(310' 366);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: skinTree.Size = new Size(310' 366);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: treeImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: treeImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(312' 368);
Magic Number,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(312' 368);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,LoadHelp,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,LoadHelpFiles,The following statement contains a magic number: TreeNode p = new TreeNode(dirs[i].Name' 2' 2);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,LoadHelpFiles,The following statement contains a magic number: TreeNode p = new TreeNode(dirs[i].Name' 2' 2);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: tree.Size = new Size(262' 334);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: tree.Size = new Size(262' 334);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: treeImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: treeImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: treePanel.Size = new Size(264' 336);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: treePanel.Size = new Size(264' 336);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(264' 336);
Magic Number,Mpe.Forms,MpeHelpManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeHelpManager.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(264' 336);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(282' 278);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(282' 278);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(362' 278);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(362' 278);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: grid.Location = new Point(8' 8);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: grid.Location = new Point(8' 8);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: grid.Size = new Size(432' 264);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: grid.Size = new Size(432' 264);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: grid.TabIndex = 2;
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(450' 312);
Magic Number,Mpe.Forms,MpePreferenceForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePreferenceForm.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(450' 312);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,OnResize,The following statement contains a magic number: resourceList.Width = Width - 3;
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,OnResize,The following statement contains a magic number: propertyGrid.Location = new Point(1' 24);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,OnResize,The following statement contains a magic number: propertyGrid.Width = Width - 3;
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,OnResize,The following statement contains a magic number: propertyGrid.Height = Height - 24;
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: propertyGrid.Location = new Point(1' 25);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: propertyGrid.Size = new Size(414' 321);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: propertyGrid.Size = new Size(414' 321);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: resourceList.Location = new Point(1' 2);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: resourceList.Size = new Size(413' 21);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: resourceList.Size = new Size(413' 21);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(20' 20);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(20' 20);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(416' 328);
Magic Number,Mpe.Forms,MpePropertyManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpePropertyManager.cs,InitializeComponent,The following statement contains a magic number: Size = new Size(416' 328);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(304' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(304' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: cancelButton.TabIndex = 3;
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: title.Location = new Point(7' 6);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: title.Location = new Point(7' 6);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: title.Size = new Size(213' 16);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: title.Size = new Size(213' 16);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: title.TabIndex = 4;
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: noButton.Location = new Point(224' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: noButton.Location = new Point(224' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: noButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: noButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: noButton.TabIndex = 2;
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: yesButton.Location = new Point(144' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: yesButton.Location = new Point(144' 192);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: yesButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: yesButton.Size = new Size(75' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: changeList.Location = new Point(8' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: changeList.Location = new Point(8' 24);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: changeList.Size = new Size(376' 160);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: changeList.Size = new Size(376' 160);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: nameCol.Width = 280;
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: typeCol.Width = 72;
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(394' 224);
Magic Number,Mpe.Forms,MpeSaveForm,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSaveForm.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(394' 224);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,OnLoad,The following statement contains a magic number: Height = 336;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(304' 304);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: okButton.Location = new Point(304' 304);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameLabel.Location = new Point(8' 267);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameLabel.Location = new Point(8' 267);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameLabel.Size = new Size(88' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameLabel.Size = new Size(88' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameLabel.TabIndex = 3;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameTextBox.Location = new Point(96' 264);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameTextBox.Location = new Point(96' 264);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameTextBox.Size = new Size(368' 20);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameTextBox.Size = new Size(368' 20);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: nameTextBox.TabIndex = 4;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(384' 304);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: cancelButton.Location = new Point(384' 304);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: cancelButton.TabIndex = 5;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Location = new Point(8' 296);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Location = new Point(8' 296);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Size = new Size(456' 3);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: groupBox1.Size = new Size(456' 3);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: groupBox1.TabIndex = 6;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: listLabel.Location = new Point(8' 8);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: listLabel.Location = new Point(8' 8);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: listLabel.Size = new Size(57' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: listLabel.Size = new Size(57' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: listLabel.TabIndex = 7;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: label3.Location = new Point(416' 8);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: label3.Location = new Point(416' 8);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: label3.Size = new Size(45' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: label3.Size = new Size(45' 16);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: label3.TabIndex = 8;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: panel1.Location = new Point(8' 24);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: panel1.Location = new Point(8' 24);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: panel1.Size = new Size(456' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: panel1.Size = new Size(456' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: panel1.TabIndex = 10;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: previewBox.Location = new Point(163' 0);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: previewBox.Size = new Size(293' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: previewBox.Size = new Size(293' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: previewBox.TabIndex = 12;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: splitter1.Location = new Point(160' 0);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: splitter1.Size = new Size(3' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: splitter1.Size = new Size(3' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: splitter1.TabIndex = 11;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: skinList.Size = new Size(160' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: skinList.Size = new Size(160' 232);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: skinList.TabIndex = 10;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: colName.Width = 120;
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(474' 336);
Magic Number,Mpe.Forms,MpeSkinBrowserDialog,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeSkinBrowserDialog.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(474' 336);
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,MpeStatusBar,The following statement contains a magic number: menu.MenuCommands.Add(new MenuCommand("Warn"' iconImageList' 2));
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,MpeStatusBar,The following statement contains a magic number: menu.MenuCommands.Add(new MenuCommand("Error"' iconImageList' 3));
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,Progress,The following statement contains a magic number: progressPanel.Width = 120;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,OnDrawItem,The following statement contains a magic number: e.Graphics.DrawImage(GetIconImage(currentLevel)' e.Bounds.Left + 2' e.Bounds.Top' 16' 16);
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,OnDrawItem,The following statement contains a magic number: e.Graphics.DrawImage(GetIconImage(currentLevel)' e.Bounds.Left + 2' e.Bounds.Top' 16' 16);
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,OnDrawItem,The following statement contains a magic number: e.Graphics.DrawImage(GetIconImage(currentLevel)' e.Bounds.Left + 2' e.Bounds.Top' 16' 16);
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,OnPanelClick,The following statement contains a magic number: MenuCommand c = menu.TrackPopup(PointToScreen(new Point(0' -90))' false);
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: iconPanel.MinWidth = 20;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: iconPanel.Width = 20;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: textPanel.Width = 10;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: progressPanel.Width = 120;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: locationPanel.Width = 10;
Magic Number,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,InitializeComponent,The following statement contains a magic number: sizePanel.Width = 10;
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,MediaPortalEditor,The following statement contains a magic number: c = dockManager.Contents.Add(helpManager' "Help"' serviceImageList' 2);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,CreateTopMenu,The following statement contains a magic number: MenuCommand saveAllMenu =          new MenuCommand("Save A&ll"' menuImageList' 2' Shortcut.CtrlShiftS' new EventHandler(OnMenuSaveAll));
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,CreateTopMenu,The following statement contains a magic number: MenuCommand skinExplorerMenu =          new MenuCommand("&Explorer"' menuImageList' 4' Shortcut.F3' new EventHandler(OnMenuView));
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,CreateTopMenu,The following statement contains a magic number: MenuCommand propertiesMenu =          new MenuCommand("&Properties"' menuImageList' 3' Shortcut.F4' new EventHandler(OnMenuView));
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,CreateTopMenu,The following statement contains a magic number: MenuCommand helpCommand = new MenuCommand("&Help"' menuImageList' 5' new EventHandler(OnMenuView));
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,AddDesigner,The following statement contains a magic number: TabPage newTab = new TabPage(designer.ResourceName' (Control) designer' 4);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,OnLoad,The following statement contains a magic number: Size = new Size(1024' 768);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,OnLoad,The following statement contains a magic number: Size = new Size(1024' 768);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,OnLoad,The following statement contains a magic number: initTimer.Interval = 100;
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: menuImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: tabImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: tabImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: serviceImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: serviceImageList.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: statusBarIcons.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: statusBarIcons.ImageSize = new Size(16' 16);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: AutoScaleBaseSize = new Size(5' 13);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(704' 518);
Magic Number,Mpe,MediaPortalEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MediaPortalEditor.cs,InitializeComponent,The following statement contains a magic number: ClientSize = new Size(704' 518);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Progress(0' 6);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Parsing Strings"' 2);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Loaded " + StringTables.Count + " String Tables"' 2);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Parsing Fonts"' 3);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Loaded " + Fonts.Length + " Fonts"' 3);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Parsing Images"' 4);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Loaded " + ImageFiles.Length + " Images"' 4);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Parsing Screens"' 5);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Loaded " + Screens.Length + " Screens"' 5);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Parsing Controls"' 6);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,Load,The following statement contains a magic number: MpeLog.Info("Loaded " + ControlKeys.Length + " Controls"' 6);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,SaveStringTable,The following statement contains a magic number: SetInt(doc' strings' "characters"' 255);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,SaveStringTable,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,SaveFont,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,RenameFont,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,DeleteFont,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,CreateThumbnail,The following statement contains a magic number: int h = 128 * b.Height / b.Width;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,CreateThumbnail,The following statement contains a magic number: thumb = new Bitmap(b' 128' h);
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,CreateThumbnail,The following statement contains a magic number: b.Width > 128 || b.Height > 128
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,CreateThumbnail,The following statement contains a magic number: b.Width > 128 || b.Height > 128
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,SaveControl,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,ModifyScreenType,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpeParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpeParser.cs,SaveScreen,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,Save,The following statement contains a magic number: writer.Indentation = 3;
Magic Number,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlPoint,The following statement contains a magic number: values.Length == 2
Magic Number,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlSize,The following statement contains a magic number: values.Length == 2
Duplicate Code,Mpe.Controls,MpeContainer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeContainer.cs,PrepareControl,The method contains a code clone-set at the following line numbers (starting from the method definition): ((26' 50)' (106' 130))
Missing Default,Mpe.Controls.Design,MpeTagEditor,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Design\MpeTagEditorForm.cs,EditValue,The following switch statement is missing a default case: switch (form.Result)            {              case DialogResult.OK:                if (tag.Name == form.TagName && tag.Name != "-")                {                  tag.Value = form.TagValue;                  MpeLog.Info("Tag Updated! Name = " + tag.Name + " Value = " + tag.Value);                }                else if (tag.Name == form.TagName)                {                  MpeLog.Warn("Invalid tag name specified");                }                else                {                  tags.Remove(tag.Name);                  tag.Name = form.TagName;                  tag.Value = form.TagValue;                  tags.Add(tag);                  MpeLog.Info("Tag Updated! Name = [" + tag.Name + "] Value = [" + tag.Value + "]");                }                break;              case DialogResult.Abort:                tags.Remove(tag.Name);                MpeLog.Info("Tag Removed! Name = [" + tag.Name + "[ Value = [" + tag.Value + "]");                break;            }
Missing Default,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following switch statement is missing a default case: switch (i.Current.Value)                  {                    case "WindowOpen":                      pos = 0;                      break;                    case "WindowClose":                      pos = 1;                      break;                    case "Hidden":                      pos = 2;                      break;                    case "Focus":                      pos = 3;                      break;                    case "Unfocus":                      pos = 4;                      break;                    case "VisibleChange":                      pos = 5;                      break;                  }
Missing Default,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following switch statement is missing a default case: switch (efect)                    {                      case "fade":                        Animation.Animation[pos].Efect = MpeAnimationEfect.fade;                        break;                      case "slide":                        Animation.Animation[pos].Efect = MpeAnimationEfect.slide;                        break;                      case "rotate":                        Animation.Animation[pos].Efect = MpeAnimationEfect.rotate;                        break;                      case "rotatex":                        Animation.Animation[pos].Efect = MpeAnimationEfect.rotatex;                        break;                      case "rotatey":                        Animation.Animation[pos].Efect = MpeAnimationEfect.rotatey;                        break;                      case "zoom":                        Animation.Animation[pos].Efect = MpeAnimationEfect.zoom;                        break;                    }
Missing Default,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following switch statement is missing a default case: switch (i.Current.GetAttribute("tween"' String.Empty))                    {                      case "elastic":                        Animation.Animation[pos].Tween = MpeAnimationTween.elastic;                        break;                      case "bounce":                        Animation.Animation[pos].Tween = MpeAnimationTween.bounce;                        break;                      case "circle":                        Animation.Animation[pos].Tween = MpeAnimationTween.circle;                        break;                      case "back":                        Animation.Animation[pos].Tween = MpeAnimationTween.back;                        break;                      case "sine":                        Animation.Animation[pos].Tween = MpeAnimationTween.sine;                        break;                      case "cubic":                        Animation.Animation[pos].Tween = MpeAnimationTween.cubic;                        break;                      case "quadratic":                        Animation.Animation[pos].Tween = MpeAnimationTween.quadratic;                        break;                      case "linear":                        Animation.Animation[pos].Tween = MpeAnimationTween.linear;                        break;                    }
Missing Default,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,Load,The following switch statement is missing a default case: switch (i.Current.GetAttribute("easing"' String.Empty))                    {                      case "out":                        Animation.Animation[pos].Easing = MpeAnimationEasing.Out;                        break;                      case "in":                        Animation.Animation[pos].Easing = MpeAnimationEasing.In;                        break;                      case "inout":                        Animation.Animation[pos].Easing = MpeAnimationEasing.inout;                        break;                    }
Missing Default,Mpe.Controls,MpeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeControl.cs,OnLockChanged,The following switch statement is missing a default case: switch (type)          {            case MpeControlLockType.Location:              if (MpeParent.Spring)              {                if (value == false)                {                  MpeLog.Warn("Cannot change location lock. The control belongs to a spring layout.");                  controlLock.Location = true;                }              }              else              {                if (MpeParent.LayoutStyle != MpeLayoutStyle.Grid)                {                  if (value == false)                  {                    MpeLog.Warn("Cannot change location lock. The control belongs to a flow layout.");                    controlLock.Location = true;                  }                }              }              break;            case MpeControlLockType.Size:              if (MpeParent.Spring)              {                if (value == false)                {                  MpeLog.Warn("Cannot change size lock. The control belongs to a spring layout.");                  controlLock.Size = true;                }              }              else              {                if (MpeParent.LayoutStyle == MpeLayoutStyle.Grid)                {                  if (AutoSize)                  {                    if (value == false)                    {                      MpeLog.Warn("Cannot change size lock. The control is autosized.");                      controlLock.Size = true;                    }                  }                }              }              break;          }
Missing Default,Mpe.Controls,MpeItemManager,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeItemManager.cs,UpdateCollection,The following switch statement is missing a default case: switch (Type)        {          case MpeItemType.Integer:            int nFirst = int.Parse(First);            int nLast = int.Parse(Last);            int nInterval = int.Parse(Interval);            if (nFirst <= nLast)            {              for (int i = nFirst; i <= nLast; i += nInterval)              {                values.Add(Type' i.ToString("D" + Digits));              }            }            else            {              for (int i = nFirst; i >= nLast; i -= nInterval)              {                values.Add(Type' i.ToString("D" + Digits));              }            }            break;          case MpeItemType.Float:            double fFirst = double.Parse(First);            double fLast = double.Parse(Last);            double fInterval = double.Parse(Interval);            double f = fFirst;            if (fFirst <= fLast)            {              while (f <= fLast)              {                values.Add(Type' f.ToString("F" + Digits));                f += fInterval;              }              f = double.Parse(values[values.Count - 1].Value);              if (f != fLast)              {                values.Add(Type' fLast.ToString("F" + Digits));              }            }            else            {              f = fFirst;              while (f >= fLast)              {                values.Add(Type' f.ToString("F" + Digits));                f -= fInterval;              }              f = double.Parse(values[values.Count - 1].Value);              if (f != fLast)              {                values.Add(Type' fLast.ToString("F" + Digits));              }            }            break;        }
Missing Default,Mpe.Controls,MpeSpinButton,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeSpinButton.cs,PrepareControl,The following switch statement is missing a default case: switch (Alignment)            {              case MpeControlAlignment.Left:                imageGroup.Controls.Add(imageDown);                imageGroup.Controls.Add(imageUp);                Controls.Add(label);                Controls.Add(imageGroup);                break;              case MpeControlAlignment.Center:                Controls.Add(imageDown);                Controls.Add(label);                Controls.Add(imageUp);                break;              case MpeControlAlignment.Right:                imageGroup.Controls.Add(imageDown);                imageGroup.Controls.Add(imageUp);                Controls.Add(imageGroup);                Controls.Add(label);                break;            }
Missing Default,Mpe.Controls,MpeTextArea,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\MpeTextArea.cs,PrepareControl,The following switch statement is missing a default case: switch (SpinAlign)          {            case MpeControlAlignment.Right:              spinButton.Left = Width - spinButton.Width - Padding.Right;              break;            case MpeControlAlignment.Left:              spinButton.Left = Padding.Left;              break;          }
Missing Default,Mpe.Controls.Properties,MpeAnimationType,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Controls\Properties\MpeAnimationType.cs,Save,The following switch statement is missing a default case: switch (i)            {              case 0:                value = MpeAnimationTypeEnum.WindowOpen.ToString();                break;              case 1:                value = MpeAnimationTypeEnum.WindowClose.ToString();                break;              case 2:                value = MpeAnimationTypeEnum.Hidden.ToString();                break;              case 3:                value = MpeAnimationTypeEnum.Focus.ToString();                break;              case 4:                value = MpeAnimationTypeEnum.Unfocus.ToString();                break;              case 5:                value = MpeAnimationTypeEnum.VisibleChange.ToString();                break;            }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnControlPropertyValueChanged,The following switch statement is missing a default case: switch (property)        {          case "Id":            UpdatePropertyManager();            break;        }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseDown,The following switch statement is missing a default case: switch (mask.ResizeNodeIndex)            {              case 0:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 1:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 2:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top;                break;              case 3:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                break;              case 4:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                break;              case 5:                mask.DragPoint.X = p.X - mask.SelectedControl.Left;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 6:                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;              case 7:                mask.DragPoint.X = p.X - mask.SelectedControl.Left - mask.SelectedControl.Width;                mask.DragPoint.Y = p.Y - mask.SelectedControl.Top - mask.SelectedControl.Height;                break;            }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMouseMove,The following switch statement is missing a default case: switch (mask.ResizeNodeIndex)            {              case 0:                x = p.X - mask.DragPoint.X;                x = mask.SnapToGrid ? x - (x%mask.GridSize.Width) : x;                w = mask.SelectedControl.Right - x;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                  mask.SelectedControl.Left = x;                }                y = p.Y - mask.DragPoint.Y;                y = mask.SnapToGrid ? y - (y%mask.GridSize.Height) : y;                h = mask.SelectedControl.Bottom - y;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                  mask.SelectedControl.Top = y;                }                if (Cursor != Cursors.SizeNWSE)                {                  Cursor = Cursors.SizeNWSE;                }                StatusBar.LocationStatus(mask.SelectedControl.Location);                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 1:                y = p.Y - mask.DragPoint.Y;                y = mask.SnapToGrid ? y - (y%mask.GridSize.Height) : y;                h = mask.SelectedControl.Bottom - y;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                  mask.SelectedControl.Top = y;                }                if (Cursor != Cursors.SizeNS)                {                  Cursor = Cursors.SizeNS;                }                StatusBar.LocationStatus(mask.SelectedControl.Location);                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 2:                w = p.X - mask.DragPoint.X - mask.SelectedControl.Left;                w = mask.SnapToGrid ? w - (w%mask.GridSize.Width) : w;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                }                y = p.Y - mask.DragPoint.Y;                y = mask.SnapToGrid ? y - (y%mask.GridSize.Height) : y;                h = mask.SelectedControl.Bottom - y;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                  mask.SelectedControl.Top = y;                }                if (Cursor != Cursors.SizeNESW)                {                  Cursor = Cursors.SizeNESW;                }                StatusBar.LocationStatus(mask.SelectedControl.Location);                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 3:                x = p.X - mask.DragPoint.X;                x = mask.SnapToGrid ? x - (x%mask.GridSize.Width) : x;                w = mask.SelectedControl.Right - x;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                  mask.SelectedControl.Left = x;                }                if (Cursor != Cursors.SizeWE)                {                  Cursor = Cursors.SizeWE;                }                StatusBar.LocationStatus(mask.SelectedControl.Location);                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 4:                w = p.X - mask.DragPoint.X - mask.SelectedControl.Left;                w = mask.SnapToGrid ? w - (w%mask.GridSize.Width) : w;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                }                if (Cursor != Cursors.SizeWE)                {                  Cursor = Cursors.SizeWE;                }                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 5:                x = p.X - mask.DragPoint.X;                x = mask.SnapToGrid ? x - (x%mask.GridSize.Width) : x;                w = mask.SelectedControl.Right - x;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                  mask.SelectedControl.Left = x;                }                h = p.Y - mask.DragPoint.Y - mask.SelectedControl.Top;                h = mask.SnapToGrid ? h - (h%mask.GridSize.Height) : h;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                }                if (Cursor != Cursors.SizeNESW)                {                  Cursor = Cursors.SizeNESW;                }                StatusBar.LocationStatus(mask.SelectedControl.Location);                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 6:                h = p.Y - mask.DragPoint.Y - mask.SelectedControl.Top;                h = mask.SnapToGrid ? h - (h%mask.GridSize.Height) : h;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                }                if (Cursor != Cursors.SizeNS)                {                  Cursor = Cursors.SizeNS;                }                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;              case 7:                w = p.X - mask.DragPoint.X - mask.SelectedControl.Left;                w = mask.SnapToGrid ? w - (w%mask.GridSize.Width) : w;                if (w >= mask.MinControlSize.Width)                {                  mask.SelectedControl.Width = w;                }                h = p.Y - mask.DragPoint.Y - mask.SelectedControl.Top;                h = mask.SnapToGrid ? h - (h%mask.GridSize.Height) : h;                if (h >= mask.MinControlSize.Height)                {                  mask.SelectedControl.Height = h;                }                if (Cursor != Cursors.SizeNWSE)                {                  Cursor = Cursors.SizeNWSE;                }                StatusBar.SizeStatus(mask.SelectedControl.Size);                break;            }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnKeyUp,The following switch statement is missing a default case: switch (e.KeyCode)        {          case Keys.Escape:            mask.SelectedControl = null;            UpdatePropertyManager();            break;          case Keys.Delete:            MenuCommand c = new MenuCommand("Delete");            OnMenuSelection(c);            break;        }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,OnMenuSelection,The following switch statement is missing a default case: switch (command.Text)        {          case "Parent":            mask.SelectedControl = mask.SelectedControl.MpeParent;            UpdatePropertyManager();            break;          case "Send To Back":            mask.SelectedControl.SendToBack();            break;          case "Bring To Front":            mask.SelectedControl.BringToFront();            break;          case "Cut":            CutControl();            break;          case "Copy":            CopyControl();            break;          case "Paste":            PasteControl();            break;          case "Delete":            if (AllowDeletions)            {              if (mask.SelectedControl.MpeParent != null)              {                try                {                  MpeControl control = mask.SelectedControl;                  MpeContainer parent = control.MpeParent;                  parent.Controls.Remove(control);                  mask.SelectedControl = null;                  UpdatePropertyManager();                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Properties":            mpe.FocusPropertyManager();            break;          case "Test":            //mask2.SelectedControl = mask.SelectedControl;            break;        }
Missing Default,Mpe.Designers,MpeResourceDesigner,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Designers\MpeResourceDesigner.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData)          {            case Keys.Right:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Left += (mask.GridSize.Width - (mask.SelectedControl.Left%mask.GridSize.Width));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              else if (parent.LayoutStyle == MpeLayoutStyle.HorizontalFlow)              {                mask.SelectedControl.SendBack();              }              break;            case Keys.Right | Keys.Shift:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Left ++;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              break;            case Keys.Right | Keys.Control:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Width += (mask.GridSize.Width - (mask.SelectedControl.Width%mask.GridSize.Width));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Right | Keys.Control | Keys.Shift:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Width ++;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Left:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Left -= (mask.GridSize.Width - (mask.SelectedControl.Left%mask.GridSize.Width));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              else if (parent.LayoutStyle == MpeLayoutStyle.HorizontalFlow)              {                mask.SelectedControl.BringForward();              }              break;            case Keys.Left | Keys.Shift:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Left --;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              break;            case Keys.Left | Keys.Control:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Width -= (mask.GridSize.Width - (mask.SelectedControl.Width%mask.GridSize.Width));                  if (mask.SelectedControl.Width < mask.MinControlSize.Width)                  {                    mask.SelectedControl.Width = mask.MinControlSize.Width;                  }                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Left | Keys.Control | Keys.Shift:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Width --;                  if (mask.SelectedControl.Width < mask.MinControlSize.Width)                  {                    mask.SelectedControl.Width = mask.MinControlSize.Width;                  }                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Up:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Top -= (mask.GridSize.Height - (mask.SelectedControl.Top%mask.GridSize.Height));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              else if (parent.LayoutStyle == MpeLayoutStyle.VerticalFlow)              {                mask.SelectedControl.BringForward();              }              break;            case Keys.Up | Keys.Shift:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Top--;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              break;            case Keys.Up | Keys.Control:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Height -= (mask.GridSize.Height -                                                  (mask.SelectedControl.Height%mask.GridSize.Height));                  if (mask.SelectedControl.Height < mask.MinControlSize.Height)                  {                    mask.SelectedControl.Height = mask.MinControlSize.Height;                  }                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Up | Keys.Control | Keys.Shift:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Height --;                  if (mask.SelectedControl.Height < mask.MinControlSize.Height)                  {                    mask.SelectedControl.Height = mask.MinControlSize.Height;                  }                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Down:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Top += (mask.GridSize.Height - (mask.SelectedControl.Top%mask.GridSize.Height));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              else if (parent.LayoutStyle == MpeLayoutStyle.VerticalFlow)              {                mask.SelectedControl.SendBack();              }              break;            case Keys.Down | Keys.Shift:              if (parent.LayoutStyle == MpeLayoutStyle.Grid)              {                if (mask.LocationLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Top++;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is LocationLocked and cannot be moved using the keyboard or mouse");                }              }              break;            case Keys.Down | Keys.Control:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Height += (mask.GridSize.Height -                                                  (mask.SelectedControl.Height%mask.GridSize.Height));                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;            case Keys.Down | Keys.Control | Keys.Shift:              if (parent.Spring == false)              {                if (mask.SizeLocked == false)                {                  mask.Hide();                  mask.SelectedControl.Height ++;                }                else                {                  mpe.StatusBar.Warn(                    "The selected control is SizeLocked and cannot be resized using the keyboard or mouse");                }              }              break;          }
Missing Default,Mpe.Forms,MpeExplorer,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeExplorer.cs,OnMenuSelection,The following switch statement is missing a default case: switch (c.Text)        {          case "Delete":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The resource file cannot be deleted because it is currently being editted.");              MessageBox.Show(this' "The resource file cannot be deleted because it is currently being editted."'                              "Error Deleting File"' MessageBoxButtons.OK' MessageBoxIcon.Warning);              return;            }            if (selectedNode.Parent == imageNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected image?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteImageFile(selectedNode.Text);                  MpeLog.Info("Deleted image file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadImages();                }              }            }            else if (selectedNode.Parent == screenNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected screen?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteScreenFile(selectedNode.Text);                  MpeLog.Info("Deleted screen file [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadScreens();                }              }            }            else if (selectedNode.Parent == fontNode)            {              DialogResult result =                MessageBox.Show(this'                                "Are you sure you want to permanently delete the selected font?\n\n" + selectedNode.Text'                                "Delete Confirmation"' MessageBoxButtons.YesNo' MessageBoxIcon.Question);              if (result == DialogResult.Yes)              {                try                {                  Parser.DeleteFont(selectedNode.Text);                  MpeLog.Info("Deleted font [" + selectedNode.Text + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }                finally                {                  LoadFonts();                }              }            }            break;          case "Rename":            if (selectedNode.Parent == imageNode || selectedNode.Parent == screenNode || selectedNode.Parent == fontNode)            {              skinTree.SelectedNode = selectedNode;              skinTree.LabelEdit = true;              if (selectedNode.IsEditing == false)              {                selectedNode.BeginEdit();              }            }            break;          case "Add Existing...":            if (selectedNode == imageNode)            {              openFileDialog.Title = "Add Existing Image";              openFileDialog.Filter = "Image Files (*.png;*.jpg;*.gif;*.bmp)|*.PNG;*.JPG;*.GIF;*.BMP";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newImageFile = Parser.AddImageFile(new FileInfo(openFileDialog.FileName));                  LoadImages();                  for (int i = 0; i < imageNode.Nodes.Count; i++)                  {                    if (imageNode.Nodes[i].Text.Equals(newImageFile.Name))                    {                      selectedNode = imageNode.Nodes[i];                      skinTree.SelectedNode = imageNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added image file [" + newImageFile.FullName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            else if (selectedNode == screenNode)            {              openFileDialog.Title = "Add Existing Screen";              openFileDialog.Filter = "Screen Files (*.xml)|*.XML";              DialogResult result = openFileDialog.ShowDialog(this);              if (result == DialogResult.OK)              {                try                {                  FileInfo newScreenFile = Parser.AddScreenFile(new FileInfo(openFileDialog.FileName));                  LoadScreens();                  for (int i = 0; i < screenNode.Nodes.Count; i++)                  {                    if (screenNode.Nodes[i].Text.Equals(newScreenFile.Name))                    {                      selectedNode = screenNode.Nodes[i];                      skinTree.SelectedNode = screenNode.Nodes[i];                      skinTree.LabelEdit = true;                      selectedNode.BeginEdit();                      break;                    }                  }                  MpeLog.Info("Added screen file [" + openFileDialog.FileName + "]");                }                catch (Exception ee)                {                  MpeLog.Debug(ee);                  MpeLog.Error(ee);                }              }            }            break;          case "Add New...":            if (selectedNode == screenNode)            {              try              {                FileInfo f = Parser.AddScreenFile();                MpeLog.Info("Added new screen file [" + f.Name + "]");                LoadScreens();                for (int i = 0; i < screenNode.Nodes.Count; i++)                {                  if (screenNode.Nodes[i].Text.Equals(f.Name))                  {                    skinTree.SelectedNode = screenNode.Nodes[i];                    selectedNode = screenNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            else if (selectedNode == fontNode)            {              try              {                string s = Parser.AddFont();                MpeLog.Info("Added new font [" + s + "]");                LoadFonts();                for (int i = 0; i < fontNode.Nodes.Count; i++)                {                  if (fontNode.Nodes[i].Text.Equals(s))                  {                    skinTree.SelectedNode = fontNode.Nodes[i];                    selectedNode = fontNode.Nodes[i];                    skinTree.LabelEdit = true;                    selectedNode.BeginEdit();                    return;                  }                }              }              catch (Exception ee)              {                MpeLog.Debug(ee);                MpeLog.Error(ee);              }            }            break;          case "Window":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Window);                selectedNode.Tag = info;                selectedNode.ImageIndex = 6;                selectedNode.SelectedImageIndex = 6;              }            }            break;          case "Dialog":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.Dialog);                selectedNode.Tag = info;                selectedNode.ImageIndex = 7;                selectedNode.SelectedImageIndex = 7;              }            }            break;          case "OnScreenDisplay":            if (mpe.IsResourceOpen(selectedNode.Text))            {              MpeLog.Warn("The screen type cannot be modified because it is currently being editted.");              MessageBox.Show(this' "The screen type cannot be modified because it is currently being editted.."'                              "Error Modifying Screen Type"' MessageBoxButtons.OK' MessageBoxIcon.Warning);            }            else            {              if (DialogResult.Yes ==                  MessageBox.Show(this' "Are you sure you want to change this screen's type?"' "Screen Type Confirmation"'                                  MessageBoxButtons.YesNo' MessageBoxIcon.Question))              {                MpeScreenInfo info = Parser.ModifyScreenType(selectedNode.Text' MpeScreenType.OnScreenDisplay);                selectedNode.Tag = info;                selectedNode.ImageIndex = 8;                selectedNode.SelectedImageIndex = 8;              }            }            break;        }
Missing Default,Mpe.Forms,MpeStatusBar,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\Forms\MpeStatusBar.cs,OnPanelClick,The following switch statement is missing a default case: switch (c.Text)            {              case "Debug":                MpeLog.Threshold = MpeLogLevel.Debug;                MpeLog.Debug("Log Level set to Debug");                break;              case "Info":                MpeLog.Threshold = MpeLogLevel.Info;                MpeLog.Info("Log Level set to Info");                break;              case "Warn":                MpeLog.Threshold = MpeLogLevel.Warn;                MpeLog.Warn("Log Level set to Warn");                break;              case "Error":                MpeLog.Threshold = MpeLogLevel.Error;                MpeLog.Error("Log Level set to Error");                break;            }
Missing Default,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlWindowState,The following switch statement is missing a default case: switch (s)            {              case "Normal":                return FormWindowState.Normal;              case "Maximized":                return FormWindowState.Maximized;              case "Minimized":                return FormWindowState.Minimized;            }
Missing Default,Mpe,MpePreferences,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\Tools\SkinEditor\src\MpePreferences.cs,GetXmlLogLevel,The following switch statement is missing a default case: switch (s)            {              case "Debug":                return MpeLogLevel.Debug;              case "Info":                return MpeLogLevel.Info;              case "Warn":                return MpeLogLevel.Warn;              case "Error":                return MpeLogLevel.Error;            }
