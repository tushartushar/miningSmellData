Implementation smell,Namespace,Class,File,Method,Description
Long Method,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The method has 154 lines of code.
Long Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,Initalise,The method has 103 lines of code.
Long Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetGuide,The method has 118 lines of code.
Long Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetProgram,The method has 103 lines of code.
Long Method,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,Import,The method has 197 lines of code.
Long Method,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,LoadConfig,The method has 108 lines of code.
Complex Method,MediaPortal.EPG.config,ChannelsList,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\config\ChannelsList.cs,FindChannel,Cyclomatic complexity of the method is 8
Complex Method,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,Cyclomatic complexity of the method is 26
Complex Method,MediaPortal.WebEPG,XMLTVExport,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\Utils\XMLTVExport.cs,WriteProgram,Cyclomatic complexity of the method is 10
Complex Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,Initalise,Cyclomatic complexity of the method is 11
Complex Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetGuide,Cyclomatic complexity of the method is 13
Complex Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetProgram,Cyclomatic complexity of the method is 14
Complex Method,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetListing,Cyclomatic complexity of the method is 8
Complex Method,MediaPortal.WebEPG.Profile,Xml,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\MPCode\Xml.cs,SetValue,Cyclomatic complexity of the method is 8
Complex Method,MediaPortal.WebEPG.Parser,WebParser,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\Parser\WebParser.cs,GetData,Cyclomatic complexity of the method is 8
Complex Method,MediaPortal.WebEPG.Parser,ProgramData,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\Parser\ProgramData.cs,Merge,Cyclomatic complexity of the method is 13
Complex Method,MediaPortal.WebEPG.Parser,ProgramData,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\Parser\ProgramData.cs,SetElement,Cyclomatic complexity of the method is 24
Complex Method,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,Import,Cyclomatic complexity of the method is 31
Long Parameter List,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetGuide,The method has 5 parameters. Parameters: strChannelID' displayName' Linked' linkTime' startDateTime
Long Statement,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetProgram,The length of the statement  "      //Log.Debug("WebEPG: Guide' Program start: {0}:{1} - {2}/{3}/{4}"' guideData.StartTime.Hour' guideData.StartTime.Minute' guideData.StartTime.Day' guideData.StartTime.Month' guideData.StartTime.Year);" is 199.
Long Statement,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetProgram,The length of the statement  "      //  Log.Debug("WebEPG: Guide' Program end  : {0}:{1} - {2}/{3}/{4}"' guideData.EndTime.Hour' guideData.EndTime.Minute' guideData.EndTime.Day' guideData.EndTime.Month' guideData.EndTime.Year);" is 191.
Complex Conditional,MediaPortal.EPG.config,EPGConfig,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\config\EPGConfig.cs,UpdateAt,The conditional expression  "index < _ConfigList.Count && channel.ChannelID != null && channel.DisplayName != null &&            channel.PrimaryGrabberID != null"  is complex.
Complex Conditional,MediaPortal.WebEPG,RequestBuilder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\RequestBuilder.cs,HasDate,The conditional expression  "_baseRequest.HasTag("[DD]") ||          _baseRequest.HasTag("[_D]") ||          _baseRequest.HasTag("[MM]") ||          _baseRequest.HasTag("[_M]") ||          _baseRequest.HasTag("[YYYY]") ||          _baseRequest.HasTag("[MONTH]") ||          _baseRequest.HasTag("[DAY_OF_WEEK]") ||          _baseRequest.HasTag("[WEEKDAY]") ||          _baseRequest.HasTag("[DAY_NAME]") ||          _baseRequest.HasTag("[DAY_OFFSET]") ||          _baseRequest.HasTag("[EPOCH_TIME]") ||          _baseRequest.HasTag("[EPOCH_DATE]") ||          _baseRequest.HasTag("[DAYS_SINCE]") ||          _baseRequest.HasTag("[DAYOFYEAR]")"  is complex.
Empty Catch Block,MediaPortal.WebEPG.Profile,Xml,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\MPCode\Xml.cs,Save,The method has an empty catch block.
Empty Catch Block,MediaPortal.WebEPG.Profile,Xml,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\MPCode\Xml.cs,GetValueAsInt,The method has an empty catch block.
Empty Catch Block,MediaPortal.WebEPG.Profile,Xml,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\MPCode\Xml.cs,GetValueAsFloat,The method has an empty catch block.
Magic Number,MediaPortal.EPG.config,EPGConfig,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\config\EPGConfig.cs,Load,The following statement contains a magic number: channel.linkStart = xmlreader.GetValueAsInt(i.ToString()' "Grabber1-Start"' 18);
Magic Number,MediaPortal.EPG.config,EPGConfig,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\config\EPGConfig.cs,Load,The following statement contains a magic number: channel.linkEnd = xmlreader.GetValueAsInt(i.ToString()' "Grabber1-End"' 23);
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,CheckAdjustTime,The following statement contains a magic number: switch (_expectedTime)        {            // Start of a new day - need to work out if the listings start in the morning or afternoon          case Expect.Start:            if (OnPreviousDay(guideStartTime.Hour))            {              return false; // Guide starts on previous day ignore these listings.            }              if (_newDay)            {              _newDay = false;              //if (guideStartTime.Hour < _startTime.Hour)              //  return false;                if (guideStartTime.Hour <= 12)              {                _expectedTime = Expect.BeforeMidday;                goto case Expect.BeforeMidday;              }                _expectedTime = Expect.AfterMidday;              goto case Expect.AfterMidday;            }              _expectedTime = Expect.BeforeMidday;            goto case Expect.BeforeMidday; // Pass into BeforeMidday Code              // Before Midday          case Expect.BeforeMidday:            if (_lastTime > guideStartTime.Hour)            {              // last time was before midday' new time is less -> site doesn't have 24 hours or AM/PM              _expectedTime = Expect.AfterMidday;            }            else            {              if (guideStartTime.Hour <= 12)              {                break; // Time is before midday -> Do nothing              }            }              // Pass into AfterMidday Code            goto case Expect.AfterMidday;              // After midday          case Expect.AfterMidday:            bool adjusted = false;            if (guideStartTime.Hour < 12) // Site doesn't have correct time            {              guideStartTime.Hour += 12; // starts again at 1:00 without "pm"              adjusted = true;            }              if (_lastTime > guideStartTime.Hour)            {              if (_nextDay)              {                _addDays++;                _grabDay++;                _startTime = _startTime.AddDays(1);              }              else              {                _nextDay = true;              }                if (adjusted)              {                guideStartTime.Hour -= 12;              }                if (guideStartTime.Hour < 12)              {                _expectedTime = Expect.BeforeMidday;              }            }              break;            default:            break;        }
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,OnPreviousDay,The following statement contains a magic number: _startTime.Hour >= 21 && _programCount <= 6
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,OnPreviousDay,The following statement contains a magic number: _startTime.Hour >= 21 && _programCount <= 6
Magic Number,MediaPortal.WebEPG,ListingTimeControl,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\ListingTimeControl.cs,OnPreviousDay,The following statement contains a magic number: programStartHour >= 21
Magic Number,MediaPortal.WebEPG,RequestBuilder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\RequestBuilder.cs,GetRequest,The following statement contains a magic number: dayNum += 7;
Magic Number,MediaPortal.WebEPG,RequestBuilder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\RequestBuilder.cs,GetRequest,The following statement contains a magic number: dayNum = dayNum % 7;
Magic Number,MediaPortal.WebEPG,RequestBuilder,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\RequestBuilder.cs,GetRequest,The following statement contains a magic number: dayNum > 6
Magic Number,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetGuide,The following statement contains a magic number: _grabber.Listing.Request.Delay = 500;
Magic Number,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetGuide,The following statement contains a magic number: _grabber.Listing.Request.Delay < 500
Magic Number,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,GetProgram,The following statement contains a magic number: guideData.StartTime.ToLocalTime() < _grabStart.AddHours(-2)
Magic Number,MediaPortal.WebEPG.Parser,ProgramData,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\Parser\ProgramData.cs,GetActors,The following statement contains a magic number: char[] delimitors = new char[2] {'''' '\n'};
Magic Number,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,Import,The following statement contains a magic number: _status.EndTime = new DateTime(1971' 11' 6);
Magic Number,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,Import,The following statement contains a magic number: _status.EndTime = new DateTime(1971' 11' 6);
Magic Number,MediaPortal.EPG,WebEPG,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebEPG.cs,Import,The following statement contains a magic number: _status.EndTime = new DateTime(1971' 11' 6);
Missing Default,MediaPortal.WebEPG,WebListingGrabber,D:\research\architectureSmells\repos\MediaPortal_MediaPortal-1\TvEngine3\TVLibrary\Plugins\WebEPG\WebEPG\WebListingGrabber.cs,Initalise,The following switch statement is missing a default case: switch (_grabber.Listing.listingType)       {         case ListingInfo.Type.Xml:           _parser = new XmlParser(_grabber.Listing.XmlTemplate);           break;            case ListingInfo.Type.JSON:            _parser = new JSONParser(_grabber.Listing.JSONTemplate);            break;          case ListingInfo.Type.Data:            if (_grabber.Listing.DataTemplate.Template == null)           {             Log.Error("WebEPG: {0}: No Template"' File);             return false;           }           _parser = new DataParser(_grabber.Listing.DataTemplate);           break;          case ListingInfo.Type.Html:           HtmlParserTemplate defaultTemplate = _grabber.Listing.HtmlTemplate.GetTemplate("default");           if (defaultTemplate == null ||               defaultTemplate.SectionTemplate == null ||               defaultTemplate.SectionTemplate.Template == null)           {             Log.Error("WebEPG: {0}: No Template"' File);             return false;           }           _parser = new WebParser(_grabber.Listing.HtmlTemplate);           if (_grabber.Info.GrabDays < _maxGrabDays)           {             Log.Info("WebEPG: Grab days ({0}) more than Guide days ({1})' limiting grab to {1} days"'                      _maxGrabDays' _grabber.Info.GrabDays);             _maxGrabDays = _grabber.Info.GrabDays;           }            break;       }
