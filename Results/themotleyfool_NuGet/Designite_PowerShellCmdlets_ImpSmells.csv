Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,Cyclomatic complexity of the method is 7
Complex Method,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,WritePackages,Cyclomatic complexity of the method is 7
Complex Method,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,LogCore,Cyclomatic complexity of the method is 12
Complex Method,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,CreateRepositoryFromSource,Cyclomatic complexity of the method is 7
Complex Method,NuGet.PowerShell.Commands,OpenPackagePageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\OpenPackagePageCommand.cs,ProcessRecordCore,Cyclomatic complexity of the method is 7
Complex Method,NuGet.PowerShell.Commands,PSPathUtility,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\PSPathUtility.cs,TryTranslatePSPath,Cyclomatic complexity of the method is 7
Complex Method,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,PerformReinstalls,Cyclomatic complexity of the method is 8
Complex Method,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,PerformUpdates,Cyclomatic complexity of the method is 10
Long Parameter List,NuGet.PowerShell.Commands,GetRemotePackageVersionCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageVersionCommand.cs,GetRemotePackageVersionCommand,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,GetRemotePackageIdCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageIdCommand.cs,GetRemotePackageIdCommand,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,FindPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\FindPackageCommand.cs,FindPackageCommand,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,GetPackageCommand,The method has 6 parameters.
Long Parameter List,NuGet.PowerShell.Commands,IErrorHandler,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\IErrorHandler.cs,HandleException,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,InstallPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,InstallPackageCommand,The method has 8 parameters.
Long Parameter List,NuGet.PowerShell.Commands,JsonApiCommandBase,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,JsonApiCommandBase,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,TryTranslatePSPath,The method has 4 parameters.
Long Parameter List,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,HandleException,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,ProcessPackageBaseCommand,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,ExecuteScript,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,PSPathUtility,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\PSPathUtility.cs,TryTranslatePSPath,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,UninstallPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UninstallPackageCommand.cs,UninstallPackageCommand,The method has 5 parameters.
Long Parameter List,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,UpdatePackageCommand,The method has 8 parameters.
Long Identifier,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,EndProcessing,The length of the parameter packageDirectoriesMarkedForDeletion is 35.
Long Statement,NuGet.PowerShell.Commands,FindPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\FindPackageCommand.cs,GetPackagesForUpdate,The length of the statement  "	return sourceRepository.GetUpdates (packagesToUpdate' IncludePrerelease' includeAllVersions: AllVersions).OrderByDescending (p => p.DownloadCount).ThenBy (p => p.Id).AsQueryable (); " is 181.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "		// In the event the client is going up against a v1 feed' do not try to fetch pre release packages since this flag does not exist. " is 130.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "			// Review: We should change this to show both the absolute latest and the latest versions but that requires changes to our collapsing behavior. " is 143.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "		// Optimization: If First parameter is specified' we'll wrap the IQueryable in a BufferedEnumerable to prevent consuming the entire result set. " is 143.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "		// If we aren't collapsing versions' and the pre-release flag is not set' only display release versions when displaying from a remote source. " is 141.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,IsRepositoryUsedForSearch,The length of the statement  "	return !Updates.IsPresent && !String.IsNullOrEmpty (Filter) && repository is IServiceBasedRepository && !(repository is AggregateRepository); " is 141.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,GetPackages,The length of the statement  "	IQueryable<IPackage> packages = String.IsNullOrEmpty (Filter) ? sourceRepository.GetPackages () : sourceRepository.Search (Filter' effectiveIncludePrerelease); " is 159.
Long Statement,NuGet.PowerShell.Commands,InstallPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,CreatePackageManager,The length of the statement  "		return repository == null ? null : PackageManagerFactory.CreatePackageManager (repository' useFallbackForDependencies: true); " is 125.
Long Statement,NuGet.PowerShell.Commands,InstallPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,ProcessRecordCore,The length of the statement  "				PackageManager.InstallPackage (ProjectManager' Id' Version' ignoreDependencies: IgnoreDependencies' allowPrereleaseVersions: IncludePrerelease.IsPresent' logger: this); " is 168.
Long Statement,NuGet.PowerShell.Commands,JsonApiCommandBase,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,AggregateResults,The length of the statement  "	var tasks = aggregatePackageRepository.Repositories.Select (r => Task.Factory.StartNew (() => GetResults (r))).ToArray (); " is 122.
Long Statement,NuGet.PowerShell.Commands,JsonApiCommandBase,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,BuildQueryString,The length of the statement  "	return String.Join ("&"' queryParameters.Select (param => string.Format (CultureInfo.InvariantCulture' "{0}={1}"' param.Key' Uri.EscapeDataString (param.Value)))); " is 163.
Long Statement,NuGet.PowerShell.Commands,JsonApiCommandBase,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,GetResults,The length of the statement  "	Debug.Assert (!(packageRepository is AggregateRepository)' "This should never be called for an aggregate package repository."); " is 127.
Long Statement,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,WriteProjectNotFoundError,The length of the statement  "	var notFoundException = new ItemNotFoundException (String.Format (CultureInfo.CurrentCulture' Resources.Cmdlet_ProjectNotFound' projectName)); " is 142.
Long Statement,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,WriteProjectNotFoundError,The length of the statement  "	ErrorHandler.HandleError (new ErrorRecord (notFoundException' NuGetErrorId.ProjectNotFound' // This is your locale-agnostic error id. " is 133.
Long Statement,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,ThrowSolutionNotOpenTerminatingError,The length of the statement  "	ErrorHandler.HandleException (new InvalidOperationException (Resources.Cmdlet_NoSolution)' terminating: true' errorId: NuGetErrorId.NoActiveSolution' category: ErrorCategory.InvalidOperation); " is 192.
Long Statement,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,ThrowNoCompatibleProjectsTerminatingError,The length of the statement  "	ErrorHandler.HandleException (new InvalidOperationException (Resources.Cmdlet_NoCompatibleProjects)' terminating: true' errorId: NuGetErrorId.NoCompatibleProjects' category: ErrorCategory.InvalidOperation); " is 206.
Long Statement,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,EndProcessing,The length of the statement  "		var message = string.Format (CultureInfo.CurrentCulture' VsResources.RequestRestartToCompleteUninstall' string.Join ("' "' packageDirectoriesMarkedForDeletion)); " is 161.
Long Statement,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,OnPackageReferenceRemoving,The length of the statement  "		ExecuteScript (e.InstallPath' PowerShellScripts.Uninstall' e.Package' projectManager.GetTargetFrameworkForPackage (e.Package.Id)' project); " is 139.
Long Statement,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,WriteDisclaimerText,The length of the statement  "		string message = String.Format (CultureInfo.CurrentCulture' Resources.Cmdlet_InstallSuccessDisclaimerText' package.Id' String.Join ("' "' package.Authors)' package.LicenseUrl); " is 176.
Long Statement,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,StartOperation,The length of the statement  "	return DisposableAction.All (PackageManager.SourceRepository.StartOperation (operation)' ProjectManager != null ? ProjectManager.SourceRepository.StartOperation (operation) : DisposableAction.NoOp); " is 198.
Long Statement,NuGet.PowerShell.Commands,PSPathUtility,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\PSPathUtility.cs,TryTranslatePSPath,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' CommonResources.Argument_Cannot_Be_Null_Or_Empty' "psPath")); " is 133.
Long Statement,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,CreatePackageManager,The length of the statement  "		return repository == null ? null : PackageManagerFactory.CreatePackageManager (repository' useFallbackForDependencies: true); " is 125.
Long Statement,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,PerformUpdates,The length of the statement  "					PackageManager.UpdatePackageToSpecificVersion (Id' Version' !IgnoreDependencies.IsPresent' IncludePrerelease' this' this); " is 122.
Long Statement,NuGet.PowerShell.Commands,UpdatePackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,PerformUpdates,The length of the statement  "					PackageManager.UpdatePackageToSpecificVersion (projectManager' Id' Version' !IgnoreDependencies' IncludePrerelease' this); " is 122.
Magic Number,NuGet.PowerShell.Commands,GetRemotePackageIdCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageIdCommand.cs,GetResultsFromPackageRepository,The following statement contains a magic number: return packages.Select (p => p.Id).Distinct ().Take (30);  
Magic Number,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The following statement contains a magic number: if (UseRemoteSourceOnly && _firstValueSpecified) {  	// Optimization: If First parameter is specified' we'll wrap the IQueryable in a BufferedEnumerable to prevent consuming the entire result set.  	packages = packages.AsBufferedEnumerable (First * 3).AsQueryable ();  }  
Magic Number,NuGet.PowerShell.Commands,GetPackageCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The following statement contains a magic number: packages = packages.AsBufferedEnumerable (First * 3).AsQueryable ();  
Magic Number,NuGet.PowerShell.Commands,JsonApiCommandBase,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,AggregateResults,The following statement contains a magic number: return tasks.SelectMany (t => t.Result).Distinct ().Take (30);  
Missing Default,NuGet.PowerShell.Commands,NuGetBaseCommand,D:\newReposJune17\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,LogCore,The following switch statement is missing a default case: switch (level) {  case MessageLevel.Debug:  	WriteVerbose (formattedMessage);  	break;  case MessageLevel.Warning:  	WriteWarning (formattedMessage);  	break;  case MessageLevel.Info:  	WriteLine (formattedMessage);  	break;  case MessageLevel.Error:  	WriteError (formattedMessage);  	break;  }  
