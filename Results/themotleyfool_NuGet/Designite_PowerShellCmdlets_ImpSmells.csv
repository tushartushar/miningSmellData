Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.PowerShell.Commands,GetRemotePackageVersionCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageVersionCommand.cs,GetRemotePackageVersionCommand,The method has 5 parameters. Parameters: solutionManager' packageManagerFactory' httpClientEvents' repositoryFactory' packageSourceProvider
Long Parameter List,NuGet.PowerShell.Commands,GetRemotePackageIdCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageIdCommand.cs,GetRemotePackageIdCommand,The method has 5 parameters. Parameters: solutionManager' packageManagerFactory' httpClientEvents' repositoryFactory' packageSourceProvider
Long Parameter List,NuGet.PowerShell.Commands,FindPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\FindPackageCommand.cs,FindPackageCommand,The method has 5 parameters. Parameters: repositoryFactory' packageSourceProvider' solutionManager' packageManagerFactory' httpClientEvents
Long Parameter List,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,GetPackageCommand,The method has 6 parameters. Parameters: repositoryFactory' packageSourceProvider' solutionManager' packageManagerFactory' httpClientEvents' productUpdateService
Long Parameter List,NuGet.PowerShell.Commands,IErrorHandler,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\IErrorHandler.cs,HandleException,The method has 5 parameters. Parameters: exception' terminating' errorId' category' target
Long Parameter List,NuGet.PowerShell.Commands,InstallPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,InstallPackageCommand,The method has 8 parameters. Parameters: solutionManager' packageManagerFactory' repositoryFactory' packageSourceProvider' httpClientEvents' productUpdateService' vsCommonOperations' deleteOnRestartManager
Long Parameter List,NuGet.PowerShell.Commands,JsonApiCommandBase<T>,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,JsonApiCommandBase,The method has 5 parameters. Parameters: solutionManager' packageManagerFactory' httpClientEvents' repositoryFactory' packageSourceProvider
Long Parameter List,NuGet.PowerShell.Commands,NuGetBaseCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,HandleException,The method has 5 parameters. Parameters: exception' terminating' errorId' category' target
Long Parameter List,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,ProcessPackageBaseCommand,The method has 5 parameters. Parameters: solutionManager' packageManagerFactory' httpClientEvents' vsCommonOperations' deleteOnRestartManager
Long Parameter List,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,ExecuteScript,The method has 5 parameters. Parameters: rootPath' scriptFileName' package' targetFramework' project
Long Parameter List,NuGet.PowerShell.Commands,PSPathUtility,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\PSPathUtility.cs,TryTranslatePSPath,The method has 5 parameters. Parameters: session' psPath' path' exists' errorMessage
Long Parameter List,NuGet.PowerShell.Commands,UninstallPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UninstallPackageCommand.cs,UninstallPackageCommand,The method has 5 parameters. Parameters: solutionManager' packageManagerFactory' httpClientEvents' vsCommonOperations' deleteOnRestartManager
Long Parameter List,NuGet.PowerShell.Commands,UpdatePackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,UpdatePackageCommand,The method has 8 parameters. Parameters: solutionManager' packageManagerFactory' repositoryFactory' packageSourceProvider' httpClientEvents' productUpdateService' vsCommonOperations' deleteOnRestartManager
Long Identifier,NuGet.PowerShell.Commands,ProcessPackageBaseCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\ProcessPackageBaseCommand.cs,EndProcessing,The length of the parameter packageDirectoriesMarkedForDeletion is 35.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "                // In the event the client is going up against a v1 feed' do not try to fetch pre release packages since this flag does not exist. " is 130.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "                    // Review: We should change this to show both the absolute latest and the latest versions but that requires changes to our collapsing behavior. " is 143.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "                // Optimization: If First parameter is specified' we'll wrap the IQueryable in a BufferedEnumerable to prevent consuming the entire result set. " is 143.
Long Statement,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The length of the statement  "                // If we aren't collapsing versions' and the pre-release flag is not set' only display release versions when displaying from a remote source. " is 141.
Long Statement,NuGet.PowerShell.Commands,InstallPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,CreatePackageManager,The length of the statement  "                return repository == null ? null : PackageManagerFactory.CreatePackageManager(repository' useFallbackForDependencies: true); " is 124.
Long Statement,NuGet.PowerShell.Commands,InstallPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\InstallPackageCommand.cs,ProcessRecordCore,The length of the statement  "                        PackageManager.InstallPackage(ProjectManager' Id' Version' ignoreDependencies: IgnoreDependencies' allowPrereleaseVersions: IncludePrerelease.IsPresent' " is 152.
Long Statement,NuGet.PowerShell.Commands,JsonApiCommandBase<T>,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,BuildQueryString,The length of the statement  "            return String.Join("&"' queryParameters.Select(param => string.Format(CultureInfo.InvariantCulture' "{0}={1}"' param.Key' Uri.EscapeDataString(param.Value)))); " is 159.
Long Statement,NuGet.PowerShell.Commands,JsonApiCommandBase<T>,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,GetResults,The length of the statement  "            Debug.Assert(!(packageRepository is AggregateRepository)' "This should never be called for an aggregate package repository."); " is 126.
Long Statement,NuGet.PowerShell.Commands,UpdatePackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\UpdatePackageCommand.cs,CreatePackageManager,The length of the statement  "                return repository == null ? null : PackageManagerFactory.CreatePackageManager(repository' useFallbackForDependencies: true); " is 124.
Magic Number,NuGet.PowerShell.Commands,GetRemotePackageIdCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetRemotePackageIdCommand.cs,GetResultsFromPackageRepository,The following statement contains a magic number: return packages.Select(p => p.Id)                  .Distinct()                  .Take(30);
Magic Number,NuGet.PowerShell.Commands,GetPackageCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\GetPackageCommand.cs,FilterPackages,The following statement contains a magic number: if (UseRemoteSourceOnly && _firstValueSpecified)              {                  // Optimization: If First parameter is specified' we'll wrap the IQueryable in a BufferedEnumerable to prevent consuming the entire result set.                  packages = packages.AsBufferedEnumerable(First * 3).AsQueryable();              }
Magic Number,NuGet.PowerShell.Commands,JsonApiCommandBase<T>,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\JsonApiCommandBase.cs,AggregateResults,The following statement contains a magic number: return tasks                  .SelectMany(t => t.Result)                  .Distinct()                  .Take(30);
Missing Default,NuGet.PowerShell.Commands,NuGetBaseCommand,C:\repos\themotleyfool_NuGet\src\VsConsole\PowerShellCmdlets\NuGetBaseCommand.cs,LogCore,The following switch statement is missing a default case: switch (level)              {                  case MessageLevel.Debug:                      WriteVerbose(formattedMessage);                      break;                    case MessageLevel.Warning:                      WriteWarning(formattedMessage);                      break;                    case MessageLevel.Info:                      WriteLine(formattedMessage);                      break;                    case MessageLevel.Error:                      WriteError(formattedMessage);                      break;              }
