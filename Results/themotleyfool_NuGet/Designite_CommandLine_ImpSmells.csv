Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGet.Commands,HelpCommandMarkdownTemplate,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommandMarkdownTemplate.cs,Execute,The method has 76 lines of code.
Long Method,NuGet.Commands,SpecCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SpecCommand.cs,ExecuteCommand,The method has 66 lines of code.
Complex Method,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,ExtractOptions,Cyclomatic complexity of the method is 7
Complex Method,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,AssignValue,Cyclomatic complexity of the method is 8
Complex Method,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,NuGet,ResourceHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ResourceHelper.cs,GetLocalizedString,Cyclomatic complexity of the method is 10
Complex Method,NuGet,TypeHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\TypeHelper.cs,ChangeType,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,InstallPackage,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,CreateBuilder,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,BuildProject,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,AddOutputFiles,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,ProcessDependencies,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,AddFiles,Cyclomatic complexity of the method is 10
Complex Method,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,ExecuteCommand,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,AddNewSource,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,SpecCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SpecCommand.cs,ExecuteCommand,Cyclomatic complexity of the method is 9
Complex Method,NuGet.Commands,ListCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ListCommand.cs,ExecuteCommand,Cyclomatic complexity of the method is 7
Complex Method,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,GetInputFile,Cyclomatic complexity of the method is 8
Complex Method,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Log,Cyclomatic complexity of the method is 9
Long Parameter List,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,AssignValue,The method has 4 parameters.
Long Parameter List,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,GetPartialOptionMatch,The method has 5 parameters.
Long Parameter List,NuGet,ConsoleCredentialProvider,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ConsoleCredentialProvider.cs,GetCredentials,The method has 4 parameters.
Long Parameter List,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,InstallCommand,The method has 4 parameters.
Long Parameter List,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,RestorePackage,The method has 5 parameters.
Long Parameter List,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,IsPackageInstalled,The method has 4 parameters.
Long Parameter List,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,HelpCommand,The method has 4 parameters.
Long Parameter List,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,PushPackage,The method has 4 parameters.
Long Parameter List,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,PushPackageCore,The method has 5 parameters.
Long Parameter List,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The method has 4 parameters.
Long Parameter List,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The method has 7 parameters.
Long Parameter List,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,WriteColor,The method has 4 parameters.
Long Statement,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,ExtractOptions,The length of the statement  "		if (!(option.StartsWith ("/"' StringComparison.OrdinalIgnoreCase) && _supportSlashAsSwitch) && !option.StartsWith ("-"' StringComparison.OrdinalIgnoreCase)) { " is 158.
Long Statement,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,GetPartialOptionMatch,The length of the statement  "	where getDisplayName (item).StartsWith (value' StringComparison.OrdinalIgnoreCase) || (getAltName (item) ?? String.Empty).StartsWith (value' StringComparison.OrdinalIgnoreCase) " is 176.
Long Statement,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,GetPartialOptionMatch,The length of the statement  "			result = results.First (c => value.Equals (getDisplayName (c)' StringComparison.OrdinalIgnoreCase) || value.Equals (getAltName (c)' StringComparison.OrdinalIgnoreCase)); " is 169.
Long Statement,NuGet,CommandLineParser,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandLineParser.cs,GetPartialOptionMatch,The length of the statement  "			throw new CommandLineException (String.Format (CultureInfo.CurrentCulture' NuGetResources.AmbiguousOption' value' String.Join (" "' from c in results " is 149.
Long Statement,NuGet,CommandManager,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandManager.cs,GetCommand,The length of the statement  "	where command.CommandAttribute.CommandName.StartsWith (commandName' StringComparison.OrdinalIgnoreCase) || (command.CommandAttribute.AltName ?? String.Empty).StartsWith (commandName' StringComparison.OrdinalIgnoreCase) " is 218.
Long Statement,NuGet,CommandManager,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandManager.cs,GetCommand,The length of the statement  "		matchedCommand = results.FirstOrDefault (c => c.CommandAttribute.CommandName.Equals (commandName' StringComparison.OrdinalIgnoreCase) || commandName.Equals (c.CommandAttribute.AltName' StringComparison.OrdinalIgnoreCase)); " is 222.
Long Statement,NuGet,CommandManager,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandManager.cs,GetCommand,The length of the statement  "			throw new CommandLineException (String.Format (CultureInfo.CurrentCulture' NuGetResources.AmbiguousCommand' commandName' String.Join (" "' from c in results " is 156.
Long Statement,NuGet,CommandManager,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandManager.cs,GetCommandOptions,The length of the statement  "				// If the property has neither a setter nor is of a type that can be cast to ICollection<> then there's no way to assign  " is 120.
Long Statement,NuGet,CommandManager,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\CommandManager.cs,GetCommandOptions,The length of the statement  "				throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' NuGetResources.OptionInvalidWithoutSetter' command.GetType ().FullName + "." + propInfo.Name)); " is 175.
Long Statement,NuGet,CommandLineUtility,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\CommandLineUtility.cs,GetSourceDisplayName,The length of the statement  "	if (String.IsNullOrEmpty (source) || source.Equals (NuGetConstants.DefaultGalleryServerUrl' StringComparison.OrdinalIgnoreCase)) { " is 130.
Long Statement,NuGet,CommandLineUtility,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\CommandLineUtility.cs,GetPackageReferences,The length of the statement  "			throw new InvalidDataException (String.Format (CultureInfo.CurrentCulture' NuGetResources.InstallCommandInvalidPackageReference' fileName)); " is 140.
Long Statement,NuGet,CommandLineUtility,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\CommandLineUtility.cs,GetPackageReferences,The length of the statement  "			throw new InvalidDataException (String.Format (CultureInfo.CurrentCulture' NuGetResources.InstallCommandPackageReferenceInvalidVersion' package.Id)); " is 149.
Long Statement,NuGet,ConsoleCredentialProvider,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ConsoleCredentialProvider.cs,GetCredentials,The length of the statement  "	string message = credentialType == CredentialType.ProxyCredentials ? LocalizedResourceManager.GetString ("Credentials_ProxyCredentials") : LocalizedResourceManager.GetString ("Credentials_RequestCredentials"); " is 209.
Long Statement,NuGet,DebugHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DebugHelper.cs,WaitForAttach,The length of the statement  "	if (args.Length > 0 && (String.Equals (args [0]' "dbg"' StringComparison.OrdinalIgnoreCase) || String.Equals (args [0]' "debug"' StringComparison.OrdinalIgnoreCase))) { " is 168.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,The length of the statement  "	if (package.ProjectUrl != null && package.ProjectUrl.OriginalString.Equals (SpecCommand.SampleProjectUrl' StringComparison.Ordinal)) { " is 134.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,The length of the statement  "	if (package.LicenseUrl != null && package.LicenseUrl.OriginalString.Equals (SpecCommand.SampleLicenseUrl' StringComparison.Ordinal)) { " is 134.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,The length of the statement  "	if (package.IconUrl != null && package.IconUrl.OriginalString.Equals (SpecCommand.SampleIconUrl' StringComparison.Ordinal)) { " is 125.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,The length of the statement  "	if (!String.IsNullOrEmpty (package.Tags) && package.Tags.Trim ().Equals (SpecCommand.SampleTags' StringComparison.Ordinal)) { " is 125.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,Validate,The length of the statement  "	if (dependency != null && dependency.Id.Equals (SpecCommand.SampleManifestDependency.Id' StringComparison.Ordinal) && dependency.VersionSpec.ToString ().Equals ("[" + SpecCommand.SampleManifestDependency.Version + "]"' StringComparison.Ordinal)) { " is 247.
Long Statement,NuGet,DefaultManifestValuesRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\DefaultManifestValuesRule.cs,CreateIssueFor,The length of the statement  "	return new PackageIssue (NuGetResources.Warning_DefaultSpecValueTitle' String.Format (CultureInfo.CurrentCulture' NuGetResources.Warning_DefaultSpecValue' value' field)' NuGetResources.Warning_DefaultSpecValueSolution); " is 219.
Long Statement,NuGet,PackageSourceBuilder,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\PackageSourceBuilder.cs,CreateSourceProvider,The length of the statement  "	var officialPackageSource = new PackageSource (NuGetConstants.DefaultFeedUrl' NuGetResources.OfficialPackageSourceName); " is 120.
Long Statement,NuGet,PackageSourceBuilder,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\PackageSourceBuilder.cs,CreateSourceProvider,The length of the statement  "	var legacyV2PackageSource = new PackageSource (NuGetConstants.V2LegacyFeedUrl' NuGetResources.OfficialPackageSourceName); " is 121.
Long Statement,NuGet,ResourceHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ResourceHelper.cs,GetLocalizedString,The length of the statement  "		PropertyInfo property = resourceType.GetProperty ("ResourceManager"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static); " is 137.
Long Statement,NuGet,ResourceHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ResourceHelper.cs,GetLocalizedString,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' NuGetResources.ResourceTypeDoesNotHaveProperty' resourceType' "ResourceManager")); " is 162.
Long Statement,NuGet,ResourceHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ResourceHelper.cs,GetLocalizedString,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' NuGetResources.ResourcePropertyIncorrectType' resourceNames' resourceType)); " is 156.
Long Statement,NuGet,ResourceHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ResourceHelper.cs,GetLocalizedString,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' NuGetResources.ResourceTypeDoesNotHaveProperty' resourceType' resource)); " is 153.
Long Statement,NuGet,TypeHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\TypeHelper.cs,ChangeType,The length of the statement  "	throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' NuGetResources.UnableToConvertTypeError' value.GetType ()' type)); " is 146.
Long Statement,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,Main,The length of the statement  "			// If the AggregateException contains more than one InnerException' it cannot be unwrapped. In which case' simply print out individual error messages " is 149.
Long Statement,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,Main,The length of the statement  "			message = String.Join (Environment.NewLine' exception.InnerExceptions.Select (ex => ex.Message).Distinct (StringComparer.CurrentCulture)); " is 138.
Long Statement,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,Initialize,The length of the statement  "			var credentialProvider = new SettingsCredentialProvider (new ConsoleCredentialProvider (console)' packageSourceProvider' console); " is 130.
Long Statement,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,AddExtensionsToCatalog,The length of the statement  "	// Ideally we want to look for all files. However' using MEF to identify imports results in assemblies being loaded and locked by our App Domain " is 144.
Long Statement,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,SetConsoleInteractivity,The length of the statement  "	console.IsNonInteractive = !String.IsNullOrEmpty (globalSwitch) || !String.IsNullOrEmpty (vsSwitch) || (command != null && command.NonInteractive); " is 147.
Long Statement,NuGet,StrictSemanticVersionValidationRule,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\StrictSemanticVersionValidationRule.cs,Validate,The length of the statement  "		yield return new PackageIssue (NuGetResources.Warning_SemanticVersionTitle' String.Format (CultureInfo.CurrentCulture' NuGetResources.Warning_SemanticVersion' package.Version)' NuGetResources.Warning_SemanticVersionSolution); " is 225.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteCommand,The length of the statement  "	if (Arguments.Count == 0 || Path.GetFileName (Arguments [0]).Equals (Constants.PackageReferenceFile' StringComparison.OrdinalIgnoreCase)) { " is 139.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ResolveInstallPath,The length of the statement  "		var solutionSettingsFile = Path.Combine (SolutionDirectory.TrimEnd (Path.DirectorySeparatorChar)' NuGetConstants.NuGetSolutionSettingsFolder); " is 142.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ResolveInstallPath,The length of the statement  "		HttpClient.DefaultCredentialProvider = new SettingsCredentialProvider (new ConsoleCredentialProvider (Console)' SourceProvider' Console); " is 137.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,GetRepository,The length of the statement  "	var repository = AggregateRepositoryHelper.CreateAggregateRepositoryFromSources (RepositoryFactory' SourceProvider' Source); " is 124.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteInParallel,The length of the statement  "	// The PackageSourceProvider reads from the underlying ISettings multiple times. One of the fields it reads is the password which is consequently decrypted " is 155.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteInParallel,The length of the statement  "	// once for each package being installed. Per work item 2345' a couple of users are running into an issue where this results in an exception in native  " is 150.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteInParallel,The length of the statement  "	var tasks = packageReferences.Select (package => Task.Factory.StartNew (() => RestorePackage (fileSystem' package.Id' package.Version' packageRestoreConsent' satellitePackages))).ToArray (); " is 190.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,RestorePackage,The length of the statement  "		// During package restore with parallel build' multiple projects would try to write to disk simultaneously which results in write contentions. " is 142.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,EnsurePackageRestoreConsent,The length of the statement  "		throw new InvalidOperationException (LocalizedResourceManager.GetString ("InstallCommandPackageRestoreConsentNotFound")); " is 121.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,IsPackageInstalled,The length of the statement  "		// If we allow side-by-side' we'll check if any version of a package is installed. This operation is expensive since it involves " is 128.
Long Statement,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,IsPackageInstalled,The length of the statement  "		Debug.Assert (localRepository != null' "The PackageManager's local repository instance is necessarily a LocalPackageRepository instance."); " is 139.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,BuildProject,The length of the statement  "		using (var projectCollection = new ProjectCollection (ToolsetDefinitionLocations.Registry | ToolsetDefinitionLocations.ConfigurationFile)) { " is 140.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,BuildProject,The length of the statement  "			BuildRequestData requestData = new BuildRequestData (_project.FullPath' ProjectProperties' _project.ToolsVersion' new string[0]' null); " is 135.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,ExtractMetadataFromProject,The length of the statement  "	builder.Id = builder.Id ?? _project.GetPropertyValue ("AssemblyName") ?? Path.GetFileNameWithoutExtension (_project.FullPath); " is 126.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,GetFiles,The length of the statement  "	return allowedExtensions.Select (extension => Directory.GetFiles (path' fileNameWithoutExtension + extension)).SelectMany (a => a); " is 131.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,ProcessDependencies,The length of the statement  "	IDictionary<Tuple<string' SemanticVersion>' PackageReference> packageReferences = file.GetPackageReferences ().ToDictionary (r => Tuple.Create (r.Id' r.Version)); " is 162.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,ProcessDependencies,The length of the statement  "	var dependencies = builder.GetCompatiblePackageDependencies (targetFramework: null).ToDictionary (d => d.Id' StringComparer.OrdinalIgnoreCase); " is 143.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,GetNuspecPaths,The length of the statement  "	yield return GetContentOrNone (file => Path.GetExtension (file).Equals (Constants.ManifestExtension' StringComparison.OrdinalIgnoreCase)); " is 138.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,GetNuspecPaths,The length of the statement  "	yield return Path.Combine (_project.DirectoryPath' Path.GetFileNameWithoutExtension (_project.FullPath) + Constants.ManifestExtension); " is 135.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,GetPackagesConfig,The length of the statement  "	return GetContentOrNone (file => Path.GetFileName (file).Equals (Constants.PackageReferenceFile' StringComparison.OrdinalIgnoreCase)); " is 134.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,AddFiles,The length of the statement  "		contentFilesInDependencies = references.Select (reference => repository.FindPackage (reference.Id' reference.Version)).Where (a => a != null).SelectMany (a => a.GetContentFiles ()).ToList (); " is 191.
Long Statement,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,AddFiles,The length of the statement  "		IPackageFile targetFile = contentFilesInDependencies.Find (a => a.Path.Equals (targetPath' StringComparison.OrdinalIgnoreCase)); " is 128.
Long Statement,NuGet.Commands,SetApiKeyCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SetApiKeyCommand.cs,ExecuteCommand,The length of the statement  "		Console.WriteLine (NuGetResources.SetApiKeyCommandDefaultApiKeysSaved' apiKey' sourceName' CommandLineUtility.GetSourceDisplayName (NuGetConstants.DefaultSymbolServerUrl)); " is 172.
Long Statement,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,EnableOrDisableSource,The length of the statement  "	Console.WriteLine (enabled ? NuGetResources.SourcesCommandSourceEnabledSuccessfully : NuGetResources.SourcesCommandSourceDisabledSuccessfully' Name); " is 149.
Long Statement,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,RemoveSource,The length of the statement  "	var matchingSources = sourceList.Where (ps => String.Equals (Name' ps.Name' StringComparison.OrdinalIgnoreCase)).ToList (); " is 123.
Long Statement,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,PrintRegisteredSources,The length of the statement  "		Console.WriteLine ("  {0}.{1}{2} [{3}]"' indexNumber' namePadding' source.Name' source.IsEnabled ? NuGetResources.SourcesCommandEnabled : NuGetResources.SourcesCommandDisabled); " is 177.
Long Statement,NuGet.Commands,SpecCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SpecCommand.cs,RemoveSchemaNamespace,The length of the statement  "	return Regex.Replace (content' @"(xmlns:?[^=]*=[""][^""]*[""])"' String.Empty' RegexOptions.IgnoreCase | RegexOptions.Multiline); " is 129.
Long Statement,NuGet.Commands,DeleteCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\DeleteCommand.cs,ExecuteCommand,The length of the statement  "	if (NonInteractive || Console.Confirm (String.Format (CultureInfo.CurrentCulture' NuGetResources.DeleteCommandConfirm' packageId' packageVersion' sourceDisplayName))) { " is 168.
Long Statement,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The length of the statement  "			Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty)); " is 138.
Long Statement,NuGet.Commands,ListCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ListCommand.cs,GetPackages,The length of the statement  "	return packages.OrderBy (p => p.Id).AsEnumerable ().Where (PackageExtensions.IsListed).Where (p => Prerelease || p.IsReleaseVersion ()).AsCollapsed (); " is 151.
Long Statement,NuGet.Commands,ListCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ListCommand.cs,GetRepository,The length of the statement  "	var repository = AggregateRepositoryHelper.CreateAggregateRepositoryFromSources (RepositoryFactory' SourceProvider' Source); " is 124.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,PrintVerbose,The length of the statement  "		Console.WriteLine ("Dependencies: {0}"' String.Join ("' "' package.DependencySets.SelectMany (d => d.Dependencies).Select (d => d.ToString ()))); " is 145.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,ExcludeFiles,The length of the statement  "	// Review: This exclusion should be done by the package builder because it knows which file would collide with the auto-generated " is 129.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,BuildFromNuspec,The length of the statement  "			throw new CommandLineException (String.Format (CultureInfo.CurrentCulture' NuGetResources.PackageCommandNoFilesForLibPackage' path' CommandLineConstants.NuGetDocs)); " is 165.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,BuildSymbolsPackage,The length of the statement  "		throw new CommandLineException (String.Format (CultureInfo.CurrentCulture' NuGetResources.PackageCommandNoFilesForSymbolsPackage' path' CommandLineConstants.NuGetDocs)); " is 169.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,AnalyzePackage,The length of the statement  "	IList<PackageIssue> issues = package.Validate (packageRules).OrderBy (p => p.Title' StringComparer.CurrentCulture).ToList (); " is 125.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,PrintPackageIssue,The length of the statement  "	Console.WriteWarning (prependWarningText: false' value: NuGetResources.PackageCommandIssueDescription' args: issue.Description); " is 128.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,PrintPackageIssue,The length of the statement  "		Console.WriteWarning (prependWarningText: false' value: NuGetResources.PackageCommandIssueSolution' args: issue.Solution); " is 122.
Long Statement,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,GetInputFile,The length of the statement  "		candidates.RemoveAll (file => Path.GetExtension (file).Equals (Constants.ManifestExtension' StringComparison.OrdinalIgnoreCase)); " is 129.
Long Statement,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,ResolveSource,The length of the statement  "		source = packagePath.EndsWith (PackCommand.SymbolsExtension' StringComparison.OrdinalIgnoreCase) ? NuGetConstants.DefaultSymbolServerUrl : NuGetConstants.DefaultGalleryServerUrl; " is 178.
Long Statement,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,PushSymbols,The length of the statement  "			Console.WriteWarning (NuGetResources.Warning_SymbolServerNotConfigured' Path.GetFileName (symbolPackagePath)' NuGetResources.DefaultSymbolServer); " is 146.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdateAllPackages,The length of the statement  "	var packagesConfigFiles = Directory.GetFiles (solutionDir' Constants.PackageReferenceFile' SearchOption.AllDirectories); " is 120.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdateAllPackages,The length of the statement  "		Console.WriteLine (NuGetResources.FoundProjects' projects.Count' String.Join ("' "' projects.Select (p => p.Project.ProjectName))); " is 131.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdateAllPackages,The length of the statement  "	IPackageRepository sourceRepository = AggregateRepositoryHelper.CreateAggregateRepositoryFromSources (RepositoryFactory' SourceProvider' Source); " is 145.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	var sharedPackageRepository = new SharedPackageRepository (pathResolver' sharedRepositoryFileSystem' sharedRepositoryFileSystem); " is 129.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	sourceRepository = sourceRepository ?? AggregateRepositoryHelper.CreateAggregateRepositoryFromSources (RepositoryFactory' SourceProvider' Source); " is 146.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	UpdatePackages (localRepository' sharedRepositoryFileSystem' sharedPackageRepository' sourceRepository' constraintProvider' pathResolver' project); " is 147.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	var packageManager = new PackageManager (sourceRepository' pathResolver' sharedRepositoryFileSystem' sharedPackageRepository); " is 126.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	// Consequently' when querying the package reference repository' we would have package references with no backing package files in " is 130.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "	// the shared repository. This would cause the reference repository to skip the package assuming that the entry is invalid. " is 123.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "				// If the user explicitly allows prerelease or if the package being updated is prerelease we'll include prerelease versions in our list of packages " is 147.
Long Statement,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,UpdatePackages,The length of the statement  "				projectManager.UpdatePackageReference (package.Id' spec' updateDependencies: true' allowPrereleaseVersions: allowPrerelease); " is 125.
Long Statement,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,InstallPackage,The length of the statement  "	ExecuteLocked (uniqueToken' () => packageManager.InstallPackage (package' ignoreDependencies: true' allowPrereleaseVersions: true)); " is 132.
Long Statement,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,GenerateUniqueToken,The length of the statement  "	var packagePath = packageManager.FileSystem.GetFullPath (packageManager.PathResolver.GetPackageFileName (packageId' version)); " is 126.
Long Statement,NuGet.Common,SelfUpdater,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\SelfUpdater.cs,SelfUpdate,The length of the statement  "		IPackageFile file = package.GetFiles ().FirstOrDefault (f => Path.GetFileName (f.Path).Equals (NuGetExe' StringComparison.OrdinalIgnoreCase)); " is 142.
Long Statement,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Write,The length of the statement  "		// Don't try to format strings that do not have arguments. We end up throwing if the original string was not meant to be a format token  " is 135.
Long Statement,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,WriteWarning,The length of the statement  "	string message = prependWarningText ? String.Format (CultureInfo.CurrentCulture' LocalizedResourceManager.GetString ("CommandLine_Warning")' value) : value; " is 156.
Long Statement,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Confirm,The length of the statement  "		System.Console.Write (String.Format (CultureInfo.CurrentCulture' LocalizedResourceManager.GetString ("ConsoleConfirmMessage")' description)); " is 141.
Long Statement,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Confirm,The length of the statement  "		return result.StartsWith (LocalizedResourceManager.GetString ("ConsoleConfirmMessageAccept")' StringComparison.OrdinalIgnoreCase); " is 130.
Long Statement,NuGet.Common,MSBuildProjectSystem,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\MSBuildProjectSystem.cs,GetItems,The length of the statement  "	return Project.GetItems (itemType).Where (i => i.EvaluatedInclude.StartsWith (name' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGet.Common,MSBuildProjectSystem,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\MSBuildProjectSystem.cs,GetReference,The length of the statement  "	return GetItems ("Reference"' name).FirstOrDefault (item => new AssemblyName (item.EvaluatedInclude).Name.Equals (name' StringComparison.OrdinalIgnoreCase)); " is 157.
Long Statement,NuGet.Common,MSBuildProjectSystem,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\MSBuildProjectSystem.cs,GetProject,The length of the statement  "	return ProjectCollection.GlobalProjectCollection.GetLoadedProjects (projectFile).FirstOrDefault () ?? new Project (projectFile); " is 128.
Empty Catch Block,NuGet,Program,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Program.cs,RemoveOldFile,The method has an empty catch block.
Empty Catch Block,NuGet.Commands,ProjectFactory,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\ProjectFactory.cs,GetPackagesPath,The method has an empty catch block.
Empty Catch Block,NuGet.Commands,UpdateCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\UpdateCommand.cs,GetProject,The method has an empty catch block.
Empty Catch Block,NuGet.Common,SelfUpdater,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\SelfUpdater.cs,GetNuGetVersion,The method has an empty catch block.
Empty Catch Block,NuGet.Common,SelfUpdater,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\SelfUpdater.cs,Move,The method has an empty catch block.
Magic Number,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteInParallel,The following statement contains a magic number: if (packageReferences.Count > defaultConnectionLimit) {  	ServicePointManager.DefaultConnectionLimit = Math.Min (10' packageReferences.Count);  }  
Magic Number,NuGet.Commands,InstallCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\InstallCommand.cs,ExecuteInParallel,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = Math.Min (10' packageReferences.Count);  
Magic Number,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,PrintRegisteredSources,The following statement contains a magic number: for (int i = 0; i < sourcesList.Count; i++) {  	var source = sourcesList [i];  	var indexNumber = i + 1;  	var namePadding = new String (' '' i >= 9 ? 1 : 2);  	Console.WriteLine ("  {0}.{1}{2} [{3}]"' indexNumber' namePadding' source.Name' source.IsEnabled ? NuGetResources.SourcesCommandEnabled : NuGetResources.SourcesCommandDisabled);  	Console.WriteLine ("{0}{1}"' sourcePadding' source.Source);  }  
Magic Number,NuGet.Commands,SourcesCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\SourcesCommand.cs,PrintRegisteredSources,The following statement contains a magic number: for (int i = 0; i < sourcesList.Count; i++) {  	var source = sourcesList [i];  	var indexNumber = i + 1;  	var namePadding = new String (' '' i >= 9 ? 1 : 2);  	Console.WriteLine ("  {0}.{1}{2} [{3}]"' indexNumber' namePadding' source.Name' source.IsEnabled ? NuGetResources.SourcesCommandEnabled : NuGetResources.SourcesCommandDisabled);  	Console.WriteLine ("{0}{1}"' sourcePadding' source.Source);  }  
Magic Number,NuGet.Commands,DeleteCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\DeleteCommand.cs,GetApiKey,The following statement contains a magic number: if (Arguments.Count > 2) {  	apiKey = Arguments [2];  }  
Magic Number,NuGet.Commands,DeleteCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\DeleteCommand.cs,GetApiKey,The following statement contains a magic number: if (Arguments.Count > 2) {  	apiKey = Arguments [2];  }  
Magic Number,NuGet.Commands,DeleteCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\DeleteCommand.cs,GetApiKey,The following statement contains a magic number: apiKey = Arguments [2];  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: if (attribute.UsageDescription != null) {  	const int padding = 5;  	Console.PrintJustified (padding' attribute.UsageDescription);  	Console.WriteLine ();  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: if (options.Count > 0) {  	Console.WriteLine ("options:");  	Console.WriteLine ();  	// Get the max option width. +2 for showing + against multivalued properties  	int maxOptionWidth = options.Max (o => o.Value.Name.Length) + 2;  	// Get the max altname option width  	int maxAltOptionWidth = options.Max (o => (o.Key.AltName ?? String.Empty).Length);  	foreach (var o in options) {  		Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  		Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  		Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  	}  	if (_helpUrl != null) {  		Console.WriteLine ();  		Console.WriteLine ("For more information' visit {0}"' _helpUrl);  	}  	Console.WriteLine ();  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: if (options.Count > 0) {  	Console.WriteLine ("options:");  	Console.WriteLine ();  	// Get the max option width. +2 for showing + against multivalued properties  	int maxOptionWidth = options.Max (o => o.Value.Name.Length) + 2;  	// Get the max altname option width  	int maxAltOptionWidth = options.Max (o => (o.Key.AltName ?? String.Empty).Length);  	foreach (var o in options) {  		Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  		Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  		Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  	}  	if (_helpUrl != null) {  		Console.WriteLine ();  		Console.WriteLine ("For more information' visit {0}"' _helpUrl);  	}  	Console.WriteLine ();  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: if (options.Count > 0) {  	Console.WriteLine ("options:");  	Console.WriteLine ();  	// Get the max option width. +2 for showing + against multivalued properties  	int maxOptionWidth = options.Max (o => o.Value.Name.Length) + 2;  	// Get the max altname option width  	int maxAltOptionWidth = options.Max (o => (o.Key.AltName ?? String.Empty).Length);  	foreach (var o in options) {  		Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  		Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  		Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  	}  	if (_helpUrl != null) {  		Console.WriteLine ();  		Console.WriteLine ("For more information' visit {0}"' _helpUrl);  	}  	Console.WriteLine ();  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: if (options.Count > 0) {  	Console.WriteLine ("options:");  	Console.WriteLine ();  	// Get the max option width. +2 for showing + against multivalued properties  	int maxOptionWidth = options.Max (o => o.Value.Name.Length) + 2;  	// Get the max altname option width  	int maxAltOptionWidth = options.Max (o => (o.Key.AltName ?? String.Empty).Length);  	foreach (var o in options) {  		Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  		Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  		Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  	}  	if (_helpUrl != null) {  		Console.WriteLine ();  		Console.WriteLine ("For more information' visit {0}"' _helpUrl);  	}  	Console.WriteLine ();  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: foreach (var o in options) {  	Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  	Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  	Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: foreach (var o in options) {  	Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  	Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  	Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: foreach (var o in options) {  	Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  	Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  	Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  }  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: Console.Write (" -{0' -" + (maxOptionWidth + 2) + "}"' o.Value.Name + (TypeHelper.IsMultiValuedProperty (o.Value) ? " +" : String.Empty));  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: Console.Write (" {0' -" + (maxAltOptionWidth + 4) + "}"' GetAltText (o.Key.AltName));  
Magic Number,NuGet.Commands,HelpCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\HelpCommand.cs,ViewHelpForCommand,The following statement contains a magic number: Console.PrintJustified ((10 + maxAltOptionWidth + maxOptionWidth)' o.Key.Description);  
Magic Number,NuGet.Commands,PackCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PackCommand.cs,GetInputFile,The following statement contains a magic number: switch (candidates.Count) {  case 1:  	return candidates.Single ();  case 2:  	// Remove all nuspec files  	candidates.RemoveAll (file => Path.GetExtension (file).Equals (Constants.ManifestExtension' StringComparison.OrdinalIgnoreCase));  	if (candidates.Count == 1) {  		return candidates.Single ();  	}  	goto default;  default:  	throw new CommandLineException (NuGetResources.PackageCommandSpecifyInputFileError);  }  
Magic Number,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,ExecuteCommand,The following statement contains a magic number: if (timeout.Seconds <= 0) {  	timeout = TimeSpan.FromMinutes (5);  	// Default to 5 minutes  }  
Magic Number,NuGet.Commands,PushCommand,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Commands\PushCommand.cs,ExecuteCommand,The following statement contains a magic number: timeout = TimeSpan.FromMinutes (5);  
Magic Number,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,ExecuteLocked,The following statement contains a magic number: using (var mutex = new Mutex (initiallyOwned: true' name: name' createdNew: out created)) {  	try {  		// We need to ensure only one instance of the executable performs the install. All other instances need to wait   		// for the package to be installed. We'd cap the waiting duration so that other instances aren't waiting indefinitely.  		if (created) {  			action ();  		} else {  			mutex.WaitOne (TimeSpan.FromMinutes (2));  		}  	} finally {  		mutex.ReleaseMutex ();  	}  }  
Magic Number,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,ExecuteLocked,The following statement contains a magic number: try {  	// We need to ensure only one instance of the executable performs the install. All other instances need to wait   	// for the package to be installed. We'd cap the waiting duration so that other instances aren't waiting indefinitely.  	if (created) {  		action ();  	} else {  		mutex.WaitOne (TimeSpan.FromMinutes (2));  	}  } finally {  	mutex.ReleaseMutex ();  }  
Magic Number,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,ExecuteLocked,The following statement contains a magic number: if (created) {  	action ();  } else {  	mutex.WaitOne (TimeSpan.FromMinutes (2));  }  
Magic Number,NuGet.Common,PackageExtractor,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\PackageExtractor.cs,ExecuteLocked,The following statement contains a magic number: mutex.WaitOne (TimeSpan.FromMinutes (2));  
Missing Default,NuGet.Common,Console,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Log,The following switch statement is missing a default case: switch (level) {  case MessageLevel.Info:  	WriteLine (message' args);  	break;  case MessageLevel.Warning:  	WriteWarning (message' args);  	break;  case MessageLevel.Debug:  	WriteColor (Out' ConsoleColor.Gray' message' args);  	break;  }  
Missing Default,NuGet.Common,ProjectHelper,D:\newReposJune17\themotleyfool_NuGet\src\CommandLine\Common\ProjectHelper.cs,TryGetProjectFile,The following switch statement is missing a default case: switch (candidates.Count) {  case 1:  	projectFile = candidates.Single ();  	break;  }  
