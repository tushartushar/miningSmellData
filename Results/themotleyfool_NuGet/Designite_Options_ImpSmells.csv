Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGet.Options,GeneralOptionControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\GeneralOptionControl.cs,InitializeComponent,The method has 111 lines of code.
Long Method,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The method has 181 lines of code.
Complex Method,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,TryUpdateSource,Cyclomatic complexity of the method is 8
Long Statement,NuGet.Options,GeneralOptionControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\GeneralOptionControl.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(GeneralOptionControl)); " is 141.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,UpdateUI,The length of the statement  "	MoveDownButton.Enabled = selectedSource != null && PackageSourcesListBox.SelectedIndex < PackageSourcesListBox.Items.Count - 1; " is 127.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,TryUpdateSource,The length of the statement  "	if (!(PathValidator.IsValidLocalPath (source) || PathValidator.IsValidUncPath (source) || PathValidator.IsValidUrl (source))) { " is 127.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,TryUpdateSource,The length of the statement  "	bool hasName = sourcesList.Any (ps => ps != selectedPackageSource && (String.Equals (name' ps.Name' StringComparison.CurrentCultureIgnoreCase) || String.Equals (name' AggregatePackageSource.Instance.Name' StringComparison.CurrentCultureIgnoreCase))); " is 250.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,TryUpdateSource,The length of the statement  "	bool hasSource = sourcesList.Any (ps => ps != selectedPackageSource && String.Equals (PathUtility.GetCanonicalPath (source)' PathUtility.GetCanonicalPath (ps.Source)' StringComparison.OrdinalIgnoreCase)); " is 204.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,GetCheckBoxRectangleForListBoxItem,The length of the statement  "	var checkBoxRectangle = new Rectangle (itemRectangle.Left + edgeMargin + 2' itemRectangle.Top + edgeMargin' _checkBoxSize.Width' _checkBoxSize.Height); " is 151.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesListBox_DrawItem,The length of the statement  "				var nameBounds = new Rectangle (e.Bounds.Left + checkBoxSize.Width + edgeMargin + textMargin' e.Bounds.Top' textWidth' (int)nameSize.Height); " is 141.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(PackageSourcesOptionsControl)); " is 149.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.PackageSourcesContextMenu.ItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler (this.PackageSourcesContextMenu_ItemClicked); " is 149.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject ("imageList1.ImageStream"))); " is 121.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.PackageSourcesListBox.DrawItem += new System.Windows.Forms.DrawItemEventHandler (this.PackageSourcesListBox_DrawItem); " is 123.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.PackageSourcesListBox.MeasureItem += new System.Windows.Forms.MeasureItemEventHandler (this.PackageSourcesListBox_MeasureItem); " is 132.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.PackageSourcesListBox.MouseMove += new System.Windows.Forms.MouseEventHandler (this.PackageSourcesListBox_MouseMove); " is 122.
Long Statement,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The length of the statement  "	this.imageList2.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject ("imageList2.ImageStream"))); " is 121.
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesOptionsControl,The following statement contains a magic number: if (!VsVersionHelper.IsVisualStudio2010) {  	// update the button icons to use grayscale versions  	foreach (Control child in tableLayoutPanel2.Controls) {  		var button = child as Button;  		if (button != null) {  			button.ImageList = imageList2;  			button.Padding = new Padding (3);  		}  	}  }  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesOptionsControl,The following statement contains a magic number: foreach (Control child in tableLayoutPanel2.Controls) {  	var button = child as Button;  	if (button != null) {  		button.ImageList = imageList2;  		button.Padding = new Padding (3);  	}  }  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesOptionsControl,The following statement contains a magic number: if (button != null) {  	button.ImageList = imageList2;  	button.Padding = new Padding (3);  }  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesOptionsControl,The following statement contains a magic number: button.Padding = new Padding (3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesListBox_DrawItem,The following statement contains a magic number: using (StringFormat drawFormat = new StringFormat ())  	using (Brush foreBrush = new SolidBrush (e.ForeColor)) {  		drawFormat.Alignment = StringAlignment.Near;  		drawFormat.Trimming = StringTrimming.EllipsisCharacter;  		drawFormat.LineAlignment = StringAlignment.Near;  		drawFormat.FormatFlags = StringFormatFlags.NoWrap;  		// the margin between the checkbox and the edge of the list box  		const int edgeMargin = 8;  		// the margin between the checkbox and the text  		const int textMargin = 4;  		// draw the enabled/disabled checkbox  		CheckBoxState checkBoxState = currentItem.IsEnabled ? CheckBoxState.CheckedNormal : CheckBoxState.UncheckedNormal;  		Size checkBoxSize = CheckBoxRenderer.GetGlyphSize (graphics' checkBoxState);  		CheckBoxRenderer.DrawCheckBox (graphics' new Point (edgeMargin' e.Bounds.Top + edgeMargin)' checkBoxState);  		if (_checkBoxSize.IsEmpty) {  			// save the checkbox size so that we can detect mouse click on the   			// checkbox in the MouseUp event handler.  			// here we assume that all checkboxes have the same size' which is reasonable.   			_checkBoxSize = checkBoxSize;  		}  		GraphicsState oldState = graphics.Save ();  		try {  			// turn on high quality text rendering mode  			graphics.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;  			// draw each package source as  			//   			// [checkbox] Name  			//            Source (italics)  			int textWidth = e.Bounds.Width - checkBoxSize.Width - edgeMargin - textMargin;  			SizeF nameSize = graphics.MeasureString (currentItem.Name' e.Font' textWidth' drawFormat);  			// resize the bound rectangle to make room for the checkbox above  			var nameBounds = new Rectangle (e.Bounds.Left + checkBoxSize.Width + edgeMargin + textMargin' e.Bounds.Top' textWidth' (int)nameSize.Height);  			graphics.DrawString (currentItem.Name' e.Font' foreBrush' nameBounds' drawFormat);  			var sourceBounds = new Rectangle (nameBounds.Left' nameBounds.Bottom' textWidth' e.Bounds.Bottom - nameBounds.Bottom);  			graphics.DrawString (currentItem.Source' e.Font' foreBrush' sourceBounds' drawFormat);  		} finally {  			graphics.Restore (oldState);  		}  		// If the ListBox has focus' draw a focus rectangle around the selected item.  		e.DrawFocusRectangle ();  	}  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesListBox_DrawItem,The following statement contains a magic number: using (StringFormat drawFormat = new StringFormat ())  	using (Brush foreBrush = new SolidBrush (e.ForeColor)) {  		drawFormat.Alignment = StringAlignment.Near;  		drawFormat.Trimming = StringTrimming.EllipsisCharacter;  		drawFormat.LineAlignment = StringAlignment.Near;  		drawFormat.FormatFlags = StringFormatFlags.NoWrap;  		// the margin between the checkbox and the edge of the list box  		const int edgeMargin = 8;  		// the margin between the checkbox and the text  		const int textMargin = 4;  		// draw the enabled/disabled checkbox  		CheckBoxState checkBoxState = currentItem.IsEnabled ? CheckBoxState.CheckedNormal : CheckBoxState.UncheckedNormal;  		Size checkBoxSize = CheckBoxRenderer.GetGlyphSize (graphics' checkBoxState);  		CheckBoxRenderer.DrawCheckBox (graphics' new Point (edgeMargin' e.Bounds.Top + edgeMargin)' checkBoxState);  		if (_checkBoxSize.IsEmpty) {  			// save the checkbox size so that we can detect mouse click on the   			// checkbox in the MouseUp event handler.  			// here we assume that all checkboxes have the same size' which is reasonable.   			_checkBoxSize = checkBoxSize;  		}  		GraphicsState oldState = graphics.Save ();  		try {  			// turn on high quality text rendering mode  			graphics.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;  			// draw each package source as  			//   			// [checkbox] Name  			//            Source (italics)  			int textWidth = e.Bounds.Width - checkBoxSize.Width - edgeMargin - textMargin;  			SizeF nameSize = graphics.MeasureString (currentItem.Name' e.Font' textWidth' drawFormat);  			// resize the bound rectangle to make room for the checkbox above  			var nameBounds = new Rectangle (e.Bounds.Left + checkBoxSize.Width + edgeMargin + textMargin' e.Bounds.Top' textWidth' (int)nameSize.Height);  			graphics.DrawString (currentItem.Name' e.Font' foreBrush' nameBounds' drawFormat);  			var sourceBounds = new Rectangle (nameBounds.Left' nameBounds.Bottom' textWidth' e.Bounds.Bottom - nameBounds.Bottom);  			graphics.DrawString (currentItem.Source' e.Font' foreBrush' sourceBounds' drawFormat);  		} finally {  			graphics.Restore (oldState);  		}  		// If the ListBox has focus' draw a focus rectangle around the selected item.  		e.DrawFocusRectangle ();  	}  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesListBox_DrawItem,The following statement contains a magic number: using (Brush foreBrush = new SolidBrush (e.ForeColor)) {  	drawFormat.Alignment = StringAlignment.Near;  	drawFormat.Trimming = StringTrimming.EllipsisCharacter;  	drawFormat.LineAlignment = StringAlignment.Near;  	drawFormat.FormatFlags = StringFormatFlags.NoWrap;  	// the margin between the checkbox and the edge of the list box  	const int edgeMargin = 8;  	// the margin between the checkbox and the text  	const int textMargin = 4;  	// draw the enabled/disabled checkbox  	CheckBoxState checkBoxState = currentItem.IsEnabled ? CheckBoxState.CheckedNormal : CheckBoxState.UncheckedNormal;  	Size checkBoxSize = CheckBoxRenderer.GetGlyphSize (graphics' checkBoxState);  	CheckBoxRenderer.DrawCheckBox (graphics' new Point (edgeMargin' e.Bounds.Top + edgeMargin)' checkBoxState);  	if (_checkBoxSize.IsEmpty) {  		// save the checkbox size so that we can detect mouse click on the   		// checkbox in the MouseUp event handler.  		// here we assume that all checkboxes have the same size' which is reasonable.   		_checkBoxSize = checkBoxSize;  	}  	GraphicsState oldState = graphics.Save ();  	try {  		// turn on high quality text rendering mode  		graphics.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;  		// draw each package source as  		//   		// [checkbox] Name  		//            Source (italics)  		int textWidth = e.Bounds.Width - checkBoxSize.Width - edgeMargin - textMargin;  		SizeF nameSize = graphics.MeasureString (currentItem.Name' e.Font' textWidth' drawFormat);  		// resize the bound rectangle to make room for the checkbox above  		var nameBounds = new Rectangle (e.Bounds.Left + checkBoxSize.Width + edgeMargin + textMargin' e.Bounds.Top' textWidth' (int)nameSize.Height);  		graphics.DrawString (currentItem.Name' e.Font' foreBrush' nameBounds' drawFormat);  		var sourceBounds = new Rectangle (nameBounds.Left' nameBounds.Bottom' textWidth' e.Bounds.Bottom - nameBounds.Bottom);  		graphics.DrawString (currentItem.Source' e.Font' foreBrush' sourceBounds' drawFormat);  	} finally {  		graphics.Restore (oldState);  	}  	// If the ListBox has focus' draw a focus rectangle around the selected item.  	e.DrawFocusRectangle ();  }  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,PackageSourcesListBox_DrawItem,The following statement contains a magic number: using (Brush foreBrush = new SolidBrush (e.ForeColor)) {  	drawFormat.Alignment = StringAlignment.Near;  	drawFormat.Trimming = StringTrimming.EllipsisCharacter;  	drawFormat.LineAlignment = StringAlignment.Near;  	drawFormat.FormatFlags = StringFormatFlags.NoWrap;  	// the margin between the checkbox and the edge of the list box  	const int edgeMargin = 8;  	// the margin between the checkbox and the text  	const int textMargin = 4;  	// draw the enabled/disabled checkbox  	CheckBoxState checkBoxState = currentItem.IsEnabled ? CheckBoxState.CheckedNormal : CheckBoxState.UncheckedNormal;  	Size checkBoxSize = CheckBoxRenderer.GetGlyphSize (graphics' checkBoxState);  	CheckBoxRenderer.DrawCheckBox (graphics' new Point (edgeMargin' e.Bounds.Top + edgeMargin)' checkBoxState);  	if (_checkBoxSize.IsEmpty) {  		// save the checkbox size so that we can detect mouse click on the   		// checkbox in the MouseUp event handler.  		// here we assume that all checkboxes have the same size' which is reasonable.   		_checkBoxSize = checkBoxSize;  	}  	GraphicsState oldState = graphics.Save ();  	try {  		// turn on high quality text rendering mode  		graphics.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;  		// draw each package source as  		//   		// [checkbox] Name  		//            Source (italics)  		int textWidth = e.Bounds.Width - checkBoxSize.Width - edgeMargin - textMargin;  		SizeF nameSize = graphics.MeasureString (currentItem.Name' e.Font' textWidth' drawFormat);  		// resize the bound rectangle to make room for the checkbox above  		var nameBounds = new Rectangle (e.Bounds.Left + checkBoxSize.Width + edgeMargin + textMargin' e.Bounds.Top' textWidth' (int)nameSize.Height);  		graphics.DrawString (currentItem.Name' e.Font' foreBrush' nameBounds' drawFormat);  		var sourceBounds = new Rectangle (nameBounds.Left' nameBounds.Bottom' textWidth' e.Bounds.Bottom - nameBounds.Bottom);  		graphics.DrawString (currentItem.Source' e.Font' foreBrush' sourceBounds' drawFormat);  	} finally {  		graphics.Restore (oldState);  	}  	// If the ListBox has focus' draw a focus rectangle around the selected item.  	e.DrawFocusRectangle ();  }  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName (2' "Delete.png");  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.imageList1.Images.SetKeyName (3' "add.png");  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.SetColumnSpan (this.PackageSourcesListBox' 4);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.NewPackageNameLabel' 0' 2);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.NewPackageSourceLabel' 0' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.NewPackageName' 1' 2);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.NewPackageSource' 1' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.BrowseButton' 2' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.BrowseButton' 2' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.updateButton' 3' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add (this.updateButton' 3' 3);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.SetColumnSpan (this.tableLayoutPanel2' 4);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Controls.Add (this.removeButton' 2' 0);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Controls.Add (this.MoveUpButton' 3' 0);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel2.Controls.Add (this.MoveDownButton' 4' 0);  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.imageList2.Images.SetKeyName (2' "delete.png");  
Magic Number,NuGet.Options,PackageSourcesOptionsControl,D:\newReposJune17\themotleyfool_NuGet\src\Options\PackageSourcesOptionsControl.cs,InitializeComponent,The following statement contains a magic number: this.imageList2.Images.SetKeyName (3' "addgrayscale.png");  
