Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,The method has 106 lines of code.
Complex Method,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,Cyclomatic complexity of the method is 8
Long Parameter List,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,The method has 5 parameters. Parameters: createRequest' prepareRequest' proxyCache' credentialCache' credentialProvider
Long Statement,NuGet.Common,Console,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Write,The length of the statement  "                // Don't try to format strings that do not have arguments. We end up throwing if the original string was not meant to be a format token  " is 135.
Long Statement,NuGet.Common,Console,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Confirm,The length of the statement  "                System.Console.Write(String.Format(CultureInfo.CurrentCulture' LocalizedResourceManager.GetString("ConsoleConfirmMessage")' description)); " is 138.
Long Statement,NuGet.Common,Console,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Confirm,The length of the statement  "                return result.StartsWith(LocalizedResourceManager.GetString("ConsoleConfirmMessageAccept")' StringComparison.OrdinalIgnoreCase); " is 128.
Long Statement,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,The length of the statement  "                    request.Proxy.Credentials = credentialProvider.GetCredentials(request' CredentialType.ProxyCredentials' retrying: proxyCredentialsRetryCount > 0); " is 146.
Long Statement,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,The length of the statement  "                    // If we are using STS' the auth's being performed by a request header. We do not need to ask the user for credentials at this point. " is 133.
Long Statement,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,GetResponse,The length of the statement  "                    request.Credentials = credentialProvider.GetCredentials(request' CredentialType.RequestCredentials' retrying: credentialsRetryCount > 0); " is 137.
Long Statement,NuGet,RequestHelper,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Core\Http\RequestHelper.cs,SetKeepAliveHeaders,The length of the statement  "            // KeepAlive is required for NTLM and Kerberos authentication. If we've never been authenticated or are using a different auth' we  " is 130.
Long Statement,NuGet,HttpClient,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\HttpClient.cs,CreateWebRequest,The length of the statement  "            httpRequest.UserAgent = String.Format(CultureInfo.InvariantCulture' "NuGet Bootstrapper/{0} ({1})"' typeof(HttpClient).Assembly.GetName().Version' Environment.OSVersion); " is 170.
Long Statement,NuGet,ProxyCache,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\ProxyCache.cs,GetUserConfiguredProxy,The length of the statement  "            // Try reading from the settings. The values are stored as 3 config values http_proxy' http_proxy_user' http_proxy_password " is 123.
Long Statement,NuGet,ProxyCache,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\ProxyCache.cs,GetUserConfiguredProxy,The length of the statement  "            // Next try reading from the environment variable http_proxy. This would be specified as http://<username>:<password>@proxy.com " is 127.
Long Statement,Bootstrapper,Program,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\Program.cs,Main,The length of the statement  "            string exePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)' @"NuGet\NuGet.exe"); " is 125.
Long Statement,Bootstrapper,Program,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\Program.cs,DownloadExe,The length of the statement  "                    // If multiple instances of the bootstrapper and launched' and the exe does not exist' it would cause things to go messy. This code is identical to the  " is 151.
Long Statement,Bootstrapper,Program,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\Program.cs,GetConfigDocument,The length of the statement  "            var configPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)' "NuGet"' "NuGet.config"); " is 125.
Long Statement,Bootstrapper,Program,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\Bootstrapper\Program.cs,EnsurePackageRestoreConsent,The length of the statement  "            var node = document != null ? document.SelectSingleNode(@"configuration/packageRestore/add[@key='enabled']/@value") : null; " is 123.
Missing Default,NuGet.Common,Console,D:\research\architectureSmells\repos1\themotleyfool_NuGet\src\CommandLine\Common\Console.cs,Log,The following switch statement is missing a default case: switch (level)              {                  case MessageLevel.Info:                      WriteLine(message' args);                      break;                  case MessageLevel.Warning:                      WriteWarning(message' args);                      break;                  case MessageLevel.Debug:                      WriteColor(Out' ConsoleColor.Gray' message' args);                      break;              }
