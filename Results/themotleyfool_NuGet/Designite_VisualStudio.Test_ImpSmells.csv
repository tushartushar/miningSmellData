Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CreateInstance,Cyclomatic complexity of the method is 10
Long Parameter List,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CreateInstance,The method has 9 parameters. Parameters: dte' solutionManager' fileSystemProvider' packageRepositoryFactory' waitDialogFactory' packageManagerFactory' localCache' packageSourceProvider' settings
Long Parameter List,NuGet.VisualStudio.Test,MockVsPackageManager,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.Reinstall.cs,MockVsPackageManager,The method has 7 parameters. Parameters: solutionManager' sourceRepository' fileSystemProvider' fileSystem' sharedRepository' deleteOnRestartManager' packageEvents
Long Parameter List,NuGet.VisualStudio.Test,TestableVsTemplateWizard,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,TestableVsTemplateWizard,The method has 5 parameters. Parameters: installer' loadDocumentCallback' websiteHandler' packageServices' consoleProvider
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnAfterRenameDirectories,The method has 5 parameters. Parameters: pProject' cDirs' rgszMkOldNames' rgszMkNewNames' rgFlags
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnAfterRenameFiles,The method has 5 parameters. Parameters: pProject' cFiles' rgszMkOldNames' rgszMkNewNames' rgFlags
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryAddDirectories,The method has 6 parameters. Parameters: pProject' cDirectories' rgpszMkDocuments' rgFlags' pSummaryResult' rgResults
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryAddFiles,The method has 6 parameters. Parameters: pProject' cFiles' rgpszMkDocuments' rgFlags' pSummaryResult' rgResults
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryRemoveDirectories,The method has 6 parameters. Parameters: pProject' cDirectories' rgpszMkDocuments' rgFlags' pSummaryResult' rgResults
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryRemoveFiles,The method has 6 parameters. Parameters: pProject' cFiles' rgpszMkDocuments' rgFlags' pSummaryResult' rgResults
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryRenameDirectories,The method has 7 parameters. Parameters: pProject' cDirs' rgszMkOldNames' rgszMkNewNames' rgFlags' pSummaryResult' rgResults
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryRenameFile,The method has 5 parameters. Parameters: pProject' pszMkOldName' pszMkNewName' flags' pfRenameCanContinue
Long Parameter List,NuGet.VisualStudio.Test.Mocks,MockIVsTrackProjectDocuments,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\Mocks\MockIVsTrackProjectDocuments.cs,OnQueryRenameFiles,The method has 7 parameters. Parameters: pProject' cFiles' rgszMkOldNames' rgszMkNewNames' rgFlags' pSummaryResult' rgResults
Long Statement,NuGet.VisualStudio.Test,DeleteOnRestartManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\DeleteOnRestartManagerTest.cs,MarkPackageDirectoryForDeletionAddsDeletemeFileWhenDirectoryRemovalUnsuccessful,The length of the statement  "            IPackage package = NuGet.Test.PackageUtility.CreatePackage(id: "foo"' version: "1.0.0"' content: new string[] { }' assemblyReferences: new string[] { }' tools: new[] { "lockedFile.txt" }); " is 188.
Long Statement,NuGet.VisualStudio.Test,DeleteOnRestartManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\DeleteOnRestartManagerTest.cs,MarkPackageDirectoryForDeletionAddsDeletemeFileWhenDirectoryRemovalUnsuccessful,The length of the statement  "            fileSystem.AddFile(Path.Combine(packageDirectoryPath' packageDirectoryPath + Constants.ManifestExtension)' Stream.Null); " is 120.
Long Statement,NuGet.VisualStudio.Test,DeleteOnRestartManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\DeleteOnRestartManagerTest.cs,DeleteMarkedPackageDirectoriesRemovesDirectoriesAndAssociatedDeletemeFiles,The length of the statement  "            var deleteOnRestartManager = new DeleteOnRestartManager(() => fileSystemProvider.GetFileSystem(mockRepositorySettings.Object.RepositoryPath)' " is 141.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesPrimaryRepositoryAsdependencyResolverIfUseFallbackIsFalse,The length of the statement  "            var packageManagerFactory = new Mock<VsPackageManagerFactory>(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' mockFileSystemProvider.Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 272.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesPrimaryRepositoryAsdependencyResolverIfUseFallbackIsFalse,The length of the statement  "            var packageManager = packageManagerFactory.Object.CreatePackageManager(mockRepository1' useFallbackForDependencies: false); " is 123.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesFallbackRepositoryyAsDependencyResolverIfUseFallbackIsTrue,The length of the statement  "            var packageManagerFactory = new Mock<VsPackageManagerFactory>(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' mockFileSystemProvider.Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 272.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesFallbackRepositoryyAsDependencyResolverIfUseFallbackIsTrue,The length of the statement  "            var packageManager = packageManagerFactory.Object.CreatePackageManager(mockRepository1' useFallbackForDependencies: true); " is 122.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,ResolveDependencyReturnsPackagesFromAggregateSources,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 275.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,ResolveDependencyReturnsPackagesFromAggregateSources,The length of the statement  "            IPackage dependency = dependencyResolver.ResolveDependency(new PackageDependency("A"' new VersionSpec { MinVersion = new SemanticVersion("1.0.0.0") })' null' allowPrereleaseVersions: false' preferListedPackages: false); " is 219.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryReturnsCurrentIfCurrentIsAggregateRepository,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 275.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryUsesResolvedSourceNameWhenEnsuringRepositoryIsNotAlreadyListedInAggregate,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 275.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryDoesNotThrowWhenIteratingOverFailingRepositories,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 275.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryIncludesRepositoryOnceInAggregateDependencyResolver,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 275.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryDoesNotQueryDependencyResolverIfPrimaryRepositoryContainsRequiredDependency,The length of the statement  "                              .Setup(c => c.ResolveDependency(It.IsAny<PackageDependency>()' It.IsAny<IPackageConstraintProvider>()' false' It.IsAny<bool>())) " is 128.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "                              .Setup(c => c.ResolveDependency(It.IsAny<PackageDependency>()' It.IsAny<IPackageConstraintProvider>()' false' It.IsAny<bool>())) " is 128.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "            var aggregateRepository = new AggregateRepository(new[] { dependencyResolver.Object }) { IgnoreFailingRepositories = true }; " is 124.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "            var resolvedPackage = fallbackRepository.ResolveDependency(new PackageDependency("M2"' new VersionSpec { MinVersion = new SemanticVersion("1.0.1") })' false' false); " is 165.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryUsesDependencyResolverIfPrimaryRepositoryDoesNotHaveRequiredDependency,The length of the statement  "            IPackage packageA10 = PackageUtility.CreatePackage("M1"' "1.0")' packageA11 = PackageUtility.CreatePackage("M2"' "1.1"); " is 120.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryUsesDependencyResolverIfPrimaryRepositoryDoesNotHaveRequiredDependency,The length of the statement  "            var resolvedPackage = fallbackRepository.ResolveDependency(new PackageDependency("M2"' new VersionSpec { MinVersion = new SemanticVersion("1.0.1") })' false' false); " is 165.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryCallsPackagesFindPackageOnThePrimaryRepository,The length of the statement  "            primaryRepository.As<IPackageLookup>().Setup(p => p.FindPackage("A"' new SemanticVersion("1.0"))).Returns(package).Verifiable(); " is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsFalseIfNuGetFolderDoesNotExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object); " is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsFalseIfNuGetTargetsDoesNotExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object); " is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsTrueIfFilesAndFoldersExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object); " is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingEnableCurrentSolutionThrowsIfSolutionIsNotOpen,The length of the statement  "            Exception exception = Assert.Throws<InvalidOperationException>(() => packageRestore.EnableCurrentSolutionForRestore(fromActivation: false)); " is 140.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithTrueValue,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object); " is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithTrueValueIfPackagesFolderIsMissing,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object); " is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithFalseValue,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object); " is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingRestoreMissingPackagesMethodInstallMissingPackages,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object); " is 128.
Long Statement,NuGet.VisualStudio.Test,ProjectSystemExtensionsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\ProjectSystemExtensionsTest.cs,CreateRefreshFileUsesAbsolutePathIfRelativePathsCannotBeFormed,The length of the statement  "            Assert.Equal(@"x:\test\packages\Foo.1.0\lib\net40\Bar.net40.dll"' projectSystem.ReadAllText(@"bin\Bar.net40.dll.refresh")); " is 123.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,CtorWithNullSolutionManagerThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new RepositorySettings(null' new Mock<IFileSystemProvider>().Object' new Mock<IVsSourceControlTracker>().Object)' "solutionManager"); " is 169.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathThrowsIfSolutionDirectoryIsNull,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' new Mock<IFileSystemProvider>().Object' new Mock<IVsSourceControlTracker>().Object); " is 156.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathThrowsIfSolutionDirectoryIsNull,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => { string s = repositorySettings.RepositoryPath; }' "Unable to locate the solution directory. Please ensure that the solution has been saved."); " is 199.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathDefaultsToPackagesFolderInSolutionDirectoryIfNoConfigExists,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathComesFromConfigFileIfSpecified,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathDefaultsToPackagesDirectoryIfConfigFileHasEmptyOrNullRepositoryPath,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathMalformedConfigThrows,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathMalformedConfigThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => { string s = repositorySettings.RepositoryPath; }' @"Error reading 'bar\nuget.config'."); " is 145.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,ConfigFoundInDirectoryHierarchyIsCached,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathUnderSolutionSettingsFolderIsConsideredFirst,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathAtSolutionRootFolderIsConsideredBeforeParentFolder,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,OnlyConfigPathIsCachedNotRepositoryPath,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,ConfigurationCacheIsClearedIfFileRemoved,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,ConfigurationCacheIsClearedIfSolutionCloses,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' new Mock<IVsSourceControlTracker>().Object); " is 143.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\RepositorySettingsTest.cs,ConfigurationCacheIsClearedIfSourceControlBindingChanges,The length of the statement  "            var repositorySettings = new RepositorySettings(solutionManager.Object' fileSystemProvider.Object' sourceControlTracker.Object); " is 128.
Long Statement,NuGet.VisualStudio.Test,UriHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\UriHelperTest.cs,TestInvalidSources,The length of the statement  "            string[] testValues = new[] { null' ""' "link"' "c:\\dir"' "\\username\folder"' "127.0.0.1"' "localhost"' "crash;\\_andBurn"' "ftp://bing.com"' "gopher://kill.it"' "http://" }; " is 176.
Long Statement,NuGet.VisualStudio.Test,VsFileSystemProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsFileSystemProviderTest.cs,VsFileSystemProviderThrowsIfComponentModelIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsFileSystemProvider(dte: new Mock<DTE>().Object' componentModel: null' settings: null)' "componentModel"); " is 147.
Long Statement,NuGet.VisualStudio.Test,VsFileSystemProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsFileSystemProviderTest.cs,VsFileSystemProviderThrowsIfSettingsIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsFileSystemProvider(dte: new Mock<DTE>().Object' componentModel: new Mock<IComponentModel>().Object' settings: null)' "settings"); " is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object) { CallBase = true }; " is 276.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false)).Returns(packageManager.Object); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" }); " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' packageRepositoryFactory.Object' new Mock<IVsCommonOperations>().Object' new Mock<ISolutionManager>().Object); " is 202.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Init' It.IsAny<IPackage>()' null' null' It.IsAny<ILogger>())' Times.Once()); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Install' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<FrameworkName>()' It.IsAny<ILogger>())' Times.Once()); " is 190.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository' " is 166.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false)).Returns(packageManager.Object); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" }); " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object' new Mock<IVsCommonOperations>().Object' new Mock<ISolutionManager>().Object); " is 215.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            installer.InstallPackage(sourceRepository' project' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' skipAssemblyReferences: false); " is 145.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Init' It.IsAny<IPackage>()' null' null' It.IsAny<ILogger>())' Times.Once()); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Install' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<FrameworkName>()' It.IsAny<ILogger>())' Times.Once()); " is 190.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository' " is 166.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false)).Returns(packageManager.Object); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" }); " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object' new Mock<IVsCommonOperations>().Object' new Mock<ISolutionManager>().Object); " is 215.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The length of the statement  "            installer.InstallPackage(sourceRepository' project' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' skipAssemblyReferences: false); " is 145.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository' " is 166.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false)).Returns(packageManager.Object); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' true)).Throws(new Exception("B")); " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" }); " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object' new Mock<IVsCommonOperations>().Object' new Mock<ISolutionManager>().Object); " is 215.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            installer.InstallPackage(sourceRepository' project' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' skipAssemblyReferences: false); " is 145.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            var projectManager = new ProjectManager(localRepository' pathResolver' new MockProjectSystem()' new MockPackageRepository()); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            packageManager.InstallPackage(projectManager' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageUsesProjectTargetFramework,The length of the statement  "            packageManager.InstallPackage(projectManager' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithSkipAssemblyReferencesInstallsIntoProjectAndPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithSkipAssemblyReferencesInstallsIntoProjectAndPackageManager,The length of the statement  "            packageManager.InstallPackage(projectManager' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' skipAssemblyReferences: true' logger: NullLogger.Instance); " is 199.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithSkipAssemblyReferencesFalseInstallsIntoProjectAndPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithSkipAssemblyReferencesFalseInstallsIntoProjectAndPackageManager,The length of the statement  "            packageManager.InstallPackage(projectManager' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' skipAssemblyReferences: false' logger: NullLogger.Instance); " is 200.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var projectManager = new ProjectManager(localRepository' pathResolver' new MockProjectSystem()' new MockPackageRepository()); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var package = PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' dependencies: new PackageDependency[] { new PackageDependency("bar") }); " is 148.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            packageManager.InstallPackage(projectManager' package' operations' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 155.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsInstallsMetaPackageSuccessfully,The length of the statement  "            var projectManager = new ProjectManager(localRepository' pathResolver' new MockProjectSystem()' new MockPackageRepository()); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsInstallsMetaPackageSuccessfully,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsInstallsMetaPackageSuccessfully,The length of the statement  "            packageManager.InstallPackage(projectManager' package' operations' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 155.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackgeWithNullProjectManagerOnlyInstallsIntoPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackgeWithNullProjectManagerOnlyInstallsIntoPackageManager,The length of the statement  "            packageManager.InstallPackage((IProjectManager)null' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 176.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotCallsMarkPackageDirectoryForDeletion,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 177.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotCallsMarkPackageDirectoryForDeletion,The length of the statement  "            packageManager.InstallPackage(null' "A"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' new MockPackageRepository()); " is 132.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UninstallPackage(projectManager' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance)'  " is 202.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageWithNoProjectManagerThrows,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageWithNoProjectManagerThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UninstallPackage(null' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance)' "No project was specified."); " is 222.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            packageManager.UninstallPackage(null' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance); " is 136.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageCallsMarkPackageDirectoryForDeletion,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 177.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageCallsMarkPackageDirectoryForDeletion,The length of the statement  "            packageManager.UninstallPackage(null' "A"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance); " is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository); " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository); " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) }); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var A20 = PackageUtility.CreatePackage("A"' "2.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("2.0")) }); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var F10 = PackageUtility.CreatePackage("F"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("G"' VersionUtility.ParseVersionSpec("1.0")) }); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var G10 = PackageUtility.CreatePackage("G"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) }); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository); " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' assemblyReferences: new[] { "A1.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) }); " is 183.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var A20 = PackageUtility.CreatePackage("A"' "2.0"' assemblyReferences: new[] { "A2.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) }); " is 183.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' assemblyReferences: new[] { "A1.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) }); " is 183.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithMultipleSharedDependencies,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' fileSystem' localRepository.Object' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 257.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithMultipleSharedDependencies,The length of the statement  "            packageManager.UpdatePackageToSpecificVersion(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance); " is 169.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithNoProjectsInstallsAtSolutionLevel,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithNoProjectsInstallsAtSolutionLevel,The length of the statement  "            var package = PackageUtility.CreatePackage("foo"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("bar") }); " is 129.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            var package2 = PackageUtility.CreatePackage("bar"' "2.0.0"' dependencies: new[] { new PackageDependency("qux"' versionSpec) }); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.InstallPackage(package' ignoreDependencies: false' allowPrereleaseVersions: false)' " is 154.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIndirectPrereleaseDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIndirectPrereleaseDependency,The length of the statement  "            var package2 = PackageUtility.CreatePackage("bar"' "2.0.0"' dependencies: new[] { new PackageDependency("qux"' versionSpec) }); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageUpdatesToTheHighestReleasePackageIfPrereleaseFlagIsSetToFalse,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageUpdatesToTheHighestPackageIfPrereleaseFlagIsSetToTrue,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' new Mock<IFileSystemProvider>().Object' projectSystem' localRepository' new Mock<IDeleteOnRestartManager>().Object' new Mock<VsPackageInstallerEvents>().Object); " is 253.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageShowWarningIfThereIsOrphanedPackageUnderPackagesFolder,The length of the statement  "            logger.Setup(l => l.Log(MessageLevel.Warning' "'orphan' was not installed in any project. Update failed.")).Verifiable(); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageShowWarningIfThereIsOrphanedPackageUnderPackagesFolder,The length of the statement  "            packageManager.UpdatePackages(updateDependencies: true' allowPrereleaseVersions: true' logger: logger.Object' eventListener: new Mock<IPackageOperationEventListener>().Object' updateMode: PackageUpdateMode.Newest); " is 214.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallMetaPackageDoesNotAddEntryToSolutionPackagesConfig,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "2.0"' new string[] {"world.txt"}' dependencies: new [] { new PackageDependency("B")}); " is 136.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallMetaPackageDoesNotAddEntryToSolutionPackagesConfig,The length of the statement  "            localRepository.Verify(r => r.AddPackageReferenceEntry(It.IsAny<string>()' It.IsAny<SemanticVersion>())' Times.Never()); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallMetaPackageDoesNotAddEntryToSolutionPackagesConfig2,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "2.0"' new string[] { "world" }' dependencies: new[] { new PackageDependency("B") }); " is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallMetaPackageDoesNotAddEntryToSolutionPackagesConfig2,The length of the statement  "            localRepository.Verify(r => r.AddPackageReferenceEntry(It.IsAny<string>()' It.IsAny<SemanticVersion>())' Times.Never()); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageWithTheSameVersion,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: true' logger: null); " is 124.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipsReinstallingIfPackageDoesNotExistAndLogWarning,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: true' logger: logger.Object); " is 133.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageWithTheSamePrereleaseVersion,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithDependencies,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "1.2-alpha"' new[] { "content.txt" }' dependencies: new[] { new PackageDependency("B") }); " is 139.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithDependencies,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesWithDependenciesSkipIfDependencyPackageIsMissingFromSource,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "1.2-alpha"' new[] { "content.txt" }' dependencies: new[] { new PackageDependency("B") }); " is 139.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesWithDependenciesSkipIfDependencyPackageIsMissingFromSource,The length of the statement  "            packageManager.ReinstallPackages(projectManager' updateDependencies: false' allowPrereleaseVersions: false' logger: logger.Object); " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithPrereleaseDependencies,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "1.2-alpha"' new[] { "content.txt" }' dependencies: new[] { new PackageDependency("B") }); " is 139.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithPrereleaseDependencies,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithNewDependencyIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithNewDependencyIfProjectFrameworkChanges,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: true' logger: null); " is 124.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesDoesNotRestorePackagesWithNewDependencyWhenProjectFrameworkChangesIfUpdateDependenciesIsFalse,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesDoesNotRestorePackagesWithNewDependencyWhenProjectFrameworkChangesIfUpdateDependenciesIsFalse,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: false' allowPrereleaseVersions: true' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesThrowsWithNewDependencyWhenProjectFrameworkChangesIfAllowPrereleaseParameterIsFalseAndPackageVersionIsStable,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesThrowsWithNewDependencyWhenProjectFrameworkChangesIfAllowPrereleaseParameterIsFalseAndPackageVersionIsStable,The length of the statement  "                () => packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null)' " is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesDoesNotThrowWithNewDependencyWhenProjectFrameworkChangesIfAllowPrereleaseParameterIsFalseAndPackageVersionIsPrerelease,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesDoesNotThrowWithNewDependencyWhenProjectFrameworkChangesIfAllowPrereleaseParameterIsFalseAndPackageVersionIsPrerelease,The length of the statement  "            packageManager.ReinstallPackage(projectManager' "A"' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresAllPackagesInAProjectWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 157.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresAllPackagesInAProjectWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager' "B"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresAllPackagesInAProjectWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.ReinstallPackages(projectManager' updateDependencies: true' allowPrereleaseVersions: false' logger: null); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipReinstallingForPackagesThatDoNotExistInSource,The length of the statement  "            packageManager.ReinstallPackages(projectManager' updateDependencies: false' allowPrereleaseVersions: true' logger: logger.Object); " is 130.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager1' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.InstallPackage(projectManager2' "B"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 152.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfProjectFrameworkChanges,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("1.2-alpha"))).Returns((string id' SemanticVersion version) => projectManager1.LocalRepository.Exists(id' version)); " is 187.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfProjectFrameworkChanges,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("B"' new SemanticVersion("2.0"))).Returns((string id' SemanticVersion version) => projectManager2.LocalRepository.Exists(id' version)); " is 181.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfProjectFrameworkChanges,The length of the statement  "            packageManager.ReinstallPackages(updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance' eventListener: NullPackageOperationEventListener.Instance); " is 179.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipRestallingForOneProjectButProceedWithTheOther,The length of the statement  "            packageManager.InstallPackage(projectManager1' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipRestallingForOneProjectButProceedWithTheOther,The length of the statement  "            packageManager.InstallPackage(projectManager2' "B"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 152.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipRestallingForOneProjectButProceedWithTheOther,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("1.2-alpha"))).Returns((string id' SemanticVersion version) => projectManager1.LocalRepository.Exists(id' version)); " is 187.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipRestallingForOneProjectButProceedWithTheOther,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("B"' new SemanticVersion("2.0"))).Returns((string id' SemanticVersion version) => projectManager2.LocalRepository.Exists(id' version)); " is 181.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipRestallingForOneProjectButProceedWithTheOther,The length of the statement  "            packageManager.ReinstallPackages(updateDependencies: true' allowPrereleaseVersions: false' logger: logger.Object' eventListener: NullPackageOperationEventListener.Instance); " is 173.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfSourcePackageChanges,The length of the statement  "            packageManager.InstallPackage(projectManager1' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfSourcePackageChanges,The length of the statement  "            packageManager.InstallPackage(projectManager2' "B"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 152.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfSourcePackageChanges,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("1.2-alpha"))).Returns((string id' SemanticVersion version) => projectManager1.LocalRepository.Exists(id' version)); " is 187.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfSourcePackageChanges,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("B"' new SemanticVersion("2.0"))).Returns((string id' SemanticVersion version) => projectManager2.LocalRepository.Exists(id' version)); " is 181.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackageInAllProjectsWithNewContentIfSourcePackageChanges,The length of the statement  "            packageManager.ReinstallPackages(updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance' eventListener: NullPackageOperationEventListener.Instance); " is 179.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjects,The length of the statement  "            packageManager.InstallPackage(projectManager1' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjects,The length of the statement  "            packageManager.InstallPackage(projectManager2' "A"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 152.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjects,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("1.2-alpha"))).Returns((string id' SemanticVersion version) => projectManager1.LocalRepository.Exists(id' version)); " is 187.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjects,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("2.0"))).Returns((string id' SemanticVersion version) => projectManager2.LocalRepository.Exists(id' version)); " is 181.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjects,The length of the statement  "            packageManager.ReinstallPackages(updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance' eventListener: NullPackageOperationEventListener.Instance); " is 179.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjectsCallingAnotherOverload,The length of the statement  "            packageManager.InstallPackage(projectManager1' "A"' new SemanticVersion("1.2-alpha")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjectsCallingAnotherOverload,The length of the statement  "            packageManager.InstallPackage(projectManager2' "A"' new SemanticVersion("2.0")' ignoreDependencies: false' allowPrereleaseVersions: true' logger: null); " is 152.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjectsCallingAnotherOverload,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("1.2-alpha"))).Returns((string id' SemanticVersion version) => projectManager1.LocalRepository.Exists(id' version)); " is 187.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjectsCallingAnotherOverload,The length of the statement  "            localRepositoryMock.Setup(p => p.IsReferenced("A"' new SemanticVersion("2.0"))).Returns((string id' SemanticVersion version) => projectManager2.LocalRepository.Exists(id' version)); " is 181.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesRestoresPackagesWithSameIdAndDifferentVersionsInAllProjectsCallingAnotherOverload,The length of the statement  "            packageManager.ReinstallPackage("A"' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance' eventListener: NullPackageOperationEventListener.Instance); " is 183.
Long Statement,NuGet.VisualStudio.Test,VsPackageManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageManagerTest.cs,ReinstallPackagesSkipsReinstallingSolutionPackageIfItDoesNotExistAndLogWarning,The length of the statement  "            packageManager.ReinstallPackage("A"' updateDependencies: true' allowPrereleaseVersions: true' logger: logger.Object' eventListener: NullPackageOperationEventListener.Instance); " is 176.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CtorIfFirstRunningAddsDefaultSource,The length of the statement  "            var provider = new VsPackageSourceProvider(userSettings.Object' packageSourceProvider' new Mock<IVsShellInfo>().Object); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CtorMigrateV1FeedToV2Feed,The length of the statement  "                    .Returns(new[] { new KeyValuePair<string' string>("NuGet official package source"' "https://go.microsoft.com/fwlink/?LinkID=206669") }); " is 136.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CtorMigrateV2LegacyFeedToV2Feed,The length of the statement  "                        .Returns(new[] { new KeyValuePair<string' string>("NuGet official package source"' "https://go.microsoft.com/fwlink/?LinkID=230477") }); " is 136.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CtorMigrateV1FeedToV2FeedAndPreserveIsEnabledProperty,The length of the statement  "                        .Returns(new[] { new KeyValuePair<string' string>("NuGet official package source"' "https://go.microsoft.com/fwlink/?LinkID=206669") }); " is 136.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CtorAddsAggregrateIfNothingWasPersistedIntoSettingsManager,The length of the statement  "            var provider = new VsPackageSourceProvider(userSettings.Object' packageSourceProvider' new Mock<IVsShellInfo>().Object); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SetActivePackageSourcePersistsItToSettingsManager,The length of the statement  "            var provider = new VsPackageSourceProvider(userSettings.Object' packageSourceProvider.Object' new Mock<IVsShellInfo>().Object); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SettingActivePackageSourceToNonExistantSourceThrows,The length of the statement  "            var provider = new VsPackageSourceProvider(userSettings.Object' packageSourceProvider' new Mock<IVsShellInfo>().Object); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SettingsWithMoreThanOneAggregateSourceAreModifiedToNotHaveOne,The length of the statement  "            var provider = new VsPackageSourceProvider(userSettings.Object' packageSourceProvider' new Mock<IVsShellInfo>().Object); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SetActivePackageSourceAcceptsValueForWindows8FeedWhenRunningWindows8Express,The length of the statement  "            userSettings.Setup(_ => _.SetValue("activePackageSource"' "Windows 8 packages"' NuGetConstants.VSExpressForWindows8FeedUrl)).Verifiable(); " is 138.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,TheDisabledStateOfWindows8FeedIsPersistedWhenRunningOnWindows8Express,The length of the statement  "                new PackageSource(NuGetConstants.VSExpressForWindows8FeedUrl' "Windows 8 packages"' isEnabled: false' isOfficial: true)' " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SetActivePackageSourceToWindows8FeedWillThrowWhenNotRunningWindows8Express,The length of the statement  "                () => provider.ActivePackageSource = new PackageSource(NuGetConstants.VSExpressForWindows8FeedUrl' "Windows 8 packages")'  " is 121.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillNotSaveTheWindows8ExpressFeedWhenRunningWindows8Express,The length of the statement  "                    new PackageSource("https://nuget.org/api/v2/curated-feeds/windows8-packages/"' "Windows 8 Packages"){ IsOfficial = true }' " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillSaveTheWindows8ExpressFeedWhenNotRunningWindows8Express,The length of the statement  "                    new PackageSource("https://nuget.org/api/v2/curated-feeds/windows8-packages/"' "Windows 8 Packages"){ IsOfficial = true }' " is 122.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillSaveTheWindows8ExpressFeedWhenNotRunningWindows8Express,The length of the statement  "            AssertPackageSource(savedSources[1]' "Windows 8 Packages"' "https://nuget.org/api/v2/curated-feeds/windows8-packages/"); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,CreateDefaultSourceProvider,The length of the statement  "            return new PackageSourceProvider(settings' VsPackageSourceProvider.DefaultSources' VsPackageSourceProvider.FeedsToMigrate); " is 123.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,CtorNullSourceProviderOrRepositoryFactoryThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsPackageSourceRepository(new Mock<IPackageRepositoryFactory>().Object' null)' "packageSourceProvider"); " is 144.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,CtorNullSourceProviderOrRepositoryFactoryThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsPackageSourceRepository(null' new Mock<IVsPackageSourceProvider>().Object)' "repositoryFactory"); " is 139.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,NullActivePackageSourceThrowsForAddPackageAndRemovePackage,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => repository.AddPackage(null)' "Unable to retrieve package list because no source was specified."); " is 153.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,NullActivePackageSourceThrowsForAddPackageAndRemovePackage,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => repository.RemovePackage(null)' "Unable to retrieve package list because no source was specified."); " is 156.
Long Statement,NuGet.VisualStudio.Test,TestUtils,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestUtils.cs,GetSolutionManagerWithProjects,The length of the statement  "            return GetSolutionManager(isSolutionOpen: true' defaultProjectName: null' projects: projects.Select(p => GetProject(p))); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingsThrowsIfDefaultSettingsIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsSettings(solutionManager: new Mock<ISolutionManager>().Object' defaultSettings: null' fileSystemProvider: null)' "defaultSettings"); " is 174.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingsThrowsIfFileSystemProviderIsNull,The length of the statement  "                () => new VsSettings(solutionManager: new Mock<ISolutionManager>().Object' defaultSettings: NullSettings.Instance' fileSystemProvider: null)' "fileSystemProvider"); " is 164.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesNullSettingsIfSolutionIsUnavailable,The length of the statement  "            fileSystemProvider.Setup(f => f.GetFileSystem(It.IsAny<string>())).Throws(new Exception("This method should not be called")); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesNullSettingsIfSolutionDirectoryDoesNotExist,The length of the statement  "            fileSystemProvider.Setup(f => f.GetFileSystem(It.IsAny<string>())).Throws(new Exception("This method should not be called")); " is 125.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesSettingsFileFromSolutionRootIfExists,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""bar"" /></solution></configuration>"); " is 149.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesValuesFromDefaultSettingsForNonSolutionProperties,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""bar"" /></solution></configuration>"); " is 149.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingSwitchesSettingsIfSolutionChanges,The length of the statement  "            fileSystemA.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""barA"" /></solution></configuration>"); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingSwitchesSettingsIfSolutionChanges,The length of the statement  "            fileSystemB.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""barB"" /></solution></configuration>"); " is 151.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingDoesNotCacheSolutionSettings,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""bar"" /></solution></configuration>"); " is 149.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingDoesNotCacheSolutionSettings,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""qux"" /></solution></configuration>"); " is 149.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_WorksWithExtensionRepository,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' vsExtensionManager: extensionManagerMock.Object); " is 139.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowErrorForMissingRepositoryIdAttributeWhenInExtensionRepositoryMode,The length of the statement  "                "The project template is configured to use an Extension-specific package repository but the Extension ID has not been specified. Use the \"repositoryId\" attribute to specify the Extension ID."' " is 194.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_WorksWithRegistryRepository,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' registryKeys: new[] { hkcu.Object }); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_FallsBackWhenHKCURegistryKeyDoesNotExist,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' registryKeys: new[] { hkcu.Object' hklm.Object }); " is 140.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_FallsBackWhenHKCURegistryValueDoesNotExist,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' registryKeys: new[] { hkcu.Object' hklm.Object }); " is 140.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_FallsBackWhenHKCURegistryValueIsEmpty,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' registryKeys: new[] { hkcu.Object' hklm.Object }); " is 140.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowErrorForMissingKeyNameAttributeWhenInRegistryRepositoryMode,The length of the statement  "                "The project template is configured to use a Registry-provided package repository but the Registry value name has not been specified. Use the \"keyName\" attribute to specify the Registry value."' " is 196.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowErrorForMissingRegistryKeyWhenInRegistryRepositoryMode,The length of the statement  "                String.Format("The project template is configured to use a Registry-provided package repository but there was an error accessing Registry key '{0}'."' registryPath)' " is 165.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowErrorForMissingRegistryValueWhenInRegistryRepositoryMode,The length of the statement  "                String.Format("The project template has a reference to a missing Registry value. Could not find a Registry key with name '{0}' under '{1}'."' registryKey' registryPath)' " is 169.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowsErrorForInvalidCacheAttributeValue,The length of the statement  "                "The \"repository\" attribute of the package element has an invalid value: '__invalid__'. Valid values are: 'template' or 'extension'."' " is 136.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,AddNuGetPackageFolderTemplateParameterIsCorrectWhenProjectWebsiteIsHttpBased,The length of the statement  "            ((IVsTemplateWizard)template).RunStarted(new Mock<DTE>().Object' parameters' WizardRunKind.AsNewProject' new object[0]); " is 120.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,InvalidPackageElementHelper,The length of the statement  "            Assert.Equal("The project template lists one or more packages with missing' empty' or invalid values for the \"id\" or \"version\" attributes. Both attributes are required and must have valid values."' wizard.ErrorMessages.Single()); " is 233.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForProject_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0"' true' false)); " is 150.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForProject_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0"' true' false)); " is 155.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0"' true' false)); " is 150.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0"' true' false)); " is 155.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackagesWithSkipAssemblyReferencesSetIfSpecified,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0"' true' true)); " is 149.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackagesWithSkipAssemblyReferencesSetIfSpecified,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0"' true' false)); " is 155.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0.0-ctp-1"' true' false)); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0.3.4"' true' false)); " is 159.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_SilentlyIgnoresPackageIsExactVersionAlreadyInstalled,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' packageServices: servicesMock.Object' consoleProvider: consoleProviderMock.Object); " is 192.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_SilentlyIgnoresPackageIsExactVersionAlreadyInstalled,The length of the statement  "            servicesMock.Setup(s => s.IsPackageInstalled(mockProject' "MyOtherPackage"' new SemanticVersion("2.0.3-beta4"))).Returns(true); " is 127.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_SilentlyIgnoresPackageIsExactVersionAlreadyInstalled,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0.0-ctp-1"' true' false)); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_SilentlyIgnoresPackageIsExactVersionAlreadyInstalled,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "YetAnotherPackage"' "3.0.2.1"' true' false)); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_SilentlyIgnoresPackageIsExactVersionAlreadyInstalled,The length of the statement  "                i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0.3-beta4"' true' false)' " is 141.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' packageServices: servicesMock.Object' consoleProvider: consoleProviderMock.Object); " is 192.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "            servicesMock.Setup(s => s.IsPackageInstalled(mockProject' "MyOtherPackage"' new SemanticVersion("2.0.3-beta4"))).Returns(false); " is 128.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0.0-ctp-1"' true' false)); " is 158.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "YetAnotherPackage"' "3.0.2.1"' true' false)); " is 162.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "                i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0.3-beta4"' true' false)' " is 141.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_PrintsWarningIfInstalledVersionDoesntMatchRequestedVersion,The length of the statement  "            consoleMock.Verify(c => c.WriteLine("Attempting to install version '2.0.3-beta4' of 'MyOtherPackage' but the project already includes a different version. Skipping...")); " is 170.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "            installerMock.Setup(i => i.InstallPackage(It.IsAny<IPackageRepository>()' mockProject' "MyPackage"' "1.0"' true' false)) " is 120.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "                i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyPackage"' "1.0"' true' false)); " is 129.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "                i => i.InstallPackage(It.Is<LocalPackageRepository>(p => p.Source == @"C:\Some")' mockProject' "MyOtherPackage"' "2.0"' true' false)); " is 134.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "                "Could not add all required packages to the project. The following packages failed to install from 'C:\\Some':\r\n\r\nMyPackage.1.0 : But I don't want to be installed."' " is 169.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CreateRefreshesFilesForWebsites,The length of the statement  "                    It.Is<IEnumerable<PackageName>>(names => names.Count() == 2 && names.First().Id == "MyPackage" && names.Last().Id == "YourPackage") " is 131.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CreateRefreshesFilesForWebsites,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' websiteHandler: websiteHandler.Object) " is 147.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,DoNoteCreateRefreshesFilesForNonWebsites,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' websiteHandler: websiteHandler.Object) " is 147.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CopyNativeBinariesForWebsites,The length of the statement  "                    It.Is<IEnumerable<PackageName>>(names => names.Count() == 2 && names.First().Id == "MyPackage" && names.Last().Id == "YourPackage") " is 131.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CopyNativeBinariesForWebsites,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' websiteHandler: websiteHandler.Object) " is 147.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,DoNotCopyNativeBinariesForNonWebsites,The length of the statement  "            var templateWizard = new TestableVsTemplateWizard(installerMock.Object' loadDocumentCallback: p => document' websiteHandler: websiteHandler.Object) " is 147.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository); " is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' package' project' new FrameworkName(".NETCore' Version=4.5")' NullLogger.Instance)).Returns(true).Verifiable(); " is 192.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 183.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository); " is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' new FrameworkName(".NETCore' Version=4.5")' NullLogger.Instance)).Returns(true).Verifiable(); " is 193.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 183.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository); " is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' It.IsAny<FrameworkName>()' NullLogger.Instance)).Returns(true).Verifiable(); " is 176.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\B.1.0"' "uninstall.ps1"' packageB' project' It.IsAny<FrameworkName>()' NullLogger.Instance)).Returns(true).Verifiable(); " is 176.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 183.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository); " is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' It.IsAny<FrameworkName>()' NullLogger.Instance)).Returns(true).Verifiable(); " is 176.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new Mock<IFileSystemProvider>().Object' new MockFileSystem()' localRepository.Object' " is 183.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object); " is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageUninstaller.UninstallPackage(project' "B"' removeDependencies: true)' " is 132.
Empty Catch Block,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,Dispose,The method has an empty catch block.
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesFallbackRepositoryyAsDependencyResolverIfUseFallbackIsTrue,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryUsesResolvedSourceNameWhenEnsuringRepositoryIsNotAlreadyListedInAggregate,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryDoesNotThrowWhenIteratingOverFailingRepositories,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryIncludesRepositoryOnceInAggregateDependencyResolver,The following statement contains a magic number: Assert.Equal(2' aggregateRepo.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,PackageRestoreManagerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingEnableCurrentSolutionWillAddPackagesToMachineCache,The following statement contains a magic number: Assert.Equal(2' cachePackages.Count);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfInputIsNull,The following statement contains a magic number: ExceptionAssert.ThrowsArgNull(() => PathHelper.SmartTruncate(null' 10)' "path");
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' 5)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' 5)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' -4)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' -4)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ReturnsTheSameStringIfItIsEqualToMaxWidthValue,The following statement contains a magic number: int maxWidth = 6;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,ReturnsTheSameStringIfItIsShorterThanMaxWidthValue,The following statement contains a magic number: int maxWidth = 30;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,TruncateIfInputIsLongerThanMaxWidth,The following statement contains a magic number: int maxWidth = 20;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,TruncateIfInputIsLongerThanMaxWidth2,The following statement contains a magic number: int maxWidth = 26;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\PathHelperTest.cs,TruncateFolderNameIfItIsTooLong,The following statement contains a magic number: int maxWidth = 10;
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,AddRefreshFilesForAssembliesReferencesIncludeFilesUnderLibRoot,The following statement contains a magic number: Assert.Equal(4' refreshFiles.Count);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,AddRefreshFilesForAssembliesReferencesIncludeFilesUnderLibRoot,The following statement contains a magic number: Assert.Equal("bin\\three.dll.refresh"' refreshFiles[2]);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,AddRefreshFilesForAssembliesReferencesIncludeFilesUnderLibRoot,The following statement contains a magic number: Assert.Equal("bin\\two.winmd.refresh"' refreshFiles[3]);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,AddRefreshFilesForAssembliesReferencesUseCorrectFrameworkFolders,The following statement contains a magic number: Assert.Equal(2' refreshFiles.Count);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,CopyNativeBinariesForFilesUnderTheSameFolderName,The following statement contains a magic number: Assert.Equal(4' nativeBinaries.Count);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,CopyNativeBinariesForFilesUnderTheSameFolderName,The following statement contains a magic number: Assert.Equal("bin\\three.txt"' nativeBinaries[2]);
Magic Number,NuGet.VisualStudio.Test,TestVsWebsiteHandler,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\TestVsWebsiteHandler.cs,CopyNativeBinariesForFilesUnderTheSameFolderName,The following statement contains a magic number: Assert.Equal("bin\\two.winmd"' nativeBinaries[3]);
Magic Number,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The following statement contains a magic number: packageManager.As<IVsPackageManager>().SetupSet(m => m.BindingRedirectEnabled = true).Callback(() => state *= 2);
Magic Number,NuGet.VisualStudio.Test,VsPackageInstallerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageTurnOffBindingRedirect,The following statement contains a magic number: Assert.Equal(4' state);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesAddOfficialSourceIfMissing,The following statement contains a magic number: Assert.Equal(2' sources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,TheEnabledStateOfWindows8FeedIsRestoredWhenRunningOnWindows8Express,The following statement contains a magic number: Assert.Equal(4' packageSources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesWillAddTheWindows8SourceAtTheFrontWhenRunningWindows8Express,The following statement contains a magic number: Assert.Equal(4' sources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesWillAddTheWindows8SourceAtTheFrontWhenRunningWindows8Express,The following statement contains a magic number: AssertPackageSource(sources[2]' "NuGet official package source"' "https://nuget.org/api/v2/");
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesWillAddTheWindows8SourceAtTheFrontWhenRunningWindows8Express,The following statement contains a magic number: AssertPackageSource(sources[3]' "theThirdFeed"' "theThirdSource");
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesWillNotAddTheWindows8SourceWhenNotRunningWindows8Express,The following statement contains a magic number: Assert.Equal(3' sources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,LoadPackageSourcesWillNotAddTheWindows8SourceWhenNotRunningWindows8Express,The following statement contains a magic number: AssertPackageSource(sources[2]' "theThirdFeed"' "theThirdSource");
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillNotSaveTheWindows8ExpressFeedWhenRunningWindows8Express,The following statement contains a magic number: Assert.Equal(2' savedSources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillSaveTheWindows8ExpressFeedWhenNotRunningWindows8Express,The following statement contains a magic number: Assert.Equal(3' savedSources.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SavePackageSourcesWillSaveTheWindows8ExpressFeedWhenNotRunningWindows8Express,The following statement contains a magic number: AssertPackageSource(savedSources[2]' "theThirdFeed"' "theThirdSource");
Magic Number,NuGet.VisualStudio.Test,VsSourceControlTrackerTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsSourceControlTrackerTest.cs,RaiseEventWhenSourceControlStateChanged,The following statement contains a magic number: projectDocumentsEvents.OnAfterSccStatusChanged(new Mock<IVsProject>().Object' 1' new[] {"sol.sln"}'                                                             new[] {(uint) 2});
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CreateRefreshesFilesForWebsites,The following statement contains a magic number: websiteHandler.Setup(h =>                  h.AddRefreshFilesForReferences(                      mockProject.Object'                      It.IsAny<IFileSystem>()'                      It.Is<IEnumerable<PackageName>>(names => names.Count() == 2 && names.First().Id == "MyPackage" && names.Last().Id == "YourPackage")                  )).Verifiable();
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,D:\research\architectureSmells\repos1\themotleyfool_NuGet\test\VisualStudio.Test\VsTemplateWizardTest.cs,CopyNativeBinariesForWebsites,The following statement contains a magic number: websiteHandler.Setup(h =>                  h.CopyNativeBinaries(                      mockProject.Object'                      It.IsAny<IFileSystem>()'                      It.Is<IEnumerable<PackageName>>(names => names.Count() == 2 && names.First().Id == "MyPackage" && names.Last().Id == "YourPackage")                  )).Verifiable();
