Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,Cyclomatic complexity of the method is 8
Complex Method,Entelect.Types,TypeExtensions,C:\repos\entelect_Entelect\src\Entelect\Types\TypeExtensions.cs,ExtractSystemTypeNames,Cyclomatic complexity of the method is 26
Long Parameter List,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SetTime,The method has 5 parameters.
Long Parameter List,Entelect.Extensions,StringBuilderExtensions,C:\repos\entelect_Entelect\src\Entelect\Strings\StringBuilderExtensions.cs,AppendLineFormat,The method has 5 parameters.
Long Statement,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,ConvertRegionalTimeToUtc,The length of the statement  "	DateTime returnTime = TimeZoneInfo.ConvertTime (regionalTime' TimeZoneInfo.FindSystemTimeZoneById (timeZone)' TimeZoneInfo.Utc); " is 128.
Long Statement,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,ConvertUtcToRegionalTime,The length of the statement  "	DateTime returnTime = TimeZoneInfo.ConvertTime (utcTime' TimeZoneInfo.Utc' TimeZoneInfo.FindSystemTimeZoneById (timeZone)); " is 123.
Long Statement,Entelect.Extensions,EnumExtensions,C:\repos\entelect_Entelect\src\Entelect\Enums\EnumExtensions.cs,ToSpacedString,The length of the statement  "	/*todo rk' specify the type of casing' should the words be lowercase? first one upper i.e. sentance case?*/return source.ToString ().PascalToSpacedString (); " is 157.
Long Statement,Entelect.Extensions,EnumExtensions,C:\repos\entelect_Entelect\src\Entelect\Enums\EnumExtensions.cs,ParseEnum,The length of the statement  "	throw new ArgumentException (string.Format ("value {0} could not be converted to an enum of type {1}"' value' defaultValue.GetType ().FullName)); " is 145.
Long Statement,Entelect.ErrorHandling,LogicErrors,C:\repos\entelect_Entelect\src\Entelect\ErrorHandling\LogicErrors.cs,GetCombinedMessages,The length of the statement  "			/* todo rk change to use pascal spaced string when added to lib */stringBuilder.AppendFormat ("Error #{0}: {1}{2}"' index + 1' logicError.GetType ().Name' Environment.NewLine); " is 176.
Magic Number,Entelect.Extensions,DateTimeFormatExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeFormatExtensions.cs,StyleForDayDifference,The following statement contains a magic number: if (timeDifference.Days >= 5) {  	return string.Format ("{0} at {1}"' timestamp.ToString ("d MMMM yyyy")' timestamp.TimeOfDay.ToString (timeformat));  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,Noon,The following statement contains a magic number: return input.Date.AddHours (12);  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,MonthsFromStartDateToEndDate,The following statement contains a magic number: return (endDate.Month - startDate.Month) + (12 * (endDate.Year - startDate.Year));  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (totalDays > fullWeekCount * 7) {  	// we are here to find out if there is a 1-day or 2-days weekend  	// in the time interval remaining after subtracting the complete weeks  	int firstDayOfWeek = (int)startDate.DayOfWeek;  	int lastDayOfWeek = (int)endDate.DayOfWeek;  	if (lastDayOfWeek < firstDayOfWeek) {  		lastDayOfWeek += 7;  	}  	if (firstDayOfWeek <= 6) {  		if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  		 {  			totalDays -= 2;  		}  		else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  		 {  			totalDays -= 1;  		}  		else if (firstDayOfWeek == 0)// Sunday is First day  		 {  			totalDays -= 1;  		}  	}  	else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval  	 {  		totalDays -= 1;  	}  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (lastDayOfWeek < firstDayOfWeek) {  	lastDayOfWeek += 7;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: lastDayOfWeek += 7;  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 6) {  	if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval  	 {  		totalDays -= 2;  	}  	else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval  	 {  		totalDays -= 1;  	}  	else if (firstDayOfWeek == 0)// Sunday is First day  	 {  		totalDays -= 1;  	}  }  else if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval   {  	totalDays -= 2;  }  else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval   {  	totalDays -= 1;  }  else if (firstDayOfWeek == 0)// Sunday is First day   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval   {  	totalDays -= 2;  }  else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval   {  	totalDays -= 1;  }  else if (firstDayOfWeek == 0)// Sunday is First day   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (lastDayOfWeek >= 7)// Both Saturday and Sunday are in the remaining time interval   {  	totalDays -= 2;  }  else if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval   {  	totalDays -= 1;  }  else if (firstDayOfWeek == 0)// Sunday is First day   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: totalDays -= 2;  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (lastDayOfWeek >= 6)// Only Saturday is in the remaining time interval   {  	totalDays -= 1;  }  else if (firstDayOfWeek == 0)// Sunday is First day   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Extensions,DateTimeExtensions,C:\repos\entelect_Entelect\src\Entelect\DateTime\DateTimeExtensions.cs,SubtractWeekendDaysDuringRemainingTime,The following statement contains a magic number: if (firstDayOfWeek <= 7 && lastDayOfWeek >= 7)// Only Sunday is in the remaining time interval   {  	totalDays -= 1;  }  
Magic Number,Entelect.Types,TypeExtensions,C:\repos\entelect_Entelect\src\Entelect\Types\TypeExtensions.cs,FormatTypeName,The following statement contains a magic number: if (isArray) {  	name = name.Remove (name.IndexOf ("[]"' StringComparison.OrdinalIgnoreCase)' 2);  }  
Magic Number,Entelect.Types,TypeExtensions,C:\repos\entelect_Entelect\src\Entelect\Types\TypeExtensions.cs,FormatTypeName,The following statement contains a magic number: name = name.Remove (name.IndexOf ("[]"' StringComparison.OrdinalIgnoreCase)' 2);  
