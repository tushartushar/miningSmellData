Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,Cyclomatic complexity of the method is 8
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OutputCSVFromDataGridView,Cyclomatic complexity of the method is 10
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OutputCSVFromDataReader,Cyclomatic complexity of the method is 8
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OutputXLSFromDataTable,Cyclomatic complexity of the method is 9
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OutputXLSFromDataTable,Cyclomatic complexity of the method is 9
Complex Method,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OutputXLSFromDataGridView,Cyclomatic complexity of the method is 10
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,convertFromJSON,Cyclomatic complexity of the method is 10
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DataTable,Cyclomatic complexity of the method is 9
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,Cyclomatic complexity of the method is 31
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,JSplit,Cyclomatic complexity of the method is 13
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,DT2JSON,Cyclomatic complexity of the method is 9
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,checkDTType,Cyclomatic complexity of the method is 12
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,Cyclomatic complexity of the method is 11
Complex Method,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,ConvertFromJsonForSina,Cyclomatic complexity of the method is 13
Long Parameter List,AC.IO,Common,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Common.cs,LongTimeExecuteDataSet,The method has 5 parameters.
Long Parameter List,AC.IO,Common,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Common.cs,LongTimeExecuteNonQuery,The method has 5 parameters.
Long Parameter List,AC.IO,INIFileManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\INIFileManager.cs,GetPrivateProfileString,The method has 6 parameters.
Long Parameter List,AC.IO,INIFileManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\INIFileManager.cs,GetPrivateProfileString,The method has 6 parameters.
Long Parameter List,AC.Page,PagedList,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Page\PagedList.cs,PagedList,The method has 6 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMail,The method has 8 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMail,The method has 7 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMail,The method has 9 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMail,The method has 9 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMailByAttachments,The method has 8 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMail,The method has 10 parameters.
Long Parameter List,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMailOfSCM,The method has 6 parameters.
Long Statement,AC.IO,Common,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Common.cs,DataTableToSql,The length of the statement  "			else if (table.Columns [j].DataType == typeof(int) || table.Columns [j].DataType == typeof(decimal) || table.Columns [j].DataType == typeof(long) || table.Columns [j].DataType == typeof(double) || table.Columns [j].DataType == typeof(float) || table.Columns [j].DataType == typeof(byte)) " is 287.
Long Statement,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,The length of the statement  "	string strConn = "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + path + ";" + "Extended Properties='Excel 8.0;HDR=no;IMEX=1;'"; " is 134.
Long Statement,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,ExcelToDataSet,The length of the statement  "	string strConn = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + opnFileName + ";Extended Properties=\"Excel 8.0;HDR=YES;IMEX=2\""; " is 133.
Long Statement,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetFirstTableName,The length of the statement  "		using (OleDbConnection conn = new OleDbConnection ("Provider=Microsoft.Jet." + "OLEDB.4.0;Extended Properties=\"Excel 8.0\";Data Source=" + excelFileName)) { " is 157.
Long Statement,AC.Util,AssertUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\AssertUtils.cs,ArgumentNotNull,The length of the statement  "		throw new ArgumentNullException (name' string.Format (CultureInfo.InvariantCulture' "Argument '{0}' cannot be null."' name)); " is 125.
Long Statement,AC.Util,AssertUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\AssertUtils.cs,StringNotNullOrEmpty,The length of the statement  "		throw new ArgumentNullException (name' string.Format (CultureInfo.InvariantCulture' "ArgumentString '{0}' cannot be null or empty."' name)); " is 140.
Long Statement,AC.Util,MailUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\MailUtils.cs,SendMailByPictures,The length of the statement  "	AlternateView htmlBody = AlternateView.CreateAlternateViewFromString (mailBody + "<img src=\"cid:report\">"' null' "text/html"); " is 128.
Long Statement,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetRandomSeed,The length of the statement  "	System.Security.Cryptography.RNGCryptoServiceProvider rng = new System.Security.Cryptography.RNGCryptoServiceProvider (); " is 121.
Long Statement,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,CreateVerifyCode,The length of the statement  "	string codeSerial = "0'1'2'3'4'5'6'7'8'9'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'A'B'C'D'E'F'G'H'I'J'K'L'M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z"; " is 146.
Long Statement,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidProductID,The length of the statement  "		return (isAllNumber (inStr.Substring (0' inStr.IndexOf ('_'))) && isAllNumber (inStr.Substring (inStr.IndexOf ('_') + 1))); " is 123.
Long Statement,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidPhoneNumber,The length of the statement  "		if (!IsNumber (inStr' i) && inStr [i] != ' ' && inStr [i] != '-' && inStr [i] != '(' && inStr [i] != ')' && inStr [i] != '（' && inStr [i] != '）') " is 145.
Long Statement,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidInputString,The length of the statement  "	string Sql_1 = "exec|insert+|insert|select+|delete+|delete|update+|master+|master|truncate|declare|drop+|drop|drop+table|table"; " is 128.
Long Statement,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsUrl,The length of the statement  "	return Regex.IsMatch (source' @"^(((file|gopher|news|nntp|telnet|http|ftp|https|ftps|sftp)://)|(www\.))+(([a-zA-Z0-9\._-]+\.[a-zA-Z]{2'6})|([0-9]{1'3}\.[0-9]{1'3}\.[0-9]{1'3}\.[0-9]{1'3}))(/[a-zA-Z0-9\&amp;%_\./-~-]*)?$"' RegexOptions.IgnoreCase); " is 247.
Complex Conditional,AC.IO,Common,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Common.cs,DataTableToSql,The conditional expression  "table.Columns [j].DataType == typeof(int) || table.Columns [j].DataType == typeof(decimal) || table.Columns [j].DataType == typeof(long) || table.Columns [j].DataType == typeof(double) || table.Columns [j].DataType == typeof(float) || table.Columns [j].DataType == typeof(byte)"  is complex.
Complex Conditional,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidPhoneNumber,The conditional expression  "!IsNumber (inStr' i) && inStr [i] != ' ' && inStr [i] != '-' && inStr [i] != '(' && inStr [i] != ')' && inStr [i] != '（' && inStr [i] != '）'"  is complex.
Complex Conditional,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsLetter,The conditional expression  "(c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')"  is complex.
Empty Catch Block,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,OleDbConnectionOpened,The method has an empty catch block.
Empty Catch Block,AC.Util,FilesHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\FileHelper.cs,GetFiles,The method has an empty catch block.
Empty Catch Block,AC.Util,FilesHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\FileHelper.cs,GetVersion,The method has an empty catch block.
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,The following statement contains a magic number: foreach (DataTable dt in ds.Tables) {  	foreach (DataRow row in dt.Rows) {  		for (int i = 0; i < dt.Columns.Count; i++) {  			string col = row [i].ToString ().ToLower ();  			if (col.IndexOf ("e+") > 0) {  				string[] arr = col.Split ('e');  				double dCol = double.Parse (arr [0]) * (double)Math.Pow (10' int.Parse (arr [1]));  				row [i] = dCol.ToString ();  			}  		}  	}  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,The following statement contains a magic number: foreach (DataRow row in dt.Rows) {  	for (int i = 0; i < dt.Columns.Count; i++) {  		string col = row [i].ToString ().ToLower ();  		if (col.IndexOf ("e+") > 0) {  			string[] arr = col.Split ('e');  			double dCol = double.Parse (arr [0]) * (double)Math.Pow (10' int.Parse (arr [1]));  			row [i] = dCol.ToString ();  		}  	}  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,The following statement contains a magic number: for (int i = 0; i < dt.Columns.Count; i++) {  	string col = row [i].ToString ().ToLower ();  	if (col.IndexOf ("e+") > 0) {  		string[] arr = col.Split ('e');  		double dCol = double.Parse (arr [0]) * (double)Math.Pow (10' int.Parse (arr [1]));  		row [i] = dCol.ToString ();  	}  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetDataSetFromExcel,The following statement contains a magic number: if (col.IndexOf ("e+") > 0) {  	string[] arr = col.Split ('e');  	double dCol = double.Parse (arr [0]) * (double)Math.Pow (10' int.Parse (arr [1]));  	row [i] = dCol.ToString ();  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetSheetNames,The following statement contains a magic number: if (dtSchema != null) {  	foreach (DataRow dr in dtSchema.Rows) {  		result.Add (dr [2].ToString ().Trim ());  	}  	dtSchema.Dispose ();  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetSheetNames,The following statement contains a magic number: foreach (DataRow dr in dtSchema.Rows) {  	result.Add (dr [2].ToString ().Trim ());  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetSheetNames,The following statement contains a magic number: result.Add (dr [2].ToString ().Trim ());  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetFirstTableName,The following statement contains a magic number: if (File.Exists (excelFileName)) {  	using (OleDbConnection conn = new OleDbConnection ("Provider=Microsoft.Jet." + "OLEDB.4.0;Extended Properties=\"Excel 8.0\";Data Source=" + excelFileName)) {  		conn.Open ();  		DataTable dt = conn.GetOleDbSchemaTable (OleDbSchemaGuid.Tables' null);  		tableName = dt.Rows [0] [2].ToString ().Trim ();  	}  	if (!string.IsNullOrEmpty (tableName)) {  		tableName = tableName.Replace ("'"' "");  	}  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetFirstTableName,The following statement contains a magic number: using (OleDbConnection conn = new OleDbConnection ("Provider=Microsoft.Jet." + "OLEDB.4.0;Extended Properties=\"Excel 8.0\";Data Source=" + excelFileName)) {  	conn.Open ();  	DataTable dt = conn.GetOleDbSchemaTable (OleDbSchemaGuid.Tables' null);  	tableName = dt.Rows [0] [2].ToString ().Trim ();  }  
Magic Number,AC.IO,Excel,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\Excel.cs,GetFirstTableName,The following statement contains a magic number: tableName = dt.Rows [0] [2].ToString ().Trim ();  
Magic Number,AC.IO,ExcelWriter,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\ExcelWriter.cs,BeginWrite,The following statement contains a magic number: _writeFile (new short[] {  	0x809'  	8'  	0'  	0x10'  	0'  	0  });  
Magic Number,AC.IO,ExcelWriter,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\ExcelWriter.cs,WriteNumber,The following statement contains a magic number: _writeFile (new short[] {  	0x203'  	14'  	x'  	y'  	0  });  
Magic Number,AC.IO,ExcelWriter,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\IO\ExcelWriter.cs,WriteString,The following statement contains a magic number: _writeFile (new short[] {  	0x204'  	(short)(b.Length + 8)'  	x'  	y'  	0'  	(short)b.Length  });  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: if (string.IsNullOrEmpty (text)) {  	return string.Empty;  }  else {  	byte[] data = new byte[text.Length / 2];  	for (int i = 0; i < data.Length; i++) {  		data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  	}  	byte[] result = null;  	using (DESCryptoServiceProvider DES = new DESCryptoServiceProvider ()) {  		DES.Key = Encoding.UTF8.GetBytes (encryptionKey);  		DES.IV = Encoding.UTF8.GetBytes (encryptionIV);  		ICryptoTransform desencrypt = DES.CreateDecryptor ();  		result = desencrypt.TransformFinalBlock (data' 0' data.Length);  	}  	return Encoding.UTF8.GetString (result);  }  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: if (string.IsNullOrEmpty (text)) {  	return string.Empty;  }  else {  	byte[] data = new byte[text.Length / 2];  	for (int i = 0; i < data.Length; i++) {  		data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  	}  	byte[] result = null;  	using (DESCryptoServiceProvider DES = new DESCryptoServiceProvider ()) {  		DES.Key = Encoding.UTF8.GetBytes (encryptionKey);  		DES.IV = Encoding.UTF8.GetBytes (encryptionIV);  		ICryptoTransform desencrypt = DES.CreateDecryptor ();  		result = desencrypt.TransformFinalBlock (data' 0' data.Length);  	}  	return Encoding.UTF8.GetString (result);  }  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: if (string.IsNullOrEmpty (text)) {  	return string.Empty;  }  else {  	byte[] data = new byte[text.Length / 2];  	for (int i = 0; i < data.Length; i++) {  		data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  	}  	byte[] result = null;  	using (DESCryptoServiceProvider DES = new DESCryptoServiceProvider ()) {  		DES.Key = Encoding.UTF8.GetBytes (encryptionKey);  		DES.IV = Encoding.UTF8.GetBytes (encryptionIV);  		ICryptoTransform desencrypt = DES.CreateDecryptor ();  		result = desencrypt.TransformFinalBlock (data' 0' data.Length);  	}  	return Encoding.UTF8.GetString (result);  }  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  }  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  }  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  
Magic Number,AC.Security,DES,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Security\DES.cs,Decrypt,The following statement contains a magic number: data [i] = byte.Parse (text.Substring (2 * i' 2)' NumberStyles.HexNumber);  
Magic Number,AC.Util,ConvertHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\ConvertHelper.cs,GetNumberDigit,The following statement contains a magic number: while (number >= 1) {  	digit++;  	number /= 10;  }  
Magic Number,AC.Util,ConvertHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\ConvertHelper.cs,GetNumberDigit,The following statement contains a magic number: number /= 10;  
Magic Number,AC.Util,ConvertHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\ConvertHelper.cs,GetNumberDigit,The following statement contains a magic number: return ZParseInt32 ((firstnum + 0.1) * pownumber' 0);  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DataTable,The following statement contains a magic number: for (i = 0; i < rowsCount; i++) {  	dr = dt.NewRow ();  	rowTemp = (ArrayList)((ArrayList)alRows [1]) [i];  	for (j = 0; j < rowTemp.Count; j++) {  		var rowTemp1 = ((ArrayList)rowTemp [j]);  		if (rowTemp1 != null && rowTemp1.Count >= 2) {  			RowName = (String)rowTemp1 [0];  			RowValue = rowTemp1 [1];  		}  		if (RowValue != null && RowValue.GetType ().ToString () == "System.Collections.ArrayList")  			//DataTime  			RowValue = al2DateTime ((ArrayList)RowValue);  		if (!string.IsNullOrEmpty (RowName)) {  			if (RowValue == null)  				dr [RowName] = DBNull.Value;  			else  				dr [RowName] = RowValue;  		}  	}  	if (!string.IsNullOrEmpty (RowName)) {  		dt.Rows.Add (dr);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DataTable,The following statement contains a magic number: for (j = 0; j < rowTemp.Count; j++) {  	var rowTemp1 = ((ArrayList)rowTemp [j]);  	if (rowTemp1 != null && rowTemp1.Count >= 2) {  		RowName = (String)rowTemp1 [0];  		RowValue = rowTemp1 [1];  	}  	if (RowValue != null && RowValue.GetType ().ToString () == "System.Collections.ArrayList")  		//DataTime  		RowValue = al2DateTime ((ArrayList)RowValue);  	if (!string.IsNullOrEmpty (RowName)) {  		if (RowValue == null)  			dr [RowName] = DBNull.Value;  		else  			dr [RowName] = RowValue;  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DataTable,The following statement contains a magic number: if (rowTemp1 != null && rowTemp1.Count >= 2) {  	RowName = (String)rowTemp1 [0];  	RowValue = rowTemp1 [1];  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DateTime,The following statement contains a magic number: if (al != null && al.Count >= 2) {  	var al1 = (ArrayList)al [1];  	if (al1 != null && al1.Count >= 2) {  		if ((String)(al1) [0] == "Value") {  			String ts = (String)(al1) [1];  			DateTime dte = DateTime.MinValue;  			DateTime.TryParse (ts' out dte);  			return dte;  		}  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DateTime,The following statement contains a magic number: if (al != null && al.Count >= 2) {  	var al1 = (ArrayList)al [1];  	if (al1 != null && al1.Count >= 2) {  		if ((String)(al1) [0] == "Value") {  			String ts = (String)(al1) [1];  			DateTime dte = DateTime.MinValue;  			DateTime.TryParse (ts' out dte);  			return dte;  		}  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,al2DateTime,The following statement contains a magic number: if (al1 != null && al1.Count >= 2) {  	if ((String)(al1) [0] == "Value") {  		String ts = (String)(al1) [1];  		DateTime dte = DateTime.MinValue;  		DateTime.TryParse (ts' out dte);  		return dte;  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getKV,The following statement contains a magic number: al.Add (getToken (inStr.Substring (p + 2' jstr.Length - p - 2)));  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getKV,The following statement contains a magic number: al.Add (getToken (inStr.Substring (p + 2' jstr.Length - p - 2)));  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: if (inStr.Length < 2)  	return null;  //应该有个exception  else if (inStr.Length == 2)  	return "";  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: if (inStr.Length < 2)  	return null;  //应该有个exception  else if (inStr.Length == 2)  	return "";  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: if (inStr.Length == 2)  	return "";  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: while (p < jstr.Length - 1) {  	if (jstr [p] == '\\') {  		switch (jstr [p + 1]) {  		case '"':  		case '\'':  		case '\\':  		case '/':  			s.Append (jstr [p + 1]);  			break;  		case 'n':  			s.Append ('\n');  			break;  		case 't':  			s.Append ('\t');  			break;  		case 'r':  			s.Append ('\r');  			break;  		case 'b':  			s.Append ('\b');  			break;  		case 'f':  			s.Append ('\f');  			break;  		case 'u':  			s.Append (getJsonChar (jstr' p));  			p += 4;  			break;  		default:  			s.Append ('?');  			break;  		}  		p++;  	}  	else  		s.Append (jstr [p]);  	p++;  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: if (jstr [p] == '\\') {  	switch (jstr [p + 1]) {  	case '"':  	case '\'':  	case '\\':  	case '/':  		s.Append (jstr [p + 1]);  		break;  	case 'n':  		s.Append ('\n');  		break;  	case 't':  		s.Append ('\t');  		break;  	case 'r':  		s.Append ('\r');  		break;  	case 'b':  		s.Append ('\b');  		break;  	case 'f':  		s.Append ('\f');  		break;  	case 'u':  		s.Append (getJsonChar (jstr' p));  		p += 4;  		break;  	default:  		s.Append ('?');  		break;  	}  	p++;  }  else  	s.Append (jstr [p]);  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: switch (jstr [p + 1]) {  case '"':  case '\'':  case '\\':  case '/':  	s.Append (jstr [p + 1]);  	break;  case 'n':  	s.Append ('\n');  	break;  case 't':  	s.Append ('\t');  	break;  case 'r':  	s.Append ('\r');  	break;  case 'b':  	s.Append ('\b');  	break;  case 'f':  	s.Append ('\f');  	break;  case 'u':  	s.Append (getJsonChar (jstr' p));  	p += 4;  	break;  default:  	s.Append ('?');  	break;  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getString,The following statement contains a magic number: p += 4;  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,getJsonChar,The following statement contains a magic number: if (char_p + 6 > inCharA.Length)  	return '?';  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,JSplit,The following statement contains a magic number: if (jstr.Length < 3)  	return al;  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,isEscaped,The following statement contains a magic number: if (numBackSlash % 2 == 1)  	return true;  else  	return false;  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: for (i = 0; i < len; i += 1) {  	c = s [i];  	if ((c == '\\') || (c == '"') || (c == '/')) {  		sb.Append ('\\');  		sb.Append (c);  	}  	else if (c == '\b')  		sb.Append ("\\b");  	else if (c == '\t')  		sb.Append ("\\t");  	else if (c == '\n')  		sb.Append ("\\n");  	else if (c == '\f')  		sb.Append ("\\f");  	else if (c == '\r')  		sb.Append ("\\r");  	else {  		if (c < ' ') {  			//t = "000" + Integer.toHexString(c);   			string tmp = new string (c' 1);  			try {  				t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  			}  			catch {  				//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  				sb.Append (c);  				continue;  			}  			sb.Append ("\\u" + t.Substring (t.Length - 4));  		}  		else {  			sb.Append (c);  		}  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if ((c == '\\') || (c == '"') || (c == '/')) {  	sb.Append ('\\');  	sb.Append (c);  }  else if (c == '\b')  	sb.Append ("\\b");  else if (c == '\t')  	sb.Append ("\\t");  else if (c == '\n')  	sb.Append ("\\n");  else if (c == '\f')  	sb.Append ("\\f");  else if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c == '\b')  	sb.Append ("\\b");  else if (c == '\t')  	sb.Append ("\\t");  else if (c == '\n')  	sb.Append ("\\n");  else if (c == '\f')  	sb.Append ("\\f");  else if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c == '\t')  	sb.Append ("\\t");  else if (c == '\n')  	sb.Append ("\\n");  else if (c == '\f')  	sb.Append ("\\f");  else if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c == '\n')  	sb.Append ("\\n");  else if (c == '\f')  	sb.Append ("\\f");  else if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c == '\f')  	sb.Append ("\\f");  else if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c == '\r')  	sb.Append ("\\r");  else {  	if (c < ' ') {  		//t = "000" + Integer.toHexString(c);   		string tmp = new string (c' 1);  		try {  			t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  		}  		catch {  			//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  			sb.Append (c);  			continue;  		}  		sb.Append ("\\u" + t.Substring (t.Length - 4));  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: if (c < ' ') {  	//t = "000" + Integer.toHexString(c);   	string tmp = new string (c' 1);  	try {  		t = "000" + int.Parse (tmp' System.Globalization.NumberStyles.HexNumber);  	}  	catch {  		//Letao.Common.Functions.ERP_ERROR(new Letao.Common.LTDB()' "错误的json字符:" + tmp'true);  		sb.Append (c);  		continue;  	}  	sb.Append ("\\u" + t.Substring (t.Length - 4));  }  else {  	sb.Append (c);  }  
Magic Number,AC.Util,JSON,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\JSON.cs,String2JSON,The following statement contains a magic number: sb.Append ("\\u" + t.Substring (t.Length - 4));  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetRandomNum,The following statement contains a magic number: if (random_length <= 0 || random_length > 20)  	return null;  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetNextRandDigit,The following statement contains a magic number: return (rd1.Next (10) + rd2.Next (10)) % 10;  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetNextRandDigit,The following statement contains a magic number: return (rd1.Next (10) + rd2.Next (10)) % 10;  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetNextRandDigit,The following statement contains a magic number: return (rd1.Next (10) + rd2.Next (10)) % 10;  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetPYString,The following statement contains a magic number: foreach (char c in str) {  	if ((int)c >= 33 && (int)c <= 126) {  		//字母和符号原样保留  		tempStr += c.ToString ();  	}  	else {  		//累加拼音声母  		tempStr += GetPYChar (c.ToString ());  	}  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetPYString,The following statement contains a magic number: foreach (char c in str) {  	if ((int)c >= 33 && (int)c <= 126) {  		//字母和符号原样保留  		tempStr += c.ToString ();  	}  	else {  		//累加拼音声母  		tempStr += GetPYChar (c.ToString ());  	}  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetPYString,The following statement contains a magic number: if ((int)c >= 33 && (int)c <= 126) {  	//字母和符号原样保留  	tempStr += c.ToString ();  }  else {  	//累加拼音声母  	tempStr += GetPYChar (c.ToString ());  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetPYString,The following statement contains a magic number: if ((int)c >= 33 && (int)c <= 126) {  	//字母和符号原样保留  	tempStr += c.ToString ();  }  else {  	//累加拼音声母  	tempStr += GetPYChar (c.ToString ());  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetFriendlyTime,The following statement contains a magic number: if (tsDiff.TotalMinutes <= 1) {  	lastDateStr = "<span class='s time'>" + (int)tsDiff.TotalSeconds + "秒前</span>";  }  else if (tsDiff.TotalHours <= 1) {  	lastDateStr = "<span class='m time'>" + (int)tsDiff.TotalMinutes + "分前</span>";  }  else if (tsDiff.TotalHours <= 8) {  	lastDateStr = "<span class='h time'>" + (int)tsDiff.TotalHours + "小时前</span>";  }  else if (tsDiff.Days == 0 && dtNow.Day == dtTime.Day) {  	lastDateStr = "<span class='td time'>今天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else if (tsDiff.Days <= 1 && dtNow.Day == dtTime.Day + 1) {  	lastDateStr = "<span class='yt time'>昨天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else {  	lastDateStr = "<span class='t time'>" + dtTime.ToString ("yy-MM-dd hh:mm") + "</span>";  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetFriendlyTime,The following statement contains a magic number: if (tsDiff.TotalHours <= 1) {  	lastDateStr = "<span class='m time'>" + (int)tsDiff.TotalMinutes + "分前</span>";  }  else if (tsDiff.TotalHours <= 8) {  	lastDateStr = "<span class='h time'>" + (int)tsDiff.TotalHours + "小时前</span>";  }  else if (tsDiff.Days == 0 && dtNow.Day == dtTime.Day) {  	lastDateStr = "<span class='td time'>今天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else if (tsDiff.Days <= 1 && dtNow.Day == dtTime.Day + 1) {  	lastDateStr = "<span class='yt time'>昨天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else {  	lastDateStr = "<span class='t time'>" + dtTime.ToString ("yy-MM-dd hh:mm") + "</span>";  }  
Magic Number,AC.Util,StringHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringHelper.cs,GetFriendlyTime,The following statement contains a magic number: if (tsDiff.TotalHours <= 8) {  	lastDateStr = "<span class='h time'>" + (int)tsDiff.TotalHours + "小时前</span>";  }  else if (tsDiff.Days == 0 && dtNow.Day == dtTime.Day) {  	lastDateStr = "<span class='td time'>今天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else if (tsDiff.Days <= 1 && dtNow.Day == dtTime.Day + 1) {  	lastDateStr = "<span class='yt time'>昨天 " + dtTime.ToString ("HH:mm") + "</span>";  }  else {  	lastDateStr = "<span class='t time'>" + dtTime.ToString ("yy-MM-dd hh:mm") + "</span>";  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidProductID,The following statement contains a magic number: if (string.IsNullOrWhiteSpace (inStr) || inStr.Length < 6)  	return false;  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidPostalCode,The following statement contains a magic number: return ((inStr.Trim ().Length == 6) && isAllNumber (inStr));  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidUserPassword,The following statement contains a magic number: if (inStr.Length > 32 || inStr.Length < 3)  	return false;  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isValidUserPassword,The following statement contains a magic number: if (inStr.Length > 32 || inStr.Length < 3)  	return false;  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: if (ipList.Length == 4 || ipList.Length == 6) {  	foreach (string item in ipList) {  		if (isAllNumber (item)) {  			int i = Convert.ToInt32 (item);  			if (i >= 0 || i <= 255)  				continue;  			else {  				returnValue = false;  				break;  			}  		}  		else {  			returnValue = false;  			break;  		}  	}  }  else {  	return false;  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: if (ipList.Length == 4 || ipList.Length == 6) {  	foreach (string item in ipList) {  		if (isAllNumber (item)) {  			int i = Convert.ToInt32 (item);  			if (i >= 0 || i <= 255)  				continue;  			else {  				returnValue = false;  				break;  			}  		}  		else {  			returnValue = false;  			break;  		}  	}  }  else {  	return false;  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: if (ipList.Length == 4 || ipList.Length == 6) {  	foreach (string item in ipList) {  		if (isAllNumber (item)) {  			int i = Convert.ToInt32 (item);  			if (i >= 0 || i <= 255)  				continue;  			else {  				returnValue = false;  				break;  			}  		}  		else {  			returnValue = false;  			break;  		}  	}  }  else {  	return false;  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: foreach (string item in ipList) {  	if (isAllNumber (item)) {  		int i = Convert.ToInt32 (item);  		if (i >= 0 || i <= 255)  			continue;  		else {  			returnValue = false;  			break;  		}  	}  	else {  		returnValue = false;  		break;  	}  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: if (isAllNumber (item)) {  	int i = Convert.ToInt32 (item);  	if (i >= 0 || i <= 255)  		continue;  	else {  		returnValue = false;  		break;  	}  }  else {  	returnValue = false;  	break;  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,IsValidIpAddress,The following statement contains a magic number: if (i >= 0 || i <= 255)  	continue;  else {  	returnValue = false;  	break;  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isLiveChinese,The following statement contains a magic number: for (int i = 0; i < words.Length; i++) {  	TmmP = words.Substring (i' 1);  	byte[] sarr = System.Text.Encoding.GetEncoding ("gb2312").GetBytes (TmmP);  	if (sarr.Length == 2) {  		return true;  	}  }  
Magic Number,AC.Util,StringVerify,C:\repos\xiaotou745_achuan.net\src\AC\AC.Core\Util\StringVerify.cs,isLiveChinese,The following statement contains a magic number: if (sarr.Length == 2) {  	return true;  }  
