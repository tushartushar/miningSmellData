Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,Cyclomatic complexity of the method is 10
Complex Method,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,Cyclomatic complexity of the method is 10
Complex Method,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,Cyclomatic complexity of the method is 11
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,DbTypeLength,Cyclomatic complexity of the method is 13
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,GetDataTypeLenVal,Cyclomatic complexity of the method is 48
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,DbTypeLengthOra,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,DbTypeLengthMySQL,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,DbTypeLengthOleDb,Cyclomatic complexity of the method is 36
Complex Method,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,CSToProcType,Cyclomatic complexity of the method is 13
Complex Method,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,Cyclomatic complexity of the method is 10
Complex Method,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,Cyclomatic complexity of the method is 10
Complex Method,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,Cyclomatic complexity of the method is 23
Complex Method,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,Cyclomatic complexity of the method is 11
Long Parameter List,AC.Code.Builder,BuilderDaoBase,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,BuilderDaoBase,The method has 6 parameters.
Long Parameter List,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,BuilderDaoOfDbHelper,The method has 6 parameters.
Long Parameter List,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,BuilderDaoOfSqlHelper,The method has 6 parameters.
Long Parameter List,AC.Code.DbObjects,DbFactory,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DBFactory.cs,CreateDbObj,The method has 5 parameters.
Long Parameter List,AC.Code.JavaBuilder,BuilderDaoBase,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,BuilderDaoBase,The method has 6 parameters.
Long Parameter List,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,BuilderDaoOfDbHelper,The method has 6 parameters.
Long Parameter List,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,BuilderDaoOfSqlHelper,The method has 6 parameters.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The length of the statement  "	strclass.AppendSpace (1' "public class " + CodeName.DaoName + " : Daobase" + (GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? "' " + CodeName.DomainName : string.Empty)); " is 185.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");"); " is 146.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The length of the statement  "		strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");"); " is 147.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "		strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");"); " is 140.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";"); " is 134.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return DbHelper.QueryWithRowMapper(" + ConnectionString + "'QUERY_SQL'new " + TableName + "RowMapper());"); " is 137.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return DbHelper.QueryForObject(" + ConnectionString + "' GETBYID_SQL' dbParameters' new " + TableName + "RowMapper());"); " is 151.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The length of the statement  "	strclass.AppendSpaceLine (2' "private class " + TableName + "RowMapper : IDataTableRowMapper<" + CodeName.ServiceDTOName + ">"); " is 128.
Long Statement,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The length of the statement  "				strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());"); " is 126.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The length of the statement  "		strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'"); " is 243.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The length of the statement  "	strclass.AppendSpace (1' "public class " + CodeName.DaoName + " : Daobase" + (GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? "' " + CodeName.DomainName : string.Empty)); " is 185.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'"); " is 239.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);"); " is 141.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);"); " is 127.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "		strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'"); " is 233.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' UPDATE_SQL' parameters);"); " is 127.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";"); " is 134.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' DELETE_SQL' parameters);"); " is 127.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "IList<" + CodeName.ServiceDTOName + "> result = new List<" + CodeName.ServiceDTOName + ">();"); " is 125.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' QUERY_SQL);"); " is 131.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' GETBYID_SQL' parameters);"); " is 145.
Long Statement,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The length of the statement  "				strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());"); " is 126.
Long Statement,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");"); " is 122.
Long Statement,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");"); " is 122.
Long Statement,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The length of the statement  "		strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();"); " is 131.
Long Statement,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");"); " is 132.
Long Statement,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The length of the statement  "		string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName; " is 123.
Long Statement,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The length of the statement  "		strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();"); " is 131.
Long Statement,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");"); " is 132.
Long Statement,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,ReSetConnString,The length of the statement  "		//constr="Provider=SQLOLEDB;Data Source="+ip+";Initial Catalog=master;Integrated Security=SSPI";//����OleDbConnection���ӵ��ַ��� " is 127.
Long Statement,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,ReSetConnString,The length of the statement  "			dbconnectStr = "user id=" + user + ";password=" + pwd + ";initial catalog=master;data source=" + ip + ";Connect Timeout=30"; " is 124.
Long Statement,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,BuildQueryCommand,The length of the statement  "			if ((parameter.Direction == ParameterDirection.InputOutput || parameter.Direction == ParameterDirection.Input) && (parameter.Value == null)) { " is 142.
Long Statement,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetVIEWs,The length of the statement  "	const string strSql = "select [name] from sysobjects where xtype='V' and [name]<>'syssegments' and [name]<>'sysconstraints' order by [name]"; " is 141.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The length of the statement  "	strclass.AppendSpace (1' "public class " + CodeName.DaoName + " : Daobase" + (GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? "' " + CodeName.DomainName : string.Empty)); " is 185.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");"); " is 146.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The length of the statement  "		strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");"); " is 147.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "		strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");"); " is 140.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";"); " is 134.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return DbHelper.QueryWithRowMapper(" + ConnectionString + "'QUERY_SQL'new " + TableName + "RowMapper());"); " is 137.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return DbHelper.QueryForObject(" + ConnectionString + "' GETBYID_SQL' dbParameters' new " + TableName + "RowMapper());"); " is 151.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The length of the statement  "	strclass.AppendSpaceLine (2' "private class " + TableName + "RowMapper : IDataTableRowMapper<" + CodeName.ServiceDTOName + ">"); " is 128.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The length of the statement  "				strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());"); " is 126.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The length of the statement  "		strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'"); " is 243.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The length of the statement  "	strclass.AppendSpace (1' "public class " + CodeName.DaoName + " : Daobase" + (GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? "' " + CodeName.DomainName : string.Empty)); " is 185.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'"); " is 239.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);"); " is 141.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The length of the statement  "		strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);"); " is 127.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "		strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'"); " is 233.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The length of the statement  "	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' UPDATE_SQL' parameters);"); " is 127.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";"); " is 134.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The length of the statement  "	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' DELETE_SQL' parameters);"); " is 127.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "IList<" + CodeName.ServiceDTOName + "> result = new List<" + CodeName.ServiceDTOName + ">();"); " is 125.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' QUERY_SQL);"); " is 131.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' GETBYID_SQL' parameters);"); " is 145.
Long Statement,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The length of the statement  "				strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());"); " is 126.
Long Statement,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");"); " is 122.
Long Statement,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");"); " is 122.
Long Statement,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The length of the statement  "		strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();"); " is 131.
Long Statement,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");"); " is 132.
Long Statement,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The length of the statement  "		string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName; " is 123.
Long Statement,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The length of the statement  "		strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();"); " is 131.
Long Statement,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")"); " is 128.
Long Statement,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")"); " is 121.
Long Statement,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The length of the statement  "	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");"); " is 132.
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.DaoName + "()");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region " + CodeName.DomainName + "  Members");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Nested type: " + TableName + "RowMapper");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Other Members");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 增加一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	if (field.IsIdentity) {  		continue;  	}  	string columnName = field.ColumnName;  	strInsertFields.Append (columnName + "'");  	strInsertValues.Append ("@" + columnName + "'");  	strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + strretu + " Insert(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string INSERT_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (result == null)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return 0;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: foreach (ColumnInfo key in paramKeys) {  	strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 更新一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string UPDATE_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  	if (field.IsIdentity || field.IsPK) {  		continue;  	}  	strSetValue.Append (columnName + "=@" + columnName + "'");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(ConnStringName'  UPDATE_SQL' dbParameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + ConnectionString + "' DELETE_SQL' dbParameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string condition = BindQueryCriteria(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string QUERY_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return DbHelper.QueryWithRowMapper(" + ConnectionString + "'QUERY_SQL'new " + TableName + "RowMapper());");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 根据ID获取对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string GETBYID_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return DbHelper.QueryForObject(" + ConnectionString + "' GETBYID_SQL' dbParameters' new " + TableName + "RowMapper());");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 构造查询条件");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static string BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var stringBuilder = new StringBuilder(\" where 1=1 \");");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (" + CodeName.CodeOfQueryDTOParam + " == null)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return stringBuilder.ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "//TODO:在此加入查询条件构建代码");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return stringBuilder.ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 绑定对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private class " + TableName + "RowMapper : IDataTableRowMapper<" + CodeName.ServiceDTOName + ">");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "public " + CodeName.ServiceDTOName + " MapRow(DataRow dataReader)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "var result = new " + CodeName.ServiceDTOName + "();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "object obj;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "else");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return result;");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: foreach (ColumnInfo key in paramKeys) {  	strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.DaoName + "()");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region " + CodeName.DomainName + "  Members");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Other Members");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 增加一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string INSERT_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string length = field.Length;  	if (field.IsIdentity) {  		continue;  	}  	strInsertFields.Append (columnName + "'");  	strInsertValues.Append ("@" + columnName + "'");  	strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (result == null)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return 0;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "else");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 更新一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string UPDATE_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string length = field.Length;  	strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  	if (field.IsIdentity || field.IsPK) {  		continue;  	}  	strSetValue.Append (columnName + "=@" + columnName + "'");  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' UPDATE_SQL' parameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' DELETE_SQL' parameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string condition = BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string QUERY_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "IList<" + CodeName.ServiceDTOName + "> result = new List<" + CodeName.ServiceDTOName + ">();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' QUERY_SQL);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (dataset == null || dataset.Tables.Count == 0)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return result;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "foreach (DataRow dataRow in dataset.Tables[0].Rows)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result.Add(ReaderBind(dataRow));");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 根据ID获取对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string GETBYID_SQL = @\"");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' CodeName.ServiceDTOName + " result = null;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' GETBYID_SQL' parameters);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (dataset != null && dataset.Tables[0].Rows.Count > 0)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result = ReaderBind(dataset.Tables[0].Rows[0]);");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 构造查询条件");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static string BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var stringBuilder = new StringBuilder(\" where 1=1 \");");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (" + CodeName.CodeOfQueryDTOParam + " == null)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return stringBuilder.ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "//TODO:在此加入查询条件构建代码");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return stringBuilder.ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 绑定对象");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static " + CodeName.ServiceDTOName + " ReaderBind(DataRow dataReader)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var result = new " + CodeName.ServiceDTOName + "();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object obj;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "else");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.Builder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' returnType + " Insert(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Update(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Delete(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �õ�һ������ʵ��");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GetServiceDTOCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + "() { }");  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GetServiceDTOCode,The following statement contains a magic number: if (GenerateConfig.QueryMethodNeeded) {  	strclass.AppendSpaceLine (1' "/// <summary>");  	strclass.AppendSpaceLine (1' "/// 查询对象类" + CodeName.ServiceQueryDTOName + " 。(属性说明自动提取数据库字段的描述信息)");  	strclass.AppendSpaceLine (1' "/// Generate By: " + Environment.UserName);  	strclass.AppendSpaceLine (1' "/// Generate Time: " + DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss"));  	strclass.AppendSpaceLine (1' "/// </summary>");  	strclass.AppendSpaceLine (1' "public class " + CodeName.ServiceQueryDTOName);  	strclass.AppendSpaceLine (1' "{");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceQueryDTOName + "() { }");  	strclass.AppendSpaceLine (1' "}");  }  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GetServiceDTOCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceQueryDTOName + "() { }");  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	bool isIdentity = field.IsIdentity;  	bool ispk = field.IsPK;  	bool cisnull = field.cisNull;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	string isnull = "";  	if (CodeCommon.IsValueType (columnType)) {  		if ((!isIdentity) && (!ispk) && (cisnull)) {  			isnull = "?";  			//代表可空类型  		}  	}  	//strclass1.AppendSpaceLine(2' "private " + columnType + isnull + " _" + columnName.ToLower() + ";");//私有变量  	strclass2.AppendSpaceLine (2' "/// <summary>");  	strclass2.AppendSpaceLine (2' "/// " + deText);  	strclass2.AppendSpaceLine (2' "/// </summary>");  	strclass2.AppendSpaceLine (2' "public " + columnType + isnull + " " + columnName + " { get; set; }");  	//属性  	//strclass2.AppendSpaceLine(2' "{");  	//strclass2.AppendSpaceLine(3' "set{" + " _" + columnName.ToLower() + "=value;}");  	//strclass2.AppendSpaceLine(3' "get{return " + "_" + columnName.ToLower() + ";}");  	//strclass2.AppendSpaceLine(2' "}");  }  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	bool isIdentity = field.IsIdentity;  	bool ispk = field.IsPK;  	bool cisnull = field.cisNull;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	string isnull = "";  	if (CodeCommon.IsValueType (columnType)) {  		if ((!isIdentity) && (!ispk) && (cisnull)) {  			isnull = "?";  			//代表可空类型  		}  	}  	//strclass1.AppendSpaceLine(2' "private " + columnType + isnull + " _" + columnName.ToLower() + ";");//私有变量  	strclass2.AppendSpaceLine (2' "/// <summary>");  	strclass2.AppendSpaceLine (2' "/// " + deText);  	strclass2.AppendSpaceLine (2' "/// </summary>");  	strclass2.AppendSpaceLine (2' "public " + columnType + isnull + " " + columnName + " { get; set; }");  	//属性  	//strclass2.AppendSpaceLine(2' "{");  	//strclass2.AppendSpaceLine(3' "set{" + " _" + columnName.ToLower() + "=value;}");  	//strclass2.AppendSpaceLine(3' "get{return " + "_" + columnName.ToLower() + ";}");  	//strclass2.AppendSpaceLine(2' "}");  }  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	bool isIdentity = field.IsIdentity;  	bool ispk = field.IsPK;  	bool cisnull = field.cisNull;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	string isnull = "";  	if (CodeCommon.IsValueType (columnType)) {  		if ((!isIdentity) && (!ispk) && (cisnull)) {  			isnull = "?";  			//代表可空类型  		}  	}  	//strclass1.AppendSpaceLine(2' "private " + columnType + isnull + " _" + columnName.ToLower() + ";");//私有变量  	strclass2.AppendSpaceLine (2' "/// <summary>");  	strclass2.AppendSpaceLine (2' "/// " + deText);  	strclass2.AppendSpaceLine (2' "/// </summary>");  	strclass2.AppendSpaceLine (2' "public " + columnType + isnull + " " + columnName + " { get; set; }");  	//属性  	//strclass2.AppendSpaceLine(2' "{");  	//strclass2.AppendSpaceLine(3' "set{" + " _" + columnName.ToLower() + "=value;}");  	//strclass2.AppendSpaceLine(3' "get{return " + "_" + columnName.ToLower() + ";}");  	//strclass2.AppendSpaceLine(2' "}");  }  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	bool isIdentity = field.IsIdentity;  	bool ispk = field.IsPK;  	bool cisnull = field.cisNull;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	string isnull = "";  	if (CodeCommon.IsValueType (columnType)) {  		if ((!isIdentity) && (!ispk) && (cisnull)) {  			isnull = "?";  			//代表可空类型  		}  	}  	//strclass1.AppendSpaceLine(2' "private " + columnType + isnull + " _" + columnName.ToLower() + ";");//私有变量  	strclass2.AppendSpaceLine (2' "/// <summary>");  	strclass2.AppendSpaceLine (2' "/// " + deText);  	strclass2.AppendSpaceLine (2' "/// </summary>");  	strclass2.AppendSpaceLine (2' "public " + columnType + isnull + " " + columnName + " { get; set; }");  	//属性  	//strclass2.AppendSpaceLine(2' "{");  	//strclass2.AppendSpaceLine(3' "set{" + " _" + columnName.ToLower() + "=value;}");  	//strclass2.AppendSpaceLine(3' "get{return " + "_" + columnName.ToLower() + ";}");  	//strclass2.AppendSpaceLine(2' "}");  }  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' "/// " + deText);  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' "public " + columnType + isnull + " " + columnName + " { get; set; }");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' string.Format ("///<param name=\"{0}\">Ҫ�����Ķ���</param>"' CodeName.CodeOfDTOParam));  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' string.Format ("///<param name=\"{0}\">Ҫ�޸ĵĶ���</param>"' CodeName.CodeOfDTOParam));  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Modify(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Remove(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����Id�õ�һ������ʵ��");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Modify(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Update(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Remove(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Delete(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Query(" + CodeName.CodeOfQueryDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �õ�һ������ʵ��");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 新增一条记录");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 修改一条记录");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Modify(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Update(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Remove(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Delete(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询方法");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Query(" + CodeName.CodeOfQueryDTOParam + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 得到一个对象实体");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.Builder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Builder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTablesSP,The following statement contains a magic number: parameters [2].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTablesSP,The following statement contains a magic number: parameters [3].Value = "'TABLE'";  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetViewsSP,The following statement contains a magic number: parameters [2].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetViewsSP,The following statement contains a magic number: parameters [3].Value = "'VIEW'";  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTabViewsSP,The following statement contains a magic number: parameters [2].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTabViewsSP,The following statement contains a magic number: parameters [3].Value = "'TABLE'''VIEW'";  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTablesInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTablesInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetVIEWsInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetVIEWsInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTabViewsInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetTabViewsInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetProcInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetProcInfo,The following statement contains a magic number: while (reader.Read ()) {  	var tab = new TableInfo {  		TabName = reader.GetString (0)'  		TabDate = reader.GetValue (3).ToString ()'  		TabType = reader.GetString (2)'  		TabUser = reader.GetString (1)  	};  	tablist.Add (tab);  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnList,The following statement contains a magic number: try {  	if (isdbosp) {  		return GetColumnListSP (dbName' tableName);  	}  	string strSql = @" select  a.colorder as colorder' a.name as ColumnName' b.name as TypeName from    syscolumns a '         systypes b '         sysobjects c where   a.xtype = b.xusertype         and a.id = c.id         and c.name = '" + tableName + "'" + "order by a.colorder";  	//return Query(DbName'strSql.ToString()).Tables[0];  	var colexist = new ArrayList ();  	//�Ƿ��Ѿ�����  	var collist = new List<ColumnInfo> ();  	SqlDataReader reader = ExecuteReader (dbName' strSql);  	while (reader.Read ()) {  		var col = new ColumnInfo {  			Colorder = reader.GetValue (0).ToString ()'  			ColumnName = reader.GetString (1)'  			TypeName = reader.GetString (2)'  			Length = ""'  			Preci = ""'  			Scale = ""'  			IsPK = false'  			cisNull = false'  			DefaultVal = ""'  			IsIdentity = false'  			DeText = ""  		};  		if (!colexist.Contains (col.ColumnName)) {  			collist.Add (col);  			colexist.Add (col.ColumnName);  		}  	}  	reader.Close ();  	return collist;  }  catch (Exception) {  	return null;  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = ""'  		Preci = ""'  		Scale = ""'  		IsPK = false'  		cisNull = false'  		DefaultVal = ""'  		IsIdentity = false'  		DeText = ""  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnListSP,The following statement contains a magic number: parameters [2].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnListSP,The following statement contains a magic number: parameters [3].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoList,The following statement contains a magic number: while (reader.Read ()) {  	var col = new ColumnInfo {  		Colorder = reader.GetValue (0).ToString ()'  		ColumnName = reader.GetString (1)'  		TypeName = reader.GetString (2)'  		Length = reader.GetValue (3).ToString ()'  		Preci = reader.GetValue (4).ToString ()'  		Scale = reader.GetValue (5).ToString ()'  		IsIdentity = (reader.GetString (6) == "��") ? true : false'  		IsPK = (reader.GetString (7) == "��") ? true : false'  		cisNull = (reader.GetString (13) == "��") ? true : false'  		DefaultVal = reader.GetString (14)'  		DeText = reader.GetString (15)  	};  	if (!colexist.Contains (col.ColumnName)) {  		collist.Add (col);  		colexist.Add (col.ColumnName);  	}  }  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoListSP,The following statement contains a magic number: parameters [2].Value = null;  
Magic Number,AC.Code.DbObjects,DbObject,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\DbObjects\DbObject.cs,GetColumnInfoListSP,The following statement contains a magic number: parameters [3].Value = null;  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = HexDigits [b >> 4];  	chars [i * 2 + 1] = HexDigits [b & 0xF];  }  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = HexDigits [b >> 4];  	chars [i * 2 + 1] = HexDigits [b & 0xF];  }  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = HexDigits [b >> 4];  	chars [i * 2 + 1] = HexDigits [b & 0xF];  }  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: chars [i * 2] = HexDigits [b >> 4];  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: chars [i * 2] = HexDigits [b >> 4];  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,ToHexString,The following statement contains a magic number: chars [i * 2 + 1] = HexDigits [b & 0xF];  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,GetInterfaceParameter,The following statement contains a magic number: return str [1].ToString (CultureInfo.InvariantCulture).ToLower () + str.Substring (2' str.Length - 2);  
Magic Number,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,GetInterfaceParameter,The following statement contains a magic number: return str [1].ToString (CultureInfo.InvariantCulture).ToLower () + str.Substring (2' str.Length - 2);  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.DaoName + "()");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region " + CodeName.DomainName + "  Members");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Nested type: " + TableName + "RowMapper");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Other Members");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 增加一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	if (field.IsIdentity) {  		continue;  	}  	string columnName = field.ColumnName;  	strInsertFields.Append (columnName + "'");  	strInsertValues.Append ("@" + columnName + "'");  	strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + strretu + " Insert(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string INSERT_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  }  else {  	strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object result = DbHelper.ExecuteScalar(ConnStringName' INSERT_SQL' dbParameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (result == null)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return 0;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + IdentityType + ".Parse(result.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + "ConnStringName" + "' INSERT_SQL' dbParameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: foreach (ColumnInfo key in paramKeys) {  	strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + key.ColumnName + "\"' " + CodeCommon.SetFirstCharacterLower (key.ColumnName) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 更新一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string UPDATE_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (3' "IDbParameters dbParameters = DbHelper.CreateDbParameters();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  	if (field.IsIdentity || field.IsPK) {  		continue;  	}  	strSetValue.Append (columnName + "=@" + columnName + "'");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (3' "dbParameters.AddWithValue(\"" + columnName + "\"' " + CodeName.CodeOfDTOParam + "." + columnName + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(ConnStringName'  UPDATE_SQL' dbParameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DbHelper.ExecuteNonQuery(" + ConnectionString + "' DELETE_SQL' dbParameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string condition = BindQueryCriteria(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string QUERY_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return DbHelper.QueryWithRowMapper(" + ConnectionString + "'QUERY_SQL'new " + TableName + "RowMapper());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 根据ID获取对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string GETBYID_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return DbHelper.QueryForObject(" + ConnectionString + "' GETBYID_SQL' dbParameters' new " + TableName + "RowMapper());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 构造查询条件");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static string BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var stringBuilder = new StringBuilder(\" where 1=1 \");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (" + CodeName.CodeOfQueryDTOParam + " == null)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return stringBuilder.ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "//TODO:在此加入查询条件构建代码");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return stringBuilder.ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 绑定对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private class " + TableName + "RowMapper : IDataTableRowMapper<" + CodeName.ServiceDTOName + ">");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "public " + CodeName.ServiceDTOName + " MapRow(DataRow dataReader)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "var result = new " + CodeName.ServiceDTOName + "();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "object obj;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (5' "else");  			strclass.AppendSpaceLine (5' "{");  			strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (5' "}");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (5' "else");  		strclass.AppendSpaceLine (5' "{");  		strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (5' "}");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (6' "result." + columnName + "=true;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "else");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (6' "result." + columnName + "=false;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=(byte[])obj;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return result;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfDbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateRowMapperCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: foreach (ColumnInfo key in paramKeys) {  	strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (5' "new SqlParameter(\"@" + "" + key.ColumnName + "\"' SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' key.TypeName' "") + ") {Value =" + CodeCommon.SetFirstCharacterLower (key.ColumnName) + "}'");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetPreParameter,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.DaoName + "()");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region " + CodeName.DomainName + "  Members");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#region  Other Members");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GetDaoCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "#endregion");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 增加一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string INSERT_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string length = field.Length;  	if (field.IsIdentity) {  		continue;  	}  	strInsertFields.Append (columnName + "'");  	strInsertValues.Append ("@" + columnName + "'");  	strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strInsertParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: if (IsSqlServer () && (IsHasIdentity)) {  	strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  	strclass.AppendSpaceLine (3' "if (result == null)");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return 0;");  	strclass.AppendSpaceLine (3' "}");  	strclass.AppendSpaceLine (3' "else");  	strclass.AppendSpaceLine (3' "{");  	strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  	strclass.AppendSpaceLine (3' "}");  }  else {  	strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object result = SqlHelper.ExecuteScalar(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (result == null)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return 0;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "else");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return " + IdentityType + ".Parse(obj.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' INSERT_SQL' parameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 更新一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string UPDATE_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string length = field.Length;  	strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  	if (field.IsIdentity || field.IsPK) {  		continue;  	}  	strSetValue.Append (columnName + "=@" + columnName + "'");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strParameters.AppendSpaceLine (5' "new SqlParameter(\"@" + columnName + "\"'SqlDbType." + CodeCommon.DbTypeLength (DbObject.DbType.ToString ()' columnType' length) + ") {Value = " + CodeName.CodeOfDTOParam + "." + columnName + "}'");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlParameter[] parameters = {");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "};");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' UPDATE_SQL' parameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string DELETE_SQL = @\"delete from " + TableName + " where " + GetWhereExpression (Keys) + "\";");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "SqlHelper.ExecuteNonQuery(" + ConnectionString + "' CommandType.Text' DELETE_SQL' parameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpace (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string condition = BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "string QUERY_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "IList<" + CodeName.ServiceDTOName + "> result = new List<" + CodeName.ServiceDTOName + ">();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' QUERY_SQL);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (dataset == null || dataset.Tables.Count == 0)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return result;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "foreach (DataRow dataRow in dataset.Tables[0].Rows)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result.Add(ReaderBind(dataRow));");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 根据ID获取对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "const string GETBYID_SQL = @\"");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' CodeName.ServiceDTOName + " result = null;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "DataSet dataset = SqlHelper.ExecuteDataset(" + ConnectionString + "' CommandType.Text' GETBYID_SQL' parameters);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (dataset != null && dataset.Tables[0].Rows.Count > 0)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result = ReaderBind(dataset.Tables[0].Rows[0]);");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 构造查询条件");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static string BindQueryCriteria(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var stringBuilder = new StringBuilder(\" where 1=1 \");");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (" + CodeName.CodeOfQueryDTOParam + " == null)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "return stringBuilder.ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "//TODO:在此加入查询条件构建代码");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return stringBuilder.ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateBindQueryCriteriaCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 绑定对象");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public static " + CodeName.ServiceDTOName + " ReaderBind(DataRow dataReader)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "var result = new " + CodeName.ServiceDTOName + "();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "object obj;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	switch (CodeCommon.DbTypeToCS (columnType)) {  	case "int":  	case "long":  	case "decimal":  	case "float":  	case "DateTime":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "string":  		{  			strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  		}  		break;  	case "bool":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (4' "else");  			strclass.AppendSpaceLine (4' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  			strclass.AppendSpaceLine (4' "}");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "byte[]":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  			strclass.AppendSpaceLine (3' "}");  		}  		break;  	case "Guid":  		{  			strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  			strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  			strclass.AppendSpaceLine (3' "{");  			strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  			strclass.AppendSpaceLine (4' "}");  		}  		break;  	default:  		strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  		break;  	}  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: switch (CodeCommon.DbTypeToCS (columnType)) {  case "int":  case "long":  case "decimal":  case "float":  case "DateTime":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "string":  	{  		strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  	}  	break;  case "bool":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (4' "else");  		strclass.AppendSpaceLine (4' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  		strclass.AppendSpaceLine (4' "}");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "byte[]":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  		strclass.AppendSpaceLine (3' "}");  	}  	break;  case "Guid":  	{  		strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  		strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  		strclass.AppendSpaceLine (3' "{");  		strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  		strclass.AppendSpaceLine (4' "}");  	}  	break;  default:  	strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  	break;  }  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + " = " + CodeCommon.DbTypeToCS (columnType) + ".Parse(obj.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "result." + columnName + " = dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "if(obj.ToString()==1.ToString() || obj.ToString().ToLower()==\"true\")");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=true;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "else");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=false;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "result." + columnName + "=(byte[])obj;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "obj = dataReader[\"" + columnName + "\"];");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "if (obj != null && obj != DBNull.Value)");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (5' "result." + columnName + "=new Guid(obj.ToString());");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (4' "//result." + columnName + "=dataReader[\"" + columnName + "\"].ToString();");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return result;");  
Magic Number,AC.Code.JavaBuilder,BuilderDaoOfSqlHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDao.cs,GenerateReaderBindCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateInsertCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' returnType + " Insert(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateUpdateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Update(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateDeleteCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Delete(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �õ�һ������ʵ��");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderDomain,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDomain.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	strclass2.AppendSpaceLine (1' "/**");  	strclass2.AppendSpaceLine (1' " * " + deText);  	strclass2.AppendSpaceLine (1' " */");  	strclass2.AppendSpaceLine (1' string.Format ("private {0} {1};"' columnType' columnName));  	strclass2.AppendSpaceLine (1' string.Format ("public {0} get{1}() {"' columnType' columnName));  	strclass2.AppendSpaceLine (2' string.Format ("return {0};"' columnName));  	strclass2.AppendSpaceLine (1' "}");  	strclass2.AppendLine ();  	strclass2.AppendSpaceLine (1' string.Format (@"public void set{0}({1} {0}) {"' columnName' columnType));  	strclass2.AppendSpaceLine (2' string.Format ("this.{0} = {0}"' columnName));  	strclass2.AppendSpaceLine (1' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: foreach (ColumnInfo field in Fieldlist) {  	string columnName = field.ColumnName;  	string columnType = field.TypeName;  	string deText = field.DeText;  	columnType = CodeCommon.DbTypeToCS (columnType);  	strclass2.AppendSpaceLine (1' "/**");  	strclass2.AppendSpaceLine (1' " * " + deText);  	strclass2.AppendSpaceLine (1' " */");  	strclass2.AppendSpaceLine (1' string.Format ("private {0} {1};"' columnType' columnName));  	strclass2.AppendSpaceLine (1' string.Format ("public {0} get{1}() {"' columnType' columnName));  	strclass2.AppendSpaceLine (2' string.Format ("return {0};"' columnName));  	strclass2.AppendSpaceLine (1' "}");  	strclass2.AppendLine ();  	strclass2.AppendSpaceLine (1' string.Format (@"public void set{0}({1} {0}) {"' columnName' columnType));  	strclass2.AppendSpaceLine (2' string.Format ("this.{0} = {0}"' columnName));  	strclass2.AppendSpaceLine (1' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' string.Format ("return {0};"' columnName));  
Magic Number,AC.Code.JavaBuilder,BuilderDTO,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderDTO.cs,GeneratePropertiesCode,The following statement contains a magic number: strclass2.AppendSpaceLine (2' string.Format ("this.{0} = {0}"' columnName));  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' string.Format ("///<param name=\"{0}\">Ҫ�����Ķ���</param>"' CodeName.CodeOfDTOParam));  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' string.Format ("///<param name=\"{0}\">Ҫ�޸ĵĶ���</param>"' CodeName.CodeOfDTOParam));  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Modify(" + CodeName.CodeOfMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "void Remove(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����Id�õ�һ������ʵ��");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfSerivceLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + ";");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "(" + CodeName.DaoName + " " + DaoParamCode () + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceName + "()");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateServiceHead,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ����һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �޸�һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Modify(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Update(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ɾ��һ����¼");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Remove(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Delete(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// ��ѯ����");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Query(" + CodeName.CodeOfQueryDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// �õ�һ������ʵ��");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceOfThreeLayer,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderService.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: if (GenerateConfig.CallStyle == CallStyle.SpringNew) {  	string daoTypeCode = GenerateConfig.CodeLayer == CodeLayer.ServiceLayerWithDomain ? CodeName.DomainName : CodeName.DaoName;  	strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  	strclass.AppendSpaceLine (2' "}");  }  else {  	strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  	strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  	strclass.AppendSpaceLine (2' "{");  	strclass.AppendSpaceLine (2' "}");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + daoTypeCode + " " + DaoParamCode () + ";");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "(" + daoTypeCode + " " + DaoParamCode () + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "this." + DaoParamCode () + " = " + DaoParamCode () + ";");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "private readonly " + CodeName.DaoName + " " + DaoParamCode () + "= new " + CodeName.DaoName + "();");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceImplName + "()");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GetServiceImplCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 新增一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + returnType + " Create(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: if (returnType == "void") {  	strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  else {  	strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  }  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Insert(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateCreateCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 修改一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Modify(" + CodeName.CodeOfMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Update(" + CodeName.CodeOfDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateModifyCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 删除一条记录");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public void Remove(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' DaoParamCode () + ".Delete(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateRemoveCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 查询方法");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public IList<" + CodeName.ServiceDTOName + "> Query(" + CodeName.CodeOfQueryMethodDTOParam + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".Query(" + CodeName.CodeOfQueryDTOParam + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateQueryCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// <summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// 得到一个对象实体");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "/// </summary>");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "public " + CodeName.ServiceDTOName + " GetById(" + CodeCommon.GetInParameter (Keys) + ")");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "{");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (3' "return " + DaoParamCode () + ".GetById(" + CodeCommon.GetFieldStringListWithFirstLower (Keys) + ");");  
Magic Number,AC.Code.JavaBuilder,BuilderServiceImpl,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\JavaBuilder\BuilderServiceImpl.cs,GenerateGetByIdCode,The following statement contains a magic number: strclass.AppendSpaceLine (2' "}");  
Missing Default,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,DbTypeLength,The following switch statement is missing a default case: switch (dbtype) {  case "SQL2000":  case "SQL2005":  	strtype = DbTypeLengthSQL (dbtype' datatype' length);  	break;  case "Oracle":  	strtype = DbTypeLengthOra (datatype' length);  	break;  case "MySQL":  	strtype = DbTypeLengthMySQL (datatype' length);  	break;  case "OleDb":  	strtype = DbTypeLengthOleDb (datatype' length);  	break;  }  
Missing Default,AC.Code.Helper,CodeCommon,C:\repos\xiaotou745_achuan.net\src\AC\AC.CodeGenerator\Code\Helper\CodeCommon.cs,CSToProcType,The following switch statement is missing a default case: switch (dbType) {  case "SQL2000":  case "SQL2005":  	strtype = CSToProcTypeSQL (cstype);  	break;  case "Oracle":  	strtype = CSToProcTypeOra (cstype);  	break;  case "MySQL":  	strtype = CSToProcTypeMySQL (cstype);  	break;  case "OleDb":  	strtype = CSToProcTypeOleDb (cstype);  	break;  }  
