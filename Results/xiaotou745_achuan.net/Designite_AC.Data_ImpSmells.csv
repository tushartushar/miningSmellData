Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,Cyclomatic complexity of the method is 9
Complex Method,AC.Transaction.WMS,ConnectionStringsUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\WMS\ConnectionStringsUtil.cs,GetConnStringByDefinition,Cyclomatic complexity of the method is 30
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteDataset,The method has 5 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteNonQuery,The method has 5 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteScalar,The method has 5 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteReader,The method has 5 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithRowMapper,The method has 7 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithRowMapperDelegate,The method has 7 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithResultSetExtractor,The method has 7 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryForObject,The method has 7 parameters.
Long Parameter List,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryForObjectDelegate,The method has 7 parameters.
Long Parameter List,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddParameter,The method has 10 parameters.
Long Parameter List,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddParameter,The method has 9 parameters.
Long Parameter List,AC.Data.Core,IDbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\IDbParameters.cs,AddParameter,The method has 10 parameters.
Long Parameter List,AC.Data.Core,IDbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\IDbParameters.cs,AddParameter,The method has 9 parameters.
Long Parameter List,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,BeginTransaction,The method has 5 parameters.
Long Parameter List,AC.Transaction.Common,TransactionScopeUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\TransactionScopeUnitOfWork.cs,TransactionScopeUnitOfWork,The method has 7 parameters.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,AttachParameters,The length of the statement  "			if (((parameter.Direction == ParameterDirection.InputOutput) || (parameter.Direction == ParameterDirection.Input)) && (parameter.Value == null)) { " is 146.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,PrepareCommand,The length of the statement  "		AssertUtils.ArgumentNotNull (dbTransaction.Connection' "dbTransaction.Connection"' "The transaction was rollbacked or commited' please provide an open transaction."); " is 166.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteDataset,The length of the statement  "			PrepareCommand (dbCommand' connectionTxPair.Connection' connectionTxPair.Transaction' commandType' commandText' parameterValues); " is 129.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteNonQuery,The length of the statement  "			PrepareCommand (dbCommand' connectionTxPair.Connection' connectionTxPair.Transaction' CommandType.Text' commandText' parameters); " is 129.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteScalar,The length of the statement  "			PrepareCommand (dbCommand' connectionTxPair.Connection' connectionTxPair.Transaction' commandType' commandText' parameterValues); " is 129.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,ExecuteReader,The length of the statement  "		PrepareCommand (dbCommand' connectionTxPair.Connection' connectionTxPair.Transaction' commandType' commandText' parameterValues); " is 129.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithRowMapper,The length of the statement  "	return QueryWithResultSetExtractor (connString' commandType' commandText' timeoutInSeconds' parameterValues' tableIndex' new RowMapperResultSetExtractor<T> (rowMapper)); " is 169.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithRowMapperDelegate,The length of the statement  "	return QueryWithRowMapperDelegate (connString' CommandType.Text' commandText' TIMEOUT_DEFAULT' parameterValues' 0' rowMapper); " is 126.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryWithRowMapperDelegate,The length of the statement  "	return QueryWithResultSetExtractor (connString' commandType' commandText' timeoutInSeconds' parameterValues' tableIndex' new RowMapperResultSetExtractor<T> (rowMapperDelegate)); " is 177.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryForObject,The length of the statement  "	IList<T> results = QueryWithRowMapper (connString' commandType' commandText' timeoutInSeconds' parameterValues' tableIndex' rowMapper); " is 135.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryForObjectDelegate,The length of the statement  "	return QueryForObjectDelegate (connString' CommandType.Text' commandText' TIMEOUT_DEFAULT' parameterValues' 0' rowMapperDelegate); " is 130.
Long Statement,AC.Data,DbHelper,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\DblHelper.cs,QueryForObjectDelegate,The length of the statement  "	IList<T> results = QueryWithRowMapperDelegate (connString' commandType' commandText' timeoutInSeconds' parameterValues' tableIndex' rowMapperDelegate); " is 151.
Long Statement,AC.Data.ConnString.Config,ConnStringOfConfig,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\Config\ConnStringOfConfig.cs,ToString,The length of the statement  "	return string.Format ("ConfigConnString:[Name:{0}]-[ConnectionString:{1}]-[ProviderName:{2}]"' Name' ConnectionString' ProviderName); " is 133.
Long Statement,AC.Data.ConnString.WMS,ConnStringOfWMS,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\ConnStringOfWMS.cs,ToString,The length of the statement  "	return string.Format ("ConnStringOfWMS:Name:{0} WarehouseId:{1} DbType:{2} EnumValue:{3}"' Name' WarehouseId' DatabaseType' EnumValue); " is 135.
Long Statement,AC.Data.ConnString.WMS,ConnStringCreatorOfWMS,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\ConnStringCreatorOfWMS.cs,CreateConnStrings,The length of the statement  "		IList<ConnStringOfWMS> lstWMSConnStrings = dbHelper.QueryWithRowMapper (connString' SELECT_SQL' new WMSConnStringRowMapper ()); " is 127.
Long Statement,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The length of the statement  "				IList<IConnectionString> connStringDefinitions = ConnectionStringFactory.Create (ConnStringCreatorOfWMS.Create ()).GetConnectionStrings (); " is 139.
Long Statement,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The length of the statement  "					stringBuilder.Append (string.Format ("WMSConnectionString��ʼ����ɣ��������ݿ������ַ�����{0}��"' lstWMSConnStrings.Count)); " is 120.
Long Statement,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The length of the statement  "			if (wmsConnString.DatabaseType == DatabaseType.Readonly && !warehouseIdCacheReadonly.ContainsKey (wmsConnString.WarehouseId)) { " is 127.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,DisposeConnection,The length of the statement  "				logger.Debug ("[ConnectionUtils.DisposeConnection]:It's the transactional connection bound to the thread so don't close it."); " is 126.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,DisposeConnection,The length of the statement  "		logger.Debug ("[ConnectionUtils.DisposeConnection]:Disposing of IDbConnection with connection string = [" + conn.ConnectionString + "]"); " is 137.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,GetConnectionTxPair,The length of the statement  "			logger.Debug ("[ConnectionUtils.GetConnectionTxPair]:get connectionHolder  for key [IDbProvider] bound to thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 162.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,GetConnectionTxPair,The length of the statement  "				throw new InvalidConnectionHolderException ("[ConnectionUtils.GetConnectionTxPair]:�ӵ�ǰ�߳��л�ȡ��ConnectionHolder��Connection|TransactionΪNull"); " is 144.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,GetConnectionTxPair,The length of the statement  "			//    throw new InvalidConnectionHolderException("[ConnectionUtils.GetConnectionTxPair]:�÷��������ַ�����ӵ�ǰ�߳��л�ȡ��ConnectionHolder�������ַ�����һ��.�����쳣��ֹ"); " is 161.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,ApplyTransactionTimeout,The length of the statement  "		logger.DebugFormat ("[ConnectionUtils.ApplyTransactionTimeout]:ʹ�õ�ǰTransaction��timeoutֵ:{0}����ָ��timeout:{1}"' conHolder.TimeToLiveInSeconds' timeout); " is 154.
Long Statement,AC.Data.Core,ConnectionUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ConnectionUtils.cs,ApplyTransactionTimeout,The length of the statement  "		logger.DebugFormat ("[ConnectionUtils.ApplyTransactionTimeout]:No current transaction timeout -> apply specified value:{0}."' timeout); " is 135.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddParameter,The length of the statement  "	return AddParameter (name' parameterType' 0' direction' isNullable' precision' scale' sourceColumn' sourceVersion' parameterValue); " is 131.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddWithValue,The length of the statement  "	return AddParameter (name' null' -1' ParameterDirection.Input' false' 0' 0' null' DataRowVersion.Default' parameterValue); " is 122.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,Add,The length of the statement  "	return AddParameter (name' parameterType' -1' ParameterDirection.Input' false' 0' 0' null' DataRowVersion.Default' null); " is 121.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,Add,The length of the statement  "	return AddParameter (name' parameterType' size' ParameterDirection.Input' false' 0' 0' null' DataRowVersion.Default' null); " is 123.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,Add,The length of the statement  "	return AddParameter (name' parameterType' size' ParameterDirection.Input' false' 0' 0' sourceColumn' DataRowVersion.Default' null); " is 131.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddOut,The length of the statement  "	return AddParameter (name' parameterType' -1' ParameterDirection.Output' false' 0' 0' null' DataRowVersion.Default' null); " is 122.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddOut,The length of the statement  "	return AddParameter (name' parameterType' size' ParameterDirection.Output' false' 0' 0' null' DataRowVersion.Default' null); " is 124.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddInOut,The length of the statement  "	return AddParameter (name' parameterType' -1' ParameterDirection.InputOutput' false' 0' 0' null' DataRowVersion.Default' null); " is 127.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddInOut,The length of the statement  "	return AddParameter (name' parameterType' size' ParameterDirection.InputOutput' false' 0' 0' null' DataRowVersion.Default' null); " is 129.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddReturn,The length of the statement  "	return AddParameter (name' parameterType' -1' ParameterDirection.ReturnValue' false' 0' 0' null' DataRowVersion.Default' null); " is 127.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,AddReturn,The length of the statement  "	return AddParameter (name' parameterType' size' ParameterDirection.ReturnValue' false' 0' 0' null' DataRowVersion.Default' null); " is 129.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,GetValue,The length of the statement  "	IDataParameter parameter = dataParameterCollection [dbProvider.CreateParameterNameForCollection (name)] as IDataParameter; " is 122.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,GetValue,The length of the statement  "	throw new DbProviderException ("object in IDataParameterCollection is not of the type IDataParameter' it is type [" + dataParameterCollection [dbProvider.CreateParameterNameForCollection (name)].GetType () + "]."); " is 214.
Long Statement,AC.Data.Core,DbParameters,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbParameters.cs,SetValue,The length of the statement  "	IDbDataParameter parameter = dataParameterCollection [dbProvider.CreateParameterNameForCollection (name)] as IDbDataParameter; " is 126.
Long Statement,AC.Data.Core,DbProviderFactoryObj,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbProviderFactoryObj.cs,GetProvider,The length of the statement  "		Logger.DebugFormat ("[DbProviderFactoryObj.GetProvider]:get dbprovider from the cach of hashtable'providerInvariantName[{0}]."' providerInvariantName); " is 151.
Long Statement,AC.Data.Core,DbProviderFactoryObj,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\DbProviderFactoryObj.cs,GetProvider,The length of the statement  "		Logger.DebugFormat ("[DbProviderFactoryObj.GetProvider]:Creating dbprovider with the providerInvariantName[{0}]."' providerInvariantName); " is 138.
Long Statement,AC.Data.Core,ParameterUtils,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\ParameterUtils.cs,ExtractOutputParameters,The length of the statement  "		if (dbDataParameter.Direction == ParameterDirection.Output || dbDataParameter.Direction == ParameterDirection.InputOutput) { " is 124.
Long Statement,AC.Data.Core,TransactionSynchronizationManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\TransactionSynchronizationManager.cs,GetResource,The length of the statement  "		log.Debug ("get value [" + Describe (val) + "] for key [" + Describe (key) + "] bound to thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 145.
Long Statement,AC.Data.Core,TransactionSynchronizationManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\TransactionSynchronizationManager.cs,BindResource,The length of the statement  "		throw new InvalidOperationException ("Already value [" + resources [key] + "] for key [" + key + "] bound to thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 165.
Long Statement,AC.Data.Core,TransactionSynchronizationManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\TransactionSynchronizationManager.cs,BindResource,The length of the statement  "		log.Debug ("Bound value [" + Describe (value) + "] for key [" + Describe (key) + "] to thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 143.
Long Statement,AC.Data.Core,TransactionSynchronizationManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\TransactionSynchronizationManager.cs,UnbindResource,The length of the statement  "		throw new InvalidOperationException ("No value for key [" + key + "] bound to thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 134.
Long Statement,AC.Data.Core,TransactionSynchronizationManager,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Core\TransactionSynchronizationManager.cs,UnbindResource,The length of the statement  "		log.Debug ("Removed value [" + Describe (val) + "] for key [" + Describe (key) + "] from thread [" + Thread.CurrentThread.ManagedThreadId + "]"); " is 145.
Long Statement,AC.Data.Generic,RowMapperResultSetExtractor,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\Generic\RowMapperResultSetExtractor.cs,ExtractData,The length of the statement  "		throw new ArgumentException (string.Format ("datatable index ����������Χ' [tableIndex:{0}] [dataset'table count:{1}]"' tableIndex' dataSet.Tables.Count)' "tableIndex"); " is 168.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,Dispose,The length of the statement  "	AssertUtils.State (this == UnitOfWorkStackManager.Pop ()' "[AbstractUnitOfWork.Dispose]:Disposing UnitOfWork must on top of the ThreadBoundedStack."); " is 150.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,Init,The length of the statement  "		Logger.Debug (m => m ("[AbstractUnitOfWork.Init]:the initiates UnitOfWork is Nested UnitOfWork'Inner(deepth:{0})"' UnitOfWorkStackManager.Count + 1)); " is 150.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,DisposeConnHolderBoundThread,The length of the statement  "		Logger.Debug ("[AbstractUnitOfWork.DisposeConnHolderBoundThread]:Dispose UnitOfWork failed' because the connHolder bound current thread is null"); " is 146.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,DisposeConnHolderBoundThread,The length of the statement  "		Logger.Debug ("[AbstractUnitOfWork.DisposeConnHolderBoundThread]:Outer most unit of work disposing' disposing connHolder' unbindResource connHolder in thread."); " is 161.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,DisposeConnHolderBoundThread,The length of the statement  "		Logger.Debug (m => m ("[AbstractUnitOfWork.DisposeConnHolderBoundThread]:It's the transactional connHolder bound to the thread so don't close it. Inner UnitOfWork(deepth:{0}) disposing' keep connHolder in thread."' UnitOfWorkStackManager.Count + 1)); " is 250.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,CheckUnitOfWorkOutMostFlag,The length of the statement  "		throw new InValidUnitOfWorkException ("��ǰ�߳��д���ConnHolder'�����ϴ�����ӦΪǶ�����񣬵���IsOuterMostUnitOfWork��ʶΪ��������񣬳�ͻ��"); " is 127.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,CheckUnitOfWorkOutMostFlag,The length of the statement  "		throw new InValidUnitOfWorkException ("��ǰ�߳��в�����ConnHolder'�����ϴ�����ӦΪ��������񣬵���IsOuterMostUnitOfWork��ʶΪ��������񣬳�ͻ��"); " is 131.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,BeginTransaction,The length of the statement  "		Logger.Debug (m => m ("[AbstractUnitOfWork.BeginTransaction]:Inner(deepth:{0}) unit of work initiates with definition({1})!"' UnitOfWorkStackManager.Count' definition)); " is 169.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,BeginTransaction,The length of the statement  "		Logger.Debug (m => m ("[AbstractUnitOfWork.BeginTransaction]:Outer most unit of work initiates with definition({0})!"' definition)); " is 132.
Long Statement,AC.Transaction.Common,AbstractUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AbstractUnitOfWork.cs,BeginTransaction,The length of the statement  "		Logger.Debug (m => m ("[AbstractUnitOfWork.BeginTransaction]:UnitOfWork created with(connstring:{0})"' connectionHolder.Connection.ConnectionString)); " is 150.
Long Statement,AC.Transaction.Common,AdoNetUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AdoNetUnitOfWork.cs,Complete,The length of the statement  "			throw new InvalidConnectionHolderException ("Can't complete the UnitOfWork' because the connHolder in current thread is null."); " is 128.
Long Statement,AC.Transaction.Common,AdoNetUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AdoNetUnitOfWork.cs,Complete,The length of the statement  "			throw new InvalidConnectionHolderException ("Can't complete the UnitOfWork' because the Transaction of the connHolder in current thread is null"); " is 146.
Long Statement,AC.Transaction.Common,AdoNetUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AdoNetUnitOfWork.cs,Complete,The length of the statement  "		Logger.Debug ("[AdoNetUnitOfWork.Complete]:the transaction of the connectionHolder in current thread was commit over."); " is 120.
Long Statement,AC.Transaction.Common,AdoNetUnitOfWork,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\AdoNetUnitOfWork.cs,Complete,The length of the statement  "		Logger.DebugFormat ("It's the inner UnitOfWork bound to the thread so don't commit the connHolder's transaction.Inner(deepth:{0})"' UnitOfWorkStackManager.Count); " is 162.
Long Statement,AC.Transaction.Common,UnitOfWorkFactory,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\UnitOfWorkFactory.cs,GetTransactionScopeUnitOfWorkWithoutDTC,The length of the statement  "	return TransactionScopeUnitOfWorkFactory.Create ().SetIsDtcAllowed (false).SetDbProvider (dbProvider).GetUnitOfWork (unitOfWorkDefinition); " is 139.
Long Statement,AC.Transaction.Common,UnitOfWorkFactory,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\UnitOfWorkFactory.cs,GetTransactionScopeUnitOfWorkWithoutDTC,The length of the statement  "	return TransactionScopeUnitOfWorkFactory.Create ().SetIsDtcAllowed (false).SetDbProvider (dbProvider).GetUnitOfWork (null); " is 123.
Magic Number,AC.Data.ConnString,ConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\ConnStringUtil.cs,InitConnList,The following statement contains a magic number: lock (obj)//对象同步 许亚修改2014.3.14   {  	//获取连接字符串是否成功  	bool getConnectionSuccess = false;  	//获取连接字符串次数  	int getConnectionCounter = 0;  	while (!getConnectionSuccess && getConnectionCounter <= RETRY_COUNT) {  		try {  			Logger.InfoFormat ("第{0}次获取连接字符串开始..."' getConnectionCounter + 1);  			lock (DbListObj) {  				LstConnStrings = ConnectionStringFactory.Create (ConnStringCreatorOfConfig.Create ()).GetConnectionStrings ();  				if (LstConnStrings.Count == 0) {  					throw new Exception ("没有要使用的字符串.请检查配置文件");  				}  				//日志  				if (Logger.IsInfoEnabled) {  					var stringBuilder = new StringBuilder ();  					stringBuilder.Append (string.Format ("ConnectionString初始化完成，共有数据库连接字符串：{0}个"' LstConnStrings.Count));  					foreach (IConnectionString databaseModel in LstConnStrings) {  						stringBuilder.AppendLine (databaseModel.ToString ());  					}  					Logger.Info (stringBuilder.ToString ());  				}  			}  			getConnectionSuccess = true;  		}  		catch (Exception ex) {  			Logger.Error (ex.Message' ex);  			Thread.Sleep (500);  			getConnectionCounter++;  		}  	}  	foreach (IConnectionString connString in LstConnStrings) {  		try {  			if (!IsPlainText (connString.ConnectionString)) {  				connString.ConnectionString = DES.Decrypt3DES (connString.ConnectionString);  			}  		}  		catch (Exception ex) {  			Logger.Error ("解密连接串失败：name:" + connString.Name + "  message:" + ex.Message' ex);  		}  		if (!ConnStringCache.ContainsKey (connString.Name)) {  			ConnStringCache.Add (connString.Name' connString.ConnectionString);  		}  		if (!ProviderNameCache.ContainsKey (connString.Name)) {  			ProviderNameCache.Add (connString.Name' connString.ProviderName);  		}  	}  }  
Magic Number,AC.Data.ConnString,ConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\ConnStringUtil.cs,InitConnList,The following statement contains a magic number: while (!getConnectionSuccess && getConnectionCounter <= RETRY_COUNT) {  	try {  		Logger.InfoFormat ("第{0}次获取连接字符串开始..."' getConnectionCounter + 1);  		lock (DbListObj) {  			LstConnStrings = ConnectionStringFactory.Create (ConnStringCreatorOfConfig.Create ()).GetConnectionStrings ();  			if (LstConnStrings.Count == 0) {  				throw new Exception ("没有要使用的字符串.请检查配置文件");  			}  			//日志  			if (Logger.IsInfoEnabled) {  				var stringBuilder = new StringBuilder ();  				stringBuilder.Append (string.Format ("ConnectionString初始化完成，共有数据库连接字符串：{0}个"' LstConnStrings.Count));  				foreach (IConnectionString databaseModel in LstConnStrings) {  					stringBuilder.AppendLine (databaseModel.ToString ());  				}  				Logger.Info (stringBuilder.ToString ());  			}  		}  		getConnectionSuccess = true;  	}  	catch (Exception ex) {  		Logger.Error (ex.Message' ex);  		Thread.Sleep (500);  		getConnectionCounter++;  	}  }  
Magic Number,AC.Data.ConnString,ConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\ConnStringUtil.cs,InitConnList,The following statement contains a magic number: try {  	Logger.InfoFormat ("第{0}次获取连接字符串开始..."' getConnectionCounter + 1);  	lock (DbListObj) {  		LstConnStrings = ConnectionStringFactory.Create (ConnStringCreatorOfConfig.Create ()).GetConnectionStrings ();  		if (LstConnStrings.Count == 0) {  			throw new Exception ("没有要使用的字符串.请检查配置文件");  		}  		//日志  		if (Logger.IsInfoEnabled) {  			var stringBuilder = new StringBuilder ();  			stringBuilder.Append (string.Format ("ConnectionString初始化完成，共有数据库连接字符串：{0}个"' LstConnStrings.Count));  			foreach (IConnectionString databaseModel in LstConnStrings) {  				stringBuilder.AppendLine (databaseModel.ToString ());  			}  			Logger.Info (stringBuilder.ToString ());  		}  	}  	getConnectionSuccess = true;  }  catch (Exception ex) {  	Logger.Error (ex.Message' ex);  	Thread.Sleep (500);  	getConnectionCounter++;  }  
Magic Number,AC.Data.ConnString,ConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\ConnStringUtil.cs,InitConnList,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,AC.Data.ConnString.WMS,WMSConnectionStrings,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnectionStrings.cs,WMSConnectionStrings,The following statement contains a magic number: if (ConfigUtils.GetConfigValue ("IsRefreshConn"' "") == "true") {  	//���嶨ʱ���ļ��  	int refrashInterval = int.Parse (ConfigUtils.GetConfigValue ("RefrashInterval"' "1"));  	if (refrashInterval < 7200000)  		refrashInterval = 7200000;  	//������ʱ�����������Զ�����  	var timer = new Timer {  		Interval = refrashInterval'  		Enabled = true  	};  	timer.Elapsed += InitConnList;  }  
Magic Number,AC.Data.ConnString.WMS,WMSConnectionStrings,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnectionStrings.cs,WMSConnectionStrings,The following statement contains a magic number: if (ConfigUtils.GetConfigValue ("IsRefreshConn"' "") == "true") {  	//���嶨ʱ���ļ��  	int refrashInterval = int.Parse (ConfigUtils.GetConfigValue ("RefrashInterval"' "1"));  	if (refrashInterval < 7200000)  		refrashInterval = 7200000;  	//������ʱ�����������Զ�����  	var timer = new Timer {  		Interval = refrashInterval'  		Enabled = true  	};  	timer.Elapsed += InitConnList;  }  
Magic Number,AC.Data.ConnString.WMS,WMSConnectionStrings,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnectionStrings.cs,WMSConnectionStrings,The following statement contains a magic number: if (refrashInterval < 7200000)  	refrashInterval = 7200000;  
Magic Number,AC.Data.ConnString.WMS,WMSConnectionStrings,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnectionStrings.cs,WMSConnectionStrings,The following statement contains a magic number: if (refrashInterval < 7200000)  	refrashInterval = 7200000;  
Magic Number,AC.Data.ConnString.WMS,WMSConnectionStrings,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnectionStrings.cs,WMSConnectionStrings,The following statement contains a magic number: refrashInterval = 7200000;  
Magic Number,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The following statement contains a magic number: while (!getConnectionSuccess && getConnectionCounter <= RETRY_COUNT) {  	try {  		logger.InfoFormat ("��{0}�λ�ȡWMS�����ַ�����ʼ..."' getConnectionCounter + 1);  		lock (DbListObj) {  			IList<ConnStringOfWMS> lstWmsConnStrings = new List<ConnStringOfWMS> ();  			IList<IConnectionString> connStringDefinitions = ConnectionStringFactory.Create (ConnStringCreatorOfWMS.Create ()).GetConnectionStrings ();  			foreach (IConnectionString connStringDefinition in connStringDefinitions) {  				lstWmsConnStrings.Add (connStringDefinition as ConnStringOfWMS);  			}  			if (lstWmsConnStrings.Count == 0) {  				throw new Exception ("û��Ҫʹ�õ�WMS�ַ���.WMS���ݿ����ӱ��ѯ�쳣");  			}  			lstWMSConnStrings = lstWmsConnStrings;  			//��־  			if (logger.IsInfoEnabled) {  				var stringBuilder = new StringBuilder ();  				stringBuilder.Append (string.Format ("WMSConnectionString��ʼ����ɣ��������ݿ������ַ�����{0}��"' lstWMSConnStrings.Count));  				foreach (ConnStringOfWMS databaseModel in lstWMSConnStrings) {  					stringBuilder.AppendLine (databaseModel.ToString ());  				}  				logger.Info (stringBuilder.ToString ());  			}  		}  		getConnectionSuccess = true;  	}  	catch (Exception ex) {  		logger.Error (ex.Message' ex);  		Thread.Sleep (500);  		getConnectionCounter++;  	}  }  
Magic Number,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The following statement contains a magic number: try {  	logger.InfoFormat ("��{0}�λ�ȡWMS�����ַ�����ʼ..."' getConnectionCounter + 1);  	lock (DbListObj) {  		IList<ConnStringOfWMS> lstWmsConnStrings = new List<ConnStringOfWMS> ();  		IList<IConnectionString> connStringDefinitions = ConnectionStringFactory.Create (ConnStringCreatorOfWMS.Create ()).GetConnectionStrings ();  		foreach (IConnectionString connStringDefinition in connStringDefinitions) {  			lstWmsConnStrings.Add (connStringDefinition as ConnStringOfWMS);  		}  		if (lstWmsConnStrings.Count == 0) {  			throw new Exception ("û��Ҫʹ�õ�WMS�ַ���.WMS���ݿ����ӱ��ѯ�쳣");  		}  		lstWMSConnStrings = lstWmsConnStrings;  		//��־  		if (logger.IsInfoEnabled) {  			var stringBuilder = new StringBuilder ();  			stringBuilder.Append (string.Format ("WMSConnectionString��ʼ����ɣ��������ݿ������ַ�����{0}��"' lstWMSConnStrings.Count));  			foreach (ConnStringOfWMS databaseModel in lstWMSConnStrings) {  				stringBuilder.AppendLine (databaseModel.ToString ());  			}  			logger.Info (stringBuilder.ToString ());  		}  	}  	getConnectionSuccess = true;  }  catch (Exception ex) {  	logger.Error (ex.Message' ex);  	Thread.Sleep (500);  	getConnectionCounter++;  }  
Magic Number,AC.Data.ConnString.WMS,WMSConnStringUtil,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Data\ConnString\WMS\WMSConnStringUtil.cs,InitConnList,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,AC.Transaction.Common,DefaultUnitOfWorkDefinition,C:\repos\xiaotou745_achuan.net\src\AC\AC.Data\Transaction\Common\DefaultUnitOfWorkDefinition.cs,DefaultUnitOfWorkDefinition,The following statement contains a magic number: Timeout = 60;  
