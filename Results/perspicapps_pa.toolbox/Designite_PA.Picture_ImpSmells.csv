Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnMouseDown,Cyclomatic complexity of the method is 8
Complex Method,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnMouseMove,Cyclomatic complexity of the method is 8
Long Statement,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The length of the statement  "			e.Graphics.DrawImage (base.Image' this.ClientRectangle' new RectangleF (0' 0' this.Image.Width' this.Image.Height)' GraphicsUnit.Pixel); " is 136.
Long Statement,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The length of the statement  "			e.Graphics.DrawImage (this.InitialImage' new RectangleF (x' y' w' h)' new RectangleF (0' 0' this.InitialImage.Width' this.InitialImage.Height)' GraphicsUnit.Pixel); " is 164.
Long Statement,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,GetThumbnail,The length of the statement  "	Image thumb = this.Image.GetThumbnailImage (w' h' new Image.GetThumbnailImageAbort (this.IsThumbnailAbort)' IntPtr.Zero); " is 121.
Long Statement,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,GetThumbnail,The length of the statement  "	RectangleF r = new RectangleF (rX * this.zoomArea.X' rY * this.zoomArea.Y' rX * this.zoomArea.Width' rY * this.zoomArea.Height); " is 128.
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,ShowCenter,The following statement contains a magic number: if (this.Visible && this.Image is Image) {  	this.zoomArea.X = (this.Image.Width - this.zoomArea.Width) / 2;  	this.zoomArea.Y = (this.Image.Height - this.zoomArea.Height) / 2;  	this.OnVisiblePortionChanged ();  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,ShowCenter,The following statement contains a magic number: if (this.Visible && this.Image is Image) {  	this.zoomArea.X = (this.Image.Width - this.zoomArea.Width) / 2;  	this.zoomArea.Y = (this.Image.Height - this.zoomArea.Height) / 2;  	this.OnVisiblePortionChanged ();  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,ShowCenter,The following statement contains a magic number: this.zoomArea.X = (this.Image.Width - this.zoomArea.Width) / 2;  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,ShowCenter,The following statement contains a magic number: this.zoomArea.Y = (this.Image.Height - this.zoomArea.Height) / 2;  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,Pan,The following statement contains a magic number: if (this.Visible && this.Image is Image) {  	PointF pp = this.PointToImage (p);  	this.zoomArea.X = p.X - this.zoomArea.Width / 2;  	this.zoomArea.Y = p.Y - this.zoomArea.Height / 2;  	this.OnVisiblePortionChanged ();  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,Pan,The following statement contains a magic number: if (this.Visible && this.Image is Image) {  	PointF pp = this.PointToImage (p);  	this.zoomArea.X = p.X - this.zoomArea.Width / 2;  	this.zoomArea.Y = p.Y - this.zoomArea.Height / 2;  	this.OnVisiblePortionChanged ();  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,Pan,The following statement contains a magic number: this.zoomArea.X = p.X - this.zoomArea.Width / 2;  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,Pan,The following statement contains a magic number: this.zoomArea.Y = p.Y - this.zoomArea.Height / 2;  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: if (this.Image is Image) {  	if (this.zoomArea.Size == Size.Empty) {  		e.Graphics.DrawImage (base.Image' this.ClientRectangle' new RectangleF (0' 0' this.Image.Width' this.Image.Height)' GraphicsUnit.Pixel);  	}  	else {  		try {  			if (this.mouseSelection != Rectangle.Empty) {  				e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  			}  			e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  		}  		catch {  			e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  		}  	}  }  else {  	if (this.InitialImage is Image) {  		float w = this.ClientSize.Width;  		float h = this.ClientSize.Height;  		if (this.ClientSize.Width > this.ClientSize.Height * this.InitialImage.Width / this.InitialImage.Height) {  			w = h * this.InitialImage.Width / this.InitialImage.Height;  		}  		else {  			h = w * this.InitialImage.Height / this.InitialImage.Width;  		}  		float x = (this.ClientSize.Width - w) / 2f;  		float y = (this.ClientSize.Height - h) / 2f;  		e.Graphics.DrawImage (this.InitialImage' new RectangleF (x' y' w' h)' new RectangleF (0' 0' this.InitialImage.Width' this.InitialImage.Height)' GraphicsUnit.Pixel);  	}  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: if (this.Image is Image) {  	if (this.zoomArea.Size == Size.Empty) {  		e.Graphics.DrawImage (base.Image' this.ClientRectangle' new RectangleF (0' 0' this.Image.Width' this.Image.Height)' GraphicsUnit.Pixel);  	}  	else {  		try {  			if (this.mouseSelection != Rectangle.Empty) {  				e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  			}  			e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  		}  		catch {  			e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  		}  	}  }  else {  	if (this.InitialImage is Image) {  		float w = this.ClientSize.Width;  		float h = this.ClientSize.Height;  		if (this.ClientSize.Width > this.ClientSize.Height * this.InitialImage.Width / this.InitialImage.Height) {  			w = h * this.InitialImage.Width / this.InitialImage.Height;  		}  		else {  			h = w * this.InitialImage.Height / this.InitialImage.Width;  		}  		float x = (this.ClientSize.Width - w) / 2f;  		float y = (this.ClientSize.Height - h) / 2f;  		e.Graphics.DrawImage (this.InitialImage' new RectangleF (x' y' w' h)' new RectangleF (0' 0' this.InitialImage.Width' this.InitialImage.Height)' GraphicsUnit.Pixel);  	}  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: if (this.zoomArea.Size == Size.Empty) {  	e.Graphics.DrawImage (base.Image' this.ClientRectangle' new RectangleF (0' 0' this.Image.Width' this.Image.Height)' GraphicsUnit.Pixel);  }  else {  	try {  		if (this.mouseSelection != Rectangle.Empty) {  			e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  		}  		e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  	}  	catch {  		e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  	}  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: if (this.zoomArea.Size == Size.Empty) {  	e.Graphics.DrawImage (base.Image' this.ClientRectangle' new RectangleF (0' 0' this.Image.Width' this.Image.Height)' GraphicsUnit.Pixel);  }  else {  	try {  		if (this.mouseSelection != Rectangle.Empty) {  			e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  		}  		e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  	}  	catch {  		e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  	}  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: try {  	if (this.mouseSelection != Rectangle.Empty) {  		e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  	}  	e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  }  catch {  	e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: try {  	if (this.mouseSelection != Rectangle.Empty) {  		e.Graphics.FillRectangle (Brushes.Azure' this.mouseSelection);  	}  	e.Graphics.DrawImage (base.Image' this.ClientRectangle' this.zoomArea' GraphicsUnit.Pixel);  }  catch {  	e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  }  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  
Magic Number,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (this.ErrorImage' new Point (2' 2));  
Missing Default,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnMouseDown,The following switch statement is missing a default case: switch (e.Button) {  case MouseButtons.Middle:  	this.Cursor = Cursors.SizeAll;  	break;  case MouseButtons.Left:  case MouseButtons.Right:  	if (this.AllowSelection) {  		this.mouseSelection = new Rectangle (e.Location' Size.Empty);  	}  	break;  }  
Missing Default,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnMouseUp,The following switch statement is missing a default case: switch (e.Button) {  case MouseButtons.Left:  case MouseButtons.Right:  	if (this.AllowSelection) {  		this.OnDrawSelection (this.mouseSelection);  	}  	break;  }  
Missing Default,PA.Picture,ZoomPictureBox,C:\repos\perspicapps_pa.toolbox\PA.Picture\ZoomPictureBox.cs,OnMouseMove,The following switch statement is missing a default case: switch (e.Button) {  case MouseButtons.Middle:  	this.Pan (e.Location.X - this.mouseLocation.X' e.Location.Y - this.mouseLocation.Y);  	break;  case MouseButtons.Left:  case MouseButtons.Right:  	if (this.ClientRectangle.Contains (e.Location) && this.AllowSelection) {  		this.OnDrawSelection (this.mouseSelection);  		this.mouseSelection.Width = e.Location.X - this.mouseSelection.X;  		this.mouseSelection.Height = e.Location.Y - this.mouseSelection.Y;  		this.OnDrawSelection (this.mouseSelection);  	}  	break;  }  
