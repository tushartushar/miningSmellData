Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessRR,Cyclomatic complexity of the method is 9
Complex Method,Process_Scheduling_Algorithms,Fcfs,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Algorithms\FCFS.xaml.cs,UpdateTimeInfos,Cyclomatic complexity of the method is 8
Long Statement,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessForCases,The length of the statement  "	// bir onceki columdefinition un Width ni ayarlayip(GridUnitType.Star oldugu icin yuzdelik olarak ayarlar) _count'u bir artirir. " is 128.
Long Statement,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcess,The length of the statement  "	// bir onceki columdefinition un Width ni ayarlayip(GridUnitType.Star oldugu icin yuzdelik olarak ayarlar) _count'u bir artirir. " is 128.
Long Statement,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessWithoutAddList,The length of the statement  "	// bir onceki columdefinition un Width ni ayarlayip(GridUnitType.Star oldugu icin yuzdelik olarak ayarlar) _count'u bir artirir. " is 128.
Long Statement,Process_Scheduling_Algorithms,Fcfs,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Algorithms\FCFS.xaml.cs,btnAddProcess_Click,The length of the statement  "	if (/*(txtArrivalTime.Text != string.Empty || cbOrderArrivalTime.IsChecked == false) &&*/txtBurstTime.Text != string.Empty && txtProcessName.Text != string.Empty) { " is 164.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblFCFS.Content = "First-Come First-Serve(FCFS)\n\n" + "1) Policy: Process that requests the CPU FIRST is allocated the CPU FIRST.\n" + "2) FCFS is a non-preemptive algorithm.\n" + "3) Implementation - using FIFO queues. Incoming process is added to the tail of the \nqueue. Process selected for execution is taken from head of queue.\n" + "4) Performance metric - Average waiting time in queue.\n"; " is 399.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblPNP.Content = "Priority-Nonpreemptive\n\n" + "1) A priority value (integer) is associated with each process. \nCan be based on:\n" + "\t # Cost to user\n" + "\t # Importance to user\n" + "\t # Aging\n" + "\t # %CPU time used in last X hours.\n" + "2) CPU is allocated to process with the highest priority.\n" + "\t # Preemptive\n" + "\t # Nonpreemptive\n" + "3) SJN is a priority scheme where the priority is the predicted next CPU burst time.\n" + "4) Problem:\n" + "\t # Starvation!! - Low priority processes may never execute.\n" + "5) Solution:\n" + "\t # Aging - as time progresses increase the priority of the process.\n"; " is 631.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblPP.Content = "Priority-Preemptive\n\n" + "1) A priority value (integer) is associated with each process. \nCan be based on:\n" + "\t # Cost to user\n" + "\t # Importance to user\n" + "\t # Aging\n" + "\t # %CPU time used in last X hours.\n" + "2) CPU is allocated to process with the highest priority.\n" + "\t # Preemptive\n" + "\t # Nonpreemptive\n" + "3) SJN is a priority scheme where the priority is the predicted next CPU burst time.\n" + "4) Problem:\n" + "\t # Starvation!! - Low priority processes may never execute.\n" + "5) Solution:\n" + "\t # Aging - as time progresses increase the priority of the process.\n"; " is 627.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblRR.Content = "Round-Robin\n\n" + "Each process gets a small unit of CPU time:\n" + "\t # Time quantum usually 10-100 milliseconds.\n" + "\t # After this time has elapsed' the process is preempted and added to the end \nof the ready queue.\n" + "\t # n processes' time quantum = q:\n" + "\t\t # Each process gets 1/n CPU time in chunks of at most q time units \nat a time.\n" + "\t\t # No process waits more than (n-1)q time units. 3.Performance:\n" + "\t\t\t # Time slice q too large â€“ response time poor\n" + "\t\t\t # Time slice (infinity)? - reduces to FIFO behavior\n" + "\t\t\t # Time slice q too small - Overhead of context switch is too \nexpensive. Throughput poor\n"; " is 679.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblSJF.Content = "Shortest Job First(SJF)\n\n" + "1) Associate with each process the length of its next CPU burst.\n" + "2) Use these lengths to schedule the process with the shortest time.\n" + //"3) Two Schemes:\n" + " is 218.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	"Scheme : Non-preemptive\n" + "\t # Once CPU is given to the process it cannot be preempted until it completes \nits CPU burst.\n"; " is 131.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	//"\t # If a new CPU process arrives with CPU burst length less than remaining time \nof current executing process' preempt.\n" + " is 129.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	lblSRTF.Content = "Shortest Remaining Time First(SRTF)\n\n" + "1) Associate with each process the length of its next CPU burst.\n" + "2) Use these lengths to schedule the process with the shortest time.\n" + //"3) Two Schemes:\n" + " is 231.
Long Statement,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,Window_Loaded,The length of the statement  "	"Scheme : Preemptive\n" + "\t # If a new CPU process arrives with CPU burst length less than remaining time \nof current executing process' preempt.\n" + "\t # Also called Shortest-Remaining-Time-First (SRTF).. "; " is 213.
Empty Catch Block,Process_Scheduling_Algorithms,RR,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Algorithms\RR.xaml.cs,UpdateTimeInfos,The method has an empty catch block.
Empty Catch Block,Process_Scheduling_Algorithms,Fcfs,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Algorithms\FCFS.xaml.cs,ToggleButton_OnChecked,The method has an empty catch block.
Empty Catch Block,Process_Scheduling_Algorithms,Fcfs,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Algorithms\FCFS.xaml.cs,UpdateTimeInfos,The method has an empty catch block.
Empty Catch Block,Process_Scheduling_Algorithms,MainWindow,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\MainWindow.xaml.cs,CbiFCFS_OnSelected,The method has an empty catch block.
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,Graph,The following statement contains a magic number: pbar = new ProgressBar {  	Value = 0'  	Height = 42'  	VerticalAlignment = VerticalAlignment.Top'  	Background = Brushes.CornflowerBlue  };  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,Graph,The following statement contains a magic number: grdLines = new Grid {  	Height = 50'  	VerticalAlignment = VerticalAlignment.Top  };  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,ctorGraph,The following statement contains a magic number: pbar = new ProgressBar {  	Value = 0'  	Height = 42'  	VerticalAlignment = VerticalAlignment.Top  };  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,ctorGraph,The following statement contains a magic number: grdLines = new Grid {  	Height = 50'  	VerticalAlignment = VerticalAlignment.Top  };  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,BeginWriteProcessTimesToGrid,The following statement contains a magic number: grdProcessesTimes.Margin = new Thickness (-8' -8' 8' 0);  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,BeginWriteProcessTimesToGrid,The following statement contains a magic number: grdProcessesTimes.Margin = new Thickness (-8' -8' 8' 0);  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,BeginWriteProcessTimesToGrid,The following statement contains a magic number: grdProcessesTimes.Margin = new Thickness (-8' -8' 8' 0);  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessForCases,The following statement contains a magic number: grdLines.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessForCases,The following statement contains a magic number: grdProcessesTimes.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcess,The following statement contains a magic number: grdLines.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcess,The following statement contains a magic number: grdProcessesTimes.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessWithoutAddList,The following statement contains a magic number: grdLines.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcessWithoutAddList,The following statement contains a magic number: grdProcessesTimes.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcess,The following statement contains a magic number: grdLines.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
Magic Number,Process_Scheduling_Algorithms.Classes,Graph,C:\repos\ArslanBilal_Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Process-Scheduling-Algorithms\Classes\Graph.cs,AddProcess,The following statement contains a magic number: grdProcessesTimes.ColumnDefinitions.Add (new ColumnDefinition {  	Width = new GridLength (30' GridUnitType.Pixel)  });  
