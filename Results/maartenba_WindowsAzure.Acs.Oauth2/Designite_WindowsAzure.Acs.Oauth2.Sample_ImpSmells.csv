Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WindowsAzure.Acs.Oauth2.Sample.Api.v1,SampleController,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Sample\Api\v1\SampleController.cs,Get,The length of the statement  "            return string.Format("Hello' world! And hello' {0}.\r\n\r\nYour claims:\r\n{1}"' User.Identity.Name' string.Join("\r\n"' claims)); " is 130.
Long Statement,WindowsAzure.Acs.Oauth2.Sample.App_Start,AppStart_OAuth2API,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Sample\App_Start\AppStart_OAuth2API.cs,Start,The length of the statement  "            if (ConfigurationManager.AppSettings["WindowsAzure.OAuth.RelyingPartyRealm"] != null && ConfigurationManager.AppSettings["WindowsAzure.OAuth.ServiceNamespace"] != null && ConfigurationManager.AppSettings["WindowsAzure.OAuth.SwtSigningKey"] != null) " is 248.
Long Statement,WindowsAzure.Acs.Oauth2.Sample.App_Start,AppStart_OAuth2API,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Sample\App_Start\AppStart_OAuth2API.cs,Start,The length of the statement  "                throw new ArgumentException("To enable OAuth2 support for your web project' add a call to GlobalConfiguration.Configuration.MessageHandlers.Add(new OAuth2MessageHandler(\"\"' \"\"' \"\"));."); " is 192.
Empty Catch Block,WindowsAzure.Acs.Oauth2.Sample.Controllers,HomeController,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Sample\Controllers\HomeController.cs,Index,The method has an empty catch block.
