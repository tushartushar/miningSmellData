Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,ReadAuthenticationHeader,Cyclomatic complexity of the method is 9
Complex Method,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,CreateTypedOAuthMessageFromParameters,Cyclomatic complexity of the method is 9
Long Parameter List,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,SimpleOAuth2Client,The method has 7 parameters. Parameters: authorizeUri' accessTokenUri' clientId' clientSecret' scope' redirectUri' mode
Long Identifier,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,AuthorizeWithACS,The length of the parameter endUserAuthorizationFailedResponse is 34.
Long Identifier,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,AuthorizeWithACS,The length of the parameter userAuthorizationFailedResponse is 31.
Long Identifier,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,AuthorizeTwoLegged,The length of the parameter endUserAuthorizationFailedResponse is 34.
Long Identifier,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,AuthorizeTwoLegged,The length of the parameter userAuthorizationFailedResponse is 31.
Long Statement,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,BuildAuthorizationUri,The length of the statement  "            var authorizationUri = string.Format("{0}?client_id={1}&redirect_uri={2}&scope={3}&response_type=code"' AuthorizeUri' ClientId' RedirectUri' Scope); " is 148.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,AccessTokenRequest,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\AccessTokenRequest.cs,Validate,The length of the statement  "            if (string.IsNullOrEmpty(this.GrantType) || (string.IsNullOrEmpty(this.ClientId) && string.IsNullOrEmpty(this.ClientSecret))) " is 125.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,AccessTokenRequest,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\AccessTokenRequest.cs,IsValidGrantType,The length of the statement  "            return grantType == "authorization_code" || grantType == "password" || grantType == "client_credentials" || grantType == "refresh_token" || AccessTokenRequest.IsValidAbsoluteUri(grantType); " is 189.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageExtensions,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageExtensions.cs,GetCodeResponseUri,The length of the statement  "            if (redirectUri == null && message.Parameters[OAuthConstants.GrantType] != OAuthConstants.AccessGrantType.ClientCredentials) " is 124.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,Read,The length of the statement  "            return this.Read(context.Request.HttpMethod' context.Request.ContentType' context.Request.Url' context.Request.InputStream); " is 124.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,Read,The length of the statement  "            return this.Read(context.Request.HttpMethod' context.Request.ContentType' context.Request.Url' context.Request.InputStream); " is 124.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,CreateTypedOAuthMessageFromParameters,The length of the statement  "            if (!string.IsNullOrEmpty(parameters["code"]) || (!string.IsNullOrEmpty(parameters["access_token"]) && string.IsNullOrEmpty(parameters["refresh_token"]))) " is 154.
Long Statement,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,CreateTypedOAuthMessageFromParameters,The length of the statement  "            if (!string.IsNullOrEmpty(parameters["grant_type"]) && parameters["grant_type"] == OAuthConstants.AccessGrantType.ClientCredentials) " is 132.
Magic Number,WindowsAzure.Acs.Oauth2.Client,SimpleOAuth2Client,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\SimpleOAuth2Client.cs,GetAccessToken,The following statement contains a magic number: DateTime.UtcNow.AddSeconds(-15) < LastAccessTokenRefresh.AddSeconds(CurrentAccessToken.ExpiresIn)
Magic Number,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,ReadAuthenticationHeader,The following statement contains a magic number: string authType = authenticateHeader.Split(new char[] { ' ' }' 2)[0];
Magic Number,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,ReadAuthenticationHeader,The following statement contains a magic number: string[] pairs = entry.Split(new string[] { splitAtEqualSign }' 2' System.StringSplitOptions.None);
Magic Number,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,ReadAuthenticationHeader,The following statement contains a magic number: pairs.Length != 2
Missing Default,WindowsAzure.Acs.Oauth2.Client.Protocol,OAuthMessageSerializer,D:\research\architectureSmells\repos\maartenba_WindowsAzure.Acs.Oauth2\src\WindowsAzure.Acs.Oauth2\WindowsAzure.Acs.Oauth2.Client\Protocol\OAuthMessageSerializer.cs,ReadJsonEncodedParameters,The following switch statement is missing a default case: switch (jsonReader.TokenType)                          {                              case JsonToken.Boolean:                              case JsonToken.Date:                              case JsonToken.Float:                              case JsonToken.Integer:                              case JsonToken.Null:                              case JsonToken.String:                                  parameters[key] = jsonReader.Value.ToString();                                  break;                          }
