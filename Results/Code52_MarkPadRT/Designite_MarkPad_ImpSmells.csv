Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MarkPad.Common,SuspensionManager,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,MarkPad.Common,SuspensionManager,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,MarkPad.ViewModel,MainViewModel,C:\repos\Code52_MarkPadRT\src\MarkPad\ViewModel\MainViewModel.cs,PinDocument,The length of the statement  "				var secondaryTile = new SecondaryTile(d.Name' d.Name' d.Name' tileActivationArguments' TileOptions.ShowNameOnLogo' new Uri("ms-appx:///assets/PinnedLogo.png")); " is 160.
Long Statement,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,DocumentsSelectionChanged,The length of the statement  "			Editor.Document.SetText(TextSetOptions.None' ViewModel.SelectedDocument != null ? ViewModel.SelectedDocument.Text : string.Empty); " is 130.
Complex Conditional,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,MarkPad.Sources.LocalFiles,LocalSource,C:\repos\Code52_MarkPadRT\src\MarkPad\Sources\LocalFiles\LocalSource.cs,Close,The method has an empty catch block.
Empty Catch Block,MarkPad.ViewModel,MainViewModel,C:\repos\Code52_MarkPadRT\src\MarkPad\ViewModel\MainViewModel.cs,PinDocument,The method has an empty catch block.
Empty Catch Block,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,Wv_OnScriptNotify,The method has an empty catch block.
Magic Number,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,MarkPad.Common,LayoutAwarePage,C:\repos\Code52_MarkPadRT\src\MarkPad\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,MainPage,The following statement contains a magic number: _timer.Interval = new TimeSpan(0' 0' 0' 0' 500);
Magic Number,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,MainPage,The following statement contains a magic number: _closeWebView.Interval = new TimeSpan(0' 0' 0' 0' 500);
Magic Number,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,DetermineVisualState,The following statement contains a magic number: if (viewState == ApplicationViewState.Filled || viewState == ApplicationViewState.FullScreenLandscape)  			{  				var windowWidth = Window.Current.Bounds.Width;  				if (windowWidth >= 1366)  					return "FullScreenLandscapeOrWide";  				return "FilledOrNarrow";  			}
Missing Default,MarkPad.Views,MainPage,C:\repos\Code52_MarkPadRT\src\MarkPad\Views\MainPage.xaml.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key)  			{  				case VirtualKey.N:  					SafelyExecute(ViewModel.NewCommand);  					break;  				case VirtualKey.O:  					SafelyExecute(ViewModel.OpenCommand);  					break;  				case VirtualKey.S:  					SafelyExecute(ViewModel.SaveCommand);  					break;  			}
