Implementation smell,Namespace,Class,File,Method,Description
Magic Number,LinqToMongoDB,EntryPoint,C:\repos\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqToMongoDB\Program.cs,CreateSampleLogs,The following statement contains a magic number: for (var i = 0; i < count; i++)              {                  var logState = (i % 2 == 0) ? "closed" : "pending";                  var logType = (i % 3 == 0) ? "bug" : (i % 3 == 1) ? "feature-request" : "ticket";                  var text = string.Format("Log  #{0}({1})"' i + 1' logType);                  var log = new Log(text' date);                  log.LogType = new LogType()                  {                      State = logState'                      Type = logType                  };                  logs.Add(log);                  date = date.AddDays(-1);              }
Magic Number,LinqToMongoDB,EntryPoint,C:\repos\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqToMongoDB\Program.cs,CreateSampleLogs,The following statement contains a magic number: for (var i = 0; i < count; i++)              {                  var logState = (i % 2 == 0) ? "closed" : "pending";                  var logType = (i % 3 == 0) ? "bug" : (i % 3 == 1) ? "feature-request" : "ticket";                  var text = string.Format("Log  #{0}({1})"' i + 1' logType);                  var log = new Log(text' date);                  log.LogType = new LogType()                  {                      State = logState'                      Type = logType                  };                  logs.Add(log);                  date = date.AddDays(-1);              }
Magic Number,LinqToMongoDB,EntryPoint,C:\repos\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqToMongoDB\Program.cs,CreateSampleLogs,The following statement contains a magic number: for (var i = 0; i < count; i++)              {                  var logState = (i % 2 == 0) ? "closed" : "pending";                  var logType = (i % 3 == 0) ? "bug" : (i % 3 == 1) ? "feature-request" : "ticket";                  var text = string.Format("Log  #{0}({1})"' i + 1' logType);                  var log = new Log(text' date);                  log.LogType = new LogType()                  {                      State = logState'                      Type = logType                  };                  logs.Add(log);                  date = date.AddDays(-1);              }
