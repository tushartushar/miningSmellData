Implementation smell,Namespace,Class,File,Method,Description
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,CreateSampleLogs,The following statement contains a magic number: var logState = (i % 2 == 0) ? "closed" : "pending";
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,CreateSampleLogs,The following statement contains a magic number: var logType = (i % 3 == 0) ? "bug" : (i % 3 == 1) ? "feature-request" : "ticket";
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,CreateSampleLogs,The following statement contains a magic number: var logType = (i % 3 == 0) ? "bug" : (i % 3 == 1) ? "feature-request" : "ticket";
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,Main,The following statement contains a magic number: logsCollection.InsertBatch(CreateSampleLogs(100));
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,Main,The following statement contains a magic number: var findBugsQuery = Query<Log>.Where(log => log.LogType.Type == "bug" && log.LogDate > DateTime.Now.AddDays(-7));
Magic Number,LinqLikeQueries,Program,D:\research\architectureSmells\repos1\TelerikAcademy_SchoolAcademy\2014-12-Databases-and-Entity-Framework\8. MongoDB-and-MongoDB-with-.NET-demos\LinqLikeQueries\Program.cs,Main,The following statement contains a magic number: var findOldPendingBugsQuery = Query<Log>.Where(log => log.LogDate < DateTime.Now.AddDays(-10) &&                                                                    log.LogType.Type == "bug" &&                                                                    log.LogType.State == "pending");
