Implementation smell,Namespace,Class,File,Method,Description
Long Method,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,SetDefaultValues,The method has 102 lines of code.
Long Parameter List,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddControlToGrid,The method has 6 parameters. Parameters: grid' control' row' column' rowSpan' colSpan
Long Parameter List,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,InternetGetCookieEx,The method has 6 parameters. Parameters: url' cookieName' cookieData' size' dwFlags' lpReserved
Long Identifier,Rally.RestApi.UiForWpf,RestApiAuthMgrWpf,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\RestApiAuthMgrWpf.cs,,The length of the parameter LoginWindowSsoAuthenticationComplete is 36.
Long Statement,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Rally.RestApi.UiForWpf;component/loginwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Rally.RestApi.UiForWpf;component/ssowindow.xaml"' System.UriKind.Relative); " is 121.
Empty Catch Block,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,browser_LoadCompleted,The method has an empty catch block.
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: tabControl.Margin = new Thickness(10' 10' 10' 5);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: tabControl.Margin = new Thickness(10' 10' 10' 5);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: tabControl.Margin = new Thickness(10' 10' 10' 5);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: tabControl.Margin = new Thickness(10' 10' 10' 5);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: Grid.SetColumnSpan(tabControl' 3);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: inputRow.Height = new GridLength(tabControl.Height + 20' GridUnitType.Pixel);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: Height = inputRow.Height.Value + (28 * 2) + 100;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: Height = inputRow.Height.Value + (28 * 2) + 100;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,BuildLayout,The following statement contains a magic number: Height = inputRow.Height.Value + (28 * 2) + 100;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddTab,The following statement contains a magic number: AddColumnDefinition(tabGrid' 120);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddTab,The following statement contains a magic number: if ((tabControl.Height.ToString().Equals("NaN"' StringComparison.InvariantCultureIgnoreCase)) ||  				(tabControl.Height < tabGrid.Height + 20))  			{  				tabControl.Height = tabGrid.Height + 20;  				tabControl.MinHeight = tabControl.Height;  			}
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddTab,The following statement contains a magic number: if ((tabControl.Height.ToString().Equals("NaN"' StringComparison.InvariantCultureIgnoreCase)) ||  				(tabControl.Height < tabGrid.Height + 20))  			{  				tabControl.Height = tabGrid.Height + 20;  				tabControl.MinHeight = tabControl.Height;  			}
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetEditor,The following statement contains a magic number: if (controls.ContainsKey(controlType))  				control = controls[controlType];  			else  			{  				switch (controlType)  				{  					case EditorControlType.Username:  					case EditorControlType.RallyServer:  					case EditorControlType.IdpServer:  					case EditorControlType.ProxyServer:  					case EditorControlType.ProxyUsername:  						TextBox textBox = new TextBox();  						control = textBox;  						break;  					case EditorControlType.Password:  					case EditorControlType.ProxyPassword:  						PasswordBox passwordBox = new PasswordBox();  						passwordBox.PasswordChar = '*';  						control = passwordBox;  						break;  					case EditorControlType.ConnectionType:  						ComboBox comboBox = new ComboBox();  						comboBox.SelectedValuePath = "Key";  						comboBox.DisplayMemberPath = "Value";    						if ((!RestApiAuthMgrWpf.AllowIdpBasedSso) &&  							(connectionTypes.ContainsKey(ConnectionType.IdpBasedSso)))  						{  							connectionTypes.Remove(ConnectionType.IdpBasedSso);  						}    						comboBox.ItemsSource = connectionTypes;  						comboBox.SelectionChanged += ConnectionTypeChanged;  						control = comboBox;  						break;  					case EditorControlType.TrustAllCertificates:  						CheckBox checkBox = new CheckBox();  						control = checkBox;  						break;  					default:  						throw new NotImplementedException();  				}    				control.Margin = new Thickness(0' 0' 10' 0);  				control.HorizontalAlignment = HorizontalAlignment.Stretch;  				control.MinWidth = 150;  				control.Height = 20;  				controls.Add(controlType' control);  			}
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetEditor,The following statement contains a magic number: if (controls.ContainsKey(controlType))  				control = controls[controlType];  			else  			{  				switch (controlType)  				{  					case EditorControlType.Username:  					case EditorControlType.RallyServer:  					case EditorControlType.IdpServer:  					case EditorControlType.ProxyServer:  					case EditorControlType.ProxyUsername:  						TextBox textBox = new TextBox();  						control = textBox;  						break;  					case EditorControlType.Password:  					case EditorControlType.ProxyPassword:  						PasswordBox passwordBox = new PasswordBox();  						passwordBox.PasswordChar = '*';  						control = passwordBox;  						break;  					case EditorControlType.ConnectionType:  						ComboBox comboBox = new ComboBox();  						comboBox.SelectedValuePath = "Key";  						comboBox.DisplayMemberPath = "Value";    						if ((!RestApiAuthMgrWpf.AllowIdpBasedSso) &&  							(connectionTypes.ContainsKey(ConnectionType.IdpBasedSso)))  						{  							connectionTypes.Remove(ConnectionType.IdpBasedSso);  						}    						comboBox.ItemsSource = connectionTypes;  						comboBox.SelectionChanged += ConnectionTypeChanged;  						control = comboBox;  						break;  					case EditorControlType.TrustAllCertificates:  						CheckBox checkBox = new CheckBox();  						control = checkBox;  						break;  					default:  						throw new NotImplementedException();  				}    				control.Margin = new Thickness(0' 0' 10' 0);  				control.HorizontalAlignment = HorizontalAlignment.Stretch;  				control.MinWidth = 150;  				control.Height = 20;  				controls.Add(controlType' control);  			}
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetEditor,The following statement contains a magic number: if (controls.ContainsKey(controlType))  				control = controls[controlType];  			else  			{  				switch (controlType)  				{  					case EditorControlType.Username:  					case EditorControlType.RallyServer:  					case EditorControlType.IdpServer:  					case EditorControlType.ProxyServer:  					case EditorControlType.ProxyUsername:  						TextBox textBox = new TextBox();  						control = textBox;  						break;  					case EditorControlType.Password:  					case EditorControlType.ProxyPassword:  						PasswordBox passwordBox = new PasswordBox();  						passwordBox.PasswordChar = '*';  						control = passwordBox;  						break;  					case EditorControlType.ConnectionType:  						ComboBox comboBox = new ComboBox();  						comboBox.SelectedValuePath = "Key";  						comboBox.DisplayMemberPath = "Value";    						if ((!RestApiAuthMgrWpf.AllowIdpBasedSso) &&  							(connectionTypes.ContainsKey(ConnectionType.IdpBasedSso)))  						{  							connectionTypes.Remove(ConnectionType.IdpBasedSso);  						}    						comboBox.ItemsSource = connectionTypes;  						comboBox.SelectionChanged += ConnectionTypeChanged;  						control = comboBox;  						break;  					case EditorControlType.TrustAllCertificates:  						CheckBox checkBox = new CheckBox();  						control = checkBox;  						break;  					default:  						throw new NotImplementedException();  				}    				control.Margin = new Thickness(0' 0' 10' 0);  				control.HorizontalAlignment = HorizontalAlignment.Stretch;  				control.MinWidth = 150;  				control.Height = 20;  				controls.Add(controlType' control);  			}
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: Grid.SetColumn(buttonGrid' 2);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: Grid.SetRow(buttonGrid' 3);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: AddRowDefinition(buttonGrid' null' 30);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: buttonGrid.Height = 100;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: AddColumnDefinition(buttonGrid' 70);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddButtons,The following statement contains a magic number: AddColumnDefinition(buttonGrid' 70);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetButton,The following statement contains a magic number: button.Margin = new Thickness(5' 0' 5' 0);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetButton,The following statement contains a magic number: button.Margin = new Thickness(5' 0' 5' 0);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,GetButton,The following statement contains a magic number: button.Height = 25;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,AddRowDefinition,The following statement contains a magic number: if (pixels != Int32.MaxValue)  			{  				grid.MinHeight += pixels + 2;  				grid.Height = grid.MinHeight;  			}  			else  				grid.Height = double.NaN;
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,ShowMessage,The following statement contains a magic number: Thread.CurrentThread.Join(10);
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.inputRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.Logo = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.headerLabel = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.userMessages = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.inputRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.Logo = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.headerLabel = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.userMessages = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.inputRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.Logo = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.headerLabel = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.userMessages = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.layoutGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.inputRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.Logo = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.headerLabel = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.userMessages = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,GetUriCookieContainer,The following statement contains a magic number: int datasize = 8192 * 16;
Magic Number,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,GetUriCookieContainer,The following statement contains a magic number: int datasize = 8192 * 16;
Missing Default,Rally.RestApi.UiForWpf,LoginWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\LoginWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.layoutGrid = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.inputRow = ((System.Windows.Controls.RowDefinition)(target));              return;              case 3:              this.Logo = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.headerLabel = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.userMessages = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,Rally.RestApi.UiForWpf,SsoWindow,C:\repos\RallyTools_RallyRestToolkitFor.NET\Rally.RestApi.UiForWpf\SsoWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.browser = ((System.Windows.Controls.WebBrowser)(target));              return;              }
