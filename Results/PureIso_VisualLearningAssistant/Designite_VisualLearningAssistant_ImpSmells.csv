Implementation smell,Namespace,Class,File,Method,Description
Long Method,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The method has 107 lines of code.
Complex Method,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,ListViewCheckBox,Cyclomatic complexity of the method is 10
Complex Method,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetBrush,Cyclomatic complexity of the method is 12
Complex Method,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,Option,Cyclomatic complexity of the method is 8
Complex Method,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,SaveOptionButtonClick,Cyclomatic complexity of the method is 17
Complex Method,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,ApplyOptionButtonClick,Cyclomatic complexity of the method is 13
Complex Method,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,Cyclomatic complexity of the method is 15
Long Statement,VisualLearningAssistant,About,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\About.xaml.cs,SetBrush,The length of the statement  "			MainBorder.Dispatcher.Invoke (DispatcherPriority.Normal' new SetBrushDelegate (SetBrush)' brush' background' buttonBackground); " is 127.
Long Statement,VisualLearningAssistant,App,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\App.xaml.cs,GetXamlFilePath,The length of the statement  "	string fileName = AppDomain.CurrentDomain.BaseDirectory + "Language-Pack\\LocalizationDictionary." + language + ".xaml"; " is 120.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,LoadPluginButtonClick,The length of the statement  "			SetLog ("Visual Learning Assistant - " + PluginService.PluginIllustrations [_selectPluginIndex].IllustrationName + " Loaded."' LogType.Info); " is 141.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,ShowMessageBox,The length of the statement  "			Dispatcher.Invoke (DispatcherPriority.Normal' new MessageBoxDelegate (ShowMessageBox)' message' header' messageButton' messageImage); " is 133.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The length of the statement  "			Uri uri = logType == LogType.Info ? new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/information.ico") : new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/cancel.ico"); " is 217.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetBrush,The length of the statement  "			MainBorder.Dispatcher.Invoke (DispatcherPriority.Normal' new SetMultiBrushDelegate (SetBrush)' mainborderBrush' brushMain' thickBorder' formBackground); " is 152.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetProgressBar,The length of the statement  "			MainProgressBar.Dispatcher.Invoke (DispatcherPriority.Normal' new ProgressBarDelegate (SetProgressBar)' min' max' current' label); " is 130.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,CheckUpdateThread,The length of the statement  "		XmlReader xmlReader = XmlReader.Create ("https://github.com/PureIso/VisualLearningAssistant/tree/master/VisualLearningAssistant/Resources/VLAUpdate.xml"); " is 154.
Long Statement,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,CheckUpdateThread,The length of the statement  "			ShowMessageBox ("Update found! " + Environment.NewLine + "New Version: " + xmlVersion + Environment.NewLine + "Would you like to download?"' "Update"' MessageBoxButton.YesNo' MessageBoxImage.Information); " is 204.
Long Statement,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,SetBrush,The length of the statement  "			OptionBorder.Dispatcher.Invoke (DispatcherPriority.Normal' new SetBrushDelegate (SetBrush)' brush' background' buttonBackground); " is 129.
Long Statement,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The length of the statement  "		sb.AppendLine ("Visual Learning Assistant is a learning application to aid by visual representations of knowledge' " + "concepts' thoughts' or ideas."); " is 152.
Long Statement,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The length of the statement  "		sb.AppendLine ("This program is free software: you can redistribute it and/or modify " + "it under the terms of the GNU General Public License as published by " + "the Free Software Foundation' either version 3 of the License' or " + "(at your option) any later version."); " is 273.
Long Statement,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The length of the statement  "		sb.AppendLine ("This program is distributed in the hope that it will be useful' " + "but WITHOUT ANY WARRANTY; without even the implied warranty of " + "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the " + "GNU General Public License for more details. "); " is 268.
Long Statement,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The length of the statement  "		sb.AppendLine ("You should have received a copy of the GNU General Public License " + "along with this program.  If not' see http://www.gnu.org/licenses/."); " is 157.
Long Statement,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The length of the statement  "					FileStream file = new FileStream (AppDomain.CurrentDomain.BaseDirectory + "Language-Pack/DictionaryDetails.xml"' FileMode.OpenOrCreate); " is 136.
Long Statement,VisualLearningAssistant,PluginService,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\PluginService.cs,AddPlugin,The length of the statement  "			VLAPlugin pluginInterfaceInstance = (VLAPlugin)(Activator.CreateInstance (pluginAssembly.GetType (pluginType.ToString ()))); " is 124.
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: try {  	if (RichTextBoxLog.Dispatcher.CheckAccess ()) {  		_richTextBox = RichTextBoxLog;  		if (text == null && logType == LogType.None)  			return _richTextBox;  		Uri uri = logType == LogType.Info ? new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/information.ico") : new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/cancel.ico");  		if (logType == LogType.None) {  			RichTextBoxLog.AppendText (text);  		}  		else {  			BitmapImage bitmap = new BitmapImage (uri);  			Image image = new Image {  				Source = bitmap'  				Width = 14'  				Height = 14  			};  			InlineUIContainer container = new InlineUIContainer (image);  			string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  			Paragraph paragraph = new Paragraph (container) {  				Margin = new Thickness (0)  			};  			paragraph.Inlines.Add (log.Trim ());  			RichTextBoxLog.Document.Blocks.Add (paragraph);  		}  	}  	else {  		RichTextBoxLog.Dispatcher.Invoke (DispatcherPriority.Normal' new LogTextDelegate (SetLog)' text' logType);  	}  	return _richTextBox;  }  catch (Exception e) {  	throw new Exception (e.Message);  }  
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: try {  	if (RichTextBoxLog.Dispatcher.CheckAccess ()) {  		_richTextBox = RichTextBoxLog;  		if (text == null && logType == LogType.None)  			return _richTextBox;  		Uri uri = logType == LogType.Info ? new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/information.ico") : new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/cancel.ico");  		if (logType == LogType.None) {  			RichTextBoxLog.AppendText (text);  		}  		else {  			BitmapImage bitmap = new BitmapImage (uri);  			Image image = new Image {  				Source = bitmap'  				Width = 14'  				Height = 14  			};  			InlineUIContainer container = new InlineUIContainer (image);  			string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  			Paragraph paragraph = new Paragraph (container) {  				Margin = new Thickness (0)  			};  			paragraph.Inlines.Add (log.Trim ());  			RichTextBoxLog.Document.Blocks.Add (paragraph);  		}  	}  	else {  		RichTextBoxLog.Dispatcher.Invoke (DispatcherPriority.Normal' new LogTextDelegate (SetLog)' text' logType);  	}  	return _richTextBox;  }  catch (Exception e) {  	throw new Exception (e.Message);  }  
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: if (RichTextBoxLog.Dispatcher.CheckAccess ()) {  	_richTextBox = RichTextBoxLog;  	if (text == null && logType == LogType.None)  		return _richTextBox;  	Uri uri = logType == LogType.Info ? new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/information.ico") : new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/cancel.ico");  	if (logType == LogType.None) {  		RichTextBoxLog.AppendText (text);  	}  	else {  		BitmapImage bitmap = new BitmapImage (uri);  		Image image = new Image {  			Source = bitmap'  			Width = 14'  			Height = 14  		};  		InlineUIContainer container = new InlineUIContainer (image);  		string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  		Paragraph paragraph = new Paragraph (container) {  			Margin = new Thickness (0)  		};  		paragraph.Inlines.Add (log.Trim ());  		RichTextBoxLog.Document.Blocks.Add (paragraph);  	}  }  else {  	RichTextBoxLog.Dispatcher.Invoke (DispatcherPriority.Normal' new LogTextDelegate (SetLog)' text' logType);  }  
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: if (RichTextBoxLog.Dispatcher.CheckAccess ()) {  	_richTextBox = RichTextBoxLog;  	if (text == null && logType == LogType.None)  		return _richTextBox;  	Uri uri = logType == LogType.Info ? new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/information.ico") : new Uri ("pack://application:'''/VisualLearningAssistant;component/Images/cancel.ico");  	if (logType == LogType.None) {  		RichTextBoxLog.AppendText (text);  	}  	else {  		BitmapImage bitmap = new BitmapImage (uri);  		Image image = new Image {  			Source = bitmap'  			Width = 14'  			Height = 14  		};  		InlineUIContainer container = new InlineUIContainer (image);  		string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  		Paragraph paragraph = new Paragraph (container) {  			Margin = new Thickness (0)  		};  		paragraph.Inlines.Add (log.Trim ());  		RichTextBoxLog.Document.Blocks.Add (paragraph);  	}  }  else {  	RichTextBoxLog.Dispatcher.Invoke (DispatcherPriority.Normal' new LogTextDelegate (SetLog)' text' logType);  }  
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: if (logType == LogType.None) {  	RichTextBoxLog.AppendText (text);  }  else {  	BitmapImage bitmap = new BitmapImage (uri);  	Image image = new Image {  		Source = bitmap'  		Width = 14'  		Height = 14  	};  	InlineUIContainer container = new InlineUIContainer (image);  	string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  	Paragraph paragraph = new Paragraph (container) {  		Margin = new Thickness (0)  	};  	paragraph.Inlines.Add (log.Trim ());  	RichTextBoxLog.Document.Blocks.Add (paragraph);  }  
Magic Number,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,SetLog,The following statement contains a magic number: if (logType == LogType.None) {  	RichTextBoxLog.AppendText (text);  }  else {  	BitmapImage bitmap = new BitmapImage (uri);  	Image image = new Image {  		Source = bitmap'  		Width = 14'  		Height = 14  	};  	InlineUIContainer container = new InlineUIContainer (image);  	string log = " " + DateTime.Now.ToString ("HH:mm:ss tt") + " " + text;  	Paragraph paragraph = new Paragraph (container) {  		Margin = new Thickness (0)  	};  	paragraph.Inlines.Add (log.Trim ());  	RichTextBoxLog.Document.Blocks.Add (paragraph);  }  
Magic Number,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The following statement contains a magic number: try {  	#region legal  	StringBuilder sb = new StringBuilder ();  	sb.AppendLine ("Visual Learning Assistant is a learning application to aid by visual representations of knowledge' " + "concepts' thoughts' or ideas.");  	sb.AppendLine ("Copyright (C) 2013 ");  	sb.AppendLine ("This program is free software: you can redistribute it and/or modify " + "it under the terms of the GNU General Public License as published by " + "the Free Software Foundation' either version 3 of the License' or " + "(at your option) any later version.");  	sb.AppendLine ("This program is distributed in the hope that it will be useful' " + "but WITHOUT ANY WARRANTY; without even the implied warranty of " + "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the " + "GNU General Public License for more details. ");  	sb.AppendLine ("You should have received a copy of the GNU General Public License " + "along with this program.  If not' see http://www.gnu.org/licenses/.");  	_main.SetLog (sb.ToString ()' LogType.None);  	#endregion  	_main.SetLog ("Welcome to Visual Learning Assistant."' LogType.Info);  	_main.SetLog ("Version: " + Assembly.GetExecutingAssembly ().GetName ().Version' LogType.Info);  	_main.SetLog ("Loading Language Packs."' LogType.Info);  	try {  		string pathToLanguageFile = AppDomain.CurrentDomain.BaseDirectory + "Language-Pack\\DictionaryDetails.xml";  		if (!Functions.CheckAndCreateDirectory ("Language-Pack")) {  			_main.SetLog ("Language-Pack Folder Missing!"' LogType.Info);  			_main.SetLog ("Language-Pack Folder Created!"' LogType.Info);  		}  		if (!Functions.CheckAndCreateFile ("Language-Pack\\DictionaryDetails.xml")) {  			_main.SetLog ("DictionaryDetails.xml File Missing!"' LogType.Info);  			_main.SetLog ("DictionaryDetails.xml File Created!"' LogType.Info);  			Uri uri = new Uri ("pack://application:'''/Language-Pack/DictionaryDetails.xml");  			StreamResourceInfo info = Application.GetResourceStream (uri);  			if (info != null) {  				StreamReader textReader = new StreamReader (info.Stream);  				FileStream file = new FileStream (AppDomain.CurrentDomain.BaseDirectory + "Language-Pack/DictionaryDetails.xml"' FileMode.OpenOrCreate);  				StreamWriter streamWriter = new StreamWriter (file);  				while (!textReader.EndOfStream) {  					var s = textReader.ReadLine ();  					streamWriter.WriteLine (s);  					Console.WriteLine (s);  				}  				textReader.Close ();  				streamWriter.Close ();  			}  			else {  				_main.SetLog ("Internal Error - Game.Vla is missing!"' LogType.Error);  			}  		}  		//De-serializing XML  		List<Languages> languages;  		XmlSerializer deserializer = new XmlSerializer (typeof(List<Languages>));  		using (TextReader textReader = new StreamReader (pathToLanguageFile)) {  			languages = (List<Languages>)deserializer.Deserialize (textReader);  			textReader.Close ();  		}  		//Add each language  		foreach (Languages language in languages) {  			_main.AddLanguage (language);  			_main.SetLog (language.Name + " Language Added!"' LogType.Info);  		}  		//Enable the Language Menu Item button  		MainWindow.IsEnable (_main.MainMenuLanguage' true);  		_main.SetLog (languages.Count + " Language/s Loaded."' LogType.Info);  	}  	catch (Exception ex) {  		_main.SetLog (ex.Message + " (Language Pack)"' LogType.Error);  	}  	try {  		_main.SetLog ("Loading Plug-ins"' LogType.Info);  		string pathToPlugins = AppDomain.CurrentDomain.BaseDirectory + "Plug-in";  		if (!Functions.CheckAndCreateDirectory ("Plug-in")) {  			_main.SetLog ("Plug-in Folder Missing!"' LogType.Info);  			_main.SetLog ("Plug-in Folder Created!"' LogType.Info);  		}  		//Load user generated libraries  		_main.PluginService = new PluginService (pathToPlugins);  		int index = 0;  		//Load Illustrations  		foreach (VLAPlugin pluginData in _main.PluginService.PluginIllustrations) {  			_main.AddListViewItems (pluginData);  			_main.AddUniqueModuleName (pluginData);  			_main.SetLog (pluginData.IllustrationName + " Plug-in Added!"' LogType.Info);  			index++;  		}  		_main.SetLog (_main.PluginService.PluginIllustrations.Count + " Total Plug-in/s Loaded."' LogType.Info);  		//Load _main application add-ons  		index = 0;  		foreach (VLAPlugin pluginData in _main.PluginService.PluginSystem) {  			_main.AddMenuItem (pluginData.SystemName' index);  			_main.SetLog (pluginData.SystemName + " System Add-on Added!"' LogType.Info);  			index++;  		}  		_main.SetLog (_main.PluginService.PluginSystem.Count + " Total Add-On/s Loaded."' LogType.Info);  	}  	catch (Exception ex) {  		_main.SetLog (ex.Message + " (Plug Pack)"' LogType.Error);  	}  	string filePath = AppDomain.CurrentDomain.BaseDirectory + "config.ini";  	if (!Functions.CheckAndCreateFile ("config.ini")) {  		_main.SetLog ("Config.ini File Missing!"' LogType.Info);  		_main.SetLog ("Config.ini File Created!"' LogType.Info);  	}  	_main.LoadConfig (filePath);  }  catch (Exception e) {  	_main.SetLog (e.Message' LogType.Error);  	_main.ShowMessageBox (e.Message' "Visual Learning Assistant"' MessageBoxButton.OK' MessageBoxImage.Error);  }  finally {  	Thread.Sleep (2000);  	Dispatcher.Invoke (DispatcherPriority.Normal' (Action)Close);  	LoadMain (_main);  }  
Magic Number,VisualLearningAssistant,SplashScreen,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\SplashScreen.xaml.cs,Load,The following statement contains a magic number: Thread.Sleep (2000);  
Missing Default,VisualLearningAssistant,About,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\About.xaml.cs,About,The following switch statement is missing a default case: switch (main.CurrentTheme) {  case "Default":  	SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2");  	break;  case "Light":  	SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick");  	break;  }  
Missing Default,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,LoadConfig,The following switch statement is missing a default case: switch (line) {  case "#Theme#":  	line = file.ReadLine ();  	switch (line) {  	case "Default":  		SetLog ("Default Theme Selected."' LogType.Info);  		CurrentTheme = "Default";  		SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2"' "Brush1");  		break;  	case "Light":  		SetLog ("Light Theme Selected."' LogType.Info);  		CurrentTheme = "Light";  		SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick"' "Brush4Flat");  		break;  	}  	break;  }  
Missing Default,VisualLearningAssistant,MainWindow,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\MainWindow.xaml.cs,LoadConfig,The following switch statement is missing a default case: switch (line) {  case "Default":  	SetLog ("Default Theme Selected."' LogType.Info);  	CurrentTheme = "Default";  	SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2"' "Brush1");  	break;  case "Light":  	SetLog ("Light Theme Selected."' LogType.Info);  	CurrentTheme = "Light";  	SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick"' "Brush4Flat");  	break;  }  
Missing Default,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,Option,The following switch statement is missing a default case: switch (main.CurrentTheme) {  case "Default":  	ThemeComboBox.Text = "Default";  	SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush1");  	break;  case "Light":  	ThemeComboBox.Text = "Light";  	SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Flat");  	break;  }  
Missing Default,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,SaveOptionButtonClick,The following switch statement is missing a default case: switch (selectedTheme) {  case "Default":  	_main.SetLog ("Default Theme Selected."' LogType.Info);  	_main.CurrentTheme = "Default";  	_main.SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2"' "Brush1");  	SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2");  	break;  case "Light":  	_main.SetLog ("Light Theme Selected."' LogType.Info);  	_main.CurrentTheme = "Light";  	_main.SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick"' "Brush4Flat");  	SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick");  	break;  }  
Missing Default,VisualLearningAssistant,Option,C:\repos\PureIso_VisualLearningAssistant\VisualLearningAssistant\Option.xaml.cs,ApplyOptionButtonClick,The following switch statement is missing a default case: switch (selectedTheme) {  case "Default":  	_main.SetLog ("Default Theme Selected."' LogType.Info);  	_main.CurrentTheme = "Default";  	_main.SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2"' "Brush1");  	SetBrush ("#FF7272C2"' "Brush2Trans"' "Brush2");  	break;  case "Light":  	_main.SetLog ("Light Theme Selected."' LogType.Info);  	_main.CurrentTheme = "Light";  	_main.SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick"' "Brush4Flat");  	SetBrush ("#FF77CBD6"' "Brush4"' "Brush4Thick");  	break;  }  
