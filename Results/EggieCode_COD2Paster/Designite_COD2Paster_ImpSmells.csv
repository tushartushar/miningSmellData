Implementation smell,Namespace,Class,File,Method,Description
Complex Method,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,Cyclomatic complexity of the method is 24
Complex Method,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,Cyclomatic complexity of the method is 18
Complex Method,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,Cyclomatic complexity of the method is 13
Long Parameter List,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The method has 10 parameters.
Long Parameter List,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The method has 26 parameters.
Long Parameter List,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,The method has 6 parameters.
Long Parameter List,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The method has 7 parameters.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count (); " is 127.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count (); " is 134.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count (); " is 133.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count (); " is 129.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count (); " is 128.
Long Statement,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The length of the statement  "			y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count (); " is 129.
Long Statement,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,The length of the statement  "		y.TotalSuicides = _damages.Where (x => x.Victum.ID == x.Attacter.ID && x.Attacter.ID == y.ID).Count (x => x.Kill == true); " is 122.
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following statement contains a magic number: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The following statement contains a magic number: switch (cbView.SelectedIndex) {  case 0:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 1:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 2:  	//Machine guns  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 3:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 4:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 5:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The following statement contains a magic number: switch (cbView.SelectedIndex) {  case 0:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 1:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 2:  	//Machine guns  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 3:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 4:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 5:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The following statement contains a magic number: switch (cbView.SelectedIndex) {  case 0:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 1:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 2:  	//Machine guns  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 3:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 4:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 5:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  }  
Magic Number,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The following statement contains a magic number: switch (cbView.SelectedIndex) {  case 0:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 1:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 2:  	//Machine guns  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 3:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 4:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 5:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,The following statement contains a magic number: foreach (string l in lines) {  	Match match = Regex.Match (l' @"(?:[0-9]?[0-9]?[0-9]:[0-9][0-9]?)"' RegexOptions.IgnoreCase);  	string[] Time = match.Groups [0].Value.Split (new string[] {  		":"  	}' StringSplitOptions.None);  	double min = Convert.ToDouble (Time [0]);  	double sec = Convert.ToDouble (Time [1]);  	long ticks = Convert.ToInt64 (((min * 60) + sec) * 10000000);  	TimeSpan TimeDT = new TimeSpan (ticks);  	string newL = l.Replace (match.Groups [0].Value' "").Replace (" "' "");  	List<string> groups = new List<string> (newL.Split (new string[] {  		";"  	}' StringSplitOptions.None));  	switch (groups.First ()) {  	case "J":  		ParsePlayer (TimeDT' groups);  		break;  	case "K":  		Damage dmgK = ParseDamage (TimeDT' groups);  		dmgK.Kill = true;  		_damages.Add (dmgK);  		break;  	case "D":  		Damage dmgD = ParseDamage (TimeDT' groups);  		_damages.Add (dmgD);  		break;  	}  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,The following statement contains a magic number: foreach (string l in lines) {  	Match match = Regex.Match (l' @"(?:[0-9]?[0-9]?[0-9]:[0-9][0-9]?)"' RegexOptions.IgnoreCase);  	string[] Time = match.Groups [0].Value.Split (new string[] {  		":"  	}' StringSplitOptions.None);  	double min = Convert.ToDouble (Time [0]);  	double sec = Convert.ToDouble (Time [1]);  	long ticks = Convert.ToInt64 (((min * 60) + sec) * 10000000);  	TimeSpan TimeDT = new TimeSpan (ticks);  	string newL = l.Replace (match.Groups [0].Value' "").Replace (" "' "");  	List<string> groups = new List<string> (newL.Split (new string[] {  		";"  	}' StringSplitOptions.None));  	switch (groups.First ()) {  	case "J":  		ParsePlayer (TimeDT' groups);  		break;  	case "K":  		Damage dmgK = ParseDamage (TimeDT' groups);  		dmgK.Kill = true;  		_damages.Add (dmgK);  		break;  	case "D":  		Damage dmgD = ParseDamage (TimeDT' groups);  		_damages.Add (dmgD);  		break;  	}  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: if (!_players.Exists (x => x.ID == playerID)) {  	_players.Add (new Player () {  		Name = new List<string> () {  			groups [3]  		}'  		ID = playerID'  		TimeJoin = new List<TimeSpan> () {  			Time  		}  	});  }  else {  	_players.Find (x => x.ID == playerID).TimeJoin.Add (Time);  	if (!_players.Where (x => x.ID == playerID).SelectMany (x => x.Name).Contains (groups [3])) {  		_players.Find (x => x.ID == playerID).Name.Add (groups [3]);  	}  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: if (!_players.Exists (x => x.ID == playerID)) {  	_players.Add (new Player () {  		Name = new List<string> () {  			groups [3]  		}'  		ID = playerID'  		TimeJoin = new List<TimeSpan> () {  			Time  		}  	});  }  else {  	_players.Find (x => x.ID == playerID).TimeJoin.Add (Time);  	if (!_players.Where (x => x.ID == playerID).SelectMany (x => x.Name).Contains (groups [3])) {  		_players.Find (x => x.ID == playerID).Name.Add (groups [3]);  	}  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: if (!_players.Exists (x => x.ID == playerID)) {  	_players.Add (new Player () {  		Name = new List<string> () {  			groups [3]  		}'  		ID = playerID'  		TimeJoin = new List<TimeSpan> () {  			Time  		}  	});  }  else {  	_players.Find (x => x.ID == playerID).TimeJoin.Add (Time);  	if (!_players.Where (x => x.ID == playerID).SelectMany (x => x.Name).Contains (groups [3])) {  		_players.Find (x => x.ID == playerID).Name.Add (groups [3]);  	}  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: _players.Add (new Player () {  	Name = new List<string> () {  		groups [3]  	}'  	ID = playerID'  	TimeJoin = new List<TimeSpan> () {  		Time  	}  });  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: if (!_players.Where (x => x.ID == playerID).SelectMany (x => x.Name).Contains (groups [3])) {  	_players.Find (x => x.ID == playerID).Name.Add (groups [3]);  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: if (!_players.Where (x => x.ID == playerID).SelectMany (x => x.Name).Contains (groups [3])) {  	_players.Find (x => x.ID == playerID).Name.Add (groups [3]);  }  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParsePlayer,The following statement contains a magic number: _players.Find (x => x.ID == playerID).Name.Add (groups [3]);  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Magic Number,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,ParseDamage,The following statement contains a magic number: return new Damage () {  	Kill = false'  	Bullet = groups [11]'  	Dam = Convert.ToDouble (groups [10])'  	HitPlace = groups [12]'  	Time = Time'  	Weapon = groups [9]'  	Attacter = _players.Find (x => x.ID == Convert.ToInt32 (groups [6]))'  	Victum = _players.Find (x => x.ID == Convert.ToInt32 (groups [2]))  };  
Missing Default,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbOrderPlist_SelectedIndexChanged,The following switch statement is missing a default case: switch (cbOrderPlist.SelectedIndex) {  case 0:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Team).ToList ();  	break;  case 1:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Team).ToList ();  	break;  case 2:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.Playername).ToList ();  	break;  case 3:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.Playername).ToList ();  	break;  case 4:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalKills).ToList ();  	break;  case 5:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalKills).ToList ();  	break;  case 6:  	dgvPlayers.DataSource = pas.Players.OrderByDescending (x => x.TotalDeads).ToList ();  	break;  case 7:  	dgvPlayers.DataSource = pas.Players.OrderBy (x => x.TotalDeads).ToList ();  	break;  }  
Missing Default,COD2Paster,Form1,C:\repos\EggieCode_COD2Paster\COD2Paster\Form1.cs,cbView_SelectedIndexChanged,The following switch statement is missing a default case: switch (cbView.SelectedIndex) {  case 0:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 1:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.sniper_rifles.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 2:  	//Machine guns  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.machine_guns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 3:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.shotguns.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 4:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.pistols.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  case 5:  	dgvStats.DataSource = pas.Players.Select (y =>  {  		y.Total = pas.Damages.Where (x => x.Kill == true && x.Attacter.ID == y.ID && info.grenades.Exists (p => p == x.Weapon)).Count ();  		return y;  	}).OrderByDescending (x => x.Total).ToList ();  	break;  }  
Missing Default,COD2Paster,Paster,C:\repos\EggieCode_COD2Paster\COD2Paster\Paster.cs,PasteFile,The following switch statement is missing a default case: switch (groups.First ()) {  case "J":  	ParsePlayer (TimeDT' groups);  	break;  case "K":  	Damage dmgK = ParseDamage (TimeDT' groups);  	dmgK.Kill = true;  	_damages.Add (dmgK);  	break;  case "D":  	Damage dmgD = ParseDamage (TimeDT' groups);  	_damages.Add (dmgD);  	break;  }  
