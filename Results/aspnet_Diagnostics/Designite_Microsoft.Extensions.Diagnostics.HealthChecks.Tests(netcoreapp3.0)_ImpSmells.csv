Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,DefaultHealthCheckServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DefaultHealthCheckServiceTest.cs,CreateHealthChecksService,The length of the statement  "            return (DefaultHealthCheckService)services.BuildServiceProvider(validateScopes: true).GetRequiredService<HealthCheckService>(); " is 127.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Single,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingBegin' entry.EventId); }' " is 122.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Single,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingEnd' entry.EventId); }); " is 121.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_PublishersCanTimeout,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingBegin' entry.EventId); }' " is 122.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_PublishersCanTimeout,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingEnd' entry.EventId); }); " is 121.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_HandlesExceptions,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingBegin' entry.EventId); }' " is 122.
Long Statement,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_HandlesExceptions,The length of the statement  "                entry => { Assert.Equal(HealthCheckPublisherHostedService.EventIds.HealthCheckPublisherProcessingEnd' entry.EventId); }); " is 121.
Long Statement,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddCheck_Instance,The length of the statement  "            services.AddHealthChecks().AddCheck("test"' failureStatus: HealthStatus.Degraded'tags: new[] { "tag"' }' instance: instance); " is 125.
Long Statement,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddCheck_T_TypeActivated,The length of the statement  "            services.AddHealthChecks().AddCheck<TestHealthCheck>("test"' failureStatus: HealthStatus.Degraded' tags: new[] { "tag"' }); " is 123.
Long Statement,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddCheck_T_Service,The length of the statement  "            services.AddHealthChecks().AddCheck<TestHealthCheck>("test"' failureStatus: HealthStatus.Degraded' tags: new[] { "tag"' }); " is 123.
Long Statement,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddTypeActivatedCheck,The length of the statement  "                .AddTypeActivatedCheck<TestHealthCheckWithArgs>("test"' failureStatus: HealthStatus.Degraded' tags: new[] { "tag"' }' args: new object[] { 5' "hi"' }); " is 151.
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,DefaultHealthCheckServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DefaultHealthCheckServiceTest.cs,CheckHealthAsync_Cancellation_CanPropagate,The following statement contains a magic number: var service = CreateHealthChecksService(b =>              {                  b.AddAsyncCheck("cancels"' async ct =>                  {                      insideCheck.SetResult(null);                        await Task.Delay(10000' ct);                      return HealthCheckResult.Unhealthy();                  });              });
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StartAsync_WithPublishers_StartsTimer_RunsPublishers,The following statement contains a magic number: await publishers[0].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StartAsync_WithPublishers_StartsTimer_RunsPublishers,The following statement contains a magic number: await publishers[1].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StartAsync_WithPublishers_StartsTimer_RunsPublishers,The following statement contains a magic number: await publishers[2].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StartAsync_WithPublishers_StartsTimer_RunsPublishers,The following statement contains a magic number: await publishers[2].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StopAsync_CancelsExecution,The following statement contains a magic number: await publishers[0].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,StopAsync_CancelsExecution,The following statement contains a magic number: await running.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Single,The following statement contains a magic number: await publishers[0].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Single,The following statement contains a magic number: await running.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Multiple,The following statement contains a magic number: await publishers[0].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Multiple,The following statement contains a magic number: await publishers[1].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Multiple,The following statement contains a magic number: await publishers[2].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Multiple,The following statement contains a magic number: await publishers[2].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_WaitsForCompletion_Multiple,The following statement contains a magic number: await running.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_PublishersCanTimeout,The following statement contains a magic number: var service = CreateService(publishers' sink: sink' configure: (options) =>              {                  options.Timeout = TimeSpan.FromMilliseconds(50);              });
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_PublishersCanTimeout,The following statement contains a magic number: await publishers[0].Started.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_PublishersCanTimeout,The following statement contains a magic number: await running.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_CanFilterHealthChecks,The following statement contains a magic number: await service.RunAsync().TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_HandlesExceptions,The following statement contains a magic number: await service.RunAsync().TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,RunAsync_HandlesExceptions_Multiple,The following statement contains a magic number: await service.RunAsync().TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,CreateService,The following statement contains a magic number: serviceCollection.Configure<HealthCheckPublisherOptions>(options =>              {                  options.Delay = TimeSpan.FromMinutes(5);                  options.Period = TimeSpan.FromMinutes(5);                  options.Timeout = TimeSpan.FromMinutes(5);              });
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,CreateService,The following statement contains a magic number: serviceCollection.Configure<HealthCheckPublisherOptions>(options =>              {                  options.Delay = TimeSpan.FromMinutes(5);                  options.Period = TimeSpan.FromMinutes(5);                  options.Timeout = TimeSpan.FromMinutes(5);              });
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,CreateService,The following statement contains a magic number: serviceCollection.Configure<HealthCheckPublisherOptions>(options =>              {                  options.Delay = TimeSpan.FromMinutes(5);                  options.Period = TimeSpan.FromMinutes(5);                  options.Timeout = TimeSpan.FromMinutes(5);              });
Magic Number,Microsoft.Extensions.Diagnostics.HealthChecks,HealthCheckPublisherHostedServiceTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\HealthCheckPublisherHostedServiceTest.cs,AssertCancelledAsync,The following statement contains a magic number: await Assert.ThrowsAsync<TaskCanceledException>(() => Task.Delay(TimeSpan.FromSeconds(10)' cancellationToken));
Magic Number,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddTypeActivatedCheck,The following statement contains a magic number: services                  .AddHealthChecks()                  .AddTypeActivatedCheck<TestHealthCheckWithArgs>("test"' failureStatus: HealthStatus.Degraded' tags: new[] { "tag"' }' args: new object[] { 5' "hi"' });
Magic Number,Microsoft.Extensions.DependencyInjection,HealthChecksBuilderTest,D:\research\architectureSmells\repos\aspnet_Diagnostics\test\Microsoft.Extensions.Diagnostics.HealthChecks.Tests\DependencyInjection\HealthChecksBuilderTest.cs,AddTypeActivatedCheck,The following statement contains a magic number: Assert.Equal(5' check.I);
