Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,Cyclomatic complexity of the method is 9
Complex Method,FluentDateTimeOffset,TimeSpanOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\TimeSpanExtensions.cs,Round,Cyclomatic complexity of the method is 9
Complex Method,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,Cyclomatic complexity of the method is 9
Complex Method,FluentDateTime,TimeSpanExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\TimeSpanExtensions.cs,Round,Cyclomatic complexity of the method is 9
Long Parameter List,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetTime,The method has 5 parameters. Parameters: originalDate' hour' minute' second' millisecond
Long Parameter List,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,At,The method has 5 parameters. Parameters: current' hour' minute' second' milliseconds
Long Parameter List,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetTime,The method has 5 parameters. Parameters: originalDate' hour' minute' second' millisecond
Long Parameter List,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,At,The method has 5 parameters. Parameters: current' hour' minute' second' milliseconds
Long Identifier,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,NextYear,The length of the parameter numberOfDaysInSameMonthNextYear is 31.
Long Identifier,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,PreviousYear,The length of the parameter numberOfDaysInSameMonthPreviousYear is 35.
Long Identifier,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,FirstDayOfWeek,The length of the parameter numberOfDaysSinceBeginningOfTheWeek is 35.
Long Identifier,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,NextYear,The length of the parameter numberOfDaysInSameMonthNextYear is 31.
Long Identifier,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,PreviousYear,The length of the parameter numberOfDaysInSameMonthPreviousYear is 35.
Long Identifier,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,FirstDayOfWeek,The length of the parameter numberOfDaysSinceBeginningOfTheWeek is 35.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,NextYear,The length of the statement  "                var dateTimeOffset = new DateTimeOffset(nextYear' start.Month' numberOfDaysInSameMonthNextYear' start.Hour' start.Minute' start.Second' start.Millisecond' start.Offset); " is 169.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,NextYear,The length of the statement  "            return new DateTimeOffset(nextYear' start.Month' start.Day' start.Hour' start.Minute' start.Second' start.Millisecond' start.Offset); " is 133.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,PreviousYear,The length of the statement  "                var dateTime = new DateTimeOffset(previousYear' start.Month' numberOfDaysInSameMonthPreviousYear' start.Hour' start.Minute' start.Second' start.Millisecond' start.Offset); " is 171.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,PreviousYear,The length of the statement  "            return new DateTimeOffset(previousYear' start.Month' start.Day' start.Hour' start.Minute' start.Second' start.Millisecond' start.Offset); " is 137.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetTime,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' hour' originalDate.Minute' originalDate.Second' originalDate.Millisecond' originalDate.Offset); " is 178.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetTime,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' originalDate.Second' originalDate.Millisecond' originalDate.Offset); " is 165.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetTime,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' second' originalDate.Millisecond' originalDate.Offset); " is 152.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetTime,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' second' millisecond' originalDate.Offset); " is 139.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetHour,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' hour' originalDate.Minute' originalDate.Second' originalDate.Millisecond' originalDate.Offset); " is 178.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetMinute,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' minute' originalDate.Second' originalDate.Millisecond' originalDate.Offset); " is 178.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetSecond,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' originalDate.Minute' second' originalDate.Millisecond' originalDate.Offset); " is 178.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetMillisecond,The length of the statement  "            return new DateTimeOffset(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' originalDate.Minute' originalDate.Second' millisecond' originalDate.Offset); " is 178.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetDate,The length of the statement  "            return new DateTimeOffset(year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Offset); " is 129.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetDate,The length of the statement  "            return new DateTimeOffset(year' month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Offset); " is 123.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetYear,The length of the statement  "            return new DateTimeOffset(year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Offset); " is 129.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetMonth,The length of the statement  "            return new DateTimeOffset(value.Year' month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Offset); " is 129.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,SetDay,The length of the statement  "            return new DateTimeOffset(value.Year' value.Month' day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Offset); " is 129.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The length of the statement  "                        rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Offset); " is 140.
Long Statement,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The length of the statement  "                        rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Offset); " is 126.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,NextYear,The length of the statement  "                var dateTime = new DateTime(nextYear' start.Month' numberOfDaysInSameMonthNextYear' start.Hour' start.Minute' start.Second' start.Millisecond' start.Kind); " is 155.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,NextYear,The length of the statement  "            return new DateTime(nextYear' start.Month' start.Day' start.Hour' start.Minute' start.Second' start.Millisecond' start.Kind); " is 125.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,PreviousYear,The length of the statement  "                var dateTime = new DateTime(previousYear' start.Month' numberOfDaysInSameMonthPreviousYear' start.Hour' start.Minute' start.Second' start.Millisecond' start.Kind); " is 163.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,PreviousYear,The length of the statement  "            return new DateTime(previousYear' start.Month' start.Day' start.Hour' start.Minute' start.Second' start.Millisecond' start.Kind); " is 129.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetTime,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' hour' originalDate.Minute' originalDate.Second' originalDate.Millisecond' originalDate.Kind); " is 170.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetTime,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' originalDate.Second' originalDate.Millisecond' originalDate.Kind); " is 157.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetTime,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' second' originalDate.Millisecond' originalDate.Kind); " is 144.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetTime,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' hour' minute' second' millisecond' originalDate.Kind); " is 131.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetHour,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' hour' originalDate.Minute' originalDate.Second' originalDate.Millisecond' originalDate.Kind); " is 170.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetMinute,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' minute' originalDate.Second' originalDate.Millisecond' originalDate.Kind); " is 170.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetSecond,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' originalDate.Minute' second' originalDate.Millisecond' originalDate.Kind); " is 170.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetMillisecond,The length of the statement  "            return new DateTime(originalDate.Year' originalDate.Month' originalDate.Day' originalDate.Hour' originalDate.Minute' originalDate.Second' millisecond' originalDate.Kind); " is 170.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetDate,The length of the statement  "            return new DateTime(year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Kind); " is 121.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetYear,The length of the statement  "            return new DateTime(year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Kind); " is 121.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetMonth,The length of the statement  "            return new DateTime(value.Year' month' value.Day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Kind); " is 121.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,SetDay,The length of the statement  "            return new DateTime(value.Year' value.Month' day' value.Hour' value.Minute' value.Second' value.Millisecond' value.Kind); " is 121.
Long Statement,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,The length of the statement  "                        rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Kind); " is 132.
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTimeOffset(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Offset);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTimeOffset(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Offset);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTimeOffset(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Offset);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTimeOffset(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Offset);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Noon,The following statement contains a magic number: return value.SetTime(12' 0' 0' 0);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: var currentQuarter = (current.Month - 1) / 3 + 1;
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: return current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: return current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var currentQuarter = (current.Month - 1) / 3 + 1;
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var firstDay = current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var firstDay = current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: return firstDay.SetMonth(firstDay.Month + 2).LastDayOfMonth();
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Offset);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Offset);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Offset);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Offset);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Offset);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Offset);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Offset);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Offset);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Offset);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Offset);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Offset);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Offset);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Offset);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Offset);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Offset);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTimeOffset(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Offset);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: var offset = dateTime.DayOfWeek - firstDayOfWeek < 0 ? 7 : 0;
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfWeek,The following statement contains a magic number: return current.FirstDayOfWeek().AddDays(6);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfYear,The following statement contains a magic number: return current.SetDate(current.Year' 12' 31);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,LastDayOfYear,The following statement contains a magic number: return current.SetDate(current.Year' 12' 31);
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,PreviousMonth,The following statement contains a magic number: var month = current.Month == 1 ? 12 : current.Month - 1;
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,NextMonth,The following statement contains a magic number: var year = current.Month == 12 ? current.Year + 1 : current.Year;
Magic Number,FluentDateTimeOffset,DateTimeOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\DateTimeOffsetExtensions.cs,NextMonth,The following statement contains a magic number: var month = current.Month == 12 ? 1 : current.Month + 1;
Magic Number,FluentDateTimeOffset,TimeSpanOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                        break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                        break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                        break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                        break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTimeOffset,TimeSpanOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                        break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                        break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                        break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                        break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTimeOffset,TimeSpanOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                        break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                        break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                        break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                        break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTimeOffset,TimeSpanOffsetExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTimeOffset\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                        break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                        break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                        break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                        break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind)                  .AddHours(timeZoneOffset);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind)                  .AddHours(timeZoneOffset);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind)                  .AddHours(timeZoneOffset);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,EndOfDay,The following statement contains a magic number: return new DateTime(date.Year' date.Month' date.Day' 23' 59' 59' 999' date.Kind)                  .AddHours(timeZoneOffset);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Noon,The following statement contains a magic number: return value.SetTime(12' 0' 0' 0);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: var currentQuarter = (current.Month - 1) / 3 + 1;
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: var firstDay = new DateTime(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,FirstDayOfQuarter,The following statement contains a magic number: var firstDay = new DateTime(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var currentQuarter = (current.Month - 1) / 3 + 1;
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var firstDay = current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: var firstDay = current.SetDate(current.Year' 3 * currentQuarter - 2' 1);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfQuarter,The following statement contains a magic number: return firstDay.SetMonth(firstDay.Month + 2).LastDayOfMonth();
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Kind);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Kind);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Kind);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Kind);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Kind);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Kind);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Kind);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Kind);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Kind);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Kind);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Kind);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Kind);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' dateTime.Second' dateTime.Kind);                          if (dateTime.Millisecond >= 500)                          {                              rounded = rounded.AddSeconds(1);                          }                          break;                      }                  case RoundTo.Minute:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' 0' dateTime.Kind);                          if (dateTime.Second >= 30)                          {                              rounded = rounded.AddMinutes(1);                          }                          break;                      }                  case RoundTo.Hour:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' 0' 0' dateTime.Kind);                          if (dateTime.Minute >= 30)                          {                              rounded = rounded.AddHours(1);                          }                          break;                      }                  case RoundTo.Day:                      {                          rounded = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0' dateTime.Kind);                          if (dateTime.Hour >= 12)                          {                              rounded = rounded.AddDays(1);                          }                          break;                      }                  default:                      {                          throw new ArgumentOutOfRangeException("rt");                      }              }
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,FirstDayOfWeek,The following statement contains a magic number: var offset = dateTime.DayOfWeek - firstDayOfWeek < 0 ? 7 : 0;
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfWeek,The following statement contains a magic number: return current.FirstDayOfWeek().AddDays(6);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfYear,The following statement contains a magic number: return current.SetDate(current.Year' 12' 31);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,LastDayOfYear,The following statement contains a magic number: return current.SetDate(current.Year' 12' 31);
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,PreviousMonth,The following statement contains a magic number: var month = current.Month == 1 ? 12 : current.Month - 1;
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,NextMonth,The following statement contains a magic number: var year = current.Month == 12 ? current.Year + 1 : current.Year;
Magic Number,FluentDateTime,DateTimeExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\DateTimeExtensions.cs,NextMonth,The following statement contains a magic number: var month = current.Month == 12 ? 1 : current.Month + 1;
Magic Number,FluentDateTime,TimeSpanExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                      break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                      break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                      break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                      break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTime,TimeSpanExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                      break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                      break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                      break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                      break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTime,TimeSpanExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                      break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                      break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                      break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                      break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDateTime,TimeSpanExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\DateTime\TimeSpanExtensions.cs,Round,The following statement contains a magic number: switch (rt)              {                  case RoundTo.Second:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' timeSpan.Seconds);                      if (timeSpan.Milliseconds >= 500)                      {                          rounded = rounded + 1.Seconds();                      }                      break;                  }                  case RoundTo.Minute:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' timeSpan.Minutes' 0);                      if (timeSpan.Seconds >= 30)                      {                          rounded = rounded + 1.Minutes();                      }                      break;                  }                  case RoundTo.Hour:                  {                      rounded = new TimeSpan(timeSpan.Days' timeSpan.Hours' 0' 0);                      if (timeSpan.Minutes >= 30)                      {                          rounded = rounded + 1.Hours();                      }                      break;                  }                  case RoundTo.Day:                  {                      rounded = new TimeSpan(timeSpan.Days' 0' 0' 0);                      if (timeSpan.Hours >= 12)                      {                          rounded = rounded + 1.Days();                      }                      break;                  }                  default:                  {                      throw new NotImplementedException();                  }              }
Magic Number,FluentDate,NumberExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\NumberExtensions.cs,Quarters,The following statement contains a magic number: return new FluentTimeSpan {Months = quarters * 3};
Magic Number,FluentDate,NumberExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\NumberExtensions.cs,Weeks,The following statement contains a magic number: return new FluentTimeSpan {TimeSpan = TimeSpan.FromDays(weeks * 7)};
Magic Number,FluentDate,NumberExtensions,D:\research\architectureSmells\repos\FluentDateTime_FluentDateTime\src\FluentDateTime\NumberExtensions.cs,Weeks,The following statement contains a magic number: return new FluentTimeSpan {TimeSpan = TimeSpan.FromDays(weeks * 7)};
