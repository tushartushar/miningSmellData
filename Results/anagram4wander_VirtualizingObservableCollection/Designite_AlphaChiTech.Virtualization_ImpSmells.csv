Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoStepBackwards,Cyclomatic complexity of the method is 9
Complex Method,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoStepForward,Cyclomatic complexity of the method is 8
Complex Method,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoRealPageGet,Cyclomatic complexity of the method is 10
Complex Method,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,OnRemove,Cyclomatic complexity of the method is 8
Complex Method,AlphaChiTech.Virtualization,VirtualizationManager,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizationManager.cs,ProcessActions,Cyclomatic complexity of the method is 8
Long Parameter List,AlphaChiTech.Virtualization,PagedSourceProviderMakeSync<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PagedSourceProviderMakeSync.cs,PagedSourceProviderMakeSync,The method has 7 parameters. Parameters: funcGetItemsAtAsync' funcGetCountAsync' funcIndexOf' funcIndexOfAsync' actionOnReset' funcGetPlaceHolder' actionOnBeforeReset
Long Parameter List,AlphaChiTech.Virtualization,ISourcePage,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\ISourcePage.cs,ReplaceAt,The method has 5 parameters. Parameters: offset' oldItem' newItem' updatedAt' comparer
Long Parameter List,AlphaChiTech.Virtualization,PagedSourceProviderMakeAsync<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PagedSourceProviderMakeAsync.cs,PagedSourceProviderMakeAsync,The method has 6 parameters. Parameters: funcGetItemsAt' funcGetCount' funcIndexOfAsync' actionOnReset' funcGetPlaceHolder' actionOnBeforeReset
Long Parameter List,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,PaginationManager,The method has 8 parameters. Parameters: provider' reclaimer' expiryComparer' pageSize' maxPages' maxDeltas' maxDistance' sectionContext
Long Parameter List,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoRealPageGet,The method has 5 parameters. Parameters: voc' page' pageOffset' index' cts
Long Parameter List,AlphaChiTech.Virtualization,SourcePage<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\SourcePage.cs,ReplaceAt,The method has 5 parameters. Parameters: offset' oldValue' newValue' updatedAt' comparer
Long Parameter List,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,VirtualizingObservableCollection,The method has 7 parameters. Parameters: provider' reclaimer' expiryComparer' pageSize' maxPages' maxDeltas' maxDistance
Long Statement,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,IndexOf,The length of the statement  "                        return o + ((p.Key - _BasePage) * this.PageSize) + (from d in _Deltas.Values where d.Page < p.Key select d.Delta).Sum(); " is 120.
Long Statement,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,SafeGetPage,The length of the statement  "                    int pageOffset = (page - _BasePage) * this.PageSize + (from d in _Deltas.Values where d.Page < page select d.Delta).Sum(); " is 122.
Long Statement,AlphaChiTech.Virtualization,VirtualizationManager,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizationManager.cs,ProcessActions,The length of the statement  "                              throw new Exception( "VirtualizationManager isn’t already initialized !  set the VirtualizationManager’s UIThreadExcecuteAction (VirtualizationManager.Instance.UIThreadExcecuteAction = a => Dispatcher.Invoke( a );)" ); " is 218.
Long Statement,AlphaChiTech.Virtualization,VirtualizationManager,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizationManager.cs,RunOnUI,The length of the statement  "               throw new Exception( "VirtualizationManager isn’t already initialized !  set the VirtualizationManager’s UIThreadExcecuteAction (VirtualizationManager.Instance.UIThreadExcecuteAction = a => Dispatcher.Invoke( a );)" ); " is 218.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,AddRange,The length of the statement  "                NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' item' index); " is 125.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,ReplaceAt,The length of the statement  "                NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace' newValue' oldValue' index); " is 143.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,InternalSetValue,The length of the statement  "            NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace' newItems' oldItems' index); " is 143.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,InternalAdd,The length of the statement  "            NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' newValue' index); " is 129.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,InternalInsertAt,The length of the statement  "            NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' item' index); " is 125.
Long Statement,AlphaChiTech.Virtualization,VirtualizingObservableCollection<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizingObservableCollection.cs,InternalRemoveAt,The length of the statement  "                NotifyCollectionChangedEventArgs args = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' oldValue' index); " is 132.
Complex Conditional,AlphaChiTech.Virtualization,DateBasedPageExpiryComparer,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\DateBasedPageExpiryComparer.cs,IsUpdateValid,The conditional expression  "pageUpdateAt != null && updateAt != null && pageUpdateAt is DateTime && updateAt is DateTime"  is complex.
Empty Catch Block,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,CancelPageRequest,The method has an empty catch block.
Empty Catch Block,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,CancelPageRequest,The method has an empty catch block.
Empty Catch Block,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,CancelAllRequests,The method has an empty catch block.
Empty Catch Block,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,RemovePageRequest,The method has an empty catch block.
Magic Number,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoStepBackwards,The following statement contains a magic number: while(!done)              {                    if (stepAmount > this.PageSize * StepToJumpThreashold && ignoreSteps <= 0)                  {                      int targetPage =  page - stepAmount/this.PageSize;                      int sourcePage = page;                      var adj = (from a in _Deltas.Values where a.Page >= targetPage && a.Page <= sourcePage orderby a.Page select a);                      if(adj.Count() == 0)                      {                          page = targetPage;                          stepAmount -= (sourcePage - targetPage) * this.PageSize;                            if(stepAmount == 0)                          {                              done = true;                          }                      } else if(adj.Last().Page < page-2)                      {                          targetPage = adj.Last().Page + 1;                          page = targetPage;                          stepAmount -= (sourcePage - targetPage) * this.PageSize;                            if (stepAmount == 0)                          {                              done = true;                          }                      }                      else                      {                          ignoreSteps = sourcePage - adj.Last().Page;                      }                  }                    if (!done)                  {                      int items = this.PageSize;                      if (_Deltas.ContainsKey(page)) items += _Deltas[page].Delta;                      if (offset - stepAmount < 0)                      {                          stepAmount -= (offset + 1);                          page--;                          items = this.PageSize;                          if (_Deltas.ContainsKey(page)) items += _Deltas[page].Delta;                          offset = items - 1;                      }                      else                      {                          offset -= stepAmount;                          done = true;                      }                        ignoreSteps--;                  }              }
Magic Number,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,DoStepForward,The following statement contains a magic number: while(!done)              {                    if (stepAmount > this.PageSize * StepToJumpThreashold && ignoreSteps <= 0)                  {                      int targetPage = page + stepAmount / this.PageSize;                      int sourcePage = page;                      var adj = (from a in _Deltas.Values where a.Page <= targetPage && a.Page >= sourcePage orderby a.Page select a);                      if (adj.Count() == 0)                      {                          page = targetPage;                          stepAmount -= (targetPage - sourcePage) * this.PageSize;                            if (stepAmount == 0)                          {                              done = true;                          }                      }                      else if (adj.Last().Page > page - 2)                      {                          targetPage = adj.Last().Page - 1;                          page = targetPage;                          stepAmount -= (targetPage - sourcePage) * this.PageSize;                            if (stepAmount == 0)                          {                              done = true;                          }                      } else                      {                          ignoreSteps = adj.Last().Page - sourcePage;                      }                  }                    if (!done)                  {                      int items = this.PageSize;                      if (_Deltas.ContainsKey(page)) items += _Deltas[page].Delta;                      if (items <= offset + stepAmount)                      {                          stepAmount -= (items) - offset;                          offset = 0;                          page++;                      }                      else                      {                          offset += stepAmount;                          done = true;                      }                        ignoreSteps--;                  }              }
Magic Number,AlphaChiTech.Virtualization,PaginationManager<T>,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\PaginationManager.cs,OnInsert,The following statement contains a magic number: if(page == _BasePage && adj == this.PageSize*2)              {                  lock (_PageLock)                  {                      if (IsPageWired(page))                      {                          var dataPage = SafeGetPage(page' false' null' index);                          ISourcePage<T> newdataPage = null;                          if (IsPageWired(page - 1))                          {                              newdataPage = SafeGetPage(page-1' false' null' index);                          }                          else                          {                              newdataPage = this._Reclaimer.MakePage(page - 1' this.PageSize);                              _Pages.Add(page - 1' newdataPage);                          }                            for (int loop = 0; loop < this.PageSize; loop++)                          {                              var i = dataPage.GetAt(0);                                dataPage.RemoveAt(0' null' null);                              newdataPage.Append(i' null' null);                          }                        }                        AddOrUpdateAdjustment(page' -this.PageSize);                        _BasePage--;                  }              }
Missing Default,AlphaChiTech.Virtualization,VirtualizationManager,C:\repos\anagram4wander_VirtualizingObservableCollection\AlphaChiTech.Virtualization\VirtualizationManager.cs,ProcessActions,The following switch statement is missing a default case: switch (action.ThreadModel)                      {                          case VirtualActionThreadModelEnum.UseUIThread:                              if (UIThreadExcecuteAction == null) // PLV                                throw new Exception( "VirtualizationManager isn’t already initialized !  set the VirtualizationManager’s UIThreadExcecuteAction (VirtualizationManager.Instance.UIThreadExcecuteAction = a => Dispatcher.Invoke( a );)" );                              UIThreadExcecuteAction.Invoke(() => action.DoAction());                              break;                          case VirtualActionThreadModelEnum.Background:                              Task.Run(() => action.DoAction());                              break;                      }
