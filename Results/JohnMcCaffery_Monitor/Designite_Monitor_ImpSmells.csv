Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Monitor,Hotkey,C:\repos\JohnMcCaffery_Monitor\Monitor\Hotkey.cs,ToString,Cyclomatic complexity of the method is 19
Complex Method,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,TakeScreenShot,Cyclomatic complexity of the method is 8
Long Parameter List,Monitor,Hotkey,C:\repos\JohnMcCaffery_Monitor\Monitor\Hotkey.cs,Hotkey,The method has 5 parameters.
Long Parameter List,Monitor,ProcessMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\ProcessMonitor.cs,SetWindowPos,The method has 7 parameters.
Long Statement,Monitor,Hotkey,C:\repos\JohnMcCaffery_Monitor\Monitor\Hotkey.cs,Register,The length of the statement  "	uint modifiers = (this.Alt ? Hotkey.MOD_ALT : 0) | (this.Control ? Hotkey.MOD_CONTROL : 0) | (this.Shift ? Hotkey.MOD_SHIFT : 0) | (this.Windows ? Hotkey.MOD_WIN : 0); " is 167.
Long Statement,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The length of the statement  "	string formDataHeaderTemplate = "\r\n--" + boundary + "\r\n" + "Content-Disposition: form-data; name=\"{0}\";\r\n\r\n{1}"; " is 122.
Long Statement,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The length of the statement  "		byte[] formItemBytes = System.Text.Encoding.UTF8.GetBytes (string.Format (formDataHeaderTemplate' key' formData [key])); " is 120.
Long Statement,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The length of the statement  "			string fileHeaderTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"" + "\r\nContent-Type: {2}\r\n\r\n"; " is 153.
Long Statement,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The length of the statement  "			byte[] fileHeaderBytes = System.Text.Encoding.UTF8.GetBytes (string.Format (fileHeaderTemplate' fileParameter.name' fileInfo.FullName' fileParameter.ContentType)); " is 163.
Magic Number,Monitor,ClientMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\ClientMonitor.cs,findClients,The following statement contains a magic number: while (!shutingdown) {  	if (notFound != 0) {  		Process[] processlist = Process.GetProcessesByName (client_name);  		foreach (Process theprocess in processlist) {  			Client client = clients.Find (delegate (Client cl) {  				return theprocess.MainWindowTitle.Contains (cl.Name);  			});  			if (client != null && !client.Running) {  				client.Process = theprocess;  			}  		}  	}  	Thread.Sleep (2000);  }  
Magic Number,Monitor,ClientMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\ClientMonitor.cs,findClients,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,Init,The following statement contains a magic number: using (StreamReader sr = new StreamReader (directory + "Regions\\Regions.ini")) {  	while (!sr.EndOfStream) {  		String line = sr.ReadLine ();  		if (line != null && line.StartsWith ("InternalPort = ")) {  			string[] l = line.Split (' ');  			ports.Add (Int32.Parse (l [2]));  		}  	}  }  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,Init,The following statement contains a magic number: while (!sr.EndOfStream) {  	String line = sr.ReadLine ();  	if (line != null && line.StartsWith ("InternalPort = ")) {  		string[] l = line.Split (' ');  		ports.Add (Int32.Parse (l [2]));  	}  }  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,Init,The following statement contains a magic number: if (line != null && line.StartsWith ("InternalPort = ")) {  	string[] l = line.Split (' ');  	ports.Add (Int32.Parse (l [2]));  }  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,Init,The following statement contains a magic number: ports.Add (Int32.Parse (l [2]));  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,MonitorStart,The following statement contains a magic number: do {  	found = 0;  	IPGlobalProperties ipProperties = IPGlobalProperties.GetIPGlobalProperties ();  	IPEndPoint[] endPoints = ipProperties.GetActiveUdpListeners ();  	foreach (IPEndPoint endpoint in endPoints) {  		if (ports.Contains (endpoint.Port))  			found++;  	}  	Console.WriteLine ("Open Ports " + found + " " + ports.Count);  	Thread.Sleep (1000);  }  while (found < ports.Count);  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,MonitorStart,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,MonitorStart,The following statement contains a magic number: Thread.Sleep (60000);  
Magic Number,Monitor,OpenSimMonitor,C:\repos\JohnMcCaffery_Monitor\Monitor\OpenSimMonitor.cs,Stop,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Monitor,Monitor,C:\repos\JohnMcCaffery_Monitor\Monitor\Program.cs,SelectInstelation,The following statement contains a magic number: Thread.Sleep (60000);  
Magic Number,Monitor,Monitor,C:\repos\JohnMcCaffery_Monitor\Monitor\Program.cs,run,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,HeartBeat,The following statement contains a magic number: while (!shutingdown) {  	EnqueuHeartBeat ();  	waitHandle.WaitOne (60000);  }  
Magic Number,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,HeartBeat,The following statement contains a magic number: waitHandle.WaitOne (60000);  
Magic Number,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The following statement contains a magic number: if (files != null) {  	foreach (FileParameter fileParameter in files) {  		FileInfo fileInfo = fileParameter.fileInfo;  		string fileHeaderTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"" + "\r\nContent-Type: {2}\r\n\r\n";  		byte[] fileHeaderBytes = System.Text.Encoding.UTF8.GetBytes (string.Format (fileHeaderTemplate' fileParameter.name' fileInfo.FullName' fileParameter.ContentType));  		postDataStream.Write (fileHeaderBytes' 0' fileHeaderBytes.Length);  		FileStream fileStream = fileInfo.OpenRead ();  		byte[] buffer = new byte[1024];  		int bytesRead = 0;  		while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  			postDataStream.Write (buffer' 0' bytesRead);  		}  		fileStream.Close ();  	}  }  
Magic Number,Monitor,Reporter,C:\repos\JohnMcCaffery_Monitor\Monitor\Reporter.cs,PreparePostData,The following statement contains a magic number: foreach (FileParameter fileParameter in files) {  	FileInfo fileInfo = fileParameter.fileInfo;  	string fileHeaderTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"" + "\r\nContent-Type: {2}\r\n\r\n";  	byte[] fileHeaderBytes = System.Text.Encoding.UTF8.GetBytes (string.Format (fileHeaderTemplate' fileParameter.name' fileInfo.FullName' fileParameter.ContentType));  	postDataStream.Write (fileHeaderBytes' 0' fileHeaderBytes.Length);  	FileStream fileStream = fileInfo.OpenRead ();  	byte[] buffer = new byte[1024];  	int bytesRead = 0;  	while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  		postDataStream.Write (buffer' 0' bytesRead);  	}  	fileStream.Close ();  }  
