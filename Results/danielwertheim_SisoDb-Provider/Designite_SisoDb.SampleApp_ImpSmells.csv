Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,Main,The length of the statement  "            Console.WriteLine("Hi. Goto the Sample-app and open Program.cs and App.config and ensure that you are satisfied with the connection string."); " is 142.
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaIndexesTable,The length of the statement  "                return session.Query<Customer>().OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").ToEnumerable().Count(); " is 267.
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,UpsertSp,The length of the statement  "                session.Advanced.UpsertNamedQuery<Customer>("CustomersViaSP"' qb => qb.OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544")); " is 283.
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersAsJsonViaIndexesTable,The length of the statement  "                return session.Query<Customer>().OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").ToEnumerableOfJson().Count(); " is 273.
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,FirstOrDefault,The length of the statement  "                return session.Query<Customer>().Where(c => c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").FirstOrDefault() == null ? 0 : 1; " is 199.
Long Statement,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,SingleOrDefault,The length of the statement  "                return session.Query<Customer>().Where(c => c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").SingleOrDefault() == null ? 0 : 1; " is 200.
Magic Number,SisoDb.SampleApp.Model,CustomerFactory,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Model\CustomerFactory.cs,CreateCustomers,The following statement contains a magic number: for (var c = 0; c < numOfCustomers; c++)              {                  var n = ItteratorCount + (c + 1);                  customers.Add(new Customer                  {                      //StructureId = n.ToString()'                      CustomerNo = n'                      Firstname = "Daniel"'                      Lastname = "Wertheim"'                      ShoppingIndex = ShoppingIndexes.Level1'                      CustomerSince = SysDateTime.Now'                      BillingAddress =                          {                              Street = "The billing street " + n'                              Zip = "12345"'                              City = "The billing City"'                              Country = "Sweden-billing"'                              AreaCode = 1000 + n                          }'                      DeliveryAddress =                          {                              Street = "The delivery street #" + n'                              Zip = "54321"'                              City = "The delivery City"'                              Country = "Sweden-delivery"'                              AreaCode = -1000 - n                          }                  });              }
Magic Number,SisoDb.SampleApp.Model,CustomerFactory,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Model\CustomerFactory.cs,CreateCustomers,The following statement contains a magic number: for (var c = 0; c < numOfCustomers; c++)              {                  var n = ItteratorCount + (c + 1);                  customers.Add(new Customer                  {                      //StructureId = n.ToString()'                      CustomerNo = n'                      Firstname = "Daniel"'                      Lastname = "Wertheim"'                      ShoppingIndex = ShoppingIndexes.Level1'                      CustomerSince = SysDateTime.Now'                      BillingAddress =                          {                              Street = "The billing street " + n'                              Zip = "12345"'                              City = "The billing City"'                              Country = "Sweden-billing"'                              AreaCode = 1000 + n                          }'                      DeliveryAddress =                          {                              Street = "The delivery street #" + n'                              Zip = "54321"'                              City = "The delivery City"'                              Country = "Sweden-delivery"'                              AreaCode = -1000 - n                          }                  });              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,ProfilingQueries,The following statement contains a magic number: for (var c = 0; c < 2; c++)              {                  var stopWatch = new Stopwatch();                    stopWatch.Start();                  var customersCount = queryAction();                  stopWatch.Stop();                    Console.WriteLine("customers.Count() = {0}"' customersCount);                  Console.WriteLine("TotalSeconds = {0}"' stopWatch.Elapsed.TotalSeconds);              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaIndexesTable,The following statement contains a magic number: var d = new DateTime(2012'1'1);
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaIndexesTable,The following statement contains a magic number: using (var session = database.BeginSession())              {                  return session.Query<Customer>().OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").ToEnumerable().Count();              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,UpsertSp,The following statement contains a magic number: var d = new DateTime(2012' 1' 1);
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,UpsertSp,The following statement contains a magic number: using (var session = database.BeginSession())              {                  session.Advanced.UpsertNamedQuery<Customer>("CustomersViaSP"' qb => qb.OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544"));              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaSpRaw,The following statement contains a magic number: var d = new DateTime(2012' 1' 1);
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaSpRaw,The following statement contains a magic number: using (var session = database.BeginSession())              {                  var q = new NamedQuery("CustomersViaSP");                  q.Add(new DacParameter("p0"' 10));                  q.Add(new DacParameter("p1"' true));                  q.Add(new DacParameter("p2"' d));                  q.Add(new DacParameter("p3"' customerNoFrom));                  q.Add(new DacParameter("p4"' customerNoTo));                  q.Add(new DacParameter("p5"' "The delivery street #544"));                    return session.Advanced.NamedQuery<Customer>(q).ToArray().Length;              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaSpExp,The following statement contains a magic number: var d = new DateTime(2012' 1' 1);
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersViaSpExp,The following statement contains a magic number: using (var session = database.BeginSession())              {                  return session.Advanced.NamedQuery<Customer>("CustomersViaSP"' c =>                      c.Score > 10                       && c.IsActive                      && c.CustomerSince > d                      && c.CustomerNo >= customerNoFrom                      && c.CustomerNo <= customerNoTo                      && c.DeliveryAddress.Street == "The delivery street #544").ToArray().Length;              }
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersAsJsonViaIndexesTable,The following statement contains a magic number: var d = new DateTime(2012' 1' 1);
Magic Number,SisoDb.SampleApp,Program,C:\repos\danielwertheim_SisoDb-Provider\Source\Samples\SisoDb.SampleApp\Program.cs,GetCustomersAsJsonViaIndexesTable,The following statement contains a magic number: using (var session = database.BeginSession())              {                  return session.Query<Customer>().OrderBy(c => c.Lastname).Where(c => c.Score > 10 && c.IsActive && c.CustomerSince > d && c.CustomerNo >= customerNoFrom && c.CustomerNo <= customerNoTo && c.DeliveryAddress.Street == "The delivery street #544").ToEnumerableOfJson().Count();              }
