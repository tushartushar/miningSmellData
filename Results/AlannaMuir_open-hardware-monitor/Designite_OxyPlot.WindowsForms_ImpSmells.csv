Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawLine,Cyclomatic complexity of the method is 10
Complex Method,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawPolygon,Cyclomatic complexity of the method is 12
Complex Method,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,Cyclomatic complexity of the method is 14
Complex Method,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,SetCursorType,Cyclomatic complexity of the method is 15
Complex Method,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,Cyclomatic complexity of the method is 35
Long Parameter List,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawLine,The method has 6 parameters.
Long Parameter List,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawPolygon,The method has 7 parameters.
Long Parameter List,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The method has 10 parameters.
Long Parameter List,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawImage,The method has 11 parameters.
Long Parameter List,OxyPlot.WindowsForms,PngExporter,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\PngExporter.cs,Export,The method has 5 parameters.
Long Statement,OxyPlot.WindowsForms,ConverterExtensions,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Helpers\ConverterExtensions.cs,ToRect,The length of the statement  "	return new Rectangle ((int)Math.Round (r.Left)' (int)Math.Round (r.Top)' (int)Math.Round (r.Width)' (int)Math.Round (r.Height)); " is 128.
Complex Conditional,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,GetManipulator,The conditional expression  "mmb || (control && lmb) || (control && alt && rmb)"  is complex.
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawLine,The following statement contains a magic number: if (stroke == null || thickness <= 0 || points.Count < 2) {  	return;  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawPolygon,The following statement contains a magic number: if (points.Count < 2) {  	return;  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: if (fontWeight >= 700) {  	fs = FontStyle.Bold;  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: using (var font = new Font (fontFamily' (float)fontSize * FontsizeFactor' fs)) {  	using (var sf = new StringFormat {  		Alignment = StringAlignment.Near  	}) {  		var size = this.g.MeasureString (text' font);  		if (maxSize != null) {  			if (size.Width > maxSize.Value.Width) {  				size.Width = (float)maxSize.Value.Width;  			}  			if (size.Height > maxSize.Value.Height) {  				size.Height = (float)maxSize.Value.Height;  			}  		}  		float dx = 0;  		if (halign == HorizontalAlignment.Center) {  			dx = -size.Width / 2;  		}  		if (halign == HorizontalAlignment.Right) {  			dx = -size.Width;  		}  		float dy = 0;  		sf.LineAlignment = StringAlignment.Near;  		if (valign == VerticalAlignment.Middle) {  			dy = -size.Height / 2;  		}  		if (valign == VerticalAlignment.Bottom) {  			dy = -size.Height;  		}  		this.g.TranslateTransform ((float)p.X' (float)p.Y);  		if (Math.Abs (rotate) > double.Epsilon) {  			this.g.RotateTransform ((float)rotate);  		}  		this.g.TranslateTransform (dx' dy);  		var layoutRectangle = new RectangleF (0' 0' size.Width' size.Height);  		this.g.DrawString (text' font' this.ToBrush (fill)' layoutRectangle' sf);  		this.g.ResetTransform ();  	}  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: using (var font = new Font (fontFamily' (float)fontSize * FontsizeFactor' fs)) {  	using (var sf = new StringFormat {  		Alignment = StringAlignment.Near  	}) {  		var size = this.g.MeasureString (text' font);  		if (maxSize != null) {  			if (size.Width > maxSize.Value.Width) {  				size.Width = (float)maxSize.Value.Width;  			}  			if (size.Height > maxSize.Value.Height) {  				size.Height = (float)maxSize.Value.Height;  			}  		}  		float dx = 0;  		if (halign == HorizontalAlignment.Center) {  			dx = -size.Width / 2;  		}  		if (halign == HorizontalAlignment.Right) {  			dx = -size.Width;  		}  		float dy = 0;  		sf.LineAlignment = StringAlignment.Near;  		if (valign == VerticalAlignment.Middle) {  			dy = -size.Height / 2;  		}  		if (valign == VerticalAlignment.Bottom) {  			dy = -size.Height;  		}  		this.g.TranslateTransform ((float)p.X' (float)p.Y);  		if (Math.Abs (rotate) > double.Epsilon) {  			this.g.RotateTransform ((float)rotate);  		}  		this.g.TranslateTransform (dx' dy);  		var layoutRectangle = new RectangleF (0' 0' size.Width' size.Height);  		this.g.DrawString (text' font' this.ToBrush (fill)' layoutRectangle' sf);  		this.g.ResetTransform ();  	}  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: using (var sf = new StringFormat {  	Alignment = StringAlignment.Near  }) {  	var size = this.g.MeasureString (text' font);  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width) {  			size.Width = (float)maxSize.Value.Width;  		}  		if (size.Height > maxSize.Value.Height) {  			size.Height = (float)maxSize.Value.Height;  		}  	}  	float dx = 0;  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	float dy = 0;  	sf.LineAlignment = StringAlignment.Near;  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  	this.g.TranslateTransform ((float)p.X' (float)p.Y);  	if (Math.Abs (rotate) > double.Epsilon) {  		this.g.RotateTransform ((float)rotate);  	}  	this.g.TranslateTransform (dx' dy);  	var layoutRectangle = new RectangleF (0' 0' size.Width' size.Height);  	this.g.DrawString (text' font' this.ToBrush (fill)' layoutRectangle' sf);  	this.g.ResetTransform ();  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: using (var sf = new StringFormat {  	Alignment = StringAlignment.Near  }) {  	var size = this.g.MeasureString (text' font);  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width) {  			size.Width = (float)maxSize.Value.Width;  		}  		if (size.Height > maxSize.Value.Height) {  			size.Height = (float)maxSize.Value.Height;  		}  	}  	float dx = 0;  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	float dy = 0;  	sf.LineAlignment = StringAlignment.Near;  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  	this.g.TranslateTransform ((float)p.X' (float)p.Y);  	if (Math.Abs (rotate) > double.Epsilon) {  		this.g.RotateTransform ((float)rotate);  	}  	this.g.TranslateTransform (dx' dy);  	var layoutRectangle = new RectangleF (0' 0' size.Width' size.Height);  	this.g.DrawString (text' font' this.ToBrush (fill)' layoutRectangle' sf);  	this.g.ResetTransform ();  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: if (halign == HorizontalAlignment.Center) {  	dx = -size.Width / 2;  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: dx = -size.Width / 2;  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: if (valign == VerticalAlignment.Middle) {  	dy = -size.Height / 2;  }  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawText,The following statement contains a magic number: dy = -size.Height / 2;  
Magic Number,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,MeasureText,The following statement contains a magic number: if (fontWeight >= 700) {  	fs = FontStyle.Bold;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,Plot,The following statement contains a magic number: this.KeyboardPanHorizontalStep = 0.1;  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,Plot,The following statement contains a magic number: this.KeyboardPanVerticalStep = 0.1;  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,ZoomAt,The following statement contains a magic number: if (double.IsNaN (x)) {  	double sx = (axis.Transform (axis.ActualMaximum) + axis.Transform (axis.ActualMinimum)) * 0.5;  	x = axis.InverseTransform (sx);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: try {  	lock (this.invalidateLock) {  		if (this.isModelInvalidated) {  			if (this.model != null) {  				this.model.Update (this.updateDataFlag);  				this.updateDataFlag = false;  			}  			this.isModelInvalidated = false;  		}  	}  	lock (this.renderingLock) {  		this.renderContext.SetGraphicsTarget (e.Graphics);  		if (this.model != null) {  			this.model.Render (this.renderContext' this.Width' this.Height);  		}  		if (this.zoomRectangle != Rectangle.Empty) {  			using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  				using (var zoomPen = new Pen (Color.Black)) {  					zoomPen.DashPattern = new float[] {  						3'  						1  					};  					e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  					e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  				}  		}  	}  }  catch (Exception paintException) {  	var trace = new StackTrace (paintException);  	Debug.WriteLine (paintException);  	Debug.WriteLine (trace);  	using (var font = new Font ("Arial"' 10)) {  		e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  	}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: try {  	lock (this.invalidateLock) {  		if (this.isModelInvalidated) {  			if (this.model != null) {  				this.model.Update (this.updateDataFlag);  				this.updateDataFlag = false;  			}  			this.isModelInvalidated = false;  		}  	}  	lock (this.renderingLock) {  		this.renderContext.SetGraphicsTarget (e.Graphics);  		if (this.model != null) {  			this.model.Render (this.renderContext' this.Width' this.Height);  		}  		if (this.zoomRectangle != Rectangle.Empty) {  			using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  				using (var zoomPen = new Pen (Color.Black)) {  					zoomPen.DashPattern = new float[] {  						3'  						1  					};  					e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  					e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  				}  		}  	}  }  catch (Exception paintException) {  	var trace = new StackTrace (paintException);  	Debug.WriteLine (paintException);  	Debug.WriteLine (trace);  	using (var font = new Font ("Arial"' 10)) {  		e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  	}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: try {  	lock (this.invalidateLock) {  		if (this.isModelInvalidated) {  			if (this.model != null) {  				this.model.Update (this.updateDataFlag);  				this.updateDataFlag = false;  			}  			this.isModelInvalidated = false;  		}  	}  	lock (this.renderingLock) {  		this.renderContext.SetGraphicsTarget (e.Graphics);  		if (this.model != null) {  			this.model.Render (this.renderContext' this.Width' this.Height);  		}  		if (this.zoomRectangle != Rectangle.Empty) {  			using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  				using (var zoomPen = new Pen (Color.Black)) {  					zoomPen.DashPattern = new float[] {  						3'  						1  					};  					e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  					e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  				}  		}  	}  }  catch (Exception paintException) {  	var trace = new StackTrace (paintException);  	Debug.WriteLine (paintException);  	Debug.WriteLine (trace);  	using (var font = new Font ("Arial"' 10)) {  		e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  	}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: try {  	lock (this.invalidateLock) {  		if (this.isModelInvalidated) {  			if (this.model != null) {  				this.model.Update (this.updateDataFlag);  				this.updateDataFlag = false;  			}  			this.isModelInvalidated = false;  		}  	}  	lock (this.renderingLock) {  		this.renderContext.SetGraphicsTarget (e.Graphics);  		if (this.model != null) {  			this.model.Render (this.renderContext' this.Width' this.Height);  		}  		if (this.zoomRectangle != Rectangle.Empty) {  			using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  				using (var zoomPen = new Pen (Color.Black)) {  					zoomPen.DashPattern = new float[] {  						3'  						1  					};  					e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  					e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  				}  		}  	}  }  catch (Exception paintException) {  	var trace = new StackTrace (paintException);  	Debug.WriteLine (paintException);  	Debug.WriteLine (trace);  	using (var font = new Font ("Arial"' 10)) {  		e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  	}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: lock (this.renderingLock) {  	this.renderContext.SetGraphicsTarget (e.Graphics);  	if (this.model != null) {  		this.model.Render (this.renderContext' this.Width' this.Height);  	}  	if (this.zoomRectangle != Rectangle.Empty) {  		using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  			using (var zoomPen = new Pen (Color.Black)) {  				zoomPen.DashPattern = new float[] {  					3'  					1  				};  				e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  				e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  			}  	}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: if (this.zoomRectangle != Rectangle.Empty) {  	using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  		using (var zoomPen = new Pen (Color.Black)) {  			zoomPen.DashPattern = new float[] {  				3'  				1  			};  			e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  			e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  		}  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: using (var zoomBrush = new SolidBrush (Color.FromArgb (0x40' 0xFF' 0xFF' 0x00)))  	using (var zoomPen = new Pen (Color.Black)) {  		zoomPen.DashPattern = new float[] {  			3'  			1  		};  		e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  		e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  	}  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: using (var zoomPen = new Pen (Color.Black)) {  	zoomPen.DashPattern = new float[] {  		3'  		1  	};  	e.Graphics.FillRectangle (zoomBrush' this.zoomRectangle);  	e.Graphics.DrawRectangle (zoomPen' this.zoomRectangle);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: zoomPen.DashPattern = new float[] {  	3'  	1  };  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: using (var font = new Font ("Arial"' 10)) {  	e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: using (var font = new Font ("Arial"' 10)) {  	e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: using (var font = new Font ("Arial"' 10)) {  	e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString ("OxyPlot paint exception: " + paintException.Message' font' Brushes.Red' 10' 10);  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if ((deltax * deltax) + (deltay * deltay) > 0) {  	deltax = deltax * this.ActualModel.PlotArea.Width * this.KeyboardPanHorizontalStep;  	deltay = deltay * this.ActualModel.PlotArea.Height * this.KeyboardPanVerticalStep;  	// small steps if the user is pressing control  	if (control) {  		deltax *= 0.2;  		deltay *= 0.2;  	}  	this.PanAll (deltax' deltay);  	// e.Handled = true;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if ((deltax * deltax) + (deltay * deltay) > 0) {  	deltax = deltax * this.ActualModel.PlotArea.Width * this.KeyboardPanHorizontalStep;  	deltay = deltay * this.ActualModel.PlotArea.Height * this.KeyboardPanVerticalStep;  	// small steps if the user is pressing control  	if (control) {  		deltax *= 0.2;  		deltay *= 0.2;  	}  	this.PanAll (deltax' deltay);  	// e.Handled = true;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (control) {  	deltax *= 0.2;  	deltay *= 0.2;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (control) {  	deltax *= 0.2;  	deltay *= 0.2;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: deltax *= 0.2;  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: deltay *= 0.2;  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (Math.Abs (zoom) > 1e-8) {  	if (control) {  		zoom *= 0.2;  	}  	this.ZoomAllAxes (1 + (zoom * 0.12));  	// e.Handled = true;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (Math.Abs (zoom) > 1e-8) {  	if (control) {  		zoom *= 0.2;  	}  	this.ZoomAllAxes (1 + (zoom * 0.12));  	// e.Handled = true;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (Math.Abs (zoom) > 1e-8) {  	if (control) {  		zoom *= 0.2;  	}  	this.ZoomAllAxes (1 + (zoom * 0.12));  	// e.Handled = true;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: if (control) {  	zoom *= 0.2;  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: zoom *= 0.2;  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following statement contains a magic number: this.ZoomAllAxes (1 + (zoom * 0.12));  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,GetManipulator,The following statement contains a magic number: if (lmb || (rmb && alt)) {  	if (e.Clicks == 2) {  		return new ResetManipulator (this);  	}  	return new PanManipulator (this);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,GetManipulator,The following statement contains a magic number: if (e.Clicks == 2) {  	return new ResetManipulator (this);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,GetManipulator,The following statement contains a magic number: if (xb1 || xb2) {  	double d = xb1 ? 0.05 : -0.05;  	return new ZoomStepManipulator (this' d' control);  }  
Magic Number,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,GetManipulator,The following statement contains a magic number: if (xb1 || xb2) {  	double d = xb1 ? 0.05 : -0.05;  	return new ZoomStepManipulator (this' d' control);  }  
Missing Default,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawLine,The following switch statement is missing a default case: switch (lineJoin) {  case OxyPenLineJoin.Round:  	pen.LineJoin = LineJoin.Round;  	break;  case OxyPenLineJoin.Bevel:  	pen.LineJoin = LineJoin.Bevel;  	break;  // The default LineJoin is Miter  }  
Missing Default,OxyPlot.WindowsForms,GraphicsRenderContext,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\GraphicsRenderContext.cs,DrawPolygon,The following switch statement is missing a default case: switch (lineJoin) {  case OxyPenLineJoin.Round:  	pen.LineJoin = LineJoin.Round;  	break;  case OxyPenLineJoin.Bevel:  	pen.LineJoin = LineJoin.Bevel;  	break;  // The default LineJoin is Miter  }  
Missing Default,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Up:  	deltay = -1;  	break;  case Keys.Down:  	deltay = 1;  	break;  case Keys.Left:  	deltax = -1;  	break;  case Keys.Right:  	deltax = 1;  	break;  case Keys.Add:  case Keys.Oemplus:  case Keys.PageUp:  	zoom = 1;  	break;  case Keys.Subtract:  case Keys.OemMinus:  case Keys.PageDown:  	zoom = -1;  	break;  }  
Missing Default,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,OnPreviewKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.R:  	this.SetClipboardText (this.ActualModel.CreateTextReport ());  	break;  case Keys.C:  	this.SetClipboardText (this.ActualModel.ToCode ());  	break;  case Keys.X:  	// this.SetClipboardText(this.ActualModel.ToXml());  	break;  }  
Missing Default,OxyPlot.WindowsForms,Plot,C:\repos\AlannaMuir_open-hardware-monitor\External\OxyPlot\OxyPlot.WindowsForms\Plot.cs,ConvertChangedButton,The following switch statement is missing a default case: switch (e.Button) {  case MouseButtons.Left:  	return OxyMouseButton.Left;  case MouseButtons.Middle:  	return OxyMouseButton.Middle;  case MouseButtons.Right:  	return OxyMouseButton.Right;  case MouseButtons.XButton1:  	return OxyMouseButton.XButton1;  case MouseButtons.XButton2:  	return OxyMouseButton.XButton2;  }  
