Implementation smell,Namespace,Class,File,Method,Description
Long Method,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The method has 114 lines of code.
Long Method,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The method has 124 lines of code.
Long Method,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The method has 119 lines of code.
Long Method,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The method has 252 lines of code.
Long Method,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The method has 119 lines of code.
Long Method,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,EquipItem,The method has 103 lines of code.
Long Method,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,The method has 116 lines of code.
Long Method,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The method has 114 lines of code.
Complex Method,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,Cyclomatic complexity of the method is 13
Complex Method,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,Cyclomatic complexity of the method is 16
Complex Method,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,Update,Cyclomatic complexity of the method is 21
Complex Method,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showRequirements,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showRequirementsLabel,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.HUD.Chat,ChatModeCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Chat\ChatModeCalculator.cs,CalculateMode,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,Cyclomatic complexity of the method is 37
Complex Method,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,Cyclomatic complexity of the method is 18
Complex Method,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,EquipItem,Cyclomatic complexity of the method is 34
Complex Method,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,UpdateInventoryItem,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,CastSpell,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,doStateChange,Cyclomatic complexity of the method is 15
Complex Method,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_useItem,Cyclomatic complexity of the method is 15
Complex Method,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,DrawMapToRenderTarget,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_updateDisplayDataSprites,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerWalk,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerAttack,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,Cyclomatic complexity of the method is 16
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,Cyclomatic complexity of the method is 15
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,maskTheHair,Cyclomatic complexity of the method is 16
Complex Method,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Dispose,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_getActionFromMenuAction,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,Cyclomatic complexity of the method is 13
Complex Method,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Dispose,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,HandleLeftClick,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,Cyclomatic complexity of the method is 15
Complex Method,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,GetRenderPropertiesForState,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,FindComponentByControlIdentifier,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,DoHudStateChangeClick,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStatePanel,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.HUD,HudStateActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\HudStateActions.cs,IsPanelForRequestedState,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,arrowClicked,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,arrowClicked,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,AddText,Cyclomatic complexity of the method is 13
Complex Method,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatTypeFromPaperdollIcon,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Filter,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,ItemsFit,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getNextOpenSlot,Cyclomatic complexity of the method is 10
Complex Method,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,Cyclomatic complexity of the method is 19
Complex Method,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,DoClickAndDragLogic,Cyclomatic complexity of the method is 8
Complex Method,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,Cyclomatic complexity of the method is 12
Complex Method,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,Cyclomatic complexity of the method is 11
Complex Method,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,Cyclomatic complexity of the method is 9
Complex Method,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,Cyclomatic complexity of the method is 9
Long Parameter List,EndlessClient.Controllers,ArrowKeyController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\ArrowKeyController.cs,ArrowKeyController,The method has 5 parameters. Parameters: walkValidationActions' characterAnimationActions' characterActions' characterProvider' walkErrorHandler
Long Parameter List,EndlessClient.Controllers,ChatController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\ChatController.cs,ChatController,The method has 8 parameters. Parameters: chatTextBoxActions' chatActions' privateMessageActions' gameStateActions' errorDisplayAction' chatBubbleActions' safeNetworkOperationFactory' hudControlProvider
Long Parameter List,EndlessClient.Controllers,ControlKeyController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\ControlKeyController.cs,ControlKeyController,The method has 5 parameters. Parameters: characterProvider' attackValidationActions' characterActions' characterAnimationActions' statusLabelSetter
Long Parameter List,EndlessClient.Controllers,CharacterManagementController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\CharacterManagementController.cs,CharacterManagementController,The method has 7 parameters. Parameters: characterManagementActions' errorDialogDisplayAction' characterDialogActions' backgroundReceiveActions' networkConnectionActions' gameStateActions' characterSelectorRepository
Long Parameter List,EndlessClient.Controllers,AccountController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\AccountController.cs,AccountController,The method has 5 parameters. Parameters: accountDialogDisplayActions' errorDisplayAction' accountActions' gameStateActions' networkOperationFactory
Long Parameter List,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginController,The method has 12 parameters. Parameters: loginActions' mapFileLoadActions' fileRequestActions' gameStateActions' chatTextBoxActions' errorDisplayAction' firstTimePlayerActions' mapChangedActions' networkOperationFactory' gameLoadingDialogFactory' currentMapStateProvider' statusLabelSetter
Long Parameter List,EndlessClient.Controllers,MainButtonController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\MainButtonController.cs,MainButtonController,The method has 9 parameters. Parameters: networkConnectionActions' errorDialogDisplayAction' packetProcessActions' backgroundReceiveActions' gameStateActions' accountDialogDisplayActions' resetStateAction' connectionStateProvider' networkOperationFactory
Long Parameter List,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,AccountDialogDisplayActions,The method has 5 parameters. Parameters: localizedStringFinder' createAccountWarningDialogFactory' createAccountProgressDialogFactory' eoMessageBoxFactory' changePasswordDialogFactory
Long Parameter List,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The method has 7 parameters. Parameters: nativeGraphicsManager' gameStateProvider' contentManagerProvider' eoMessageBoxFactory' keyboardDispatcherProvider' playerInfoProvider' dialogButtonService
Long Parameter List,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The method has 7 parameters. Parameters: nativeGraphicsManager' gameStateProvider' rendererFactory' contentManager' dispatcher' messageBoxFactory' eoDialogButtonService
Long Parameter List,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The method has 7 parameters. Parameters: graphicsManager' gameStateProvider' eoDialogButtonService' message' caption' style' whichButtons
Long Parameter List,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,Show,The method has 5 parameters. Parameters: message' caption' buttons' style' closingEvent
Long Parameter List,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,Show,The method has 5 parameters. Parameters: prependData' resource' whichButtons' style' closingEvent
Long Parameter List,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,Show,The method has 5 parameters. Parameters: resource' extraData' whichButtons' style' closingEvent
Long Parameter List,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,PaperdollDialogItem,The method has 5 parameters. Parameters: api' location' parent' info' locationEnum
Long Parameter List,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The method has 5 parameters. Parameters: nativeGraphicsManager' gameStateProvider' eoDialogButtonService' messageText' captionText
Long Parameter List,EndlessClient.HUD.Chat,ChatBubbleActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Chat\ChatBubbleActions.cs,ChatBubbleActions,The method has 5 parameters. Parameters: chatBubbleRepository' chatProcessor' chatTypeCalculator' characterRendererProvider' chatBubbleTextureProvider
Long Parameter List,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The method has 5 parameters. Parameters: api' slot' itemData' itemInventoryInfo' inventory
Long Parameter List,EndlessClient.Initialization,EndlessClientInitializer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Initialization\EndlessClientInitializer.cs,EndlessClientInitializer,The method has 13 parameters. Parameters: game' endlessGameRepository' contentManagerRepository' keyboardDispatcherRepository' packetHandlerGameComponent' mainButtonController' accountController' loginController' characterManagementController' chatController' controlSetFactory' characterInfoPanelFactory' hudControlsFactory
Long Parameter List,EndlessClient.Input,ArrowKeyHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\ArrowKeyHandler.cs,ArrowKeyHandler,The method has 5 parameters. Parameters: endlessGameProvider' keyStateProvider' userInputTimeRepository' arrowKeyController' currentMapStateProvider
Long Parameter List,EndlessClient.Input,ControlKeyHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\ControlKeyHandler.cs,ControlKeyHandler,The method has 5 parameters. Parameters: endlessGameProvider' keyStateProvider' userInputTimeRepository' controlKeyController' currentMapStateProvider
Long Parameter List,EndlessClient.Input,UserInputHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\UserInputHandler.cs,UserInputHandler,The method has 6 parameters. Parameters: endlessGameProvider' keyStateProvider' userInputTimeRepository' arrowKeyController' controlKeyController' currentMapStateProvider
Long Parameter List,EndlessClient.Input,UserInputHandlerFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\UserInputHandlerFactory.cs,UserInputHandlerFactory,The method has 6 parameters. Parameters: endlessGameProvider' keyStateProvider' userInputTimeRepository' arrowKeyController' controlKeyController' currentMapStateProvider
Long Parameter List,EndlessClient.Input,WalkErrorHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\WalkErrorHandler.cs,WalkErrorHandler,The method has 7 parameters. Parameters: mapCellStateProvider' characterProvider' statusLabelSetter' currentMapStateRepository' unlockDoorValidator' eoMessageBoxFactory' packetSendService
Long Parameter List,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,EquipItem,The method has 5 parameters. Parameters: type' id' graphic' rewrite' subloc
Long Parameter List,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,UpdateInventoryItem,The method has 5 parameters. Parameters: id' characterAmount' characterWeight' characterMaxWeight' addToExistingAmount
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_chestAddItem,The method has 5 parameters. Parameters: id' amount' weight' maxWeight' data
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_chestGetItem,The method has 5 parameters. Parameters: id' amount' weight' maxWeight' data
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_recoverReply,The method has 5 parameters. Parameters: exp' karma' level' statpoints' skillpoints
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_junkItem,The method has 5 parameters. Parameters: id' amountRemoved' amountRemaining' weight' maxWeight
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_npcTakeDamage,The method has 7 parameters. Parameters: npcIndex' fromPlayerID' fromDirection' damageToNPC' npcPctHealth' spellID' fromTP
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_shopTrade,The method has 6 parameters. Parameters: gold' itemID' amount' weight' maxWeight' isBuy
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_lockerItemChange,The method has 6 parameters. Parameters: id' amount' weight' maxWeight' existingAmount' items
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_mainPlayerCastSpellSelf,The method has 6 parameters. Parameters: fromplayerid' spellid' spellhp' percenthealth' hp' tp
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_playerCastTargetSpell,The method has 7 parameters. Parameters: targetPlayerID' fromPlayerID' sourcePlayerDirection' spellID' recoveredHP' targetPercentHealth' targetPlayerCurrentHP
Long Parameter List,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_playerCastGroupSpell,The method has 5 parameters. Parameters: spellID' fromPlayerID' fromPlayerTP' spellHPgain' spellTargets
Long Parameter List,EndlessClient.Rendering.Factories,MouseCursorRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Factories\MouseCursorRendererFactory.cs,MouseCursorRendererFactory,The method has 9 parameters. Parameters: nativeGraphicsManager' characterProvider' renderOffsetCalculator' mapCellStateProvider' itemStringService' eifFileProvider' currentMapProvider' graphicsDeviceProvider' mapInteractionController
Long Parameter List,EndlessClient.Rendering.Factories,CharacterRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Factories\CharacterRendererFactory.cs,CharacterRendererFactory,The method has 7 parameters. Parameters: gameProvider' renderTargetFactory' characterProvider' renderOffsetCalculator' characterPropertyRendererBuilder' characterTextures' characterSpriteCalculator
Long Parameter List,EndlessClient.Rendering.Factories,MapRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Factories\MapRendererFactory.cs,MapRendererFactory,The method has 12 parameters. Parameters: endlessGameProvider' renderTargetFactory' mapEntityRendererProvider' characterProvider' currentMapProvider' mapRenderDistanceCalculator' characterRendererUpdater' npcRendererUpdater' doorStateUpdater' chatBubbleUpdater' configurationProvider' mouseCursorRendererFactory
Long Parameter List,EndlessClient.Rendering.Map,MapChangedActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapChangedActions.cs,MapChangedActions,The method has 8 parameters. Parameters: characterStateCache' npcStateCache' characterRendererRepository' npcRendererRepository' hudControlProvider' chatRepository' localizedStringFinder' currentMapProvider
Long Parameter List,EndlessClient.Rendering.Map,MapEntityRendererProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapEntityRendererProvider.cs,MapEntityRendererProvider,The method has 11 parameters. Parameters: nativeGraphicsManager' currentMapProvider' characterProvider' currentMapStateProvider' mapItemGraphicProvider' renderOffsetCalculator' configurationProvider' characterRendererProvider' npcRendererProvider' chatBubbleProvider' characterStateCache
Long Parameter List,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,MapRenderer,The method has 12 parameters. Parameters: endlessGame' renderTargetFactory' mapEntityRendererProvider' characterProvider' currentMapProvider' mapRenderDistanceCalculator' characterRendererUpdater' npcRendererUpdater' doorStateUpdater' chatBubbleUpdater' configurationProvider' mouseCursorRenderer
Long Parameter List,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,MouseCursorRenderer,The method has 9 parameters. Parameters: nativeGraphicsManager' characterProvider' renderOffsetCalculator' mapCellStateProvider' itemStringService' eifFileProvider' currentMapProvider' graphicsDeviceProvider' mapInteractionController
Long Parameter List,EndlessClient.Rendering,RendererRepositoryResetter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\RendererRepositoryResetter.cs,RendererRepositoryResetter,The method has 5 parameters. Parameters: characterRendererRepository' npcRendererRepository' chatBubbleRepository' characterStateCache' npcStateCache
Long Parameter List,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,PlayerCastSpellTarget,The method has 6 parameters. Parameters: fromPlayerID' targetPlayerID' fromPlayerDirection' spellID' recoveredHP' targetPercentHealth
Long Parameter List,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,RemoveOtherNPC,The method has 5 parameters. Parameters: index' damage' playerID' playerDirection' spellID
Long Parameter List,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,NPCTakeDamage,The method has 6 parameters. Parameters: npcIndex' fromPlayerID' fromDirection' damageToNPC' npcPctHealth' spellID
Long Parameter List,EndlessClient.Rendering.NPC,NPCActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCActions.cs,NPCActions,The method has 5 parameters. Parameters: hudControlProvider' npcStateCache' npcRendererRepository' chatBubbleRepository' chatBubbleTextureProvider
Long Parameter List,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,NPCRenderer,The method has 6 parameters. Parameters: endlessGameProvider' characterRendererProvider' enfFileProvider' npcSpriteSheet' renderOffsetCalculator' initialNPC
Long Parameter List,EndlessClient.Rendering.NPC,NPCRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRendererFactory.cs,NPCRendererFactory,The method has 5 parameters. Parameters: endlessGameProvider' characterRendererProvider' enfFileProvider' npcSpriteSheet' renderOffsetCalculator
Long Parameter List,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,LoggedInControlSet,The method has 5 parameters. Parameters: dispatcher' mainButtonController' characterInfoPanelFactory' characterManagementController' accountController
Long Parameter List,EndlessClient.ControlSets,ControlSetFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\ControlSetFactory.cs,ControlSetFactory,The method has 7 parameters. Parameters: nativeGraphicsManager' messageBoxFactory' hudControlsFactory' contentManagerProvider' keyboardDispatcherProvider' configProvider' characterInfoPanelFactory
Long Parameter List,EndlessClient.Dialogs.Factories,ChangePasswordDialogFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Factories\ChangePasswordDialogFactory.cs,ChangePasswordDialogFactory,The method has 7 parameters. Parameters: nativeGraphicsManager' gameStateProvider' contentManagerProvider' eoMessageBoxFactory' keyboardDispatcherProvider' playerInfoProvider' eoDialogButtonService
Long Parameter List,EndlessClient.Dialogs.Factories,CreateCharacterDialogFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Factories\CreateCharacterDialogFactory.cs,CreateCharacterDialogFactory,The method has 7 parameters. Parameters: nativeGraphicsManager' gameStateProvider' characterRendererFactory' contentManagerProvider' keyboardDispatcherProvider' eoMessageBoxFactory' dialogButtonService
Long Parameter List,EndlessClient.GameExecution,EndlessGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\EndlessGame.cs,EndlessGame,The method has 8 parameters. Parameters: windowSizeProvider' graphicsDeviceRepository' controlSetRepository' controlSetFactory' testModeLauncher' pubFileLoadActions' loggerProvider' chatBubbleTextureProvider
Long Parameter List,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,HudControlsFactory,The method has 17 parameters. Parameters: hudButtonController' hudPanelFactory' mapRendererFactory' userInputHandlerFactory' nativeGraphicsManager' graphicsDeviceProvider' clientWindowSizeProvider' endlessGameProvider' characterRepository' currentMapStateRepository' keyStateRepository' statusLabelSetter' statusLabelTextProvider' contentManagerProvider' hudControlProvider' chatModeCalculator' experienceTableProvider
Long Parameter List,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,AddChat,The method has 5 parameters. Parameters: whichTab' who' message' chatIcon' chatColor
Long Parameter List,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The method has 5 parameters. Parameters: nativeGraphicsManager' chatRenderableGenerator' chatProvider' hudControlProvider' chatFont
Long Parameter List,EndlessClient.HUD.Panels,HudPanelFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\HudPanelFactory.cs,HudPanelFactory,The method has 10 parameters. Parameters: nativeGraphicsManager' contentManagerProvider' hudControlProvider' newsProvider' chatProvider' characterProvider' characterInventoryProvider' experienceTableProvider' messageBoxFactory' trainingController
Long Parameter List,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The method has 6 parameters. Parameters: nativeGraphicsManager' characterProvider' characterInventoryProvider' experienceTableProvider' messageBoxFactory' trainingController
Long Parameter List,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,CharacterRenderer,The method has 8 parameters. Parameters: game' renderTargetFactory' characterProvider' renderOffsetCalculator' characterPropertyRendererBuilder' characterTextures' characterSpriteCalculator' renderProperties
Long Parameter List,EndlessClient.Rendering.Character,CharacterRendererUpdater,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRendererUpdater.cs,CharacterRendererUpdater,The method has 5 parameters. Parameters: characterProvider' currentMapStateRepository' characterRendererFactory' characterRendererRepository' characterStateCache
Long Parameter List,EndlessClient.Rendering.MapEntityRenderers,OtherCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OtherCharacterEntityRenderer.cs,OtherCharacterEntityRenderer,The method has 5 parameters. Parameters: characterProvider' characterRendererProvider' chatBubbleProvider' characterStateCache' renderOffsetCalculator
Long Parameter List,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,ShadowLayerRenderer,The method has 5 parameters. Parameters: nativeGraphicsManager' currentMapProvider' characterProvider' renderOffsetCalculator' configurationProvider
Long Parameter List,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,WallLayerRenderer,The method has 5 parameters. Parameters: nativeGraphicsManager' currentMapProvider' characterProvider' renderOffsetCalculator' currentMapStateProvider
Long Parameter List,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The method has 6 parameters. Parameters: spriteBatch' row' col' alpha' gfxNum' renderLayer
Long Parameter List,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The method has 8 parameters. Parameters: characterIndex' character' gfxManager' dialogButtonService' loginController' characterManagementController' rendererFactory' rendererRepositoryResetter
Long Parameter List,EndlessClient.UIControls,CharacterInfoPanelFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanelFactory.cs,CharacterInfoPanelFactory,The method has 5 parameters. Parameters: characterProvider' nativeGraphicsManager' characterRendererFactory' rendererRepositoryResetter' eoDialogButtonService
Long Parameter List,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The method has 5 parameters. Parameters: parent' locationRelaiveToParent' size' palette' nativeGraphicsManager
Long Parameter List,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,AddTextToTab,The method has 5 parameters. Parameters: tab' who' text' icon' col
Long Parameter List,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_fitsInSlot,The method has 5 parameters. Parameters: slots' slot' sz' points' itemPoints
Long Parameter List,EndlessClient.HUD.Panels.Old,ClientOnlineEntry,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,ClientOnlineEntry,The method has 5 parameters. Parameters: name' title' guild' class' icon
Long Parameter List,EndlessClient.Rendering.Effects,BottomAlignedEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\BottomAlignedEffectSpriteInfo.cs,BottomAlignedEffectSpriteInfo,The method has 5 parameters. Parameters: numberOfFrames' repeats' onTopOfCharacter' alpha' graphic
Long Parameter List,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,EffectSpriteInfo,The method has 5 parameters. Parameters: numberOfFrames' repeats' onTopOfCharacter' alpha' graphic
Long Parameter List,EndlessClient.Rendering.Effects,EnergyBallEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EnergyBallEffectSpriteInfo.cs,EnergyBallEffectSpriteInfo,The method has 5 parameters. Parameters: numberOfFrames' repeats' onTopOfCharacter' alpha' graphic
Long Parameter List,EndlessClient.Rendering.Effects,FallingEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\FallingEffectSpriteInfo.cs,FallingEffectSpriteInfo,The method has 5 parameters. Parameters: numberOfFrames' repeats' onTopOfCharacter' alpha' graphic
Long Parameter List,EndlessClient.Rendering.Effects,FlickeringEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\FlickeringEffectSpriteInfo.cs,FlickeringEffectSpriteInfo,The method has 7 parameters. Parameters: minTimeBetweenFlickerMS' maxTimeBetweenFlickerMS' numberOfFrames' numberOfRepeats' onTopOfCharacter' alpha' texture
Long Identifier,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The length of the parameter requestCharacterLoginOperation is 30.
Long Identifier,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The length of the parameter completeCharacterLoginOperation is 31.
Long Identifier,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,AccountDialogDisplayActions,The length of the parameter createAccountWarningDialogFactory is 33.
Long Identifier,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,AccountDialogDisplayActions,The length of the parameter createAccountProgressDialogFactory is 34.
Long Identifier,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,,The length of the parameter _createAccountWarningDialogFactory is 34.
Long Identifier,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,,The length of the parameter _createAccountProgressDialogFactory is 35.
Long Identifier,EndlessClient.Initialization,EndlessClientInitializer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Initialization\EndlessClientInitializer.cs,,The length of the parameter _characterManagementController is 30.
Long Identifier,EndlessClient.Rendering.Factories,CharacterRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Factories\CharacterRendererFactory.cs,CharacterRendererFactory,The length of the parameter characterPropertyRendererBuilder is 32.
Long Identifier,EndlessClient.Rendering.Factories,CharacterRendererFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Factories\CharacterRendererFactory.cs,,The length of the parameter _characterPropertyRendererBuilder is 33.
Long Identifier,EndlessClient.Rendering,OldMouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMouseCursorRenderer.cs,HandleChestClick,The length of the parameter characterInSameRowOrColAsChest is 30.
Long Identifier,EndlessClient.Rendering,OldMouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMouseCursorRenderer.cs,HandleBankVaultClick,The length of the parameter characterWithinOneUnitOfLocker is 30.
Long Identifier,EndlessClient.Rendering,OldMouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMouseCursorRenderer.cs,HandleBankVaultClick,The length of the parameter characterInSameRowOrColAsLocker is 31.
Long Identifier,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,,The length of the parameter _characterManagementController is 30.
Long Identifier,EndlessClient.ControlSets,ControlSetFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\ControlSetFactory.cs,,The length of the parameter _characterManagementController is 30.
Long Identifier,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,CharacterRenderer,The length of the parameter characterPropertyRendererBuilder is 32.
Long Identifier,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,,The length of the parameter _characterPropertyRendererBuilder is 33.
Long Identifier,EndlessClient.Rendering.Character,CharacterAnimator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterAnimator.cs,,The length of the parameter _otherPlayerStartAttackingTimes is 31.
Long Identifier,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,,The length of the parameter _characterManagementController is 30.
Long Identifier,EndlessClient.UIControls,CharacterInfoPanelFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanelFactory.cs,,The length of the parameter _characterManagementController is 30.
Long Statement,EndlessClient.Audio,SoundManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\SoundManager.cs,PlayBackgroundMusic,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(mfxID)' "The MFX id is out of range. Use the 1-based index that matches the number in the file name."); " is 148.
Long Statement,EndlessClient.Controllers,MapInteractionController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\MapInteractionController.cs,LeftClick,The length of the statement  "                    _statusLabelSetter.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' EOResourceID.STATUS_LABEL_ITEM_PICKUP_NO_SPACE_LEFT); " is 131.
Long Statement,EndlessClient.Dialogs.Actions,AccountDialogDisplayActions,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Actions\AccountDialogDisplayActions.cs,ShowInitialCreateWarningDialog,The length of the statement  "                $"{_localizedStringFinder.GetString(EOResourceID.ACCOUNT_CREATE_WARNING_DIALOG_1)}\n\n{_localizedStringFinder.GetString(EOResourceID.ACCOUNT_CREATE_WARNING_DIALOG_2)}\n\n{_localizedStringFinder.GetString(EOResourceID.ACCOUNT_CREATE_WARNING_DIALOG_3)}"; " is 252.
Long Statement,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_deposit,The length of the statement  "                EOMessageBox.Show(DialogResourceID.BANK_ACCOUNT_UNABLE_TO_DEPOSIT' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 129.
Long Statement,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_withdraw,The length of the statement  "                EOMessageBox.Show(DialogResourceID.BANK_ACCOUNT_UNABLE_TO_WITHDRAW' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 130.
Long Statement,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_upgrade,The length of the statement  "                EOMessageBox.Show(DialogResourceID.LOCKER_UPGRADE_IMPOSSIBLE' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 124.
Long Statement,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_upgrade,The length of the statement  "                EOMessageBox.Show(DialogResourceID.WARNING_YOU_HAVE_NOT_ENOUGH' "gold"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 134.
Long Statement,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,InitializeItems,The length of the statement  "                        $"x {item.Amount}  {(rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : "")}"; " is 170.
Long Statement,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,InitializeItems,The length of the statement  "                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' EOResourceID.STATUS_LABEL_ITEM_PICKUP_NO_SPACE_LEFT); " is 131.
Long Statement,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getDlgIcon,The length of the statement  "            Rectangle src = new Rectangle(((int)whichOne % NUM_PER_ROW) * ICON_SIZE' 291 + ((int)whichOne / NUM_PER_ROW) * ICON_SIZE' ICON_SIZE' ICON_SIZE); " is 144.
Long Statement,EndlessClient.Dialogs,FriendIgnoreListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\FriendIgnoreListDialog.cs,Show,The length of the statement  "            List<ListDialogItem> characters = allLines.Select(character => new ListDialogItem(dlg' ListDialogItem.ListItemStyle.Small) { Text = character }).ToList(); " is 154.
Long Statement,EndlessClient.Dialogs,FriendIgnoreListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\FriendIgnoreListDialog.cs,Show,The length of the statement  "                    string prompt = OldWorld.GetString(isIgnoreList ? EOResourceID.DIALOG_WHO_TO_MAKE_IGNORE : EOResourceID.DIALOG_WHO_TO_MAKE_FRIEND); " is 131.
Long Statement,EndlessClient.Dialogs,FriendIgnoreListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\FriendIgnoreListDialog.cs,Show,The length of the statement  "                            EOMessageBox.Show("You are already friends with that person!"' "Invalid entry!"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 143.
Long Statement,EndlessClient.Dialogs,FriendIgnoreListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\FriendIgnoreListDialog.cs,Show,The length of the statement  "            EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' isIgnoreList ? EOResourceID.STATUS_LABEL_IGNORE_LIST : EOResourceID.STATUS_LABEL_FRIEND_LIST' " is 167.
Long Statement,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The length of the statement  "                    //Rectangle backgroundRect = new Rectangle(DrawAreaWithOffset.X + OffsetX' DrawAreaWithOffset.Y + OffsetY' DrawAreaWithOffset.Width' DrawAreaWithOffset.Height); " is 160.
Long Statement,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The length of the statement  "                    Vector2 offset = new Vector2(xOff + OffsetX + 14/*not sure of the significance of this offset*/' yOff + OffsetY + 36 * Index); " is 126.
Long Statement,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The length of the statement  "                        SpriteBatch.Draw(m_gfxPadThing' new Vector2(offset.X + ((64 - m_gfxPadThing.Width) / 2f)' offset.Y + (36 - m_gfxPadThing.Height) / 2f)' Color.White); " is 149.
Long Statement,EndlessClient.Dialogs,LockerDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\LockerDialog.cs,SetLockerData,The length of the statement  "                        $"x{item.Amount}  {(rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : "")}"' " is 169.
Long Statement,EndlessClient.Dialogs,LockerDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\LockerDialog.cs,_removeItem,The length of the statement  "            if (OldWorld.Instance.MainPlayer.ActiveCharacter.Weight + item.Weight * amount > OldWorld.Instance.MainPlayer.ActiveCharacter.MaxWeight) " is 136.
Long Statement,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,Update,The length of the statement  "                        ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_ITEM_UNEQUIP_NO_SPACE_LEFT); " is 128.
Long Statement,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The length of the statement  "            DrawLocation = new Vector2(location.X + (m_area.Width / 2 - DrawArea.Width / 2)' location.Y + (m_area.Height / 2 - DrawArea.Height / 2)); " is 137.
Long Statement,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The length of the statement  "            var pbForgroundArea = new Rectangle(18 + DrawAreaWithParentOffset.X' 98 + DrawAreaWithParentOffset.Y' _pbWidth - 6' _pbForegroundTexture.Height - 4); " is 149.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,Show,The length of the statement  "            //note: dialog is created in packet callback! sometimes talking to the quest NPC does nothing (if you already completed)! " is 121.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton cancel = new XNAButton(smallButtonSheet' firstLoc' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel)); " is 142.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton next = new XNAButton(smallButtonSheet' secondLoc' _getSmallButtonOut(SmallButton.Next)' _getSmallButtonOver(SmallButton.Next)); " is 137.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton back = new XNAButton(smallButtonSheet' firstLoc' _getSmallButtonOut(SmallButton.Back)' _getSmallButtonOver(SmallButton.Back)); " is 136.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton next = new XNAButton(smallButtonSheet' secondLoc' _getSmallButtonOut(SmallButton.Next)' _getSmallButtonOver(SmallButton.Next)); " is 137.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton cancel = new XNAButton(smallButtonSheet' firstLoc' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel)); " is 142.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton ok = new XNAButton(smallButtonSheet' secondLoc' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok)); " is 131.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton back = new XNAButton(smallButtonSheet' firstLoc' _getSmallButtonOut(SmallButton.Back)' _getSmallButtonOver(SmallButton.Back)); " is 136.
Long Statement,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The length of the statement  "                XNAButton ok = new XNAButton(smallButtonSheet' secondLoc' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok)); " is 131.
Long Statement,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,AddItemToList,The length of the statement  "                m_scrollBar.LinesToRender = item.Style == ListDialogItem.ListItemStyle.Large ? LargeItemStyleMaxItemDisplay : SmallItemStyleMaxItemDisplay; " is 139.
Long Statement,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The length of the statement  "                        XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which)); " is 125.
Long Statement,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The length of the statement  "                        add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add); " is 134.
Long Statement,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The length of the statement  "                        XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel)); " is 155.
Long Statement,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The length of the statement  "                        XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel)); " is 154.
Long Statement,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,OnDrawControl,The length of the statement  "                _spriteBatch.DrawString(_font' strToDraw' new Vector2(pos.X' pos.Y + (i - _scrollBar.ScrollOffset) * 13)' ColorConstants.LightGrayText); " is 136.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "            int sellNumInt = m_tradeItems.FindAll(x => OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(item => item.ItemID == x.ID) >= 0 && x.Sell > 0).Count; " is 163.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "                EOMessageBox.Show(DialogResourceID.SHOP_NOTHING_IS_FOR_SALE' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 123.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "                EOMessageBox.Show(DialogResourceID.SHOP_NOT_BUYING_YOUR_ITEMS' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 125.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "                                (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0))) " is 128.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "                                rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""' " is 146.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The length of the statement  "                                rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""' " is 146.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,The length of the statement  "            InventoryItem ii = OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.Find(x => (isBuying ? x.ItemID == 1 : x.ItemID == item.ID)); " is 134.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.WARNING_YOU_HAVE_NOT_ENOUGH' " gold."' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 136.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,The length of the statement  "                    $"{OldWorld.GetString(EOResourceID.DIALOG_WORD_SELL)} 1 {rec.Name} {OldWorld.GetString(EOResourceID.DIALOG_WORD_FOR)} {item.Sell} gold?"; " is 137.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,The length of the statement  "                            $"{OldWorld.GetString(isBuying ? EOResourceID.DIALOG_WORD_BUY : EOResourceID.DIALOG_WORD_SELL)} {dlg.SelectedAmount} {rec.Name} {OldWorld.GetString(EOResourceID.DIALOG_WORD_FOR)} {(isBuying ? item.Buy : item.Sell)*dlg.SelectedAmount} gold?"; " is 241.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_craftItem,The length of the statement  "                if (OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(_item => _item.ItemID == ingredient.Item1 && _item.Amount >= ingredient.Item2) < 0) " is 152.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_craftItem,The length of the statement  "                        $"{OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS)} {OldWorld.GetString(EOResourceID.DIALOG_WORD_FOR)} {craftItemRec.Name}"; " is 139.
Long Statement,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_craftItem,The length of the statement  "                $"{OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS)} {OldWorld.GetString(EOResourceID.DIALOG_WORD_FOR)} {craftItemRec.Name}"; " is 139.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The length of the statement  "            int numToLearn = m_skills.Count(_skill => !OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Exists(_spell => _spell.ID == _skill.ID)); " is 137.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The length of the statement  "                EOMessageBox.Show(DialogResourceID.SKILL_NOTHING_MORE_TO_LEARN' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The length of the statement  "                            EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 129.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_learn,The length of the statement  "                EOMessageBox.Show(DialogResourceID.SKILL_LEARN_REQS_NOT_MET' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 123.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_learn,The length of the statement  "                EOMessageBox.Show(DialogResourceID.SKILL_LEARN_WRONG_CLASS' " " + OldWorld.Instance.ECF.Data[skill.ClassReq].Name + "!"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 183.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_learn,The length of the statement  "            EOMessageBox.Show(DialogResourceID.SKILL_LEARN_CONFIRMATION' " " + OldWorld.Instance.ESF.Data[skill.ID].Name + "?"' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 183.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_forgetAllAction,The length of the statement  "            EOMessageBox.Show(DialogResourceID.SKILL_RESET_CHARACTER_CONFIRMATION' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 138.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showRequirements,The length of the statement  "                OldWorld.Instance.ESF.Data[skill.ID].Name + (skill.ClassReq > 0 ? " [" + OldWorld.Instance.ECF.Data[skill.ClassReq].Name + "]" : "")' " is 133.
Long Statement,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showRequirements,The length of the statement  "                drawStrings.AddRange(from req in skill.SkillReq where req != 0 select OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_SKILL) + ": " +  OldWorld.Instance.ESF.Data[req].Name); " is 174.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.TRADE_ABORTED_OFFER_CHANGED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_TRADE_OTHER_PLAYER_CHANGED_OFFER); " is 134.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.TRADE_ABORTED_OFFER_CHANGED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_TRADE_OTHER_PLAYER_CHANGED_OFFER); " is 134.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                EOMessageBox.Show(DialogResourceID.TRADE_OTHER_PLAYER_TRICK_YOU' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 127.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                m_recentPartnerRemoves = -1000; //this will prevent the message from showing more than once (I'm too lazy to find something more elegant) " is 137.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    $"x {item.Amount}  {(rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : "")}"; " is 170.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The length of the statement  "                    ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0)))) " is 124.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,The length of the statement  "                ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.DIALOG_TRADE_BOTH_PLAYERS_OFFER_ONE_ITEM); " is 129.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,The length of the statement  "                    OldWorld.GetString(EOResourceID.STATUS_LABEL_TYPE_WARNING)' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 122.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,The length of the statement  "            weightDelta = mainCollection.Aggregate(weightDelta' (current' itemRef) => current - OldWorld.Instance.EIF[itemRef.ID].Weight * itemRef.Amount); " is 143.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,The length of the statement  "                    OldWorld.GetString(EOResourceID.STATUS_LABEL_TYPE_WARNING)' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 122.
Long Statement,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,_buttonOkClicked,The length of the statement  "            EOMessageBox.Show(DialogResourceID.TRADE_DO_YOU_AGREE' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 122.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "            if (!m_beingDragged && MouseOverPreviously && MouseOver && PreviousMouseState.LeftButton == ButtonState.Pressed && currentState.LeftButton == ButtonState.Pressed) " is 162.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                    bool inRange = Math.Abs(Math.Max(OldWorld.Instance.MainPlayer.ActiveCharacter.X - loc.X' OldWorld.Instance.MainPlayer.ActiveCharacter.Y - loc.Y)) <= 2; " is 151.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                                    EOMessageBox.Show(DialogResourceID.DROP_MANY_GOLD_ON_GROUND' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader' " is 122.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                        EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_ITEM_DROP_OUT_OF_RANGE); " is 125.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                        ItemTransferDialog dlg = new ItemTransferDialog(m_itemData.Name' ItemTransferDialog.TransferType.DropItems' m_inventory.Amount); " is 128.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                else if (EOPaperdollDialog.Instance != null && EOPaperdollDialog.Instance.MouseOver && EOPaperdollDialog.Instance.MouseOverPreviously) " is 134.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                        EOMessageBox.Show(DialogResourceID.LOCKER_DEPOSIT_GOLD_ERROR' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 124.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                        ItemTransferDialog dlg = new ItemTransferDialog(m_itemData.Name' ItemTransferDialog.TransferType.ShopTransfer' m_inventory.Amount' EOResourceID.DIALOG_TRANSFER_TRANSFER); " is 170.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                                if (LockerDialog.Instance.GetNewItemAmount(m_inventory.ItemID' dlg.SelectedAmount) > Constants.LockerMaxSingleItemAmount) " is 121.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                                    EOMessageBox.Show(DialogResourceID.LOCKER_FULL_SINGLE_ITEM_MAX' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                            EOMessageBox.Show(DialogResourceID.LOCKER_FULL_SINGLE_ITEM_MAX' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                else if (BankAccountDialog.Instance != null && BankAccountDialog.Instance.MouseOver && BankAccountDialog.Instance.MouseOverPreviously && m_inventory.ItemID == 1) " is 161.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The length of the statement  "                        EOMessageBox.Show(DialogResourceID.BANK_ACCOUNT_UNABLE_TO_DEPOSIT' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 129.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The length of the statement  "                        m_oldOffY + 9 + 26 * (currentSlot / OldEOInventory.INVENTORY_ROW_LENGTH)) //recalculate the top-left point for the highlight based on the current drag position " is 159.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The length of the statement  "                SpriteBatch.Draw(m_itemgfx' new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y)' Color.FromNonPremultiplied(255' 255' 255' m_alpha)); " is 137.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The length of the statement  "            DrawLocation = new Vector2(13 + 26 * (Slot % OldEOInventory.INVENTORY_ROW_LENGTH)' 9 + 26 * (Slot / OldEOInventory.INVENTORY_ROW_LENGTH)); " is 138.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,ItemCurrentSlot,The length of the statement  "            return (int)((DrawLocation.X - m_oldOffX - 13) / 26) + OldEOInventory.INVENTORY_ROW_LENGTH * (int)((DrawLocation.Y - m_oldOffY - 9) / 26); " is 138.
Long Statement,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The length of the statement  "                        EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 128.
Long Statement,EndlessClient.HUD.StatusBars,HPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\HPStatusBar.cs,DrawStatusBar,The length of the statement  "            var maskSrc = new Rectangle(_sourceRectangleArea.X' _sourceRectangleArea.Height' srcWidth' _sourceRectangleArea.Height); " is 120.
Long Statement,EndlessClient.HUD.StatusBars,SPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\SPStatusBar.cs,DrawStatusBar,The length of the statement  "            var maskSrc = new Rectangle(_sourceRectangleArea.X' _sourceRectangleArea.Height' srcWidth' _sourceRectangleArea.Height); " is 120.
Long Statement,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,DrawStatusBar,The length of the statement  "            var srcWidth = 25 + (int)Math.Round((Stats[CharacterStat.Experience] - thisLevelExp) / (double)(nextLevelExp - thisLevelExp) * 79); " is 131.
Long Statement,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,DrawStatusBar,The length of the statement  "            var maskSrc = new Rectangle(_sourceRectangleArea.X' _sourceRectangleArea.Height' srcWidth' _sourceRectangleArea.Height); " is 120.
Long Statement,EndlessClient.HUD.StatusBars,TPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TPStatusBar.cs,DrawStatusBar,The length of the statement  "            var maskSrc = new Rectangle(_sourceRectangleArea.X' _sourceRectangleArea.Height' srcWidth' _sourceRectangleArea.Height); " is 120.
Long Statement,EndlessClient.Input,WalkErrorHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\WalkErrorHandler.cs,HandleWalkToTileSpec,The length of the statement  "                    //            EOMessageBox.Show(DialogResourceID.CHEST_LOCKED' XNADialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 126.
Long Statement,EndlessClient.Input,WalkErrorHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\WalkErrorHandler.cs,HandleWalkToTileSpec,The length of the statement  "                    //            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_THE_CHEST_IS_LOCKED_EXCLAMATION' " is 146.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetDisplayItemsFromRenderData,The length of the statement  "            EquipItem(ItemType.Boots'  (short)(OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Boots  && x.DollGraphic == newRenderData.boots)  ?? new EIFRecord()).ID' newRenderData.boots'  true); " is 203.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetDisplayItemsFromRenderData,The length of the statement  "            EquipItem(ItemType.Armor'  (short)(OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Armor  && x.DollGraphic == newRenderData.armor)  ?? new EIFRecord()).ID' newRenderData.armor'  true); " is 203.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetDisplayItemsFromRenderData,The length of the statement  "            EquipItem(ItemType.Hat'    (short)(OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Hat    && x.DollGraphic == newRenderData.hat)    ?? new EIFRecord()).ID' newRenderData.hat'    true); " is 203.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetDisplayItemsFromRenderData,The length of the statement  "            EquipItem(ItemType.Shield' (short)(OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Shield && x.DollGraphic == newRenderData.shield) ?? new EIFRecord()).ID' newRenderData.shield' true); " is 203.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetDisplayItemsFromRenderData,The length of the statement  "            EquipItem(ItemType.Weapon' (short)(OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Weapon && x.DollGraphic == newRenderData.weapon) ?? new EIFRecord()).ID' newRenderData.weapon' true); " is 203.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,CanOpenChest,The length of the statement  "            switch (permission) //note - it would be nice to be able to send the Item IDs of the keys in the welcome packet or something " is 124.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,CanOpenChest,The length of the statement  "                    $"Unable to find key for {Enum.GetName(typeof(ChestKey)' permission)} in EIF. This chest will never be opened!"' "Warning"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 186.
Long Statement,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,SetSpellTarget,The length of the statement  "            if (target != null && !(target is OldNPCRenderer || target is OldCharacterRenderer)) //don't set target when it isn't valid! " is 124.
Long Statement,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,MainButtonPress,The length of the statement  "                EOMessageBox.Show(DialogResourceID.EXIT_GAME_ARE_YOU_SURE' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'  " is 126.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_junkItem,The length of the statement  "                $"{OldWorld.GetString(EOResourceID.STATUS_LABEL_ITEM_JUNK_YOU_JUNKED)} {amountRemoved} {rec.Name}"' ChatIcon.DownArrow); " is 120.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_useItem,The length of the statement  "            OldWorld.Instance.MainPlayer.ActiveCharacter.UpdateInventoryItem(data.ItemID' data.CharacterAmount' data.Weight' data.MaxWeight); " is 129.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_npcTakeDamage,The length of the statement  "            OldWorld.Instance.ActiveMapRenderer.NPCTakeDamage(npcIndex' fromPlayerID' fromDirection' damageToNPC' npcPctHealth' spellID); " is 125.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_lockerUpgrade,The length of the statement  "            m_game.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' EOResourceID.STATUS_LABEL_LOCKER_SPACE_INCREASED); " is 120.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_partyRequest,The length of the statement  "                   type == PartyRequestType.Join ? DialogResourceID.PARTY_GROUP_REQUEST_TO_JOIN : DialogResourceID.PARTY_GROUP_SEND_INVITATION' " is 124.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_tradeRequested,The length of the statement  "            EOMessageBox.Show(char.ToUpper(name[0]) + name.Substring(1) + " "' DialogResourceID.TRADE_REQUEST' EODialogButtons.OkCancel' " is 124.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_statskillLearnError,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.SKILL_LEARN_WRONG_CLASS' " " + OldWorld.Instance.ECF.Data[id].Name + "!"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 171.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_statskillLearnError,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.SKILL_RESET_CHARACTER_CLEAR_PAPERDOLL' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 136.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_statskillReset,The length of the statement  "            EOMessageBox.Show(DialogResourceID.SKILL_RESET_CHARACTER_COMPLETE' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 129.
Long Statement,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_playerCastTargetSpell,The length of the statement  "            OldWorld.Instance.ActiveMapRenderer.PlayerCastSpellTarget(fromPlayerID' targetPlayerID' sourcePlayerDirection' spellID' recoveredHP' targetPercentHealth); " is 154.
Long Statement,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,Remap,The length of the statement  "            EOGame.Instance.Hud.AddChat(ChatTab.Local' GetString(EOResourceID.STRING_SERVER)' GetString(EOResourceID.SERVER_MESSAGE_MAP_MUTATION)' ChatIcon.Exclamation' ChatColor.Server); " is 175.
Long Statement,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,Remap,The length of the statement  "            EOGame.Instance.Hud.AddChat(ChatTab.System' GetString(EOResourceID.STRING_SERVER)' GetString(EOResourceID.SERVER_MESSAGE_MAP_MUTATION)' ChatIcon.Exclamation' ChatColor.Server); " is 176.
Long Statement,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,DrawMapBase,The length of the statement  "            var renderBounds = _mapRenderDistanceCalculator.CalculateRenderBounds(immutableCharacter' _currentMapProvider.CurrentMap); " is 122.
Long Statement,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,DrawMapToRenderTarget,The length of the statement  "            var renderBounds = _mapRenderDistanceCalculator.CalculateRenderBounds(immutableCharacter' _currentMapProvider.CurrentMap); " is 122.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_updateDisplayDataSprites,The length of the statement  "                    shieldInfo = OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Shield && x.DollGraphic == Data.shield); " is 120.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_updateDisplayDataSprites,The length of the statement  "                        shield = spriteSheet.GetShield(shieldInfo.Name == "Bag" || shieldInfo.SubType == ItemSubType.Arrows || shieldInfo.SubType == ItemSubType.Wings); " is 144.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_updateDisplayDataSprites,The length of the statement  "                    weaponInfo = OldWorld.Instance.EIF.Data.SingleOrDefault(x => x.Type == ItemType.Weapon && x.DollGraphic == Data.weapon); " is 120.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkMouseClickState,The length of the statement  "                        data.TargetRestrict == SpellTargetRestrict.Opponent && !OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.PKAvailable) " is 122.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The length of the statement  "                sb.Draw(adminGraphic' new Rectangle(DrawAreaWithOffset.X + 48' DrawAreaWithOffset.Y + 73' adminRect.Value.Width' adminRect.Value.Height)' adminRect' Color.White); " is 162.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The length of the statement  "                GraphicsDevice.Clear(ClearOptions.Target' Color.FromNonPremultiplied(255'255'255'100)' 1' 0); //hidden players should blend nicely " is 130.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawShieldLater,The length of the statement  "            bool arrowsWings = shieldInfo != null && (shieldInfo.SubType == ItemSubType.Wings || shieldInfo.SubType == ItemSubType.Arrows); " is 127.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The length of the statement  "            SpriteBatch.Draw(armor' new Vector2(DrawAreaWithOffset.X - 2 + xAdjust' DrawAreaWithOffset.Y + yAdjust)' null' Color.White' 0.0f' " is 129.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The length of the statement  "            SpriteBatch.Draw(boots' new Vector2(drawLoc.X + bootsOffX' drawLoc.Y + bootsOffY)' null' Color.White' 0.0f' Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f); " is 197.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,maskTheHair,The length of the statement  "                    case ItemSubType.HideHair: //anything matching ^[A-Za-z ]*[Hh]elm[A-Za-z ]*$ or ^[A-Za-z ]*[Hh]ood[A-Za-z ]*$' or id=314 (pirate hat) " is 133.
Long Statement,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,StopShouting,The length of the statement  "            if (!isSpellBeingCast || OldWorld.Instance.ESF[Character.SelectedSpell].Target == SpellTarget.Self || Character.SpellTarget == this) " is 132.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The length of the statement  "            EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_MENU_BELONGS_TO_PLAYER' m_rend.Character.Name); " is 147.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventJoinParty,The length of the statement  "                ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' m_rend.Character.Name' EOResourceID.STATUS_LABEL_PARTY_IS_ALREADY_MEMBER); " is 149.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventJoinParty,The length of the statement  "            if (m_lastPartyRequestedTime != null && (DateTime.Now - m_lastPartyRequestedTime.Value).TotalSeconds < Constants.PartyRequestTimeoutSeconds) " is 140.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventJoinParty,The length of the statement  "                ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_PARTY_RECENTLY_REQUESTED); " is 127.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventJoinParty,The length of the statement  "            ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_PARTY_REQUESTED_TO_JOIN); " is 125.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventInviteToParty,The length of the statement  "                ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' m_rend.Character.Name' EOResourceID.STATUS_LABEL_PARTY_IS_ALREADY_MEMBER); " is 148.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventInviteToParty,The length of the statement  "            if (m_lastPartyRequestedTime != null && (DateTime.Now - m_lastPartyRequestedTime.Value).TotalSeconds < Constants.PartyRequestTimeoutSeconds) " is 140.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventInviteToParty,The length of the statement  "                ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_PARTY_RECENTLY_REQUESTED); " is 126.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventInviteToParty,The length of the statement  "            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' m_rend.Character.Name' EOResourceID.STATUS_LABEL_PARTY_IS_INVITED); " is 140.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventTrade,The length of the statement  "                if(m_lastTradeRequestedTime != null && (DateTime.Now - m_lastTradeRequestedTime.Value).TotalSeconds < Constants.TradeRequestTimeoutSeconds) " is 139.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventTrade,The length of the statement  "                    ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_TRADE_RECENTLY_REQUESTED); " is 126.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventTrade,The length of the statement  "                ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_TRADE_REQUESTED_TO_TRADE); " is 125.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventAddFriend,The length of the statement  "            EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' m_rend.Character.Name' EOResourceID.STATUS_LABEL_WILL_BE_YOUR_FRIEND); " is 144.
Long Statement,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,_eventAddIgnore,The length of the statement  "            EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' m_rend.Character.Name' EOResourceID.STATUS_LABEL_WILL_BE_IGNORED); " is 140.
Long Statement,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The length of the statement  "            int factor = (_data.facing == EODirection.Down || _data.facing == EODirection.Right) ? 0 : 1; //multiplier for the direction faced " is 130.
Long Statement,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The length of the statement  "                m_healthBarPos = new Vector2(tmp.X + (tmp.Width - s_HealthBarSprites.Width) / 2f' tmp.Y + ((OldNPCRenderer)m_ref).TopPixel - 10); " is 129.
Long Statement,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The length of the statement  "                    pos = new Vector2(tmp.X + tmp.Width/2f - 15' tmp.Y + ((OldNPCRenderer) m_ref).TopPixel - m_additionalOffset - NPC_ADDITIONAL_OFFSET); " is 133.
Long Statement,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The length of the statement  "                    pos = new Vector2(tmp.X + tmp.Width / 2f - (nDigits * 9) / 2f' tmp.Y + ((OldNPCRenderer)m_ref).TopPixel - m_additionalOffset - NPC_ADDITIONAL_OFFSET); " is 150.
Long Statement,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The length of the statement  "            SpriteBatch.Draw(s_HealthBarSprites' m_healthBarPos' new Rectangle(0' 28' 40' 7)' Color.White); //draw health bar background container " is 134.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,RemoveMapItem,The length of the statement  "            var locationContainingItemUID = _mapItems.Keys.FirstOrDefault(_key => _mapItems[_key].Find(_mi => _mi.UniqueID == uid).UniqueID == uid); " is 136.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The length of the statement  "                        Rectangle? src = nextTile.Width > 64 ? new Rectangle?(new Rectangle((int)_tileSrc.X' (int)_tileSrc.Y' nextTile.Width / 4' nextTile.Height)) : null; " is 147.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The length of the statement  "                            _sb.Draw(nextTile' new Vector2(pos.X - 1' pos.Y - 2)' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c))); " is 122.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapItems,The length of the statement  "            Func<int' bool> queryX = x => x >= c.X - Constants.ViewLength && x <= c.X + Constants.ViewLength && x <= MapRef.Properties.Width; " is 129.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapItems,The length of the statement  "            Func<int' bool> queryY = y => y >= c.Y - Constants.ViewLength && y <= c.Y + Constants.ViewLength && y <= MapRef.Properties.Height; " is 130.
Long Statement,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The length of the statement  "            _sb.Begin(SpriteSortMode.Deferred' OldWorld.Instance.MainPlayer.ActiveCharacter.RenderData.hidden ? BlendState.NonPremultiplied : _playerBlend); " is 144.
Long Statement,EndlessClient.Rendering,OldMouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMouseCursorRenderer.cs,HandleMouseClick,The length of the statement  "                //        EOMessageBox.Show(signInfo.Message' signInfo.Title' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader); " is 124.
Long Statement,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The length of the statement  "                DrawOffsetX + 320 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX - (int)(_npcTextureFrameRectangle.Width / 6.4 * 3.2)' " is 126.
Long Statement,EndlessClient.Subscribers,MainCharacterEventSubscriber,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Subscribers\MainCharacterEventSubscriber.cs,TakeItemFromMap,The length of the statement  "            var chatMessage = $"{_localizedStringFinder.GetString(EOResourceID.STATUS_LABEL_ITEM_PICKUP_YOU_PICKED_UP)} {amountTaken} {rec.Name}"; " is 134.
Long Statement,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The length of the statement  "                _baseProperties = _baseProperties.WithArmorGraphic(GetNextItemGraphicMatching(ItemType.Armor' _baseProperties.ArmorGraphic)); " is 125.
Long Statement,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The length of the statement  "                _baseProperties = _baseProperties.WithBootsGraphic(GetNextItemGraphicMatching(ItemType.Boots' _baseProperties.BootsGraphic)); " is 125.
Long Statement,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The length of the statement  "                _baseProperties = _baseProperties.WithWeaponGraphic(GetNextItemGraphicMatching(ItemType.Weapon' _baseProperties.WeaponGraphic)); " is 128.
Long Statement,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The length of the statement  "                _baseProperties = _baseProperties.WithShieldGraphic(GetNextItemGraphicMatching(ItemType.Shield' _baseProperties.ShieldGraphic)); " is 128.
Long Statement,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,InitializeControlsHelper,The length of the statement  "                GameState == GameStates.LoggedIn ? GameControlIdentifier.CreateCharacterButton : GameControlIdentifier.CreateAccountButton' " is 123.
Long Statement,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeControlsHelper,The length of the statement  "            _tbPassword = GetControl(currentControlSet' GameControlIdentifier.CreateAccountPassword' GetCreateAccountPasswordTextBox); " is 122.
Long Statement,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeControlsHelper,The length of the statement  "            _tbConfirm = GetControl(currentControlSet' GameControlIdentifier.CreateAccountPasswordConfirm' GetCreateAccountConfirmTextBox); " is 127.
Long Statement,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeControlsHelper,The length of the statement  "            _tbRealName = GetControl(currentControlSet' GameControlIdentifier.CreateAccountRealName' GetCreateAccountRealNameTextBox); " is 122.
Long Statement,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeControlsHelper,The length of the statement  "            _tbLocation = GetControl(currentControlSet' GameControlIdentifier.CreateAccountLocation' GetCreateAccountLocationTextBox); " is 122.
Long Statement,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeControlsHelper,The length of the statement  "            _btnCancel = GetControl(currentControlSet' GameControlIdentifier.CreateAccountCancelButton' GetCreateAccountCancelButton); " is 122.
Long Statement,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,InitializeControlsHelper,The length of the statement  "            _loginPanelBackground = GetControl(currentControlSet' GameControlIdentifier.LoginPanelBackground' GetLoginPanelBackground); " is 123.
Long Statement,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The length of the statement  "            var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29)) " is 127.
Long Statement,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The length of the statement  "            var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29)) " is 129.
Long Statement,EndlessClient.GameExecution,GameRunnerBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\GameRunnerBase.cs,SetupDependencies,The length of the statement  "                    $"There was an error loading GFX{(int) lle.WhichGFX:000}.EGF : {lle.WhichGFX}. Place all .GFX files in .\\gfx\\. The error message is:\n\n\"{lle.Message}\""; " is 157.
Long Statement,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,DoHudStateChangeClick,The length of the statement  "                    _statusLabelSetter.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_CHAT_PANEL_NOW_VIEWED); " is 122.
Long Statement,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,DoHudStateChangeClick,The length of the statement  "                    _statusLabelSetter.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_STATS_PANEL_NOW_VIEWED); " is 123.
Long Statement,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,DoHudStateChangeClick,The length of the statement  "                    _statusLabelSetter.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_ONLINE_PLAYERS_NOW_VIEWED); " is 126.
Long Statement,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,DoHudStateChangeClick,The length of the statement  "                    _statusLabelSetter.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_HUD_BUTTON_HOVER_LAST); " is 122.
Long Statement,EndlessClient.HUD,StatusLabelSetter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusLabelSetter.cs,CheckStatusLabelType,The length of the statement  "                default: throw new ArgumentOutOfRangeException(nameof(type)' "Use either ACTION' BUTTION' INFORMATION' WARNING' ITEM' or SPELL for this."); " is 139.
Long Statement,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,OnUpdateControl,The length of the statement  "                _characterStats[DAM].Text = $"{_lastCharacterStats[CharacterStat.MinDam]} - {_lastCharacterStats[CharacterStat.MaxDam]}"; " is 121.
Long Statement,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,OnUpdateControl,The length of the statement  "                _otherInfo[WEIGHT].Text = $"{_lastCharacterStats[CharacterStat.Weight]} / {_lastCharacterStats[CharacterStat.MaxWeight]}"; " is 122.
Long Statement,EndlessClient.Rendering.MapEntityRenderers,MainCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MainCharacterEntityRenderer.cs,RenderElementAt,The length of the statement  "                throw new InvalidOperationException("Main character renderer is null! Did you call MapRenderer.Update() before calling MapRenderer.Draw()?"); " is 141.
Long Statement,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The length of the statement  "                //note: col is offset by 1. I'm not sure why this is needed. Maybe I did something wrong when translating the packets... " is 120.
Long Statement,EndlessClient.Rendering.MapEntityRenderers,NPCEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\NPCEntityRenderer.cs,RenderElementAt,The length of the statement  "                        $"Character renderer for ID {index} is null or missing! Did you call MapRenderer.Update() before calling MapRenderer.Draw()?"); " is 127.
Long Statement,EndlessClient.Rendering.MapEntityRenderers,OtherCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OtherCharacterEntityRenderer.cs,RenderElementAt,The length of the statement  "                        $"Character renderer for ID {id} is null or missing! Did you call MapRenderer.Update() before calling MapRenderer.Draw()?"); " is 124.
Long Statement,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The length of the statement  "                ? new Rectangle?(new Rectangle(gfxWidthDelta*0' 0' gfxWidthDelta' gfx.Height)) //todo: animated walls using source index offset! " is 128.
Long Statement,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,Update,The length of the statement  "                int dif = (currentState.ScrollWheelValue - PreviousMouseState.ScrollWheelValue) / -120; //otherwise you get "Natural" scroll. We'll have none of that. " is 150.
Long Statement,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollToTop,The length of the statement  "            _scrollButton.DrawPosition = new Vector2(_scrollButton.DrawArea.X' _scrollButton.DrawArea.Height + pixelsPerLine * ScrollOffset); " is 129.
Long Statement,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,arrowClicked,The length of the statement  "            _scrollButton.DrawPosition = new Vector2(_scrollButton.DrawPosition.X' _scrollButton.DrawArea.Height + pixelsPerLine * ScrollOffset); " is 133.
Long Statement,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,arrowClicked,The length of the statement  "                _scrollButton.DrawPosition = new Vector2(_scrollButton.DrawPosition.X' scrollArea.Height - _scrollButton.DrawArea.Height); " is 122.
Long Statement,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The length of the statement  "                    _scrollButton.DrawPosition = new Vector2(_scrollButton.DrawPosition.X' _scrollButton.DrawArea.Height + pixelsPerLine * ScrollOffset); " is 133.
Long Statement,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The length of the statement  "                        _scrollButton.DrawPosition = new Vector2(_scrollButton.DrawPosition.X' scrollArea.Height - _scrollButton.DrawArea.Height); " is 122.
Long Statement,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,_tryGetCharacterRegKey,The length of the statement  "                        $"Software\\EndlessClient\\{OldWorld.Instance.MainPlayer.AccountName}\\{OldWorld.Instance.MainPlayer.ActiveCharacter.Name}\\spells"' " is 132.
Long Statement,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The length of the statement  "            EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169); " is 146.
Long Statement,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Draw,The length of the statement  "                    Vector2 pos = new Vector2(parent.DrawAreaWithOffset.X' parent.DrawAreaWithOffset.Y + relativeTextPos.Y + (i - scrollBar.ScrollOffset)*13); " is 138.
Long Statement,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Draw,The length of the statement  "                    SpriteBatch.DrawString(EOGame.Instance.DBGFont' strToDraw' new Vector2(pos.X + 20' pos.Y)' chatStrings.Keys[i].GetColor()); " is 123.
Long Statement,EndlessClient.HUD.Panels.Old,ChatIndex,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetColor,The length of the statement  "                    default: throw new IndexOutOfRangeException("ChatColor enumeration unhandled for index " + _index.ToString(CultureInfo.InvariantCulture)); " is 138.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,Update,The length of the statement  "                EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_BUTTON' EOResourceID.STATUS_LABEL_INVENTORY_DROP_BUTTON); " is 123.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,Update,The length of the statement  "                EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_BUTTON' EOResourceID.STATUS_LABEL_INVENTORY_JUNK_BUTTON); " is 123.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,Update,The length of the statement  "                EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_BUTTON' EOResourceID.STATUS_LABEL_INVENTORY_SHOW_YOUR_PAPERDOLL); " is 131.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_addItemToSlot,The length of the statement  "            m_childItems.Add(new OldEOInventoryItem(m_api' slot' item' new InventoryItem(amount: count' itemID: (short)item.ID)' this)); //add the control wrapper for the item " is 163.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_tryGetCharacterRegKey,The length of the statement  "                        $"Software\\EndlessClient\\{OldWorld.Instance.MainPlayer.AccountName}\\{OldWorld.Instance.MainPlayer.ActiveCharacter.Name}\\inventory"' " is 135.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Update,The length of the statement  "            if (m_filterClick.ContainsPoint(curState.X' curState.Y) && curState.LeftButton == ButtonState.Released && PreviousMouseState.LeftButton == ButtonState.Pressed) " is 159.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "            SpriteBatch.Draw(m_filterTextures[(int) m_filter]' new Vector2(DrawAreaWithOffset.X + 4' DrawAreaWithOffset.Y + 2)' Color.White); " is 129.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "                SpriteBatch.Draw(OldChatTab.GetChatIcon(OldChatRenderer.GetChatTypeFromPaperdollIcon(filtered[i].Icon))' new Vector2(DrawAreaWithOffset.X + DRAW_ICON_X' yCoord)' Color.White); " is 175.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "                SpriteBatch.DrawString(EOGame.Instance.DBGFont' filtered[i].Name' new Vector2(DrawAreaWithOffset.X + DRAW_NAME_X' yCoord)' Color.Black); " is 136.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "                SpriteBatch.DrawString(EOGame.Instance.DBGFont' filtered[i].Title' new Vector2(DrawAreaWithOffset.X + DRAW_TITLE_X' yCoord)' Color.Black); " is 138.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "                SpriteBatch.DrawString(EOGame.Instance.DBGFont' filtered[i].Guild' new Vector2(DrawAreaWithOffset.X + DRAW_GUILD_X' yCoord)' Color.Black); " is 138.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The length of the statement  "                SpriteBatch.DrawString(EOGame.Instance.DBGFont' filtered[i].ClassString' new Vector2(DrawAreaWithOffset.X + DRAW_CLASS_X' yCoord)' Color.Black); " is 144.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,SetData,The length of the statement  "                    ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' EOResourceID.STATUS_LABEL_PARTY_YOU_JOINED); " is 122.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,SetData,The length of the statement  "                    ((EOGame)Game).Hud.AddChat(ChatTab.System' ""' OldWorld.GetString(EOResourceID.STATUS_LABEL_PARTY_YOU_JOINED)' ChatIcon.PlayerParty' ChatColor.PM); " is 147.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,SetData,The length of the statement  "                m_mainIsLeader = m_members.FindIndex(_member => _member.IsLeader && _member.ID == OldWorld.Instance.MainPlayer.ActiveCharacter.ID) >= 0; " is 136.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_addRemoveButtonForMember,The length of the statement  "                enabled ? new Rectangle(0' delta * 2' m_removeTexture.Width' delta) : new Rectangle(0' delta' m_removeTexture.Width' delta)); " is 125.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,AddMember,The length of the statement  "            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' member.Name' EOResourceID.STATUS_LABEL_PARTY_JOINED_YOUR); " is 136.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,AddMember,The length of the statement  "            ((EOGame)Game).Hud.AddChat(ChatTab.System' ""' member.Name + " " + OldWorld.GetString(EOResourceID.STATUS_LABEL_PARTY_JOINED_YOUR)' ChatIcon.PlayerParty' ChatColor.PM); " is 168.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,RemoveMember,The length of the statement  "            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION' name' EOResourceID.STATUS_LABEL_PARTY_LEFT_YOUR); " is 127.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,RemoveMember,The length of the statement  "            ((EOGame)Game).Hud.AddChat(ChatTab.System' ""' name + " " + OldWorld.GetString(EOResourceID.STATUS_LABEL_PARTY_LEFT_YOUR)' ChatIcon.PlayerPartyDark' ChatColor.PM); " is 163.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The length of the statement  "                for (int i = m_scrollBar.ScrollOffset; i < m_scrollBar.LinesToRender + m_scrollBar.ScrollOffset && i < m_members.Count; ++i) " is 124.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The length of the statement  "                    SpriteBatch.Draw(OldChatTab.GetChatIcon(member.IsLeader ? ChatIcon.Star : ChatIcon.Player)' new Vector2(DrawAreaWithOffset.X + DRAW_ICON_X' yCoord)' Color.White); " is 162.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The length of the statement  "                    SpriteBatch.DrawString(((EOGame) Game).DBGFont' member.Name' new Vector2(DrawAreaWithOffset.X + DRAW_NAME_X' yCoord)' Color.Black); " is 131.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The length of the statement  "                    SpriteBatch.DrawString(((EOGame) Game).DBGFont' "" + member.Level' new Vector2(DrawAreaWithOffset.X + DRAW_LEVEL_X' yCoord)' Color.Black); " is 138.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The length of the statement  "                    SpriteBatch.DrawString(((EOGame) Game).DBGFont' "HP"' new Vector2(DrawAreaWithOffset.X + DRAW_HP_X' yCoord)' Color.Black); " is 122.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_drawHealthBar,The length of the statement  "            Rectangle barSrcRect = new Rectangle(0' 0' (int)Math.Round(m_healthBar[HP_RED].Width * (percentHealth / 100.0))' m_healthBar[1].Height); " is 136.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_drawHealthBar,The length of the statement  "            SpriteBatch.Draw(m_healthBar[color]' new Vector2(DrawAreaWithOffset.X + DRAW_HEALTHBAR_X' yCoord)' barSrcRect' Color.White); " is 124.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The length of the statement  "            m_rightSide[0].Text = OldWorld.GetString(w.ShowChatBubbles ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED); " is 123.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The length of the statement  "            m_rightSide[3].Text = OldWorld.GetString(w.LogChatToFile ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED); " is 121.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.SETTINGS_SOUND_DISABLED' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 127.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,The length of the statement  "                    EOMessageBox.Show(DialogResourceID.SETTINGS_MUSIC_DISABLED' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader' " is 127.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,The length of the statement  "                m_rightSide[0].Text = OldWorld.GetString(w.ShowChatBubbles ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED); " is 123.
Long Statement,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_settingChange,The length of the statement  "                m_rightSide[3].Text = OldWorld.GetString(w.LogChatToFile ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED); " is 121.
Long Statement,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The length of the statement  "            else if (characterRenderProperties.CurrentAction == CharacterActionState.Attacking && characterRenderProperties.AttackFrame > 0) " is 128.
Long Statement,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The length of the statement  "            walkExtra = !BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame > 0 ? widthDelta * (characterRenderProperties.AttackFrame - 1) : walkExtra; " is 170.
Long Statement,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetHairTexture,The length of the statement  "            var gfxNumber = GetBaseHairGraphic(characterRenderProperties.HairStyle' characterRenderProperties.HairColor) + 2 + offset; " is 122.
Long Statement,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The length of the statement  "            var sourceRectangle = new Rectangle(widthDelta * emote' heightDelta * characterRenderProperties.Race + genderOffset' widthDelta' heightDelta); " is 142.
Complex Conditional,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,Update,The conditional expression  "m_info != null && MouseOver && currentState.RightButton == ButtonState.Released &&                  PreviousMouseState.RightButton == ButtonState.Pressed"  is complex.
Complex Conditional,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The conditional expression  "si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0))"  is complex.
Complex Conditional,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_buySellItem,The conditional expression  "isBuying && !m_api.BuyItem((short)item.ID' dlg.SelectedAmount) ||                                          !isBuying && !m_api.SellItem((short)item.ID' dlg.SelectedAmount)"  is complex.
Complex Conditional,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_learn,The conditional expression  "c.Stats.Str < skill.StrReq || c.Stats.Int < skill.IntReq || c.Stats.Wis < skill.WisReq ||                  c.Stats.Agi < skill.AgiReq || c.Stats.Con < skill.ConReq || c.Stats.Cha < skill.ChaReq ||                  c.Stats.Level < skill.LevelReq || c.Inventory.Find(_ii => _ii.ItemID == 1).Amount < skill.GoldReq || !skillReqsMet"  is complex.
Complex Conditional,EndlessClient.HUD.Chat,ChatModeCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Chat\ChatModeCalculator.cs,CalculateMode,The conditional expression  "((fullTextString[0] == '@' || fullTextString[0] == '+') && !playerIsAdmin) ||                  (fullTextString[0] == '&' && !playerIsInGuild)"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "!m_beingDragged && MouseOverPreviously && MouseOver && PreviousMouseState.LeftButton == ButtonState.Pressed && currentState.LeftButton == ButtonState.Pressed"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "((OldEOInventory)parent).IsOverDrop() || (OldWorld.Instance.ActiveMapRenderer.MouseOver &&                      ChestDialog.Instance == null && EOPaperdollDialog.Instance == null && LockerDialog.Instance == null                      && BankAccountDialog.Instance == null && TradeDialog.Instance == null)"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "BankAccountDialog.Instance != null && BankAccountDialog.Instance.MouseOver && BankAccountDialog.Instance.MouseOverPreviously && m_inventory.ItemID == 1"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "TradeDialog.Instance != null && TradeDialog.Instance.MouseOver && TradeDialog.Instance.MouseOverPreviously                      && !TradeDialog.Instance.MainPlayerAgrees"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "!m_beingDragged && PreviousMouseState.LeftButton == ButtonState.Pressed &&                  currentState.LeftButton == ButtonState.Released && MouseOver && MouseOverPreviously"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The conditional expression  "!MouseOver && !m_beingDragged && m_nameLabel != null && m_nameLabel.Visible"  is complex.
Complex Conditional,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The conditional expression  "(reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha"  is complex.
Complex Conditional,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The conditional expression  "reinit && (XNAControl.Dialogs.Contains(component as XNAControl) ||                       (component as XNAControl != null && XNAControl.Dialogs.Contains((component as XNAControl).TopParent)))"  is complex.
Complex Conditional,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,Draw,The conditional expression  "_shouldDrawCursor && _gridX >= 0 && _gridY >= 0 &&                  _gridX <= _currentMapProvider.CurrentMap.Properties.Width &&                  _gridY <= _currentMapProvider.CurrentMap.Properties.Height"  is complex.
Complex Conditional,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkUpdateDrawArea,The conditional expression  "!noLocUpdate && characterSkin != null && _char != null && OldWorld.Instance.MainPlayer.ActiveCharacter != null"  is complex.
Complex Conditional,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_adjustSP,The conditional expression  "Character.Stats != null && Character.Stats.SP < Character.Stats.MaxSP &&                  State != CharacterActionState.Attacking && (int)gameTime.TotalGameTime.TotalMilliseconds % 1000 == 0"  is complex.
Complex Conditional,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,maskTheHair,The conditional expression  "hatPixels[_1d].R == 0 && hatPixels[_1d].G == 0 && hatPixels[_1d].B == 0 && hatPixels[_1d].A != 0"  is complex.
Complex Conditional,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The conditional expression  "!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1"  is complex.
Complex Conditional,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The conditional expression  "!targetChanged &&                          ((c.State != CharacterActionState.Walking && rowIndex == c.Y && colIndex == c.X) ||                           (c.State == CharacterActionState.Walking && rowIndex == c.DestY && colIndex == c.DestX))"  is complex.
Complex Conditional,EndlessClient.ControlSets,ControlSetFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\ControlSetFactory.cs,CreateControlsForState,The conditional expression  "_mainButtonController == null || _accountController == null ||                  _loginController == null || _characterManagementController == null"  is complex.
Complex Conditional,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,OnUpdateControl,The conditional expression  "MouseOver && mouseState.LeftButton == ButtonState.Released &&                  PreviousMouseState.LeftButton == ButtonState.Pressed &&                  _tabLabelClickableAreas.Any(x => x.Value.Contains(mouseState.Position))"  is complex.
Complex Conditional,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,HandleLeftClickOnTabs,The conditional expression  "(clickedTab != ChatTab.Private1 || _state.PrivateChat1Shown) &&                  (clickedTab != ChatTab.Private2 || _state.PrivateChat2Shown)"  is complex.
Complex Conditional,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetSpriteSheetForTab,The conditional expression  "(tab == ChatTab.Private1 && !_state.PrivateChat1Shown) ||                  (tab == ChatTab.Private2 && !_state.PrivateChat2Shown)"  is complex.
Complex Conditional,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,OnUpdateControl,The conditional expression  "((CurrentMouseState.LeftButton == ButtonState.Released && PreviousMouseState.LeftButton == ButtonState.Pressed) ||                  (CurrentMouseState.RightButton == ButtonState.Released && PreviousMouseState.RightButton == ButtonState.Pressed)) &&                  DrawAreaWithParentOffset.ContainsPoint(CurrentMouseState.X' CurrentMouseState.Y)"  is complex.
Complex Conditional,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,Update,The conditional expression  "currentState.ScrollWheelValue != PreviousMouseState.ScrollWheelValue                  && tempParent != null && tempParent.MouseOver && tempParent.MouseOverPreviously                  && _totalHeight > LinesToRender"  is complex.
Complex Conditional,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,Update,The conditional expression  "(dif < 0 && dif + ScrollOffset >= 0) || (dif > 0 && ScrollOffset + dif <= _totalHeight - LinesToRender)"  is complex.
Complex Conditional,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The conditional expression  "CurrentMouseState.ScrollWheelValue != PreviousMouseState.ScrollWheelValue                  && ImmediateParent != null && ImmediateParent.MouseOver && ImmediateParent.MouseOverPreviously                  && _totalHeight > LinesToRender"  is complex.
Complex Conditional,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The conditional expression  "(dif < 0 && dif + ScrollOffset >= 0) || (dif > 0 && ScrollOffset + dif <= _totalHeight - LinesToRender)"  is complex.
Complex Conditional,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,Update,The conditional expression  "(Keyboard.GetState().IsKeyDown(Keys.RightShift) && PreviousKeyState.IsKeyUp(Keys.RightShift)) ||                  (Keyboard.GetState().IsKeyDown(Keys.LeftShift) && PreviousKeyState.IsKeyUp(Keys.LeftShift)) ||                  (Keyboard.GetState().IsKeyUp(Keys.RightShift) && PreviousKeyState.IsKeyDown(Keys.RightShift)) ||                  (Keyboard.GetState().IsKeyUp(Keys.LeftShift) && PreviousKeyState.IsKeyDown(Keys.LeftShift))"  is complex.
Complex Conditional,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_fitsInSlot,The conditional expression  "points.Count(_t => _t.Item1 < 0 || _t.Item1 > 3 || _t.Item2 < 0 || _t.Item2 >= INVENTORY_ROW_LENGTH) > 0"  is complex.
Complex Conditional,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,Update,The conditional expression  "MouseOver && MouseOverPreviously &&                      _parentSpellContainer.AnySpellsSelected() &&                      !_parentSpellContainer.AnySpellsDragging() &&                      Mouse.GetState().LeftButton == ButtonState.Released &&                      PreviousMouseState.LeftButton == ButtonState.Pressed"  is complex.
Complex Conditional,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,UpdateIconSourceRect,The conditional expression  "MouseOver && !MouseOverPreviously ||                  MouseOverPreviously && !MouseOver"  is complex.
Complex Conditional,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The conditional expression  "!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1"  is complex.
Virtual Method Call from Constructor,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The constructor "CharacterInfoPanel" calls a virtual method "LoginButtonClick".
Virtual Method Call from Constructor,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The constructor "CharacterInfoPanel" calls a virtual method "DeleteButtonClick".
Empty Catch Block,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_playSoundEffect,The method has an empty catch block.
Empty Catch Block,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerAttack,The method has an empty catch block.
Empty Catch Block,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerEmote,The method has an empty catch block.
Empty Catch Block,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,maskTheHair,The method has an empty catch block.
Empty Catch Block,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,_tryGetCharacterRegKey,The method has an empty catch block.
Empty Catch Block,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_tryGetCharacterRegKey,The method has an empty catch block.
Magic Number,EndlessClient.Audio,SoundManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\SoundManager.cs,SoundManager,The following statement contains a magic number: _soundEffects = new List<SoundInfo>(81);
Magic Number,EndlessClient.Audio,SoundManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\SoundManager.cs,SoundManager,The following statement contains a magic number: _guitarSounds = new List<SoundInfo>(36);
Magic Number,EndlessClient.Audio,SoundManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\SoundManager.cs,SoundManager,The following statement contains a magic number: _harpSounds = new List<SoundInfo>(36);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var riff = Encoding.ASCII.GetString(wavBuffer.SubArray(0' 4));
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: riff != "RIFF" || wavBuffer.Length < 8
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var reportedLength = wavBuffer[4] + wavBuffer[5] * 256 + wavBuffer[6] * 65536 + wavBuffer[7] * 16777216;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: var actualLength = wavBuffer.Length - 8;
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[4] = (byte)(actualLength & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[5] = (byte)((actualLength >> 8) & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[5] = (byte)((actualLength >> 8) & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[6] = (byte)((actualLength >> 16) & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[6] = (byte)((actualLength >> 16) & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[7] = (byte)((actualLength >> 24) & 0xFF);
Magic Number,EndlessClient.Audio,WAVFileValidator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Audio\WAVFileValidator.cs,GetStreamWithCorrectLengthHeader,The following statement contains a magic number: wavBuffer[7] = (byte)((actualLength >> 24) & 0xFF);
Magic Number,EndlessClient.Controllers,CharacterManagementController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\CharacterManagementController.cs,CreateCharacter,The following statement contains a magic number: createID != 1000
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Controllers,LoginController,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Controllers\LoginController.cs,LoginToCharacter,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,EndlessClient.Dialogs,BaseEODialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BaseEODialog.cs,CenterInGameView,The following statement contains a magic number: DrawPosition = new Vector2(DrawPosition.X' (330 - DrawArea.Height)/2f);
Magic Number,EndlessClient.Dialogs,BaseEODialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BaseEODialog.cs,CenterInGameView,The following statement contains a magic number: DrawPosition = new Vector2(DrawPosition.X' (330 - DrawArea.Height)/2f);
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: bgTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 53);
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: m_accountBalance = new XNALabel(new Rectangle(129' 20' 121' 16)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  Text = ""'                  TextAlign = LabelAlignment.MiddleRight'                  AutoSize = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: m_accountBalance = new XNALabel(new Rectangle(129' 20' 121' 16)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  Text = ""'                  TextAlign = LabelAlignment.MiddleRight'                  AutoSize = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: m_accountBalance = new XNALabel(new Rectangle(129' 20' 121' 16)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  Text = ""'                  TextAlign = LabelAlignment.MiddleRight'                  AutoSize = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: m_accountBalance = new XNALabel(new Rectangle(129' 20' 121' 16)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  Text = ""'                  TextAlign = LabelAlignment.MiddleRight'                  AutoSize = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(92' 191)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(92' 191)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: ListDialogItem deposit = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)              {                  Text = OldWorld.GetString(EOResourceID.DIALOG_BANK_DEPOSIT)'                  SubText =                      $"{OldWorld.GetString(EOResourceID.DIALOG_BANK_TRANSFER)} gold {OldWorld.GetString(EOResourceID.DIALOG_BANK_TO_ACCOUNT)}"'                  IconGraphic = _getDlgIcon(ListIcon.BankDeposit)'                  OffsetY = 55'                  ShowItemBackGround = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: ListDialogItem withdraw = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)              {                  Text = OldWorld.GetString(EOResourceID.DIALOG_BANK_WITHDRAW)'                  SubText =                      $"{OldWorld.GetString(EOResourceID.DIALOG_BANK_TAKE)} gold {OldWorld.GetString(EOResourceID.DIALOG_BANK_FROM_ACCOUNT)}"'                  IconGraphic = _getDlgIcon(ListIcon.BankWithdraw)'                  OffsetY = 55'                  ShowItemBackGround = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: ListDialogItem upgrade = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)              {                  Text = OldWorld.GetString(EOResourceID.DIALOG_BANK_LOCKER_UPGRADE)'                  SubText = OldWorld.GetString(EOResourceID.DIALOG_BANK_MORE_SPACE)'                  IconGraphic = _getDlgIcon(ListIcon.BankLockerUpgrade)'                  OffsetY = 55'                  ShowItemBackGround = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: ListDialogItem upgrade = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)              {                  Text = OldWorld.GetString(EOResourceID.DIALOG_BANK_LOCKER_UPGRADE)'                  SubText = OldWorld.GetString(EOResourceID.DIALOG_BANK_MORE_SPACE)'                  IconGraphic = _getDlgIcon(ListIcon.BankLockerUpgrade)'                  OffsetY = 55'                  ShowItemBackGround = false              };
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,BankAccountDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 50);
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_upgrade,The following statement contains a magic number: LockerUpgrades == 7
Magic Number,EndlessClient.Dialogs,BankAccountDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\BankAccountDialog.cs,_upgrade,The following statement contains a magic number: int requiredGold = (LockerUpgrades + 1) * 1000;
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: BackgroundTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 21);
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: _inputBoxes = new IXNATextBox[4];
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: var tb = new XNATextBox(new Rectangle(198' 60 + i * 30' 137' 19)' Constants.FontSize08' caretTexture: cursorTexture)                  {                      LeftPadding = 5'                      DefaultText = " "'                      MaxChars = i == 0 ? 16 : 12'                      PasswordBox = i > 1'                      TextColor = ColorConstants.LightBeigeText                  };
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: _ok = new XNAButton(                  dialogButtonService.SmallButtonSheet'                  new Vector2(157' 195)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: _ok = new XNAButton(                  dialogButtonService.SmallButtonSheet'                  new Vector2(157' 195)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: _cancel = new XNAButton(                  dialogButtonService.SmallButtonSheet'                  new Vector2(250' 195)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,ChangePasswordDialog,The following statement contains a magic number: _cancel = new XNAButton(                  dialogButtonService.SmallButtonSheet'                  new Vector2(250' 195)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ChangePasswordDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChangePasswordDialog.cs,OnButtonPressed,The following statement contains a magic number: NewPassword.Length < 6
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,ChestDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(92' 227)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,ChestDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(92' 227)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,ChestDialog,The following statement contains a magic number: bgTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 51);
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,ChestDialog,The following statement contains a magic number: DrawLocation = new Vector2((Game.GraphicsDevice.PresentationParameters.BackBufferWidth - DrawArea.Width) / 2f' 15);
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,ChestDialog,The following statement contains a magic number: DrawLocation = new Vector2((Game.GraphicsDevice.PresentationParameters.BackBufferWidth - DrawArea.Width) / 2f' 15);
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,InitializeItems,The following statement contains a magic number: m_items = new ListDialogItem[5];
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,InitializeItems,The following statement contains a magic number: i < initialItems.Count && i < 5
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                      amount >= 100 ? 2 : (                      amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: return EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.Items' 269 + 2*gfx' true);
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: return EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.Items' 269 + 2*gfx' true);
Magic Number,EndlessClient.Dialogs,ChestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ChestDialog.cs,GetItemGraphic,The following statement contains a magic number: return EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.Items' 2*item.Graphic - 1' true);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: BackgroundTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 20);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _charCreateSheet = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 22);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _inputBox = new XNATextBox(new Rectangle(80' 57' 138' 19)' Constants.FontSize08' caretTexture: cursorTexture)              {                  LeftPadding = 5'                  DefaultText = " "'                  Text = " "'                  MaxChars = 12'                  Selected = true'                  TextColor = ColorConstants.LightBeigeText'                  Visible = true              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: var btn = new XNAButton(_charCreateSheet'                      new Vector2(196' 85 + i * 26)'                      new Rectangle(185' 38' 19' 19)'                      new Rectangle(206' 38' 19' 19));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _characterControl = new CreateCharacterControl(rendererFactory)              {                  DrawPosition = new Vector2(235' 58)              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _characterControl = new CreateCharacterControl(rendererFactory)              {                  DrawPosition = new Vector2(235' 58)              };
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[1] = new Rectangle(0' 19' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[1] = new Rectangle(0' 19' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[1] = new Rectangle(0' 19' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[2] = new Rectangle(0' 0' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[2] = new Rectangle(0' 0' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[2] = new Rectangle(0' 0' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[3] = new Rectangle(46' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[3] = new Rectangle(46' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[3] = new Rectangle(46' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[3] = new Rectangle(46' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _srcRectangles[3] = new Rectangle(46' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _ok = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(157' 195)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _ok = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(157' 195)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _cancel = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(250' 195)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,CreateCharacterDialog,The following statement contains a magic number: _cancel = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(250' 195)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_charCreateSheet'                      new Vector2(170 + DrawPositionWithParentOffset.X'                                  84 + i*27 + DrawPositionWithParentOffset.Y)'                      _srcRectangles[i]' Color.White);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_charCreateSheet'                      new Vector2(170 + DrawPositionWithParentOffset.X'                                  84 + i*27 + DrawPositionWithParentOffset.Y)'                      _srcRectangles[i]' Color.White);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_charCreateSheet'                      new Vector2(170 + DrawPositionWithParentOffset.X'                                  84 + i*27 + DrawPositionWithParentOffset.Y)'                      _srcRectangles[i]' Color.White);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,OnDrawControl,The following statement contains a magic number: i < 4
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,ArrowButtonClick,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0 + 23 * RenderProperties.Gender' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,ArrowButtonClick,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0 + 23 * RenderProperties.Gender' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,ArrowButtonClick,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0 + 23 * RenderProperties.Gender' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,ArrowButtonClick,The following statement contains a magic number: _srcRectangles[0] = new Rectangle(0 + 23 * RenderProperties.Gender' 38' 23' 19);
Magic Number,EndlessClient.Dialogs,CreateCharacterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\CreateCharacterDialog.cs,ClickOk,The following statement contains a magic number: _inputBox.Text.Length < 4
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,EODialogBase,The following statement contains a magic number: smallButtonSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PreLoginUI' 15' true);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,EODialogBase,The following statement contains a magic number: smallButtonSheet = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 15' true);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,endConstructor,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' (330 - DrawArea.Height) / 2f);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,endConstructor,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' (330 - DrawArea.Height) / 2f);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,endConstructor,The following statement contains a magic number: DrawOrder += 100;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,CenterAndFixDrawOrder,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' (330 - DrawArea.Height)/2f);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,CenterAndFixDrawOrder,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' (330 - DrawArea.Height)/2f);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,CenterAndFixDrawOrder,The following statement contains a magic number: DrawOrder += 100;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getSmallButtonOut,The following statement contains a magic number: int widthDelta = smallButtonSheet.Width / 2;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getSmallButtonOver,The following statement contains a magic number: int widthDelta = smallButtonSheet.Width / 2;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getDlgIcon,The following statement contains a magic number: const int NUM_PER_ROW = 9;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getDlgIcon,The following statement contains a magic number: const int ICON_SIZE = 31;
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getDlgIcon,The following statement contains a magic number: Texture2D weirdSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27);
Magic Number,EndlessClient.Dialogs,EODialogBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EODialogBase.cs,_getDlgIcon,The following statement contains a magic number: Rectangle src = new Rectangle(((int)whichOne % NUM_PER_ROW) * ICON_SIZE' 291 + ((int)whichOne / NUM_PER_ROW) * ICON_SIZE' ICON_SIZE' ICON_SIZE);
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (style)              {                  case EOMessageBoxStyle.SmallDialogLargeHeader: graphic = 18; break;                  case EOMessageBoxStyle.SmallDialogSmallHeader: graphic = 23; break;                  case EOMessageBoxStyle.LargeDialogSmallHeader: graphic = 25; break;                  default: throw new ArgumentOutOfRangeException(nameof(style)' "Unrecognized dialog style!");              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (style)              {                  case EOMessageBoxStyle.SmallDialogLargeHeader: graphic = 18; break;                  case EOMessageBoxStyle.SmallDialogSmallHeader: graphic = 23; break;                  case EOMessageBoxStyle.LargeDialogSmallHeader: graphic = 25; break;                  default: throw new ArgumentOutOfRangeException(nameof(style)' "Unrecognized dialog style!");              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (style)              {                  case EOMessageBoxStyle.SmallDialogLargeHeader: graphic = 18; break;                  case EOMessageBoxStyle.SmallDialogSmallHeader: graphic = 23; break;                  case EOMessageBoxStyle.LargeDialogSmallHeader: graphic = 25; break;                  default: throw new ArgumentOutOfRangeException(nameof(style)' "Unrecognized dialog style!");              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = message'                  TextWidth = 254'                  DrawPosition = new Vector2(18' useSmallHeader ? 40 : 57)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = message'                  TextWidth = 254'                  DrawPosition = new Vector2(18' useSmallHeader ? 40 : 57)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = message'                  TextWidth = 254'                  DrawPosition = new Vector2(18' useSmallHeader ? 40 : 57)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = message'                  TextWidth = 254'                  DrawPosition = new Vector2(18' useSmallHeader ? 40 : 57)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = caption'                  TextWidth = 254'                  DrawPosition = useSmallHeader ? new Vector2(18' 12) : new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = caption'                  TextWidth = 254'                  DrawPosition = useSmallHeader ? new Vector2(18' 12) : new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = caption'                  TextWidth = 254'                  DrawPosition = useSmallHeader ? new Vector2(18' 12) : new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = caption'                  TextWidth = 254'                  DrawPosition = useSmallHeader ? new Vector2(18' 12) : new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = caption'                  TextWidth = 254'                  DrawPosition = useSmallHeader ? new Vector2(18' 12) : new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _ok.DrawPosition = new Vector2(_ok.DrawPosition.X'                          style == EOMessageBoxStyle.SmallDialogSmallHeader ? 82 : 148);
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _ok.DrawPosition = new Vector2(_ok.DrawPosition.X'                          style == EOMessageBoxStyle.SmallDialogSmallHeader ? 82 : 148);
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _cancel.DrawPosition = new Vector2(_cancel.DrawPosition.X'                          style == EOMessageBoxStyle.SmallDialogSmallHeader ? 82 : 148);
Magic Number,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following statement contains a magic number: _cancel.DrawPosition = new Vector2(_cancel.DrawPosition.X'                          style == EOMessageBoxStyle.SmallDialogSmallHeader ? 82 : 148);
Magic Number,EndlessClient.Dialogs,FriendIgnoreListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\FriendIgnoreListDialog.cs,Show,The following statement contains a magic number: dlg.DialogClosing += (o' e) =>              {                  if (e.Result == XNADialogResult.Cancel)                  {                      Instance = null;                      if (isIgnoreList)                          InteractList.WriteIgnoreList(dlg.NamesList);                      else                          InteractList.WriteFriendList(dlg.NamesList);                  }                  else if (e.Result == XNADialogResult.Add)                  {                      e.CancelClose = true;                      string prompt = OldWorld.GetString(isIgnoreList ? EOResourceID.DIALOG_WHO_TO_MAKE_IGNORE : EOResourceID.DIALOG_WHO_TO_MAKE_FRIEND);                      TextInputDialog dlgInput = new TextInputDialog(prompt);                      dlgInput.DialogClosing += (_o' _e) =>                      {                          if (_e.Result == XNADialogResult.Cancel) return;                            if (dlgInput.ResponseText.Length < 4)                          {                              _e.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.CHARACTER_CREATE_NAME_TOO_SHORT);                              dlgInput.SetAsKeyboardSubscriber();                              return;                          }                            if (dlg.NamesList.FindIndex(name => name.ToLower() == dlgInput.ResponseText.ToLower()) >= 0)                          {                              _e.CancelClose = true;                              EOMessageBox.Show("You are already friends with that person!"' "Invalid entry!"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              dlgInput.SetAsKeyboardSubscriber();                              return;                          }                            ListDialogItem newItem = new ListDialogItem(dlg' ListDialogItem.ListItemStyle.Small)                          {                              Text = dlgInput.ResponseText                          };                          newItem.OnLeftClick += (oo' ee) => EOGame.Instance.Hud.SetChatText("!" + newItem.Text + " ");                          newItem.OnRightClick += (oo' ee) =>                          {                              dlg.RemoveFromList(newItem);                              dlg.Title = string.Format("{0}'s {2} [{1}]"'                                  charName'                                  dlg.NamesList.Count'                                  OldWorld.GetString(isIgnoreList ? EOResourceID.STATUS_LABEL_IGNORE_LIST : EOResourceID.STATUS_LABEL_FRIEND_LIST));                          };                          dlg.AddItemToList(newItem' true);                          dlg.Title = string.Format("{0}'s {2} [{1}]"' charName' dlg.NamesList.Count'                              OldWorld.GetString(isIgnoreList ? EOResourceID.STATUS_LABEL_IGNORE_LIST : EOResourceID.STATUS_LABEL_FRIEND_LIST));                      };                  }              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _backgroundSprite = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 33);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: DrawPosition = new Vector2(clientWindowSizeProvider.Width - _backgroundSprite.Width / 4 - 10'                                         clientWindowSizeProvider.Height - _backgroundSprite.Height - 10);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: DrawPosition = new Vector2(clientWindowSizeProvider.Width - _backgroundSprite.Width / 4 - 10'                                         clientWindowSizeProvider.Height - _backgroundSprite.Height - 10);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: DrawPosition = new Vector2(clientWindowSizeProvider.Width - _backgroundSprite.Width / 4 - 10'                                         clientWindowSizeProvider.Height - _backgroundSprite.Height - 10);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: SetSize(_backgroundSprite.Width / 4' _backgroundSprite.Height);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _caption = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  Text = _localizedStringFinder.GetString(EOResourceID.LOADING_GAME_PLEASE_WAIT)'                  ForeColor = ColorConstants.LightYellowText'                  DrawPosition = new Vector2(12' 9)              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _caption = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  Text = _localizedStringFinder.GetString(EOResourceID.LOADING_GAME_PLEASE_WAIT)'                  ForeColor = ColorConstants.LightYellowText'                  DrawPosition = new Vector2(12' 9)              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _message = new XNALabel(Constants.FontSize08)              {                  AutoSize = true'                  TextWidth = 175'                  ForeColor = ColorConstants.MediumGrayText'                  Text = localizedMessage'                  DrawPosition = new Vector2(18' 61)              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _message = new XNALabel(Constants.FontSize08)              {                  AutoSize = true'                  TextWidth = 175'                  ForeColor = ColorConstants.MediumGrayText'                  Text = localizedMessage'                  DrawPosition = new Vector2(18' 61)              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,GameLoadingDialog,The following statement contains a magic number: _message = new XNALabel(Constants.FontSize08)              {                  AutoSize = true'                  TextWidth = 175'                  ForeColor = ColorConstants.MediumGrayText'                  Text = localizedMessage'                  DrawPosition = new Vector2(18' 61)              };
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,OnUpdateControl,The following statement contains a magic number: _bgSrcIndex = _bgSrcIndex == 3 ? 0 : _bgSrcIndex + 1;
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,OnUpdateControl,The following statement contains a magic number: (int) (DateTime.Now - _lastBackgroundUpdate).TotalMilliseconds > 500
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_backgroundSprite'                  DrawAreaWithParentOffset'                  new Rectangle(_bgSrcIndex * (_backgroundSprite.Width / 4)' 0' _backgroundSprite.Width / 4' _backgroundSprite.Height)'                  Color.White);
Magic Number,EndlessClient.Dialogs,GameLoadingDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\GameLoadingDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_backgroundSprite'                  DrawAreaWithParentOffset'                  new Rectangle(_bgSrcIndex * (_backgroundSprite.Width / 4)' 0' _backgroundSprite.Width / 4' _backgroundSprite.Height)'                  Color.White);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Texture2D weirdSpriteSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle sourceArea = new Rectangle(38' 0' 265' 170);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle sourceArea = new Rectangle(38' 0' 265' 170);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle sourceArea = new Rectangle(38' 0' 265' 170);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle titleBarArea = new Rectangle(40' 172 + ((int)transferType - 1) * 24' 241' 22);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle titleBarArea = new Rectangle(40' 172 + ((int)transferType - 1) * 24' 241' 22);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle titleBarArea = new Rectangle(40' 172 + ((int)transferType - 1) * 24' 241' 22);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle titleBarArea = new Rectangle(40' 172 + ((int)transferType - 1) * 24' 241' 22);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle titleBarArea = new Rectangle(40' 172 + ((int)transferType - 1) * 24' 241' 22);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(60' 125)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))              {                  Visible = true              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(60' 125)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))              {                  Visible = true              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(153' 125)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel))              {                  Visible = true              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(153' 125)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel))              {                  Visible = true              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNALabel descLabel = new XNALabel(new Rectangle(20' 42' 231' 33)' Constants.FontSize10)              {                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 200'                  Text =                      $"{OldWorld.GetString(EOResourceID.DIALOG_TRANSFER_HOW_MUCH)} {itemName} {OldWorld.GetString(message)}"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNALabel descLabel = new XNALabel(new Rectangle(20' 42' 231' 33)' Constants.FontSize10)              {                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 200'                  Text =                      $"{OldWorld.GetString(EOResourceID.DIALOG_TRANSFER_HOW_MUCH)} {itemName} {OldWorld.GetString(message)}"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNALabel descLabel = new XNALabel(new Rectangle(20' 42' 231' 33)' Constants.FontSize10)              {                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 200'                  Text =                      $"{OldWorld.GetString(EOResourceID.DIALOG_TRANSFER_HOW_MUCH)} {itemName} {OldWorld.GetString(message)}"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNALabel descLabel = new XNALabel(new Rectangle(20' 42' 231' 33)' Constants.FontSize10)              {                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 200'                  Text =                      $"{OldWorld.GetString(EOResourceID.DIALOG_TRANSFER_HOW_MUCH)} {itemName} {OldWorld.GetString(message)}"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNALabel descLabel = new XNALabel(new Rectangle(20' 42' 231' 33)' Constants.FontSize10)              {                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 200'                  Text =                      $"{OldWorld.GetString(EOResourceID.DIALOG_TRANSFER_HOW_MUCH)} {itemName} {OldWorld.GetString(message)}"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount = new XNATextBox(new Rectangle(163' 95' 77' 19)' Game.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  Visible = true'                  Enabled = true'                  MaxChars = 8' //max drop/junk at a time will be 99'999'999                  TextColor = ColorConstants.LightBeigeText'                  Text = "1"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount = new XNATextBox(new Rectangle(163' 95' 77' 19)' Game.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  Visible = true'                  Enabled = true'                  MaxChars = 8' //max drop/junk at a time will be 99'999'999                  TextColor = ColorConstants.LightBeigeText'                  Text = "1"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount = new XNATextBox(new Rectangle(163' 95' 77' 19)' Game.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  Visible = true'                  Enabled = true'                  MaxChars = 8' //max drop/junk at a time will be 99'999'999                  TextColor = ColorConstants.LightBeigeText'                  Text = "1"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount = new XNATextBox(new Rectangle(163' 95' 77' 19)' Game.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  Visible = true'                  Enabled = true'                  MaxChars = 8' //max drop/junk at a time will be 99'999'999                  TextColor = ColorConstants.LightBeigeText'                  Text = "1"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount = new XNATextBox(new Rectangle(163' 95' 77' 19)' Game.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  Visible = true'                  Enabled = true'                  MaxChars = 8' //max drop/junk at a time will be 99'999'999                  TextColor = ColorConstants.LightBeigeText'                  Text = "1"              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Texture2D src = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 29);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle outText = new Rectangle(0' 15 * 5' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle outText = new Rectangle(0' 15 * 5' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle outText = new Rectangle(0' 15 * 5' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle outText = new Rectangle(0' 15 * 5' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle ovrText = new Rectangle(0' 15 * 6' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle ovrText = new Rectangle(0' 15 * 6' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle ovrText = new Rectangle(0' 15 * 6' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Rectangle ovrText = new Rectangle(0' 15 * 6' 16' 15);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Color[] outData = new Color[16 * 15];
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Color[] outData = new Color[16 * 15];
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Color[] ovrData = new Color[16 * 15];
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Color[] ovrData = new Color[16 * 15];
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: Texture2D[] sliderTextures = new Texture2D[2];
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: (sliderTextures[0] = new Texture2D(Game.GraphicsDevice' 16' 15)).SetData(outData);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: (sliderTextures[0] = new Texture2D(Game.GraphicsDevice' 16' 15)).SetData(outData);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: (sliderTextures[1] = new Texture2D(Game.GraphicsDevice' 16' 15)).SetData(ovrData);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: (sliderTextures[1] = new Texture2D(Game.GraphicsDevice' 16' 15)).SetData(ovrData);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton slider = new XNAButton(sliderTextures' new Vector2(25' 96));
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: XNAButton slider = new XNAButton(sliderTextures' new Vector2(25' 96));
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: slider.OnClickDrag += (o' e) =>              {                  s_sliderDragging = true; //ignores updates to slider location during text change                  MouseState st = Mouse.GetState();                  Rectangle sliderArea = new Rectangle(25' 96' 122 - slider.DrawArea.Width' 15);                  int newX = (st.X - PreviousMouseState.X) + (int)slider.DrawLocation.X;                  if (newX < sliderArea.X) newX = sliderArea.X;                  else if (newX > sliderArea.Width + sliderArea.X) newX = sliderArea.Width + sliderArea.X;                  slider.DrawLocation = new Vector2(newX' slider.DrawLocation.Y); //unchanged y coordinate' slides along x-axis                    float ratio = (newX - sliderArea.X) / (float)sliderArea.Width;                  m_amount.Text = ((int)Math.Round(ratio * m_totalAmount) + 1).ToString();                  s_sliderDragging = false;              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: slider.OnClickDrag += (o' e) =>              {                  s_sliderDragging = true; //ignores updates to slider location during text change                  MouseState st = Mouse.GetState();                  Rectangle sliderArea = new Rectangle(25' 96' 122 - slider.DrawArea.Width' 15);                  int newX = (st.X - PreviousMouseState.X) + (int)slider.DrawLocation.X;                  if (newX < sliderArea.X) newX = sliderArea.X;                  else if (newX > sliderArea.Width + sliderArea.X) newX = sliderArea.Width + sliderArea.X;                  slider.DrawLocation = new Vector2(newX' slider.DrawLocation.Y); //unchanged y coordinate' slides along x-axis                    float ratio = (newX - sliderArea.X) / (float)sliderArea.Width;                  m_amount.Text = ((int)Math.Round(ratio * m_totalAmount) + 1).ToString();                  s_sliderDragging = false;              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: slider.OnClickDrag += (o' e) =>              {                  s_sliderDragging = true; //ignores updates to slider location during text change                  MouseState st = Mouse.GetState();                  Rectangle sliderArea = new Rectangle(25' 96' 122 - slider.DrawArea.Width' 15);                  int newX = (st.X - PreviousMouseState.X) + (int)slider.DrawLocation.X;                  if (newX < sliderArea.X) newX = sliderArea.X;                  else if (newX > sliderArea.Width + sliderArea.X) newX = sliderArea.Width + sliderArea.X;                  slider.DrawLocation = new Vector2(newX' slider.DrawLocation.Y); //unchanged y coordinate' slides along x-axis                    float ratio = (newX - sliderArea.X) / (float)sliderArea.Width;                  m_amount.Text = ((int)Math.Round(ratio * m_totalAmount) + 1).ToString();                  s_sliderDragging = false;              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: slider.OnClickDrag += (o' e) =>              {                  s_sliderDragging = true; //ignores updates to slider location during text change                  MouseState st = Mouse.GetState();                  Rectangle sliderArea = new Rectangle(25' 96' 122 - slider.DrawArea.Width' 15);                  int newX = (st.X - PreviousMouseState.X) + (int)slider.DrawLocation.X;                  if (newX < sliderArea.X) newX = sliderArea.X;                  else if (newX > sliderArea.Width + sliderArea.X) newX = sliderArea.Width + sliderArea.X;                  slider.DrawLocation = new Vector2(newX' slider.DrawLocation.Y); //unchanged y coordinate' slides along x-axis                    float ratio = (newX - sliderArea.X) / (float)sliderArea.Width;                  m_amount.Text = ((int)Math.Round(ratio * m_totalAmount) + 1).ToString();                  s_sliderDragging = false;              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount.OnTextChanged += (sender' args) =>              {                  int amt = 0;                  if (m_amount.Text != "" && (!int.TryParse(m_amount.Text' out amt) || amt > m_totalAmount))                  {                      amt = m_totalAmount;                      m_amount.Text = $"{m_totalAmount}";                  }                  else if (m_amount.Text != "" && amt < 0)                  {                      amt = 1;                      m_amount.Text = $"{amt}";                  }                    if (s_sliderDragging) return; //slider is being dragged - don't move its position                    //adjust the slider (created after m_amount) when the text changes                  if (amt <= 1) //NOT WORKING                  {                      slider.DrawLocation = new Vector2(25' 96);                  }                  else                  {                      int xCoord = (int)Math.Round((amt / (double)m_totalAmount) * (122 - slider.DrawArea.Width));                      slider.DrawLocation = new Vector2(25 + xCoord' 96);                  }              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount.OnTextChanged += (sender' args) =>              {                  int amt = 0;                  if (m_amount.Text != "" && (!int.TryParse(m_amount.Text' out amt) || amt > m_totalAmount))                  {                      amt = m_totalAmount;                      m_amount.Text = $"{m_totalAmount}";                  }                  else if (m_amount.Text != "" && amt < 0)                  {                      amt = 1;                      m_amount.Text = $"{amt}";                  }                    if (s_sliderDragging) return; //slider is being dragged - don't move its position                    //adjust the slider (created after m_amount) when the text changes                  if (amt <= 1) //NOT WORKING                  {                      slider.DrawLocation = new Vector2(25' 96);                  }                  else                  {                      int xCoord = (int)Math.Round((amt / (double)m_totalAmount) * (122 - slider.DrawArea.Width));                      slider.DrawLocation = new Vector2(25 + xCoord' 96);                  }              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount.OnTextChanged += (sender' args) =>              {                  int amt = 0;                  if (m_amount.Text != "" && (!int.TryParse(m_amount.Text' out amt) || amt > m_totalAmount))                  {                      amt = m_totalAmount;                      m_amount.Text = $"{m_totalAmount}";                  }                  else if (m_amount.Text != "" && amt < 0)                  {                      amt = 1;                      m_amount.Text = $"{amt}";                  }                    if (s_sliderDragging) return; //slider is being dragged - don't move its position                    //adjust the slider (created after m_amount) when the text changes                  if (amt <= 1) //NOT WORKING                  {                      slider.DrawLocation = new Vector2(25' 96);                  }                  else                  {                      int xCoord = (int)Math.Round((amt / (double)m_totalAmount) * (122 - slider.DrawArea.Width));                      slider.DrawLocation = new Vector2(25 + xCoord' 96);                  }              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount.OnTextChanged += (sender' args) =>              {                  int amt = 0;                  if (m_amount.Text != "" && (!int.TryParse(m_amount.Text' out amt) || amt > m_totalAmount))                  {                      amt = m_totalAmount;                      m_amount.Text = $"{m_totalAmount}";                  }                  else if (m_amount.Text != "" && amt < 0)                  {                      amt = 1;                      m_amount.Text = $"{amt}";                  }                    if (s_sliderDragging) return; //slider is being dragged - don't move its position                    //adjust the slider (created after m_amount) when the text changes                  if (amt <= 1) //NOT WORKING                  {                      slider.DrawLocation = new Vector2(25' 96);                  }                  else                  {                      int xCoord = (int)Math.Round((amt / (double)m_totalAmount) * (122 - slider.DrawArea.Width));                      slider.DrawLocation = new Vector2(25 + xCoord' 96);                  }              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: m_amount.OnTextChanged += (sender' args) =>              {                  int amt = 0;                  if (m_amount.Text != "" && (!int.TryParse(m_amount.Text' out amt) || amt > m_totalAmount))                  {                      amt = m_totalAmount;                      m_amount.Text = $"{m_totalAmount}";                  }                  else if (m_amount.Text != "" && amt < 0)                  {                      amt = 1;                      m_amount.Text = $"{amt}";                  }                    if (s_sliderDragging) return; //slider is being dragged - don't move its position                    //adjust the slider (created after m_amount) when the text changes                  if (amt <= 1) //NOT WORKING                  {                      slider.DrawLocation = new Vector2(25' 96);                  }                  else                  {                      int xCoord = (int)Math.Round((amt / (double)m_totalAmount) * (122 - slider.DrawArea.Width));                      slider.DrawLocation = new Vector2(25 + xCoord' 96);                  }              };
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: DrawLocation = new Vector2(Game.GraphicsDevice.PresentationParameters.BackBufferWidth / 2 - bgTexture.Width / 2' 40);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: DrawLocation = new Vector2(Game.GraphicsDevice.PresentationParameters.BackBufferWidth / 2 - bgTexture.Width / 2' 40);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,ItemTransferDialog,The following statement contains a magic number: DrawLocation = new Vector2(Game.GraphicsDevice.PresentationParameters.BackBufferWidth / 2 - bgTexture.Width / 2' 40);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_titleBarGfx' new Vector2(DrawAreaWithOffset.X + 10' DrawAreaWithOffset.Y + 10)' Color.White);
Magic Number,EndlessClient.Dialogs,ItemTransferDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ItemTransferDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_titleBarGfx' new Vector2(DrawAreaWithOffset.X + 10' DrawAreaWithOffset.Y + 10)' Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: DrawLocation = new Vector2(17' DrawLocation.Y);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: _setSize(232' Style == ListItemStyle.Large ? 36 : 13);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: _setSize(232' Style == ListItemStyle.Large ? 36 : 13);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: _setSize(232' Style == ListItemStyle.Large ? 36 : 13);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_primaryText = new XNALabel(new Rectangle(Style == ListItemStyle.Large ? 56 : 2' Style == ListItemStyle.Large ? 5 : 0' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = false'                  BackColor = Color.Transparent'                  ForeColor = Color.FromNonPremultiplied(colorFactor' colorFactor' colorFactor' 0xff)'                  TextAlign = LabelAlignment.TopLeft'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_primaryText = new XNALabel(new Rectangle(Style == ListItemStyle.Large ? 56 : 2' Style == ListItemStyle.Large ? 5 : 0' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = false'                  BackColor = Color.Transparent'                  ForeColor = Color.FromNonPremultiplied(colorFactor' colorFactor' colorFactor' 0xff)'                  TextAlign = LabelAlignment.TopLeft'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_primaryText = new XNALabel(new Rectangle(Style == ListItemStyle.Large ? 56 : 2' Style == ListItemStyle.Large ? 5 : 0' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = false'                  BackColor = Color.Transparent'                  ForeColor = Color.FromNonPremultiplied(colorFactor' colorFactor' colorFactor' 0xff)'                  TextAlign = LabelAlignment.TopLeft'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_secondaryText = new XNALabel(new Rectangle(56' 20' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = true'                      BackColor = m_primaryText.BackColor'                      ForeColor = m_primaryText.ForeColor'                      Text = " "                  };
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_secondaryText = new XNALabel(new Rectangle(56' 20' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = true'                      BackColor = m_primaryText.BackColor'                      ForeColor = m_primaryText.ForeColor'                      Text = " "                  };
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: m_backgroundColor.SetData(new[] { Color.FromNonPremultiplied(0xff' 0xff' 0xff' 64) });
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: OffsetY = Style == ListItemStyle.Large ? 25 : 45;
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,ListDialogItem,The following statement contains a magic number: OffsetY = Style == ListItemStyle.Large ? 25 : 45;
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: Vector2 offset = new Vector2(xOff + OffsetX + 14/*not sure of the significance of this offset*/' yOff + OffsetY + 36 * Index);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: Vector2 offset = new Vector2(xOff + OffsetX + 14/*not sure of the significance of this offset*/' yOff + OffsetY + 36 * Index);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxPadThing' new Vector2(offset.X + ((64 - m_gfxPadThing.Width) / 2f)' offset.Y + (36 - m_gfxPadThing.Height) / 2f)' Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxPadThing' new Vector2(offset.X + ((64 - m_gfxPadThing.Width) / 2f)' offset.Y + (36 - m_gfxPadThing.Height) / 2f)' Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxPadThing' new Vector2(offset.X + ((64 - m_gfxPadThing.Width) / 2f)' offset.Y + (36 - m_gfxPadThing.Height) / 2f)' Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxPadThing' new Vector2(offset.X + ((64 - m_gfxPadThing.Width) / 2f)' offset.Y + (36 - m_gfxPadThing.Height) / 2f)' Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxItem'                              new Vector2((float)Math.Round(offset.X + ((64 - m_gfxItem.Width) / 2f))'                                  (float)Math.Round(offset.Y + (36 - m_gfxItem.Height) / 2f))'                              Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxItem'                              new Vector2((float)Math.Round(offset.X + ((64 - m_gfxItem.Width) / 2f))'                                  (float)Math.Round(offset.Y + (36 - m_gfxItem.Height) / 2f))'                              Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxItem'                              new Vector2((float)Math.Round(offset.X + ((64 - m_gfxItem.Width) / 2f))'                                  (float)Math.Round(offset.Y + (36 - m_gfxItem.Height) / 2f))'                              Color.White);
Magic Number,EndlessClient.Dialogs,ListDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ListDialogItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_gfxItem'                              new Vector2((float)Math.Round(offset.X + ((64 - m_gfxItem.Width) / 2f))'                                  (float)Math.Round(offset.Y + (36 - m_gfxItem.Height) / 2f))'                              Color.White);
Magic Number,EndlessClient.Dialogs,LockerDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\LockerDialog.cs,SetLockerData,The following statement contains a magic number: ListDialogItem newItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                  {                      Text = rec.Name'                      SubText =                          $"x{item.Amount}  {(rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : "")}"'                      IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                      OffsetY = 45                  };
Magic Number,EndlessClient.Dialogs,LockerDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\LockerDialog.cs,SetLockerData,The following statement contains a magic number: ListDialogItem newItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                  {                      Text = rec.Name'                      SubText =                          $"x{item.Amount}  {(rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : "")}"'                      IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                      OffsetY = 45                  };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: Texture2D bgSprites = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 49);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: _setSize(bgSprites.Width' bgSprites.Height / 2);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(276' 253)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok)) { Visible = true };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(276' 253)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok)) { Visible = true };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: XNALabel[] labels =              {                  new XNALabel(new Rectangle(228' 22' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Name.Length > 0 ? char.ToUpper(CharRef.Name[0]) + CharRef.Name.Substring(1) : ""                  }' //name                  new XNALabel(new Rectangle(228' 52' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Home.Length > 0 ? char.ToUpper(data.Home[0]) + data.Home.Substring(1) : ""                  }' //home                  new XNALabel(new Rectangle(228' 82' 1' 1)' Constants.FontSize08pt5)                  {                      Text = (OldWorld.Instance.ECF[CharRef.Class] ?? new ECFRecord()).Name ?? ""                  }' //class                  new XNALabel(new Rectangle(228' 112' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Partner.Length > 0 ? char.ToUpper(data.Partner[0]) + data.Partner.Substring(1) : ""                  }' //partner                  new XNALabel(new Rectangle(228' 142' 1' 1)' Constants.FontSize08pt5)                  {                      Text = CharRef.Title.Length > 0 ? char.ToUpper(CharRef.Title[0]) + CharRef.Title.Substring(1) : ""                  }' //title                  new XNALabel(new Rectangle(228' 202' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Guild.Length > 0 ? char.ToUpper(data.Guild[0]) + data.Guild.Substring(1) : ""                  }' //guild                  new XNALabel(new Rectangle(228' 232' 1' 1)' Constants.FontSize08pt5)                  {                      Text = data.Rank.Length > 0 ? char.ToUpper(data.Rank[0]) + data.Rank.Substring(1) : ""                  } //rank              };
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,EOPaperdollDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 15);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_characterIcon'                  new Vector2(                      DrawAreaWithOffset.X + m_characterIconRect.X + (m_characterIconRect.Width / 2) - (m_characterIcon.Width / 2)'                      DrawAreaWithOffset.Y + m_characterIconRect.Y + (m_characterIconRect.Height / 2) - (m_characterIcon.Height / 2))'                  Color.White);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_characterIcon'                  new Vector2(                      DrawAreaWithOffset.X + m_characterIconRect.X + (m_characterIconRect.Width / 2) - (m_characterIcon.Width / 2)'                      DrawAreaWithOffset.Y + m_characterIconRect.Y + (m_characterIconRect.Height / 2) - (m_characterIcon.Height / 2))'                  Color.White);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_characterIcon'                  new Vector2(                      DrawAreaWithOffset.X + m_characterIconRect.X + (m_characterIconRect.Width / 2) - (m_characterIcon.Width / 2)'                      DrawAreaWithOffset.Y + m_characterIconRect.Y + (m_characterIconRect.Height / 2) - (m_characterIcon.Height / 2))'                  Color.White);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_characterIcon'                  new Vector2(                      DrawAreaWithOffset.X + m_characterIconRect.X + (m_characterIconRect.Width / 2) - (m_characterIcon.Width / 2)'                      DrawAreaWithOffset.Y + m_characterIconRect.Y + (m_characterIconRect.Height / 2) - (m_characterIcon.Height / 2))'                  Color.White);
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,EOPaperdollDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialog.cs,_getEquipLocRectangle,The following statement contains a magic number: switch (loc)              {                  case EquipLocation.Boots:                      itemArea = new Rectangle(87' 220' 56' 54);                      break;                  case EquipLocation.Accessory:                      itemArea = new Rectangle(55' 250' 23' 23);                      break;                  case EquipLocation.Gloves:                      itemArea = new Rectangle(22' 188' 56' 54);                      break;                  case EquipLocation.Belt:                      itemArea = new Rectangle(87' 188' 56' 23);                      break;                  case EquipLocation.Armor:                      itemArea = new Rectangle(86' 82' 56' 98);                      break;                  case EquipLocation.Necklace:                      itemArea = new Rectangle(152' 51' 56' 23);                      break;                  case EquipLocation.Hat:                      itemArea = new Rectangle(87' 21' 56' 54);                      break;                  case EquipLocation.Shield:                      itemArea = new Rectangle(152' 82' 56' 98);                      break;                  case EquipLocation.Weapon:                      itemArea = new Rectangle(22' 82' 56' 98);                      break;                  case EquipLocation.Ring1:                      itemArea = new Rectangle(152' 190' 23' 23);                      break;                  case EquipLocation.Ring2:                      itemArea = new Rectangle(185' 190' 23' 23);                      break;                  case EquipLocation.Armlet1:                      itemArea = new Rectangle(152' 220' 23' 23);                      break;                  case EquipLocation.Armlet2:                      itemArea = new Rectangle(185' 220' 23' 23);                      break;                  case EquipLocation.Bracer1:                      itemArea = new Rectangle(152' 250' 23' 23);                      break;                  case EquipLocation.Bracer2:                      itemArea = new Rectangle(185' 250' 23' 23);                      break;                  default:                      throw new ArgumentOutOfRangeException(nameof(loc)' "That is not a valid equipment location");              }
Magic Number,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The following statement contains a magic number: m_gfx = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * info.Graphic' true);
Magic Number,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The following statement contains a magic number: DrawLocation = new Vector2(location.X + (m_area.Width / 2 - DrawArea.Width / 2)' location.Y + (m_area.Height / 2 - DrawArea.Height / 2));
Magic Number,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The following statement contains a magic number: DrawLocation = new Vector2(location.X + (m_area.Width / 2 - DrawArea.Width / 2)' location.Y + (m_area.Height / 2 - DrawArea.Height / 2));
Magic Number,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The following statement contains a magic number: DrawLocation = new Vector2(location.X + (m_area.Width / 2 - DrawArea.Width / 2)' location.Y + (m_area.Height / 2 - DrawArea.Height / 2));
Magic Number,EndlessClient.Dialogs,PaperdollDialogItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\PaperdollDialogItem.cs,SetInfo,The following statement contains a magic number: DrawLocation = new Vector2(location.X + (m_area.Width / 2 - DrawArea.Width / 2)' location.Y + (m_area.Height / 2 - DrawArea.Height / 2));
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: BackgroundTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 18);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = messageText'                  TextWidth = 254'                  DrawPosition = new Vector2(18' 57)              };
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = messageText'                  TextWidth = 254'                  DrawPosition = new Vector2(18' 57)              };
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _messageLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = messageText'                  TextWidth = 254'                  DrawPosition = new Vector2(18' 57)              };
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = captionText'                  DrawPosition = new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _captionLabel = new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  ForeColor = ColorConstants.LightYellowText'                  Text = captionText'                  DrawPosition = new Vector2(59' 23)              };
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _cancelButton = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(181' 113)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _cancelButton = new XNAButton(eoDialogButtonService.SmallButtonSheet'                  new Vector2(181' 113)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Cancel)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _pbBackgroundTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 19);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,ProgressDialog,The following statement contains a magic number: _pbForegroundTexture = new Texture2D(Game.GraphicsDevice' 1' _pbBackgroundTexture.Height - 2);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnUpdateControl,The following statement contains a magic number: var pbPercent = (int)((gt.TotalGameTime.TotalSeconds - timeOpened.Value.TotalSeconds) / 2.0f * 100);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnUpdateControl,The following statement contains a magic number: var pbPercent = (int)((gt.TotalGameTime.TotalSeconds - timeOpened.Value.TotalSeconds) / 2.0f * 100);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnUpdateControl,The following statement contains a magic number: _pbWidth = (int)Math.Round(pbPercent / 100.0f * _pbBackgroundTexture.Width);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnUpdateControl,The following statement contains a magic number: pbPercent >= 100
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbBackgroundPosition = new Vector2(15 + DrawPositionWithParentOffset.X' 95 + DrawPositionWithParentOffset.Y);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbBackgroundPosition = new Vector2(15 + DrawPositionWithParentOffset.X' 95 + DrawPositionWithParentOffset.Y);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbForgroundArea = new Rectangle(18 + DrawAreaWithParentOffset.X' 98 + DrawAreaWithParentOffset.Y' _pbWidth - 6' _pbForegroundTexture.Height - 4);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbForgroundArea = new Rectangle(18 + DrawAreaWithParentOffset.X' 98 + DrawAreaWithParentOffset.Y' _pbWidth - 6' _pbForegroundTexture.Height - 4);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbForgroundArea = new Rectangle(18 + DrawAreaWithParentOffset.X' 98 + DrawAreaWithParentOffset.Y' _pbWidth - 6' _pbForegroundTexture.Height - 4);
Magic Number,EndlessClient.Dialogs,ProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ProgressDialog.cs,OnDrawControl,The following statement contains a magic number: var pbForgroundArea = new Rectangle(18 + DrawAreaWithParentOffset.X' 98 + DrawAreaWithParentOffset.Y' _pbWidth - 6' _pbForegroundTexture.Height - 4);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: _setBackgroundTexture(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 67));
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: caption = new XNALabel(new Rectangle(16' 16' 255' 18)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: caption = new XNALabel(new Rectangle(16' 16' 255' 18)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: caption = new XNALabel(new Rectangle(16' 16' 255' 18)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: caption = new XNALabel(new Rectangle(16' 16' 255' 18)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 99)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 99)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 99)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 99)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,QuestDialog,The following statement contains a magic number: SmallItemStyleMaxItemDisplay = 6;
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The following statement contains a magic number: Vector2 firstLoc = new Vector2(89' 153)' secondLoc = new Vector2(183' 153);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The following statement contains a magic number: Vector2 firstLoc = new Vector2(89' 153)' secondLoc = new Vector2(183' 153);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The following statement contains a magic number: Vector2 firstLoc = new Vector2(89' 153)' secondLoc = new Vector2(183' 153);
Magic Number,EndlessClient.Dialogs,QuestDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestDialog.cs,_setDialogButtons,The following statement contains a magic number: Vector2 firstLoc = new Vector2(89' 153)' secondLoc = new Vector2(183' 153);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,QuestHistoryDialogListItem,The following statement contains a magic number: m_iconTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 68' true);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,QuestHistoryDialogListItem,The following statement contains a magic number: _setSize(427' 16);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,QuestHistoryDialogListItem,The following statement contains a magic number: _setSize(427' 16);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,QuestHistoryDialogListItem,The following statement contains a magic number: m_primaryText.DrawLocation = new Vector2(m_primaryText.DrawLocation.X + 25' m_primaryText.DrawLocation.Y);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,QuestHistoryDialogListItem,The following statement contains a magic number: m_secondaryText = new XNALabel(new Rectangle(290' (int)m_primaryText.DrawLocation.Y' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = true'                  BackColor = m_primaryText.BackColor'                  ForeColor = m_primaryText.ForeColor'                  Text = OldWorld.GetString(EOResourceID.QUEST_COMPLETED)              };
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_iconTexture'                  m_firstIconLocation + new Vector2(17 + OffsetX + xOff' OffsetY + yOff + (DrawArea.Height * Index))'                  GetIconSourceRectangle()' Color.White);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_iconTexture'                  m_signalLocation + new Vector2(17 + OffsetX + xOff' OffsetY + yOff + (DrawArea.Height * Index))'                  GetSignalSourceRectangle()' Color.White);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(75' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(75' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(75' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestHistoryDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestHistoryDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_history = new XNAButton(smallButtonSheet' new Vector2(288' 252)' _getSmallButtonOut(SmallButton.History)' _getSmallButtonOver(SmallButton.History));
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_history = new XNAButton(smallButtonSheet' new Vector2(288' 252)' _getSmallButtonOut(SmallButton.History)' _getSmallButtonOver(SmallButton.History));
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_progress = new XNAButton(smallButtonSheet' new Vector2(288' 252)' _getSmallButtonOut(SmallButton.Progress)' _getSmallButtonOver(SmallButton.Progress))              {                  Visible = false              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_progress = new XNAButton(smallButtonSheet' new Vector2(288' 252)' _getSmallButtonOut(SmallButton.Progress)' _getSmallButtonOver(SmallButton.Progress))              {                  Visible = false              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: var ok = new XNAButton(smallButtonSheet' new Vector2(380' 252)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: var ok = new XNAButton(smallButtonSheet' new Vector2(380' 252)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(18' 14' 452' 19)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(18' 14' 452' 19)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(18' 14' 452' 19)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(18' 14' 452' 19)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_scrollBar.DrawLocation = new Vector2(449' 44);
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: m_scrollBar.DrawLocation = new Vector2(449' 44);
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,QuestProgressDialog,The following statement contains a magic number: SmallItemStyleMaxItemDisplay = 10;
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,_setupBGTexture,The following statement contains a magic number: Texture2D wholeBgText = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 59);
Magic Number,EndlessClient.Dialogs,QuestProgressDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialog.cs,_setupBGTexture,The following statement contains a magic number: Texture2D bgText = new Texture2D(Game.GraphicsDevice' wholeBgText.Width' wholeBgText.Height / 2);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: m_iconTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 68' true);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: _setSize(427' 16);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: _setSize(427' 16);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: m_primaryText.DrawLocation = new Vector2(m_primaryText.DrawLocation.X + 25' m_primaryText.DrawLocation.Y);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: m_secondaryText = new XNALabel(new Rectangle(169' (int)m_primaryText.DrawLocation.Y' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = true'                  BackColor = m_primaryText.BackColor'                  ForeColor = m_primaryText.ForeColor'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,QuestProgressDialogListItem,The following statement contains a magic number: m_progress = new XNALabel(new Rectangle(353' (int)m_primaryText.DrawLocation.Y' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = true'                  BackColor = m_primaryText.BackColor'                  ForeColor = m_primaryText.ForeColor'                  Text = " "              };
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_iconTexture'                      m_firstIconLocation + new Vector2(17 + OffsetX + xOff' OffsetY + yOff + (DrawArea.Height * Index))'                      GetIconSourceRectangle(0)' Color.White);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_iconTexture'                      m_secondIconLocation + new Vector2(17 + OffsetX + xOff' OffsetY + yOff + (DrawArea.Height * Index))'                      GetIconSourceRectangle(QuestContextIcon)' Color.White);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_iconTexture'                      m_signalLocation + new Vector2(17 + OffsetX + xOff' OffsetY + yOff + (DrawArea.Height * Index))'                      GetSignalSourceRectangle()' Color.White);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(index * 15' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(index * 15' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetIconSourceRectangle,The following statement contains a magic number: return new Rectangle(index * 15' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,QuestProgressDialogListItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\QuestProgressDialogListItem.cs,GetSignalSourceRectangle,The following statement contains a magic number: return new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: _setBackgroundTexture(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 52));
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: LargeItemStyleMaxItemDisplay = 5;
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: SmallItemStyleMaxItemDisplay = 12;
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(16' 13' 253' 19)' Constants.FontSize08pt75)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(16' 13' 253' 19)' Constants.FontSize08pt75)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(16' 13' 253' 19)' Constants.FontSize08pt75)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_titleText = new XNALabel(new Rectangle(16' 13' 253' 19)' Constants.FontSize08pt75)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,ScrollingListDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 15);
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,SetItemList,The following statement contains a magic number: m_scrollBar.LinesToRender = itemList[0].Style == ListDialogItem.ListItemStyle.Large ? 5 : 12;
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,SetItemList,The following statement contains a magic number: m_scrollBar.LinesToRender = itemList[0].Style == ListDialogItem.ListItemStyle.Large ? 5 : 12;
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following statement contains a magic number: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _textSplitter = new TextSplitter(""' _font) { LineLength = 275 };
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: BackgroundTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PreLoginUI' 40);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _ok = new XNAButton(smallButtonSheet'                  new Vector2(138' 197)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _ok = new XNAButton(smallButtonSheet'                  new Vector2(138' 197)'                  eoDialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Ok)'                  eoDialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(320' 66)' new Vector2(16' 119)'                  ScrollBarColors.LightOnMed' nativeGraphicsManager);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(320' 66)' new Vector2(16' 119)'                  ScrollBarColors.LightOnMed' nativeGraphicsManager);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(320' 66)' new Vector2(16' 119)'                  ScrollBarColors.LightOnMed' nativeGraphicsManager);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,ScrollingMessageDialog,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(320' 66)' new Vector2(16' 119)'                  ScrollBarColors.LightOnMed' nativeGraphicsManager);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,OnDrawControl,The following statement contains a magic number: var pos = new Vector2(27 + (int)DrawPosition.X' 69 + (int)DrawPosition.Y);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,OnDrawControl,The following statement contains a magic number: var pos = new Vector2(27 + (int)DrawPosition.X' 69 + (int)DrawPosition.Y);
Magic Number,EndlessClient.Dialogs,ScrollingMessageDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingMessageDialog.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.DrawString(_font' strToDraw' new Vector2(pos.X' pos.Y + (i - _scrollBar.ScrollOffset) * 13)' ColorConstants.LightGrayText);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: bgTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 61);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_icons = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 68' true);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_signal = new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_signal = new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_signal = new Rectangle(0' 15' 15' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_icon = new Rectangle(0' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: m_icon = new Rectangle(0' 0' 15' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNAButton okButton = new XNAButton(smallButtonSheet' new Vector2(98' 214)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNAButton okButton = new XNAButton(smallButtonSheet' new Vector2(98' 214)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNALabel title = new XNALabel(new Rectangle(20' 17' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = false'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TITLE_PERFORMANCE)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNALabel title = new XNALabel(new Rectangle(20' 17' 1' 1)' Constants.FontSize08pt5)              {                  AutoSize = false'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TITLE_PERFORMANCE)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNALabel[] leftSide = new XNALabel[8]' rightSide = new XNALabel[8];
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: XNALabel[] leftSide = new XNALabel[8]' rightSide = new XNALabel[8];
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[(i - 48) / 16] = new XNALabel(new Rectangle(38' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[(i - 48) / 16] = new XNALabel(new Rectangle(38' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[(i - 48) / 16] = new XNALabel(new Rectangle(38' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[(i - 48) / 16].SetParent(this);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[(i - 48) / 16].SetParent(this);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[(i - 48) / 16] = new XNALabel(new Rectangle(158' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[(i - 48) / 16] = new XNALabel(new Rectangle(158' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[(i - 48) / 16] = new XNALabel(new Rectangle(158' i' 1' 1)' Constants.FontSize08pt5)                  {                      AutoSize = false'                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[(i - 48) / 16].SetParent(this);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[(i - 48) / 16].SetParent(this);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: i <= 160
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[2].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_EXP_NEEDED);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[3].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_TODAY_EXP);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[4].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_TOTAL_AVG);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[5].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_TODAY_AVG);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[6].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_BEST_KILL);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: leftSide[7].Text = OldWorld.GetString(EOResourceID.DIALOG_PERFORMANCE_LAST_KILL);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[2].Text = $"{OldWorld.Instance.exp_table[c.Stats.Level + 1] - c.Stats.Experience}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[3].Text = $"{c.TodayExp}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[4].Text = $"{(int) (c.Stats.Experience/(c.Stats.Usage/60.0))}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[4].Text = $"{(int) (c.Stats.Experience/(c.Stats.Usage/60.0))}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[5].Text = $"{(sessionTime > 0 ? (c.TodayExp/sessionTime) : 0)}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[6].Text = $"{c.TodayBestKill}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: rightSide[7].Text = $"{c.TodayLastKill}";
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,SessionExpDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 15);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 48)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 48)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 64)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 64)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 80)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 80)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 96)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 96)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 112)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 112)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 128)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 128)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 144)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 144)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 160)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 22' DrawAreaWithOffset.Y + 160)' m_icon' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 48)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 48)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 64)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 64)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 80)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,SessionExpDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SessionExpDialog.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_icons' new Vector2(DrawAreaWithOffset.X + 142' DrawAreaWithOffset.Y + 80)' m_signal' Color.White);
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following statement contains a magic number: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showRequirements,The following statement contains a magic number: List<string> drawStrings = new List<string>(15)              {                  OldWorld.Instance.ESF.Data[skill.ID].Name + (skill.ClassReq > 0 ? " [" + OldWorld.Instance.ECF.Data[skill.ClassReq].Name + "]" : "")'                  " "              };
Magic Number,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_showForgetAllMessage,The following statement contains a magic number: TextSplitter ts = new TextSplitter(""' Game.Content.Load<SpriteFont>(Constants.FontSize08pt5)) { LineLength = 200 };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: bgTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 54);
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNALabel lblPrompt = new XNALabel(new Rectangle(16' 20' 235' 49)' Constants.FontSize10)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayDialogMessage'                  TextWidth = 230'                  RowSpacing = 3'                  Text = prompt              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: m_inputBox = new XNATextBox(new Rectangle(37' 74' 192' 19)' EOGame.Instance.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  MaxChars = maxInputChars'                  LeftPadding = 4'                  TextColor = ColorConstants.LightBeigeText              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: m_inputBox = new XNATextBox(new Rectangle(37' 74' 192' 19)' EOGame.Instance.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  MaxChars = maxInputChars'                  LeftPadding = 4'                  TextColor = ColorConstants.LightBeigeText              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: m_inputBox = new XNATextBox(new Rectangle(37' 74' 192' 19)' EOGame.Instance.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  MaxChars = maxInputChars'                  LeftPadding = 4'                  TextColor = ColorConstants.LightBeigeText              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: m_inputBox = new XNATextBox(new Rectangle(37' 74' 192' 19)' EOGame.Instance.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  MaxChars = maxInputChars'                  LeftPadding = 4'                  TextColor = ColorConstants.LightBeigeText              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: m_inputBox = new XNATextBox(new Rectangle(37' 74' 192' 19)' EOGame.Instance.Content.Load<Texture2D>("cursor")' Constants.FontSize08)              {                  MaxChars = maxInputChars'                  LeftPadding = 4'                  TextColor = ColorConstants.LightBeigeText              };
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(41' 103)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))'                  cancel = new XNAButton(smallButtonSheet' new Vector2(134' 103)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(41' 103)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))'                  cancel = new XNAButton(smallButtonSheet' new Vector2(134' 103)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(41' 103)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))'                  cancel = new XNAButton(smallButtonSheet' new Vector2(134' 103)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(41' 103)' _getSmallButtonOut(SmallButton.Ok)' _getSmallButtonOver(SmallButton.Ok))'                  cancel = new XNAButton(smallButtonSheet' new Vector2(134' 103)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TextInputDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TextInputDialog.cs,TextInputDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 107);
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: bgTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 50);
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerName = new XNALabel(new Rectangle(20' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerName = new XNALabel(new Rectangle(20' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerName = new XNALabel(new Rectangle(20' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerName = new XNALabel(new Rectangle(20' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerName = new XNALabel(new Rectangle(285' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerName = new XNALabel(new Rectangle(285' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerName = new XNALabel(new Rectangle(285' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerName = new XNALabel(new Rectangle(285' 14' 166' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerStatus = new XNALabel(new Rectangle(195' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerStatus = new XNALabel(new Rectangle(195' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerStatus = new XNALabel(new Rectangle(195' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftPlayerStatus = new XNALabel(new Rectangle(195' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerStatus = new XNALabel(new Rectangle(462' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerStatus = new XNALabel(new Rectangle(462' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerStatus = new XNALabel(new Rectangle(462' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightPlayerStatus = new XNALabel(new Rectangle(462' 14' 79' 20)' Constants.FontSize08pt5)              {                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  Text = OldWorld.GetString(EOResourceID.DIALOG_TRADE_WORD_TRADING)'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftScroll = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftScroll = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftScroll = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftScroll = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_leftScroll = new OldScrollBar(this' new Vector2(252' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightScroll = new OldScrollBar(this' new Vector2(518' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightScroll = new OldScrollBar(this' new Vector2(518' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightScroll = new OldScrollBar(this' new Vector2(518' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightScroll = new OldScrollBar(this' new Vector2(518' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: m_rightScroll = new OldScrollBar(this' new Vector2(518' 44)' new Vector2(16' 199)' ScrollBarColors.LightOnMed) { LinesToRender = 5 };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(356' 252)' _getSmallButtonOut(SmallButton.Ok)'                  _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: XNAButton ok = new XNAButton(smallButtonSheet' new Vector2(356' 252)' _getSmallButtonOut(SmallButton.Ok)'                  _getSmallButtonOver(SmallButton.Ok));
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(449' 252)' _getSmallButtonOut(SmallButton.Cancel)'                  _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(449' 252)' _getSmallButtonOut(SmallButton.Cancel)'                  _getSmallButtonOver(SmallButton.Cancel));
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: Timer localTimer = new Timer(state =>              {                  if (m_recentPartnerRemoves > 0)                      m_recentPartnerRemoves--;              }' null' 0' 5000);
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,TradeDialog,The following statement contains a magic number: DrawLocation = new Vector2(DrawLocation.X' 30);
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: xOffset = -3;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: m_recentPartnerRemoves = -1000;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: m_recentPartnerRemoves == 3
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: int gfxNum = item.ItemID == 1                      ? 269 + 2 * (item.Amount >= 100000 ? 4 : (item.Amount >= 10000 ? 3 : (item.Amount >= 100 ? 2 : (item.Amount >= 2 ? 1 : 0))))                      : 2 * rec.Graphic - 1;
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,SetPlayerItems,The following statement contains a magic number: var nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                  {                      Text = rec.Name'                      SubText = secondary'                      IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' gfxNum' true)'                      ID = item.ItemID'                      Amount = item.Amount'                      OffsetX = xOffset'                      OffsetY = 46                  };
Magic Number,EndlessClient.Dialogs,TradeDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\TradeDialog.cs,Update,The following statement contains a magic number: ndx < 2
Magic Number,EndlessClient.Dialogs.Services,EODialogButtonService,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Services\EODialogButtonService.cs,GetSmallDialogButtonOutSource,The following statement contains a magic number: var widthDelta = SmallButtonSheet.Width/2;
Magic Number,EndlessClient.Dialogs.Services,EODialogButtonService,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\Services\EODialogButtonService.cs,GetSmallDialogButtonOverSource,The following statement contains a magic number: var widthDelta = SmallButtonSheet.Width/2;
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: m_itemgfx = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * itemData.Graphic' true);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: m_highlightBG = new Texture2D(Game.GraphicsDevice' DrawArea.Width - 3' DrawArea.Height - 3);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: m_highlightBG = new Texture2D(Game.GraphicsDevice' DrawArea.Width - 3' DrawArea.Height - 3);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: Color[] highlight = new Color[(drawArea.Width - 3) * (drawArea.Height - 3)];
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: Color[] highlight = new Color[(drawArea.Width - 3) * (drawArea.Height - 3)];
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: highlight[i] = Color.FromNonPremultiplied(200' 200' 200' 60);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: highlight[i] = Color.FromNonPremultiplied(200' 200' 200' 60);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: highlight[i] = Color.FromNonPremultiplied(200' 200' 200' 60);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: highlight[i] = Color.FromNonPremultiplied(200' 200' 200' 60);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,OldEOInventoryItem,The following statement contains a magic number: m_recentClickTimer = new Timer(                  _state => { if (m_recentClickCount > 0) Interlocked.Decrement(ref m_recentClickCount); }' null' 0' 1000);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following statement contains a magic number: m_alpha = 128;
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following statement contains a magic number: DrawOrder = 200;
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following statement contains a magic number: DrawLocation = new Vector2(currentState.X - (DrawArea.Width / 2)' currentState.Y - (DrawArea.Height / 2));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following statement contains a magic number: DrawLocation = new Vector2(currentState.X - (DrawArea.Width / 2)' currentState.Y - (DrawArea.Height / 2));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following statement contains a magic number: m_recentClickCount == 2
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: Vector2 drawLoc = m_beingDragged                      ? new Vector2(m_oldOffX + 13 + 26 * (currentSlot % OldEOInventory.INVENTORY_ROW_LENGTH)'                          m_oldOffY + 9 + 26 * (currentSlot / OldEOInventory.INVENTORY_ROW_LENGTH)) //recalculate the top-left point for the highlight based on the current drag position                      : new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: Vector2 drawLoc = m_beingDragged                      ? new Vector2(m_oldOffX + 13 + 26 * (currentSlot % OldEOInventory.INVENTORY_ROW_LENGTH)'                          m_oldOffY + 9 + 26 * (currentSlot / OldEOInventory.INVENTORY_ROW_LENGTH)) //recalculate the top-left point for the highlight based on the current drag position                      : new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: Vector2 drawLoc = m_beingDragged                      ? new Vector2(m_oldOffX + 13 + 26 * (currentSlot % OldEOInventory.INVENTORY_ROW_LENGTH)'                          m_oldOffY + 9 + 26 * (currentSlot / OldEOInventory.INVENTORY_ROW_LENGTH)) //recalculate the top-left point for the highlight based on the current drag position                      : new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: Vector2 drawLoc = m_beingDragged                      ? new Vector2(m_oldOffX + 13 + 26 * (currentSlot % OldEOInventory.INVENTORY_ROW_LENGTH)'                          m_oldOffY + 9 + 26 * (currentSlot / OldEOInventory.INVENTORY_ROW_LENGTH)) //recalculate the top-left point for the highlight based on the current drag position                      : new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_itemgfx' new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y)' Color.FromNonPremultiplied(255' 255' 255' m_alpha));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_itemgfx' new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y)' Color.FromNonPremultiplied(255' 255' 255' m_alpha));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_itemgfx' new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y)' Color.FromNonPremultiplied(255' 255' 255' m_alpha));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: DrawLocation = new Vector2(13 + 26 * (Slot % OldEOInventory.INVENTORY_ROW_LENGTH)' 9 + 26 * (Slot / OldEOInventory.INVENTORY_ROW_LENGTH));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: DrawLocation = new Vector2(13 + 26 * (Slot % OldEOInventory.INVENTORY_ROW_LENGTH)' 9 + 26 * (Slot / OldEOInventory.INVENTORY_ROW_LENGTH));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: DrawLocation = new Vector2(13 + 26 * (Slot % OldEOInventory.INVENTORY_ROW_LENGTH)' 9 + 26 * (Slot / OldEOInventory.INVENTORY_ROW_LENGTH));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: DrawLocation = new Vector2(13 + 26 * (Slot % OldEOInventory.INVENTORY_ROW_LENGTH)' 9 + 26 * (Slot / OldEOInventory.INVENTORY_ROW_LENGTH));
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: _setSize(width * 26' height * 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: _setSize(width * 26' height * 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLocation,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,ItemCurrentSlot,The following statement contains a magic number: return (int)((DrawLocation.X - m_oldOffX - 13) / 26) + OldEOInventory.INVENTORY_ROW_LENGTH * (int)((DrawLocation.Y - m_oldOffY - 9) / 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,ItemCurrentSlot,The following statement contains a magic number: return (int)((DrawLocation.X - m_oldOffX - 13) / 26) + OldEOInventory.INVENTORY_ROW_LENGTH * (int)((DrawLocation.Y - m_oldOffY - 9) / 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,ItemCurrentSlot,The following statement contains a magic number: return (int)((DrawLocation.X - m_oldOffX - 13) / 26) + OldEOInventory.INVENTORY_ROW_LENGTH * (int)((DrawLocation.Y - m_oldOffY - 9) / 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,ItemCurrentSlot,The following statement contains a magic number: return (int)((DrawLocation.X - m_oldOffX - 13) / 26) + OldEOInventory.INVENTORY_ROW_LENGTH * (int)((DrawLocation.Y - m_oldOffY - 9) / 26);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLabel,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,UpdateItemLabel,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel = new XNALabel(new Rectangle(DrawArea.Width' 0' 150' 23)' Constants.FontSize08)              {                  Visible = false'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.FromNonPremultiplied(200' 200' 200' 255)'                  BackColor = Color.FromNonPremultiplied(30' 30' 30' 160)              };
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_initItemLabel,The following statement contains a magic number: m_nameLabel.ResizeBasedOnText(16' 9);
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following statement contains a magic number: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following statement contains a magic number: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following statement contains a magic number: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following statement contains a magic number: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Magic Number,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following statement contains a magic number: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,StatusBarBase,The following statement contains a magic number: _texture = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 58' true);
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,StatusBarBase,The following statement contains a magic number: _label = new XNALabel(Constants.FontSize08)              {                  AutoSize = false'                  BackColor = Color.Transparent'                  DrawPosition = new Vector2(3' 15)'                  ForeColor = ColorConstants.LightGrayText'                  Visible = false              };
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,StatusBarBase,The following statement contains a magic number: _label = new XNALabel(Constants.FontSize08)              {                  AutoSize = false'                  BackColor = Color.Transparent'                  DrawPosition = new Vector2(3' 15)'                  ForeColor = ColorConstants.LightGrayText'                  Visible = false              };
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,StatusBarBase,The following statement contains a magic number: _sourceRectangleArea = new Rectangle(0' 0' 110' 14);
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,StatusBarBase,The following statement contains a magic number: _sourceRectangleArea = new Rectangle(0' 0' 110' 14);
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,OnUpdateControl,The following statement contains a magic number: (DateTime.Now - _labelShowTime).TotalSeconds >= 4
Magic Number,EndlessClient.HUD.StatusBars,StatusBarBase,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\StatusBarBase.cs,OnDrawControl,The following statement contains a magic number: var dest = new Vector2(DrawAreaWithParentOffset.X'                                         DrawAreaWithParentOffset.Y + _sourceRectangleArea.Height - 3);
Magic Number,EndlessClient.HUD.StatusBars,HPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\HPStatusBar.cs,HPStatusBar,The following statement contains a magic number: DrawArea = new Rectangle(100' 0' _sourceRectangleArea.Width' _sourceRectangleArea.Height);
Magic Number,EndlessClient.HUD.StatusBars,HPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\HPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.HP] / (double)Stats[CharacterStat.MaxHP] * 79);
Magic Number,EndlessClient.HUD.StatusBars,HPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\HPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.HP] / (double)Stats[CharacterStat.MaxHP] * 79);
Magic Number,EndlessClient.HUD.StatusBars,SPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\SPStatusBar.cs,SPStatusBar,The following statement contains a magic number: DrawArea = new Rectangle(320' 0' _sourceRectangleArea.Width' _sourceRectangleArea.Height);
Magic Number,EndlessClient.HUD.StatusBars,SPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\SPStatusBar.cs,SPStatusBar,The following statement contains a magic number: _sourceRectangleArea.Offset(_sourceRectangleArea.Width * 2' 0);
Magic Number,EndlessClient.HUD.StatusBars,SPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\SPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.SP] / (double)Stats[CharacterStat.MaxSP] * 79);
Magic Number,EndlessClient.HUD.StatusBars,SPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\SPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.SP] / (double)Stats[CharacterStat.MaxSP] * 79);
Magic Number,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,TNLStatusBar,The following statement contains a magic number: DrawArea = new Rectangle(430' 0' _sourceRectangleArea.Width' _sourceRectangleArea.Height);
Magic Number,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,TNLStatusBar,The following statement contains a magic number: _sourceRectangleArea = new Rectangle(_sourceRectangleArea.Width*3 - 1'                                                   0'                                                   _sourceRectangleArea.Width + 1'                                                   _sourceRectangleArea.Height);
Magic Number,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round((Stats[CharacterStat.Experience] - thisLevelExp) / (double)(nextLevelExp - thisLevelExp) * 79);
Magic Number,EndlessClient.HUD.StatusBars,TNLStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TNLStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round((Stats[CharacterStat.Experience] - thisLevelExp) / (double)(nextLevelExp - thisLevelExp) * 79);
Magic Number,EndlessClient.HUD.StatusBars,TPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TPStatusBar.cs,TPStatusBar,The following statement contains a magic number: DrawArea = new Rectangle(210' 0' _sourceRectangleArea.Width' _sourceRectangleArea.Height);
Magic Number,EndlessClient.HUD.StatusBars,TPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.TP] / (double)Stats[CharacterStat.MaxTP] * 79);
Magic Number,EndlessClient.HUD.StatusBars,TPStatusBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\StatusBars\TPStatusBar.cs,DrawStatusBar,The following statement contains a magic number: var srcWidth = 25 + (int)Math.Round(Stats[CharacterStat.TP] / (double)Stats[CharacterStat.MaxTP] * 79);
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 100
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 500
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 750
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 900
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 1099
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 1249
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 1499
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 1899
Magic Number,EndlessClient.Old,OldCharacter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldCharacter.cs,KarmaStringFromNum,The following statement contains a magic number: num <= 2000
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,Draw,The following statement contains a magic number: gameTime.TotalGameTime.TotalMilliseconds - lastFPSRender.Value.TotalMilliseconds > 1000
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: Texture2D back = GFXManager.TextureFromResource(GFXTypes.PreLoginUI' 24' true);
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton = new XNAButton(back' new Vector2(589' 0)' new Rectangle(0' 0' back.Width' back.Height / 2)'                  new Rectangle(0' back.Height / 2' back.Width' back.Height / 2)) { DrawOrder = 100 };
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton = new XNAButton(back' new Vector2(589' 0)' new Rectangle(0' 0' back.Width' back.Height / 2)'                  new Rectangle(0' back.Height / 2' back.Width' back.Height / 2)) { DrawOrder = 100 };
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton = new XNAButton(back' new Vector2(589' 0)' new Rectangle(0' 0' back.Width' back.Height / 2)'                  new Rectangle(0' back.Height / 2' back.Width' back.Height / 2)) { DrawOrder = 100 };
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton = new XNAButton(back' new Vector2(589' 0)' new Rectangle(0' 0' back.Width' back.Height / 2)'                  new Rectangle(0' back.Height / 2' back.Width' back.Height / 2)) { DrawOrder = 100 };
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton = new XNAButton(back' new Vector2(589' 0)' new Rectangle(0' 0' back.Width' back.Height / 2)'                  new Rectangle(0' back.Height / 2' back.Width' back.Height / 2)) { DrawOrder = 100 };
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton.ClickArea = new Rectangle(4' 16' 16' 16);
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton.ClickArea = new Rectangle(4' 16' 16' 16);
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton.ClickArea = new Rectangle(4' 16' 16' 16);
Magic Number,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,InitializeControls,The following statement contains a magic number: _backButton.ClickArea = new Rectangle(4' 16' 16' 16);
Magic Number,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_useItem,The following statement contains a magic number: switch (data.Type)              {                  case ItemType.Teleport: /*Warp packet handles the rest!*/ break;                  case ItemType.Heal:                      {                          OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.HP = data.HP;                          OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.TP = data.TP;                            int percent = (int)Math.Round(100.0 * ((double)data.HP / OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.MaxHP));                            if (data.HPGain > 0)                              OldWorld.Instance.ActiveCharacterRenderer.SetDamageCounterValue(data.HPGain' percent' true);                          m_game.Hud.RefreshStats();                      }                      break;                  case ItemType.HairDye:                      {                          OldWorld.Instance.MainPlayer.ActiveCharacter.RenderData.SetHairColor(data.HairColor);                      }                      break;                  case ItemType.Beer:                      OldWorld.Instance.ActiveCharacterRenderer.MakeDrunk();                      m_game.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_ITEM_USE_DRUNK);                      break;                  case ItemType.EffectPotion: //todo: effect potions for other players                      OldWorld.Instance.ActiveCharacterRenderer.ShowPotionAnimation(data.EffectID);                      break;                  case ItemType.CureCurse:                      {                          //actually remove the item(s) from the main character                          OldCharacter c = OldWorld.Instance.MainPlayer.ActiveCharacter;                          for (int i = 0; i < (int)EquipLocation.PAPERDOLL_MAX; ++i)                          {                              int nextID = c.PaperDoll[i];                              if (nextID > 0 && OldWorld.Instance.EIF[nextID].Special == ItemSpecial.Cursed)                              {                                  c.PaperDoll[i] = 0;                                  switch ((EquipLocation)i)                                  {                                      case EquipLocation.Boots: c.RenderData.SetBoots(0); break;                                      case EquipLocation.Armor: c.RenderData.SetArmor(0); break;                                      case EquipLocation.Hat: c.RenderData.SetHat(0); break;                                      case EquipLocation.Shield: c.RenderData.SetShield(0); break;                                      case EquipLocation.Weapon: c.RenderData.SetWeapon(0); break;                                  }                              }                          }                            //update main character's stats                          CharStatData s = c.Stats;                          s.MaxHP = data.CureStats.MaxHP;                          s.MaxTP = data.CureStats.MaxTP;                          s.Str = data.CureStats.Str;                          s.Int = data.CureStats.Int;                          s.Wis = data.CureStats.Wis;                          s.Agi = data.CureStats.Agi;                          s.Con = data.CureStats.Con;                          s.Cha = data.CureStats.Cha;                          s.MinDam = data.CureStats.MinDam;                          s.MaxDam = data.CureStats.MaxDam;                          s.Accuracy = data.CureStats.Accuracy;                          s.Evade = data.CureStats.Evade;                          s.Armor = data.CureStats.Armor;                          m_game.Hud.RefreshStats();                      }                      break;                  case ItemType.EXPReward:                      {                          CharStatData s = OldWorld.Instance.MainPlayer.ActiveCharacter.Stats;                          if (s.Level < data.RewardStats.Level)                          {                              //level up!                              OldWorld.Instance.MainPlayer.ActiveCharacter.Emote(Emote.LevelUp);                              OldWorld.Instance.ActiveCharacterRenderer.PlayerEmote();                              s.Level = data.RewardStats.Level;                          }                          s.Experience = data.RewardStats.Exp;                          s.StatPoints = data.RewardStats.StatPoints;                          s.SkillPoints = data.RewardStats.SkillPoints;                          s.MaxHP = data.RewardStats.MaxHP;                          s.MaxTP = data.RewardStats.MaxTP;                          s.MaxSP = data.RewardStats.MaxSP;                      }                      break;              }
Magic Number,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_mapMutate,The following statement contains a magic number: string fmt = $"maps\\{OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap'5:D5}.emf";
Magic Number,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,Init,The following statement contains a magic number: exp_table = new int[254];
Magic Number,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,Init,The following statement contains a magic number: exp_table[i] = (int)Math.Round(Math.Pow(i' 3) * 133.1);
Magic Number,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,Init,The following statement contains a magic number: exp_table[i] = (int)Math.Round(Math.Pow(i' 3) * 133.1);
Magic Number,EndlessClient.Old,OldWorld,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\OldWorld.cs,GetSpellIcon,The following statement contains a magic number: Texture2D ret = new Texture2D(fullTexture.GraphicsDevice' fullTexture.Width / 2' fullTexture.Height);
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetHashCode,The following statement contains a magic number: var hash = 397 ^ _data.GetHashCode();
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetHashCode,The following statement contains a magic number: hash = (hash*397) ^ DisplayIndex.GetHashCode();
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetHashCode,The following statement contains a magic number: hash = (hash*397) ^ _partialMessage.GetHashCode();
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,Render,The following statement contains a magic number: var pos = TOP_LEFT + new Vector2(0' DisplayIndex*13);
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,Render,The following statement contains a magic number: spriteBatch.Draw(nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true)'                               new Vector2(pos.X + ICON_GRAPHIC_X_OFF' pos.Y + HeaderYOffset)'                               GetChatIconRectangle(_data.Icon)'                               Color.White);
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetChatIconRectangle,The following statement contains a magic number: return icon == ChatIcon.None ? Rectangle.Empty : new Rectangle(0' (int)icon * 13' 13' 13);
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetChatIconRectangle,The following statement contains a magic number: return icon == ChatIcon.None ? Rectangle.Empty : new Rectangle(0' (int)icon * 13' 13' 13);
Magic Number,EndlessClient.Rendering.Chat,ChatRenderable,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatRenderable.cs,GetChatIconRectangle,The following statement contains a magic number: return icon == ChatIcon.None ? Rectangle.Empty : new Rectangle(0' (int)icon * 13' 13' 13);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,ChatBubble,The following statement contains a magic number: _textLabel = new XNALabel(Constants.FontSize08pt5)              {                  Visible = true'                  TextWidth = 165'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = Color.Black'                  AutoSize = true'                  Text = message              };
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = _isGroupChat ? Color.Tan : Color.FromNonPremultiplied(255' 255' 255' 232);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = _isGroupChat ? Color.Tan : Color.FromNonPremultiplied(255' 255' 255' 232);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = _isGroupChat ? Color.Tan : Color.FromNonPremultiplied(255' 255' 255' 232);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = _isGroupChat ? Color.Tan : Color.FromNonPremultiplied(255' 255' 255' 232);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: xCur < _textLabel.ActualWidth + 6
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,DrawToSpriteBatch,The following statement contains a magic number: spriteBatch.Draw(NUB' _drawLocation + new Vector2((x2 + BR.Width - NUB.Width)/2f' y - 1)' color);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,SetLabelDrawPosition,The following statement contains a magic number: _textLabel.DrawPosition = new Vector2(                  _referenceRenderer.DrawArea.X + _referenceRenderer.DrawArea.Width / 2.0f - _textLabel.ActualWidth / 2.0f + extra'                  _referenceRenderer.DrawArea.Y - _textLabel.ActualHeight - 5);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,SetLabelDrawPosition,The following statement contains a magic number: _textLabel.DrawPosition = new Vector2(                  _referenceRenderer.DrawArea.X + _referenceRenderer.DrawArea.Width / 2.0f - _textLabel.ActualWidth / 2.0f + extra'                  _referenceRenderer.DrawArea.Y - _textLabel.ActualHeight - 5);
Magic Number,EndlessClient.Rendering.Chat,ChatBubble,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Chat\ChatBubble.cs,SetLabelDrawPosition,The following statement contains a magic number: _textLabel.DrawPosition = new Vector2(                  _referenceRenderer.DrawArea.X + _referenceRenderer.DrawArea.Width / 2.0f - _textLabel.ActualWidth / 2.0f + extra'                  _referenceRenderer.DrawArea.Y - _textLabel.ActualHeight - 5);
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: var gfx = amount >= 100000 ? 4 : (                      amount >= 10000 ? 3 : (                          amount >= 100 ? 2 : (                              amount >= 2 ? 1 : 0)));
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: return _nativeGraphicsManager.TextureFromResource(GFXTypes.Items' 269 + 2*gfx' true);
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: return _nativeGraphicsManager.TextureFromResource(GFXTypes.Items' 269 + 2*gfx' true);
Magic Number,EndlessClient.Rendering.Map,MapItemGraphicProvider,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapItemGraphicProvider.cs,GetItemGraphic,The following statement contains a magic number: return _nativeGraphicsManager.TextureFromResource(GFXTypes.Items' 2*item.Graphic - 1' true);
Magic Number,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,GetAlphaForCoordinates,The following statement contains a magic number: return 255;
Magic Number,EndlessClient.Rendering.Map,MapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Map\MapRenderer.cs,GetAlphaForCoordinates,The following statement contains a magic number: alpha = 255;
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,MouseCursorRenderer,The following statement contains a magic number: _mouseCursorTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 24' true);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,MouseCursorRenderer,The following statement contains a magic number: _mapItemText = new XNALabel(Constants.FontSize08pt75)              {                  Visible = false'                  Text = string.Empty'                  ForeColor = Color.White'                  AutoSize = false'                  DrawOrder = 10 //todo: make a better provider for draw orders (see also HudControlsFactory)              };
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: var msX = mouseState.X - SingleCursorFrameArea.Width / 2;
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: var msY = mouseState.Y - SingleCursorFrameArea.Height / 2;
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridX = (int)Math.Round((msX + 2 * msY - 576 + offsetX + 2 * offsetY) / 64.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridX = (int)Math.Round((msX + 2 * msY - 576 + offsetX + 2 * offsetY) / 64.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridX = (int)Math.Round((msX + 2 * msY - 576 + offsetX + 2 * offsetY) / 64.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridX = (int)Math.Round((msX + 2 * msY - 576 + offsetX + 2 * offsetY) / 64.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridY = (int)Math.Round((msY - _gridX * 16 - 144 + offsetY) / 16.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridY = (int)Math.Round((msY - _gridX * 16 - 144 + offsetY) / 16.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,SetGridCoordsBasedOnMousePosition,The following statement contains a magic number: _gridY = (int)Math.Round((msY - _gridX * 16 - 144 + offsetY) / 16.0);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(x*32 - y*32 + 288 - cOffX' y*16 + x*16 + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: drawArea = new Rectangle(                      _char.OffsetX + 304 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX'                      _char.OffsetY + 91 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY'                      m_skinSourceRect.Width' m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: drawArea = new Rectangle(                      _char.OffsetX + 304 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX'                      _char.OffsetY + 91 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY'                      m_skinSourceRect.Width' m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: TopPixel = (Data.gender == 0 ? 12 : 13) + (i == skinData.Length - 1 ? 0 : i / m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: TopPixel = (Data.gender == 0 ? 12 : 13) + (i == skinData.Length - 1 ? 0 : i / m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: _mouseoverName = new BlinkingLabel(new Rectangle(1' 1' 1' 1)' Constants.FontSize08pt75)              {                  Visible = false'                  Text = Character.Name'                  ForeColor = Color.White'                  DrawOrder = (int)ControlDrawLayer.BaseLayer + 3'                  AutoSize = false              };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: levelLabel = new XNALabel(new Rectangle(-32' 75' 1' 1)' Constants.FontSize08pt75)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = data.level.ToString()                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: levelLabel = new XNALabel(new Rectangle(-32' 75' 1' 1)' Constants.FontSize08pt75)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = data.level.ToString()                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: nameLabel = new XNALabel(new Rectangle(104' 2' 89' 22)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = ((char) (data.name[0] - 32)) + data.name.Substring(1)'                      TextAlign = LabelAlignment.MiddleCenter'                      AutoSize = false                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: nameLabel = new XNALabel(new Rectangle(104' 2' 89' 22)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = ((char) (data.name[0] - 32)) + data.name.Substring(1)'                      TextAlign = LabelAlignment.MiddleCenter'                      AutoSize = false                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: nameLabel = new XNALabel(new Rectangle(104' 2' 89' 22)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = ((char) (data.name[0] - 32)) + data.name.Substring(1)'                      TextAlign = LabelAlignment.MiddleCenter'                      AutoSize = false                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: nameLabel = new XNALabel(new Rectangle(104' 2' 89' 22)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = ((char) (data.name[0] - 32)) + data.name.Substring(1)'                      TextAlign = LabelAlignment.MiddleCenter'                      AutoSize = false                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: nameLabel = new XNALabel(new Rectangle(104' 2' 89' 22)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.BeigeText'                      Text = ((char) (data.name[0] - 32)) + data.name.Substring(1)'                      TextAlign = LabelAlignment.MiddleCenter'                      AutoSize = false                  };
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: adminGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PreLoginUI' 22);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: adminRect = new Rectangle(252' 39' 17' 17);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: adminRect = new Rectangle(252' 39' 17' 17);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: adminRect = new Rectangle(252' 39' 17' 17);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,OldCharacterRenderer,The following statement contains a magic number: adminRect = new Rectangle(252' 39' 17' 17);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Initialize,The following statement contains a magic number: _spTimer = new Timer(o =>                  {                      if (Character != null && Character.Stats != null)                      {                          if (Character.Stats.SP < Character.Stats.MaxSP)                              Character.Stats.SP += 2;                          if (Character.Stats.SP > Character.Stats.MaxSP)                              Character.Stats.SP = Character.Stats.MaxSP;                      }                    }' null' 0' 1000);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Initialize,The following statement contains a magic number: _spTimer = new Timer(o =>                  {                      if (Character != null && Character.Stats != null)                      {                          if (Character.Stats.SP < Character.Stats.MaxSP)                              Character.Stats.SP += 2;                          if (Character.Stats.SP > Character.Stats.MaxSP)                              Character.Stats.SP = Character.Stats.MaxSP;                      }                    }' null' 0' 1000);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkUpdateDrawArea,The following statement contains a magic number: drawArea = new Rectangle(                      _char.OffsetX + 304 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX'                      _char.OffsetY + 91 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY'                      m_skinSourceRect.Width' m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkUpdateDrawArea,The following statement contains a magic number: drawArea = new Rectangle(                      _char.OffsetX + 304 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX'                      _char.OffsetY + 91 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY'                      m_skinSourceRect.Width' m_skinSourceRect.Height);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkBringBackFromDead,The following statement contains a magic number: m_deadTime != null && Character.RenderData.dead && (DateTime.Now - m_deadTime.Value).TotalSeconds > 2
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkResetCharacterStateAfterSpell,The following statement contains a magic number: _spellInvocationStartTime != null && (DateTime.Now - _spellInvocationStartTime.Value).TotalMilliseconds > 280
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_adjustSP,The following statement contains a magic number: Character.Stats != null && Character.Stats.SP < Character.Stats.MaxSP &&                  State != CharacterActionState.Attacking && (int)gameTime.TotalGameTime.TotalMilliseconds % 1000 == 0
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkAFKCharacter,The following statement contains a magic number: (DateTime.Now - m_lastActTime).TotalMinutes > 5 &&                  (m_lastEmoteTime == null || (DateTime.Now - m_lastEmoteTime.Value).TotalMinutes > 1)
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkHandleDrunkCharacter,The following statement contains a magic number: m_drunkOffset = (new Random()).Next(1000' 6000);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkHandleDrunkCharacter,The following statement contains a magic number: m_drunkOffset = (new Random()).Next(1000' 6000);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkHandleDrunkCharacter,The following statement contains a magic number: (DateTime.Now - m_drunkTime.Value).TotalMilliseconds >= 30000
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkMouseoverState,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkMouseoverState,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_checkMouseoverState,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawAreaWithOffset.X + (32 - _mouseoverName.ActualWidth)/2f'                  DrawAreaWithOffset.Y + TopPixel - _mouseoverName.ActualHeight - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerAttack,The following statement contains a magic number: const int attackTimer = 285;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,PlayerEmote,The following statement contains a magic number: const int EmoteTimeBetweenFrames = 250;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(adminGraphic' new Rectangle(DrawAreaWithOffset.X + 48' DrawAreaWithOffset.Y + 73' adminRect.Value.Width' adminRect.Value.Height)' adminRect' Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(adminGraphic' new Rectangle(DrawAreaWithOffset.X + 48' DrawAreaWithOffset.Y + 73' adminRect.Value.Width' adminRect.Value.Height)' adminRect' Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(_charRenderTarget' new Vector2(0' 0)'                  _char.RenderData.hidden || _char.RenderData.dead ? Color.FromNonPremultiplied(255' 255' 255' 128) : Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(_charRenderTarget' new Vector2(0' 0)'                  _char.RenderData.hidden || _char.RenderData.dead ? Color.FromNonPremultiplied(255' 255' 255' 128) : Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(_charRenderTarget' new Vector2(0' 0)'                  _char.RenderData.hidden || _char.RenderData.dead ? Color.FromNonPremultiplied(255' 255' 255' 128) : Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,Draw,The following statement contains a magic number: sb.Draw(_charRenderTarget' new Vector2(0' 0)'                  _char.RenderData.hidden || _char.RenderData.dead ? Color.FromNonPremultiplied(255' 255' 255' 128) : Color.White);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_attackTimerCallback,The following statement contains a magic number: Data.attackFrame == 2
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_emoteTimerCallback,The following statement contains a magic number: Data.emoteFrame == 3
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: GraphicsDevice.Clear(ClearOptions.Target' Color.FromNonPremultiplied(255'255'255'100)' 1' 0);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: GraphicsDevice.Clear(ClearOptions.Target' Color.FromNonPremultiplied(255'255'255'100)' 1' 0);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: GraphicsDevice.Clear(ClearOptions.Target' Color.FromNonPremultiplied(255'255'255'100)' 1' 0);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: GraphicsDevice.Clear(ClearOptions.Target' Color.FromNonPremultiplied(255'255'255'100)' 1' 0);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: SpriteBatch.Draw(shield' new Vector2(DrawAreaWithOffset.X - 10' DrawAreaWithOffset.Y - 7)' null' Color.White' 0.0f'                      Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: SpriteBatch.Draw(shield' new Vector2(DrawAreaWithOffset.X - 10' DrawAreaWithOffset.Y - 7)' null' Color.White' 0.0f'                      Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: SpriteBatch.Draw(shield' new Vector2(DrawAreaWithOffset.X - 10' DrawAreaWithOffset.Y - 7)' null' Color.White' 0.0f'                      Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawCharToRenderTarget,The following statement contains a magic number: SpriteBatch.Draw(shield' new Vector2(DrawAreaWithOffset.X - 10' DrawAreaWithOffset.Y - 7)' null' Color.White' 0.0f'                      Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: Vector2 facePos = new Vector2(skinLoc.X + (Facing == EODirection.Down ? 2 : 3)'                           skinLoc.Y + (_data != null ? (_data.gender == 0 ? 2 : 0) : 0));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: Vector2 facePos = new Vector2(skinLoc.X + (Facing == EODirection.Down ? 2 : 3)'                           skinLoc.Y + (_data != null ? (_data.gender == 0 ? 2 : 0) : 0));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: Vector2 facePos = new Vector2(skinLoc.X + (Facing == EODirection.Down ? 2 : 3)'                           skinLoc.Y + (_data != null ? (_data.gender == 0 ? 2 : 0) : 0));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: Vector2 emotePos = new Vector2(skinLoc.X - 15' DrawAreaWithOffset.Y - emote.Height + 10);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: Vector2 emotePos = new Vector2(skinLoc.X - 15' DrawAreaWithOffset.Y - emote.Height + 10);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawSkin,The following statement contains a magic number: SpriteBatch.Draw(emote' emotePos' emoteRect' Color.FromNonPremultiplied(0xff' 0xff' 0xff' 128));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: Vector2 skinLoc = new Vector2(6 + DrawAreaWithOffset.X' (Data.gender == 0 ? 12 : 13) + DrawAreaWithOffset.Y);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: Vector2 skinLoc = new Vector2(6 + DrawAreaWithOffset.X' (Data.gender == 0 ? 12 : 13) + DrawAreaWithOffset.Y);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: Vector2 skinLoc = new Vector2(6 + DrawAreaWithOffset.X' (Data.gender == 0 ? 12 : 13) + DrawAreaWithOffset.Y);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following statement contains a magic number: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeaponLater,The following statement contains a magic number: bool pass1 = Data == null || Data.attackFrame == 2;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: xOffLoc = Data.gender == 0 ? 2 : 4;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: xOffLoc = Data.gender == 0 ? 2 : 4;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: xOffLoc = Data.gender == 0 ? -2 : -4;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: xOffLoc = Data.gender == 0 ? -2 : -4;
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: Data != null && Data.attackFrame == 2 && weaponInfo.SubType != ItemSubType.Ranged
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: Vector2 loc = flipped                  ? new Vector2(DrawAreaWithOffset.X - 10 + xOffLoc' DrawAreaWithOffset.Y - 7)                  : new Vector2(DrawAreaWithOffset.X - 28 + xOffLoc' DrawAreaWithOffset.Y - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: Vector2 loc = flipped                  ? new Vector2(DrawAreaWithOffset.X - 10 + xOffLoc' DrawAreaWithOffset.Y - 7)                  : new Vector2(DrawAreaWithOffset.X - 28 + xOffLoc' DrawAreaWithOffset.Y - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: Vector2 loc = flipped                  ? new Vector2(DrawAreaWithOffset.X - 10 + xOffLoc' DrawAreaWithOffset.Y - 7)                  : new Vector2(DrawAreaWithOffset.X - 28 + xOffLoc' DrawAreaWithOffset.Y - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawWeapon,The following statement contains a magic number: Vector2 loc = flipped                  ? new Vector2(DrawAreaWithOffset.X - 10 + xOffLoc' DrawAreaWithOffset.Y - 7)                  : new Vector2(DrawAreaWithOffset.X - 28 + xOffLoc' DrawAreaWithOffset.Y - 7);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: weaponIsMelee && Data != null && Data.attackFrame == 2
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following statement contains a magic number: SpriteBatch.Draw(armor' new Vector2(DrawAreaWithOffset.X - 2 + xAdjust' DrawAreaWithOffset.Y + yAdjust)' null' Color.White' 0.0f'                  Vector2.Zero' 1.0f' flipped ? SpriteEffects.FlipHorizontally : SpriteEffects.None' 0.0f);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: Vector2 hairLoc = new Vector2(DrawAreaWithOffset.X + (flipped ? 2 : 0)' DrawAreaWithOffset.Y);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: Vector2 hatLoc = new Vector2(DrawAreaWithOffset.X' DrawAreaWithOffset.Y - 3);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following statement contains a magic number: weaponIsMelee && Data != null && Data.attackFrame == 2
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: Vector2 drawLoc = new Vector2(DrawAreaWithOffset.X - 2' DrawAreaWithOffset.Y + 49);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: Vector2 drawLoc = new Vector2(DrawAreaWithOffset.X - 2' DrawAreaWithOffset.Y + 49);
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          break;                      case EODirection.Up:                          bootsOffX = 6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                      case EODirection.Left:                          bootsOffX = -6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          break;                      case EODirection.Up:                          bootsOffX = 6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                      case EODirection.Left:                          bootsOffX = -6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          break;                      case EODirection.Up:                          bootsOffX = 6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                      case EODirection.Left:                          bootsOffX = -6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          break;                      case EODirection.Up:                          bootsOffX = 6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                      case EODirection.Left:                          bootsOffX = -6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                  }
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following statement contains a magic number: weaponIsMelee && Data != null && Data.attackFrame == 2
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_beginSpellCast,The following statement contains a magic number: var castTime = (int)(Math.Round(spell.CastTime / 2.0 * 950));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_beginSpellCast,The following statement contains a magic number: var castTime = (int)(Math.Round(spell.CastTime / 2.0 * 950));
Magic Number,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,StopShouting,The following statement contains a magic number: _mouseoverName.SetCallback(600' () => StopShouting(false));
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Texture2D bgImage = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 41' true);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: const int W = 96' H = 137;
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: const int W = 96' H = 137;
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,EOMapContextMenu,The following statement contains a magic number: Rectangle region = new Rectangle(6' (i < 5 ? 11 : 13)+ 14*i' 86' 14);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The following statement contains a magic number: DrawLocation = new Vector2(rendRect.Right + 20' rendRect.Y + rend.TopPixel);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The following statement contains a magic number: DrawLocation = new Vector2(rendRect.X - DrawArea.Width - 20' drawLocation.Y);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The following statement contains a magic number: DrawAreaWithOffset.Right > Game.GraphicsDevice.PresentationParameters.BackBufferWidth - 15
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The following statement contains a magic number: DrawLocation = new Vector2(drawLocation.X' 298 - DrawArea.Height);
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,SetCharacterRenderer,The following statement contains a magic number: DrawAreaWithOffset.Bottom > 308
Magic Number,EndlessClient.Rendering,EOMapContextMenu,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\ContextMenuRenderer.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_fill' DrawAreaWithOffset' Color.FromNonPremultiplied(0xff' 0xff' 0xff' 192));
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following statement contains a magic number: short baseArmorValue = (short)((_data.armor - 1) * 50);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following statement contains a magic number: switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following statement contains a magic number: switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following statement contains a magic number: switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following statement contains a magic number: short baseShieldValue = (short)((_data.shield - 1) * 50);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following statement contains a magic number: short baseWeaponValue = (short)((_data.weapon - 1) * 100);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following statement contains a magic number: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following statement contains a magic number: short baseBootsValue = (short)((_data.boots - 1) * 40);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHair,The following statement contains a magic number: byte turnedOffset = (byte)((_data.facing == EODirection.Left || _data.facing == EODirection.Up) ? 2 : 0);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHair,The following statement contains a magic number: int gfxNumber = 2 + ((_data.hairstyle - 1) * 40) + (_data.haircolor * 4) + turnedOffset;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHair,The following statement contains a magic number: int gfxNumber = 2 + ((_data.hairstyle - 1) * 40) + (_data.haircolor * 4) + turnedOffset;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHair,The following statement contains a magic number: int gfxNumber = 2 + ((_data.hairstyle - 1) * 40) + (_data.haircolor * 4) + turnedOffset;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHat,The following statement contains a magic number: short baseHatValue = (short)((_data.hat - 1) * 10);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetHat,The following statement contains a magic number: int factor = (_data.facing == EODirection.Down || _data.facing == EODirection.Right) ? 0 : 2;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: const byte sheetRows = 7;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: byte sheetColumns = 4;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: gfxNum = 2;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: sheetColumns = 16;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: int section = sheet.Width/4;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetSkin,The following statement contains a magic number: skinRect = new XNA.Rectangle(                  _data.gender * widthDelta * (sheetColumns / 2) + (rotated ? section : 0) + walkExtra'                  _data.race * heightDelta'                  widthDelta'                  heightDelta);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetFace,The following statement contains a magic number: const int ROWS = 14;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetFace,The following statement contains a magic number: const int COLS = 11;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetFace,The following statement contains a magic number: Texture2D face = _gfxManager.TextureFromResource(GFXTypes.SkinSprites' 8' true);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetFace,The following statement contains a magic number: int genderOffset = (face.Height/2)*_data.gender;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetFace,The following statement contains a magic number: int emote = _data.emote == Emote.Playful || _data.emote == Emote.Drunk ? 10 : (int)_data.emote - 1;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: const int NUM_EMOTES = 15;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: const int NUM_FRAMES = 4;
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: switch (_data.emote)              {                  case Emote.Happy: /*0*/break;                  case Emote.Depressed: convertedEmote = 7; break;                  case Emote.Sad: convertedEmote = 1; break;                  case Emote.Angry: convertedEmote = 5; break;                  case Emote.Confused: convertedEmote = 3; break;                  case Emote.Surprised: convertedEmote = 2; break;                  case Emote.Hearts: convertedEmote = 6; break;                  case Emote.Moon: convertedEmote = 4; break;                  case Emote.Suicidal: convertedEmote = 9; break;                  case Emote.Embarassed: convertedEmote = 8; break;                  case Emote.Drunk:                  case Emote.Trade:                  case Emote.LevelUp:                  case Emote.Playful: convertedEmote = (int)_data.emote - 1; break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetEmote,The following statement contains a magic number: Texture2D emote = _gfxManager.TextureFromResource(GFXTypes.PostLoginUI' 38' true);
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following statement contains a magic number: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following statement contains a magic number: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following statement contains a magic number: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following statement contains a magic number: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following statement contains a magic number: switch (type)              {                  case BootsSpriteType.WalkFrame1:                  case BootsSpriteType.WalkFrame2:                  case BootsSpriteType.WalkFrame3:                  case BootsSpriteType.WalkFrame4:                      return 4;              }
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: Texture2D wholeSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58' true);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: Color[] data = new Color[123*24];
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: Color[] data = new Color[123*24];
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(40' 28' 123' 24)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(40' 28' 123' 24)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(40' 28' 123' 24)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(40' 28' 123' 24)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: s_NumberSprites = new Texture2D(Game.GraphicsDevice' 123' 24);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: s_NumberSprites = new Texture2D(Game.GraphicsDevice' 123' 24);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: Color[] data = new Color[40*35];
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: Color[] data = new Color[40*35];
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(0' 28' 40' 35)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(0' 28' 40' 35)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: wholeSheet.GetData(0' new Rectangle(0' 28' 40' 35)' data' 0' data.Length);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: s_HealthBarSprites = new Texture2D(Game.GraphicsDevice' 40' 35);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,DamageCounter,The following statement contains a magic number: s_HealthBarSprites = new Texture2D(Game.GraphicsDevice' 40' 35);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_numbersToDraw.Add(new Rectangle(92' 0' 30' 11));
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_numbersToDraw.Add(new Rectangle(92' 0' 30' 11));
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_numbersToDraw.Add(new Rectangle(92' 0' 30' 11));
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_additionalOffset += .1f;
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_additionalOffset >= 4
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_healthBarPos = new Vector2(tmp.X - 3' tmp.Y - 15);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Update,The following statement contains a magic number: m_healthBarPos = new Vector2(tmp.X - 3' tmp.Y - 15);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(s_NumberSprites' pos + new Vector2(ndx*9' 0)' r' Color.White);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(s_HealthBarSprites' m_healthBarPos' new Rectangle(0' 28' 40' 7)' Color.White);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(s_HealthBarSprites' m_healthBarPos' new Rectangle(0' 28' 40' 7)' Color.White);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(s_HealthBarSprites' m_healthBarPos' new Rectangle(0' 28' 40' 7)' Color.White);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: healthSrcRect = new Rectangle(0' 7' (int)Math.Round(m_percentHealth * .4)' 7);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: healthSrcRect = new Rectangle(0' 7' (int)Math.Round(m_percentHealth * .4)' 7);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: healthSrcRect = new Rectangle(0' 7' (int)Math.Round(m_percentHealth * .4)' 7);
Magic Number,EndlessClient.Rendering,DamageCounter,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\HealthBarRenderer.cs,Draw,The following statement contains a magic number: m_percentHealth >= 50
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,SpikeDamage,The following statement contains a magic number: int percentHealth = (int)Math.Round(((double)hp / maxhp) * 100.0);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,DrainHPFromPlayers,The following statement contains a magic number: int percentHealth = (int)Math.Round(((double)hp / maxhp) * 100.0);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Initialize,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Initialize,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Initialize,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Initialize,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_animateWallTiles,The following statement contains a magic number: _wallSrcIndex == 4
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_animateWallTiles,The following statement contains a magic number: _tileSrc = new Vector2(64 + _tileSrc.X' 0);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_animateWallTiles,The following statement contains a magic number: _tileSrc.X > 192
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_animateWallTiles,The following statement contains a magic number: (gameTime.TotalGameTime - _lastAnimUpdate.Value).TotalMilliseconds > 500
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Draw,The following statement contains a magic number: _mapLoadTime != null && (DateTime.Now - _mapLoadTime.Value).TotalMilliseconds > 2000
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Draw,The following statement contains a magic number: _sb.DrawString(EOGame.Instance.DBGFont' $"FPS: {OldWorld.FPS}"' new Vector2(30' 30)' Color.White);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,Draw,The following statement contains a magic number: _sb.DrawString(EOGame.Instance.DBGFont' $"FPS: {OldWorld.FPS}"' new Vector2(30' 30)' Color.White);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: const int localViewLength = 10;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(fillTileRef' new Vector2(pos.X - 1' pos.Y - 2)'                              Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(fillTileRef' new Vector2(pos.X - 1' pos.Y - 2)'                              Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(fillTileRef' new Vector2(pos.X - 1' pos.Y - 2)'                              Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(fillTileRef' new Vector2(pos.X - 1' pos.Y - 2)'                              Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: Rectangle? src = nextTile.Width > 64 ? new Rectangle?(new Rectangle((int)_tileSrc.X' (int)_tileSrc.Y' nextTile.Width / 4' nextTile.Height)) : null;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: Rectangle? src = nextTile.Width > 64 ? new Rectangle?(new Rectangle((int)_tileSrc.X' (int)_tileSrc.Y' nextTile.Width / 4' nextTile.Height)) : null;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(nextTile' new Vector2(pos.X - 1' pos.Y - 2)' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(nextTile' new Vector2(pos.X - 1' pos.Y - 2)' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(nextTile' new Vector2(pos.X - 1' pos.Y - 2)' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: _sb.Draw(nextTile' new Vector2(pos.X - 1' pos.Y - 2)' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(j' i' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawGroundLayer,The following statement contains a magic number: nextTile.Width > 64
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapItems,The following statement contains a magic number: _sb.Draw(itemTexture'                                new Vector2(itemPos.X - (int)Math.Round(itemTexture.Width / 2.0)'                                           itemPos.Y - (int)Math.Round(itemTexture.Height / 2.0))'                              Color.White);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapItems,The following statement contains a magic number: _sb.Draw(itemTexture'                                new Vector2(itemPos.X - (int)Math.Round(itemTexture.Width / 2.0)'                                           itemPos.Y - (int)Math.Round(itemTexture.Height / 2.0))'                              Color.White);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: var firstRow = Math.Max(c.Y - 22' 0);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: int lastRow = Math.Min(c.Y + 22' MapRef.Properties.Height);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: var firstCol = Math.Max(c.X - 22' 0);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: int lastCol = Math.Min(c.X + 22' MapRef.Properties.Width);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 10 && rowDelta <= 10
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 10 && rowDelta <= 10
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 20 && rowDelta <= 20
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 20 && rowDelta <= 20
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 12 && rowDelta <= 12
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAndActors,The following statement contains a magic number: colDelta <= 12 && rowDelta <= 12
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOverlayAtLoc,The following statement contains a magic number: pos = new Vector2(pos.X + 16' pos.Y - 11);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOverlayAtLoc,The following statement contains a magic number: pos = new Vector2(pos.X + 16' pos.Y - 11);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOverlayAtLoc,The following statement contains a magic number: _sb.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOverlayAtLoc,The following statement contains a magic number: _sb.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOverlayAtLoc,The following statement contains a magic number: _sb.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawShadowsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' new Vector2(loc.X - 24' loc.Y - 12)' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: const int WALL_FRAME_WIDTH = 68;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: int gfxWidthDelta = gfx.Width / 4;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 47'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 47'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 47'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: int gfxWidthDelta = gfx.Width / 4;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 15'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 15'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width) / 2.0) + 15'                      loc.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawWallAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' src' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round(gfx.Width / 2.0) + 29' loc.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round(gfx.Width / 2.0) + 29' loc.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - (int)Math.Round(gfx.Width / 2.0) + 29' loc.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawMapObjectsAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawUnknownLayerAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X' loc.Y - 65);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawUnknownLayerAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawUnknownLayerAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawUnknownLayerAtLoc,The following statement contains a magic number: _sb.Draw(gfx' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(colIndex' rowIndex' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOnTopLayerAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - 2' loc.Y - 31);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawOnTopLayerAtLoc,The following statement contains a magic number: loc = new Vector2(loc.X - 2' loc.Y - 31);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: loc = new Vector2(loc.X - kvp.Value.Width/2f + 30' loc.Y - kvp.Value.Height + 28);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: loc = new Vector2(loc.X - kvp.Value.Width/2f + 30' loc.Y - kvp.Value.Height + 28);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: loc = new Vector2(loc.X - kvp.Value.Width/2f + 30' loc.Y - kvp.Value.Height + 28);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: _sb.Draw(kvp.Value' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(kvp.Key.X' kvp.Key.Y' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: _sb.Draw(kvp.Value' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(kvp.Key.X' kvp.Key.Y' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_drawRoofsOnTop,The following statement contains a magic number: _sb.Draw(kvp.Value' loc' Color.FromNonPremultiplied(255' 255' 255' _getAlpha(kvp.Key.X' kvp.Key.Y' c)));
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2((x * 32) - (y * 32) + 288 - cOffX' (y * 16) + (x * 16) + 144 - cOffY);
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_getAlpha,The following statement contains a magic number: return 255;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_getAlpha,The following statement contains a magic number: const double TRANSITION_TIME_MS = 125.0;
Magic Number,EndlessClient.Rendering,OldMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMapRenderer.cs,_getAlpha,The following statement contains a magic number: alpha = 255;
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawMiniMap,The following statement contains a magic number: Texture2D miniMapText = EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 45' true);
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawMiniMap,The following statement contains a magic number: Rectangle miniMapRectSrc = new Rectangle(0' 0' miniMapText.Width / 9' miniMapText.Height);
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawMiniMap,The following statement contains a magic number: col <= Math.Min(c.X + 30' Map.Properties.Width)
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawMiniMap,The following statement contains a magic number: row <= Math.Min(c.Y + 30' Map.Properties.Height)
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.UpLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.UpLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.UpLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.UpLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.LeftLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.LeftLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.LeftLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc'                      new Rectangle((int)MiniMapGfx.LeftLine * miniMapRect.Width' 0' miniMapRect.Width' miniMapRect.Height)'                      Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc' miniMapRect' Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc' miniMapRect' Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc' miniMapRect' Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_drawGridBox,The following statement contains a magic number: _spriteBatch.Draw(miniMapText' loc' miniMapRect' Color.FromNonPremultiplied(255' 255' 255' 128));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,MiniMapRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MiniMapRenderer.cs,_getMiniMapDrawCoordinates,The following statement contains a magic number: return new Vector2((x * 13) - (y * 13) + 288 - (c.X * 13 - c.Y * 13)' (y * 7) + (x * 7) + 144 - (c.Y * 7 + c.X * 7));
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,OldNPCRenderer,The following statement contains a magic number: _fadeAwayAlpha = 255;
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: Color col = NPC.Dying ? Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha -= 3) : Color.White;
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: Color col = NPC.Dying ? Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha -= 3) : Color.White;
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: Color col = NPC.Dying ? Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha -= 3) : Color.White;
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: Color col = NPC.Dying ? Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha -= 3) : Color.White;
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,InitializeTopPixel,The following statement contains a magic number: tries < 3
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,InitializeTopPixel,The following statement contains a magic number: tries >= 3
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,CreateMouseoverName,The following statement contains a magic number: _mouseoverName = new XNALabel(new Rectangle(1' 1' 1' 1)' Constants.FontSize08pt75)              {                  Visible = false'                  Text = NPC.Data.Name'                  ForeColor = Color.White'                  AutoSize = false'                  DrawOrder = (int)ControlDrawLayer.BaseLayer + 3              };
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,CreateMouseoverName,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawArea.X + (DrawArea.Width - _mouseoverName.ActualWidth) / 2f'                  DrawArea.Y + TopPixel - _mouseoverName.ActualHeight - 4);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,CreateMouseoverName,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawArea.X + (DrawArea.Width - _mouseoverName.ActualWidth) / 2f'                  DrawArea.Y + TopPixel - _mouseoverName.ActualHeight - 4);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The following statement contains a magic number: DrawArea = new Rectangle(                  DrawOffsetX + 320 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX - (int)(_npcTextureFrameRectangle.Width / 6.4 * 3.2)'                  DrawOffsetY + 168 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY - _npcTextureFrameRectangle.Height'                  _npcTextureFrameRectangle.Width' _npcTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The following statement contains a magic number: DrawArea = new Rectangle(                  DrawOffsetX + 320 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX - (int)(_npcTextureFrameRectangle.Width / 6.4 * 3.2)'                  DrawOffsetY + 168 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY - _npcTextureFrameRectangle.Height'                  _npcTextureFrameRectangle.Width' _npcTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The following statement contains a magic number: DrawArea = new Rectangle(                  DrawOffsetX + 320 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX - (int)(_npcTextureFrameRectangle.Width / 6.4 * 3.2)'                  DrawOffsetY + 168 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY - _npcTextureFrameRectangle.Height'                  _npcTextureFrameRectangle.Width' _npcTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The following statement contains a magic number: DrawArea = new Rectangle(                  DrawOffsetX + 320 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetX - (int)(_npcTextureFrameRectangle.Width / 6.4 * 3.2)'                  DrawOffsetY + 168 - OldWorld.Instance.MainPlayer.ActiveCharacter.OffsetY - _npcTextureFrameRectangle.Height'                  _npcTextureFrameRectangle.Width' _npcTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateDrawArea,The following statement contains a magic number: MapProjectedDrawArea = new Rectangle(                  DrawArea.X + (int) (Math.Abs(oneGridSize.X - DrawArea.Width)/2)'                  DrawArea.Bottom - (int) oneGridSize.Y'                  (int)oneGridSize.X'                  (int)oneGridSize.Y);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateStandingFrameIfNeeded,The following statement contains a magic number: (DateTime.Now - _lastAnimUpdateTime).TotalMilliseconds > 250
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateMouseoverName,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawArea.X + (DrawArea.Width - _mouseoverName.ActualWidth) / 2f'                  DrawArea.Y + TopPixel - _mouseoverName.ActualHeight - 4);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateMouseoverName,The following statement contains a magic number: _mouseoverName.DrawLocation = new Vector2(                  DrawArea.X + (DrawArea.Width - _mouseoverName.ActualWidth) / 2f'                  DrawArea.Y + TopPixel - _mouseoverName.ActualHeight - 4);
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: !NPC.Walking || (DateTime.Now - _actionStartTime).TotalMilliseconds < 100
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following statement contains a magic number: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Magic Number,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateAttackFrameIfNeeded,The following statement contains a magic number: !NPC.Attacking || (DateTime.Now - _actionStartTime).TotalMilliseconds < 100
Magic Number,EndlessClient.Rendering,PlayerStatusIconRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\PlayerStatusIconRenderer.cs,PlayerStatusIconRenderer,The following statement contains a magic number: _statusIcons = EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 46' true);
Magic Number,EndlessClient.Rendering,PlayerStatusIconRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\PlayerStatusIconRenderer.cs,PlayerStatusIconRenderer,The following statement contains a magic number: _widthDelta = _statusIcons.Width / 4;
Magic Number,EndlessClient.Rendering,PlayerStatusIconRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\PlayerStatusIconRenderer.cs,PlayerStatusIconRenderer,The following statement contains a magic number: _heightDelta = _statusIcons.Height / 2;
Magic Number,EndlessClient.Rendering,PlayerStatusIconRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\PlayerStatusIconRenderer.cs,Draw,The following statement contains a magic number: extraOffset += 24;
Magic Number,EndlessClient.Rendering,PlayerStatusIconRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\PlayerStatusIconRenderer.cs,GetSourceRectangle,The following statement contains a magic number: var index = (int)Math.Log((int) type' 2);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,NPCRenderer,The following statement contains a magic number: _fadeAwayAlpha = 255;
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,DrawToSpriteBatch,The following statement contains a magic number: var color = Color.FromNonPremultiplied(255' 255' 255' _fadeAwayAlpha);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDrawAreas,The following statement contains a magic number: DrawArea = new Rectangle(                  //not sure where magic numbers 6.4 and 3.2 come from. They seem important.                  offsetX + 320 - mainOffsetX - (int)(_baseTextureFrameRectangle.Width / 6.4 * 3.2)'                  offsetY + 168 - mainOffsetY - _baseTextureFrameRectangle.Height'                  _baseTextureFrameRectangle.Width' _baseTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDrawAreas,The following statement contains a magic number: DrawArea = new Rectangle(                  //not sure where magic numbers 6.4 and 3.2 come from. They seem important.                  offsetX + 320 - mainOffsetX - (int)(_baseTextureFrameRectangle.Width / 6.4 * 3.2)'                  offsetY + 168 - mainOffsetY - _baseTextureFrameRectangle.Height'                  _baseTextureFrameRectangle.Width' _baseTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDrawAreas,The following statement contains a magic number: DrawArea = new Rectangle(                  //not sure where magic numbers 6.4 and 3.2 come from. They seem important.                  offsetX + 320 - mainOffsetX - (int)(_baseTextureFrameRectangle.Width / 6.4 * 3.2)'                  offsetY + 168 - mainOffsetY - _baseTextureFrameRectangle.Height'                  _baseTextureFrameRectangle.Width' _baseTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDrawAreas,The following statement contains a magic number: DrawArea = new Rectangle(                  //not sure where magic numbers 6.4 and 3.2 come from. They seem important.                  offsetX + 320 - mainOffsetX - (int)(_baseTextureFrameRectangle.Width / 6.4 * 3.2)'                  offsetY + 168 - mainOffsetY - _baseTextureFrameRectangle.Height'                  _baseTextureFrameRectangle.Width' _baseTextureFrameRectangle.Height);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDrawAreas,The following statement contains a magic number: MapProjectedDrawArea = new Rectangle(                  DrawArea.X + (int)(Math.Abs(oneGridSize.X - DrawArea.Width) / 2)'                  DrawArea.Bottom - (int)oneGridSize.Y'                  (int)oneGridSize.X'                  (int)oneGridSize.Y);
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateStandingFrameAnimation,The following statement contains a magic number: !_hasStandingAnimation                  || !NPC.IsActing(NPCActionState.Standing)                  || (now - _lastStandingAnimation).TotalMilliseconds < 250
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDeadState,The following statement contains a magic number: _fadeAwayAlpha -= 3;
Magic Number,EndlessClient.Rendering.NPC,NPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\NPC\NPCRenderer.cs,UpdateDeadState,The following statement contains a magic number: _fadeAwayAlpha >= 3
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,CharacterStateTest,The following statement contains a magic number: _renderersForDifferentStates = new List<ICharacterRenderer>(12);
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Initialize,The following statement contains a magic number: _renderersForDifferentStates.OfType<DrawableGameComponent>().Last().DrawOrder = 10;
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,LoadContent,The following statement contains a magic number: characterRenderer.SetAbsoluteScreenPosition(50 + 640 / 4 * ((int) displayState % 4)'                                                              30 + 480 / 3 * ((int) displayState / 4));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The following statement contains a magic number: _baseProperties = _baseProperties.WithGender((byte) ((_baseProperties.Gender + 1)%2));
Magic Number,EndlessClient.Test,CharacterStateTest,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Test\CharacterStateTest.cs,Update,The following statement contains a magic number: (now - _lastSpell).TotalMilliseconds > 280
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,InitializeResources,The following statement contains a magic number: _backButtonTexture = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 24' true);
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,BackButtonControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BackButtonControlSet.cs,GetBackButton,The following statement contains a magic number: var button = new XNAButton(                  _backButtonTexture'                  new Vector2(589' 0)'                  new Rectangle(0' 0' _backButtonTexture.Width' _backButtonTexture.Height / 2)'                  new Rectangle(0' _backButtonTexture.Height / 2' _backButtonTexture.Width' _backButtonTexture.Height / 2))              {                  DrawOrder = 100'                  ClickArea = new Rectangle(4' 16' 16' 16)              };
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,IntermediateControlSet,The following statement contains a magic number: _personSet2 = new Texture2D[8];
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,InitializeResources,The following statement contains a magic number: _personSet2[i] = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 61 + i' true);
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetCreateButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(isCreateCharacterButton ? 334 : 359' 417)'                                         new Rectangle(0' 0' 120' 40)'                                         new Rectangle(120' 0' 120' 40));
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetPerson2Picture,The following statement contains a magic number: var texture = _personSet2[_randomGen.Next(8)];
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetPerson2Picture,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = texture'                  DrawArea = new Rectangle(43' 140' texture.Width' texture.Height)              };
Magic Number,EndlessClient.ControlSets,IntermediateControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\IntermediateControlSet.cs,GetPerson2Picture,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = texture'                  DrawArea = new Rectangle(43' 140' texture.Width' texture.Height)              };
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,FindComponentByControlIdentifier,The following statement contains a magic number: switch (control)              {                  case GameControlIdentifier.Character1Panel: return _characterInfoPanels[0];                  case GameControlIdentifier.Character2Panel: return _characterInfoPanels[1];                  case GameControlIdentifier.Character3Panel: return _characterInfoPanels[2];                  case GameControlIdentifier.ChangePasswordButton: return _changePasswordButton;                  default: return base.FindComponentByControlIdentifier(control);              }
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,LoggedInControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoggedInControlSet.cs,GetPasswordButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                  new Vector2(454' 417)'                  new Rectangle(0' 120' 120' 40)'                  new Rectangle(120' 120' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,InitializeResources,The following statement contains a magic number: _labelsTexture = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 12' true);
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountNameTextBox,The following statement contains a magic number: tb.MaxChars = 16;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountPasswordTextBox,The following statement contains a magic number: tb.MaxChars = 12;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountConfirmTextBox,The following statement contains a magic number: tb.MaxChars = 12;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.CreateAccountName: i = 0; break;                  case GameControlIdentifier.CreateAccountPassword: i = 1; break;                  case GameControlIdentifier.CreateAccountPasswordConfirm: i = 2; break;                  case GameControlIdentifier.CreateAccountRealName: i = 3; break;                  case GameControlIdentifier.CreateAccountLocation: i = 4; break;                  case GameControlIdentifier.CreateAccountEmail: i = 5; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.CreateAccountName: i = 0; break;                  case GameControlIdentifier.CreateAccountPassword: i = 1; break;                  case GameControlIdentifier.CreateAccountPasswordConfirm: i = 2; break;                  case GameControlIdentifier.CreateAccountRealName: i = 3; break;                  case GameControlIdentifier.CreateAccountLocation: i = 4; break;                  case GameControlIdentifier.CreateAccountEmail: i = 5; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.CreateAccountName: i = 0; break;                  case GameControlIdentifier.CreateAccountPassword: i = 1; break;                  case GameControlIdentifier.CreateAccountPasswordConfirm: i = 2; break;                  case GameControlIdentifier.CreateAccountRealName: i = 3; break;                  case GameControlIdentifier.CreateAccountLocation: i = 4; break;                  case GameControlIdentifier.CreateAccountEmail: i = 5; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.CreateAccountName: i = 0; break;                  case GameControlIdentifier.CreateAccountPassword: i = 1; break;                  case GameControlIdentifier.CreateAccountPasswordConfirm: i = 2; break;                  case GameControlIdentifier.CreateAccountRealName: i = 3; break;                  case GameControlIdentifier.CreateAccountLocation: i = 4; break;                  case GameControlIdentifier.CreateAccountEmail: i = 5; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var txtYCoord = (i < 3 ? 69 : 260) + i % 3 * 51;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var txtYCoord = (i < 3 ? 69 : 260) + i % 3 * 51;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var txtYCoord = (i < 3 ? 69 : 260) + i % 3 * 51;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var txtYCoord = (i < 3 ? 69 : 260) + i % 3 * 51;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var txtYCoord = (i < 3 ? 69 : 260) + i % 3 * 51;
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var drawArea = new Rectangle(358' txtYCoord' 240' _textBoxBackground.Height);
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: var drawArea = new Rectangle(358' txtYCoord' 240' _textBoxBackground.Height);
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: return new XNATextBox(drawArea'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  LeftPadding = 4'                  MaxChars = 35'                  Text = ""'                  DefaultText = " "              };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,AccountInputTextBoxCreationHelper,The following statement contains a magic number: return new XNATextBox(drawArea'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  LeftPadding = 4'                  MaxChars = 35'                  Text = ""'                  DefaultText = " "              };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountCancelButton,The following statement contains a magic number: var button = new XNAButton(_secondaryButtonTexture'                                         new Vector2(481' 417)'                                         new Rectangle(0' 40' 120' 40)'                                         new Rectangle(120' 40' 120' 40));
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: var texturePictureBox = new XNAPictureBox                  {                      Texture = _labelsTexture'                      SourceRectangle = new Rectangle(0' srcYIndex * (srcYIndex < 2 ? 14 : 15)' 149' 15)'                      DrawPosition = new Vector2(358' (srcYIndex < 3 ? 50 : 241) + srcYIndex % 3 * 51)                  };
Magic Number,EndlessClient.ControlSets,CreateAccountControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\CreateAccountControlSet.cs,GetCreateAccountLabels,The following statement contains a magic number: srcYIndex < 6
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,InitialControlSet,The following statement contains a magic number: _personSet1 = new Texture2D[4];
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,InitializeResources,The following statement contains a magic number: _personSet1[i] = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 41 + i' true);
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.InitialCreateAccount: i = 0; break;                  case GameControlIdentifier.InitialLogin: i = 1; break;                  case GameControlIdentifier.InitialViewCredits: i = 2; break;                  case GameControlIdentifier.InitialExitGame: i = 3; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: switch (whichControl)              {                  case GameControlIdentifier.InitialCreateAccount: i = 0; break;                  case GameControlIdentifier.InitialLogin: i = 1; break;                  case GameControlIdentifier.InitialViewCredits: i = 2; break;                  case GameControlIdentifier.InitialExitGame: i = 3; break;                  default: throw new ArgumentException("Invalid control specified for helper"' nameof(whichControl));              }
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: var widthFactor = _mainButtonTexture.Width / 2;
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: var heightFactor = _mainButtonTexture.Height / 4;
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: return new XNAButton(_mainButtonTexture' new Vector2(26' 278 + i * 40)' outSource' overSource);
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: return new XNAButton(_mainButtonTexture' new Vector2(26' 278 + i * 40)' outSource' overSource);
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,MainButtonCreationHelper,The following statement contains a magic number: return new XNAButton(_mainButtonTexture' new Vector2(26' 278 + i * 40)' outSource' overSource);
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,GetVersionInfoLabel,The following statement contains a magic number: return new XNALabel(Constants.FontSize07)              {                  AutoSize = true'                  Text = string.Format(Constants.VersionInfoFormat'                                       _configProvider.VersionMajor'                                       _configProvider.VersionMinor'                                       _configProvider.VersionBuild'                                       _configProvider.Host'                                       _configProvider.Port)'                  ForeColor = Color.Black'                  DrawArea = new Rectangle(25' 453' 1' 1)              };
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,GetVersionInfoLabel,The following statement contains a magic number: return new XNALabel(Constants.FontSize07)              {                  AutoSize = true'                  Text = string.Format(Constants.VersionInfoFormat'                                       _configProvider.VersionMajor'                                       _configProvider.VersionMinor'                                       _configProvider.VersionBuild'                                       _configProvider.Host'                                       _configProvider.Port)'                  ForeColor = Color.Black'                  DrawArea = new Rectangle(25' 453' 1' 1)              };
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,GetPersonPicture1,The following statement contains a magic number: var texture = _personSet1[_randomGen.Next(4)];
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,GetPersonPicture1,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = texture'                  DrawArea = new Rectangle(229' 70' texture.Width' texture.Height)              };
Magic Number,EndlessClient.ControlSets,InitialControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\InitialControlSet.cs,GetPersonPicture1,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = texture'                  DrawArea = new Rectangle(229' 70' texture.Width' texture.Height)              };
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,BaseControlSet,The following statement contains a magic number: _allComponents = new List<IGameComponent>(16);
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,InitializeResources,The following statement contains a magic number: _mainButtonTexture = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 13' true);
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,InitializeResources,The following statement contains a magic number: _secondaryButtonTexture = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 14' true);
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,InitializeResources,The following statement contains a magic number: _smallButtonSheet = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 15' true);
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,InitializeResources,The following statement contains a magic number: _backgroundImages = new Texture2D[7];
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,InitializeResources,The following statement contains a magic number: _backgroundImages[i] = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 30 + i);
Magic Number,EndlessClient.ControlSets,BaseControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\BaseControlSet.cs,GetBackgroundImage,The following statement contains a magic number: var texture = _backgroundImages[rnd.Next(7)];
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,InitializeResources,The following statement contains a magic number: _loginBackgroundTexture = gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 2);
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPanelBackground,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = _loginBackgroundTexture'                  DrawArea = new Rectangle(266' 291' _loginBackgroundTexture.Width' _loginBackgroundTexture.Height)'                  DrawOrder = _personPicture.DrawOrder + 1              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPanelBackground,The following statement contains a magic number: return new XNAPictureBox              {                  Texture = _loginBackgroundTexture'                  DrawArea = new Rectangle(266' 291' _loginBackgroundTexture.Width' _loginBackgroundTexture.Height)'                  DrawOrder = _personPicture.DrawOrder + 1              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginUserNameTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 322' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 16'                  DefaultText = "Username"'                  LeftPadding = 4'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginPasswordTextBox,The following statement contains a magic number: var textBox = new XNATextBox(                  new Rectangle(402' 358' 140' _textBoxBackground.Height)'                  Constants.FontSize08'                  _textBoxBackground'                  _textBoxLeft'                  _textBoxRight'                  _textBoxCursor)              {                  MaxChars = 12'                  PasswordBox = true'                  LeftPadding = 4'                  DefaultText = "Password"'                  DrawOrder = _personPicture.DrawOrder + 2'                  DefaultTextColor = Color.FromNonPremultiplied(80' 80' 80' 0xff)'                  TextColor = Color.Black              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginAccountButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(361' 389)' new Rectangle(0' 0' 91' 29)' new Rectangle(91' 0' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,LoginPromptControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\LoginPromptControlSet.cs,GetLoginCancelButton,The following statement contains a magic number: var button = new XNAButton(_smallButtonSheet' new Vector2(453' 389)' new Rectangle(0' 29' 91' 29)' new Rectangle(91' 29' 91' 29))              {                  DrawOrder = _personPicture.DrawOrder + 2              };
Magic Number,EndlessClient.ControlSets,ViewCreditsControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\ViewCreditsControlSet.cs,GetCreditsLabel,The following statement contains a magic number: return new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  Text = Constants.CreditsText'                  DrawPosition = new Vector2(300' 260)              };
Magic Number,EndlessClient.ControlSets,ViewCreditsControlSet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\ControlSets\ViewCreditsControlSet.cs,GetCreditsLabel,The following statement contains a magic number: return new XNALabel(Constants.FontSize10)              {                  AutoSize = true'                  Text = Constants.CreditsText'                  DrawPosition = new Vector2(300' 260)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exForm = new Form              {                  Width = 350'                  Height = 200'                  MaximizeBox = false'                  MinimizeBox = false'                  Padding = new Padding(10)'                  Text = "Application Error"'                  BackColor = System.Drawing.Color.White'                  Icon = System.Drawing.SystemIcons.Error'                  StartPosition = FormStartPosition.CenterScreen'                  MinimumSize = new System.Drawing.Size(350' 200)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exForm = new Form              {                  Width = 350'                  Height = 200'                  MaximizeBox = false'                  MinimizeBox = false'                  Padding = new Padding(10)'                  Text = "Application Error"'                  BackColor = System.Drawing.Color.White'                  Icon = System.Drawing.SystemIcons.Error'                  StartPosition = FormStartPosition.CenterScreen'                  MinimumSize = new System.Drawing.Size(350' 200)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exForm = new Form              {                  Width = 350'                  Height = 200'                  MaximizeBox = false'                  MinimizeBox = false'                  Padding = new Padding(10)'                  Text = "Application Error"'                  BackColor = System.Drawing.Color.White'                  Icon = System.Drawing.SystemIcons.Error'                  StartPosition = FormStartPosition.CenterScreen'                  MinimumSize = new System.Drawing.Size(350' 200)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exForm = new Form              {                  Width = 350'                  Height = 200'                  MaximizeBox = false'                  MinimizeBox = false'                  Padding = new Padding(10)'                  Text = "Application Error"'                  BackColor = System.Drawing.Color.White'                  Icon = System.Drawing.SystemIcons.Error'                  StartPosition = FormStartPosition.CenterScreen'                  MinimumSize = new System.Drawing.Size(350' 200)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exForm = new Form              {                  Width = 350'                  Height = 200'                  MaximizeBox = false'                  MinimizeBox = false'                  Padding = new Padding(10)'                  Text = "Application Error"'                  BackColor = System.Drawing.Color.White'                  Icon = System.Drawing.SystemIcons.Error'                  StartPosition = FormStartPosition.CenterScreen'                  MinimumSize = new System.Drawing.Size(350' 200)              };
Magic Number,EndlessClient.GameExecution,ReleaseGameRunner,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\GameExecution\ReleaseGameRunner.cs,ShowExceptionDialog,The following statement contains a magic number: var exLabel2 = new Label              {                  AutoEllipsis = true'                  Dock = DockStyle.Top'                  Padding = new Padding(5' 0' 0' 0)'                  Text = ex.Message              };
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _topLeft = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 21' true);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _sidebar = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 22' true);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _topBar = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 23' true);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _filler.SetData(new[] { Color.FromNonPremultiplied(8' 8' 8' 255) });
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _filler.SetData(new[] { Color.FromNonPremultiplied(8' 8' 8' 255) });
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _filler.SetData(new[] { Color.FromNonPremultiplied(8' 8' 8' 255) });
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,LoadContent,The following statement contains a magic number: _filler.SetData(new[] { Color.FromNonPremultiplied(8' 8' 8' 255) });
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_topBar' new Vector2(49' 7)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_topBar' new Vector2(49' 7)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_sidebar' new Vector2(7' 53)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_sidebar' new Vector2(7' 53)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_sidebar' new Vector2(629' 53)' new Rectangle(3' 0' 1' _sidebar.Height)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_sidebar' new Vector2(629' 53)' new Rectangle(3' 0' 1' _sidebar.Height)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_sidebar' new Vector2(629' 53)' new Rectangle(3' 0' 1' _sidebar.Height)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(542' 0' 1' 8)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(542' 0' 1' 8)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(14' 329' 1' 142)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(14' 329' 1' 142)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(14' 329' 1' 142)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(98' 479' 445' 1)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(98' 479' 445' 1)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudBackgroundFrame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudBackgroundFrame.cs,OnDrawControl,The following statement contains a magic number: _spriteBatch.Draw(_filler' new Rectangle(98' 479' 445' 1)' Color.White);
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var mainButtonTexture = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 25);
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var widthDelta = mainButtonTexture.Width/2;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var heightDelta = mainButtonTexture.Height/11;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var xPosition = buttonIndex < 6 ? 62 : 590;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var xPosition = buttonIndex < 6 ? 62 : 590;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var xPosition = buttonIndex < 6 ? 62 : 590;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateStateChangeButton,The following statement contains a magic number: var yPosition = (buttonIndex < 6 ? 330 : 350) + (buttonIndex < 6 ? buttonIndex : buttonIndex - 6)*20;
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateChatModePictureBox,The following statement contains a magic number: var chatModesTexture = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 31);
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateChatModePictureBox,The following statement contains a magic number: var pictureBox = new ChatModePictureBox(_chatModeCalculator' _hudControlProvider' chatModesTexture)              {                  DrawArea = new Rectangle(16' 309' chatModesTexture.Width' chatModesTexture.Height / 8)'                  SourceRectangle = new Rectangle(0' 0' chatModesTexture.Width' chatModesTexture.Height / 8)'                  DrawOrder = HUD_CONTROL_LAYER              };
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateChatModePictureBox,The following statement contains a magic number: var pictureBox = new ChatModePictureBox(_chatModeCalculator' _hudControlProvider' chatModesTexture)              {                  DrawArea = new Rectangle(16' 309' chatModesTexture.Width' chatModesTexture.Height / 8)'                  SourceRectangle = new Rectangle(0' 0' chatModesTexture.Width' chatModesTexture.Height / 8)'                  DrawOrder = HUD_CONTROL_LAYER              };
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateChatModePictureBox,The following statement contains a magic number: var pictureBox = new ChatModePictureBox(_chatModeCalculator' _hudControlProvider' chatModesTexture)              {                  DrawArea = new Rectangle(16' 309' chatModesTexture.Width' chatModesTexture.Height / 8)'                  SourceRectangle = new Rectangle(0' 0' chatModesTexture.Width' chatModesTexture.Height / 8)'                  DrawOrder = HUD_CONTROL_LAYER              };
Magic Number,EndlessClient.HUD.Controls,HudControlsFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HudControlsFactory.cs,CreateChatModePictureBox,The following statement contains a magic number: var pictureBox = new ChatModePictureBox(_chatModeCalculator' _hudControlProvider' chatModesTexture)              {                  DrawArea = new Rectangle(16' 309' chatModesTexture.Width' chatModesTexture.Height / 8)'                  SourceRectangle = new Rectangle(0' 0' chatModesTexture.Width' chatModesTexture.Height / 8)'                  DrawOrder = HUD_CONTROL_LAYER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: DrawOrder = 100;
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_friendList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(592' 312)'                  new Rectangle(0' 260' 17' 15)'                  new Rectangle(0' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_ignoreList = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' false' true)'                  new Vector2(609' 312)'                  new Rectangle(17' 260' 17' 15)'                  new Rectangle(17' 276' 17' 15))              {                  Visible = true'                  Enabled = true'                  DrawOrder = HUD_CONTROL_DRAW_ORDER              };
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_expInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(55' 0)'                  new Rectangle(331' 30' 22' 14)'                  new Rectangle(331' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,HUD,The following statement contains a magic number: m_questInfo = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58)'                  new Vector2(77' 0)'                  new Rectangle(353' 30' 22' 14)'                  new Rectangle(353' 30' 22' 14)) {DrawOrder = HUD_CONTROL_DRAW_ORDER};
Magic Number,EndlessClient.HUD.Controls,HUD,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Controls\HUD.cs,Initialize,The following statement contains a magic number: m_inputListeners = new List<OldInputKeyListenerBase>(4)              {                  new FunctionKeyListener()'                  new NumPadListener()              };
Magic Number,EndlessClient.HUD.Panels,ActiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ActiveSpellsPanel.cs,ActiveSpellsPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 62);
Magic Number,EndlessClient.HUD.Panels,ActiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ActiveSpellsPanel.cs,ActiveSpellsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,ActiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ActiveSpellsPanel.cs,ActiveSpellsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: var tabTexture = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 35);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallSelected = new SpriteSheet(tabTexture' new Rectangle(307' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallSelected = new SpriteSheet(tabTexture' new Rectangle(307' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallSelected = new SpriteSheet(tabTexture' new Rectangle(307' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallSelected = new SpriteSheet(tabTexture' new Rectangle(307' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallUnselected = new SpriteSheet(tabTexture' new Rectangle(264' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallUnselected = new SpriteSheet(tabTexture' new Rectangle(264' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallUnselected = new SpriteSheet(tabTexture' new Rectangle(264' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _smallUnselected = new SpriteSheet(tabTexture' new Rectangle(264' 16' 43' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeSelected = new SpriteSheet(tabTexture' new Rectangle(132' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeSelected = new SpriteSheet(tabTexture' new Rectangle(132' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeSelected = new SpriteSheet(tabTexture' new Rectangle(132' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeSelected = new SpriteSheet(tabTexture' new Rectangle(132' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeUnselected = new SpriteSheet(tabTexture' new Rectangle(0' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeUnselected = new SpriteSheet(tabTexture' new Rectangle(0' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _largeUnselected = new SpriteSheet(tabTexture' new Rectangle(0' 16' 132' 16));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 28);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _tabLabelClickableAreas = new Dictionary<ChatTab' Rectangle>              {                  {ChatTab.Local' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Local))}'                  {ChatTab.Global' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Global))}'                  {ChatTab.Group' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Group))}'                  {ChatTab.System' new Rectangle(0' 0' 43' 16).WithPosition(GetDestinationVectorForTab(ChatTab.System))}'                  {ChatTab.Private1' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private1))}'                  {ChatTab.Private2' new Rectangle(0' 0' 132' 16).WithPosition(GetDestinationVectorForTab(ChatTab.Private2))}'              };
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: kvp.Value.DrawPosition = startPos + new Vector2(14' 2);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: kvp.Value.DrawPosition = startPos + new Vector2(14' 2);
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab1 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private1));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab1 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private1));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab1 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private1));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab1 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private1));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab2 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private2));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab2 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private2));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab2 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private2));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanel,The following statement contains a magic number: _closeButtonAreaForTab2 = new Rectangle(3' 3' 11' 11).WithPosition(GetDestinationVectorForTab(ChatTab.Private2));
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,HandleRightClickOnChatText,The following statement contains a magic number: var clickedChatRow = (int)Math.Round(clickedYRelativeToTopOfPanel / 13.0) - 1;
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,GetDestinationVectorForTab,The following statement contains a magic number: switch (tab)              {                  case ChatTab.Private1:                      return topLeft + new Vector2(23' 102);                  case ChatTab.Private2:                      return topLeft + new Vector2(156' 102);                  case ChatTab.Local:                  case ChatTab.Global:                  case ChatTab.Group:                  case ChatTab.System:                      return topLeft + new Vector2(289 + 44 * ((int)tab - 2)' 102);                  default: throw new ArgumentOutOfRangeException(nameof(tab)' tab' null);              }
Magic Number,EndlessClient.HUD.Panels,ChatPanelStateCache,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\ChatPanel.cs,ChatPanelStateCache,The following statement contains a magic number: _cachedChatTabLineCounts[ChatTab.Global] = 2;
Magic Number,EndlessClient.HUD.Panels,HelpPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\HelpPanel.cs,HelpPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 63);
Magic Number,EndlessClient.HUD.Panels,HelpPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\HelpPanel.cs,HelpPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,HelpPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\HelpPanel.cs,HelpPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,InventoryPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\InventoryPanel.cs,InventoryPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 44);
Magic Number,EndlessClient.HUD.Panels,InventoryPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\InventoryPanel.cs,InventoryPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,InventoryPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\InventoryPanel.cs,InventoryPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: _scrollBar = new ScrollBar(new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed' _nativeGraphicsManager)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 48);
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,NewsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,NewsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\NewsPanel.cs,OnUpdateControl,The following statement contains a magic number: _scrollBar.SetDownArrowFlashSpeed(500);
Magic Number,EndlessClient.HUD.Panels,OnlineListPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\OnlineListPanel.cs,OnlineListPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 36);
Magic Number,EndlessClient.HUD.Panels,OnlineListPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\OnlineListPanel.cs,OnlineListPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,OnlineListPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\OnlineListPanel.cs,OnlineListPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,PartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PartyPanel.cs,PartyPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 42);
Magic Number,EndlessClient.HUD.Panels,PartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PartyPanel.cs,PartyPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,PartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PartyPanel.cs,PartyPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,PassiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PassiveSpellsPanel.cs,PassiveSpellsPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 62);
Magic Number,EndlessClient.HUD.Panels,PassiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PassiveSpellsPanel.cs,PassiveSpellsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,PassiveSpellsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\PassiveSpellsPanel.cs,PassiveSpellsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,SettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\SettingsPanel.cs,SettingsPanel,The following statement contains a magic number: BackgroundImage = _nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 47);
Magic Number,EndlessClient.HUD.Panels,SettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\SettingsPanel.cs,SettingsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,SettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\SettingsPanel.cs,SettingsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: BackgroundImage = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 34);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: DrawArea = new Rectangle(102' 330' BackgroundImage.Width' BackgroundImage.Height);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats = new IXNALabel[6];
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _arrowButtons = new IXNAButton[6];
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats = new IXNALabel[6];
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo = new IXNALabel[3];
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _otherInfo = new IXNALabel[8];
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var buttonTexture = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var outTextureArea = new Rectangle(215' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var outTextureArea = new Rectangle(215' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var outTextureArea = new Rectangle(215' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var outTextureArea = new Rectangle(215' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var overTextureArea = new Rectangle(234' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var overTextureArea = new Rectangle(234' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var overTextureArea = new Rectangle(234' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var overTextureArea = new Rectangle(234' 386' 19' 15);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(50' 8 + i*18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(50' 8 + i*18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(50' 8 + i*18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(50' 8 + i*18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _basicStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(50' 8 + i*18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _arrowButtons[i] = new XNAButton(buttonTexture'                                                   new Vector2(106' 7 + i*18)'                                                   outTextureArea'                                                   overTextureArea)                  {                      Visible = false'                      FlashSpeed = 500                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _arrowButtons[i] = new XNAButton(buttonTexture'                                                   new Vector2(106' 7 + i*18)'                                                   outTextureArea'                                                   overTextureArea)                  {                      Visible = false'                      FlashSpeed = 500                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _arrowButtons[i] = new XNAButton(buttonTexture'                                                   new Vector2(106' 7 + i*18)'                                                   outTextureArea'                                                   overTextureArea)                  {                      Visible = false'                      FlashSpeed = 500                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _arrowButtons[i] = new XNAButton(buttonTexture'                                                   new Vector2(106' 7 + i*18)'                                                   outTextureArea'                                                   overTextureArea)                  {                      Visible = false'                      FlashSpeed = 500                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(158' 8 + i * 18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(158' 8 + i * 18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(158' 8 + i * 18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(158' 8 + i * 18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterStats[i] = new XNALabel(Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText'                      AutoSize = false'                      Text = ""'                      DrawArea = new Rectangle(158' 8 + i * 18' 73' 13)                  };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: var drawArea = i < 4                      ? new Rectangle(280' 44 + i%4*18' 60' 13)                      : new Rectangle(379' 44 + i%4*18' 94' 13);
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[NAME] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 8' 144' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[NAME] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 8' 144' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[NAME] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 8' 144' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[NAME] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 8' 144' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[GUILD] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 26' 193' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[GUILD] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 26' 193' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[GUILD] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 26' 193' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[GUILD] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(280' 26' 193' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[LEVEL] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(453' 8' 20' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[LEVEL] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(453' 8' 20' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[LEVEL] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(453' 8' 20' 13)              };
Magic Number,EndlessClient.HUD.Panels,StatsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\StatsPanel.cs,StatsPanel,The following statement contains a magic number: _characterInfo[LEVEL] = new XNALabel(Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  AutoSize = false'                  Text = ""'                  DrawArea = new Rectangle(453' 8' 20' 13)              };
Magic Number,EndlessClient.Rendering.CharacterProperties,ArmorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ArmorRenderer.cs,Render,The following statement contains a magic number: var drawLoc = new Vector2(parentCharacterDrawArea.X - 2 + offsets.X' parentCharacterDrawArea.Y + offsets.Y);
Magic Number,EndlessClient.Rendering.CharacterProperties,ArmorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ArmorRenderer.cs,GetOffsets,The following statement contains a magic number: armorOffX = _renderProperties.Gender == 1 ? 6 : 7;
Magic Number,EndlessClient.Rendering.CharacterProperties,ArmorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ArmorRenderer.cs,GetOffsets,The following statement contains a magic number: armorOffX = _renderProperties.Gender == 1 ? 6 : 7;
Magic Number,EndlessClient.Rendering.CharacterProperties,ArmorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ArmorRenderer.cs,GetOffsets,The following statement contains a magic number: weaponIsMelee && _renderProperties.AttackFrame == 2
Magic Number,EndlessClient.Rendering.CharacterProperties,BootsRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\BootsRenderer.cs,Render,The following statement contains a magic number: var drawLoc = new Vector2(parentCharacterDrawArea.X - 2 + offsets.X' parentCharacterDrawArea.Y + 49 + offsets.Y);
Magic Number,EndlessClient.Rendering.CharacterProperties,BootsRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\BootsRenderer.cs,Render,The following statement contains a magic number: var drawLoc = new Vector2(parentCharacterDrawArea.X - 2 + offsets.X' parentCharacterDrawArea.Y + 49 + offsets.Y);
Magic Number,EndlessClient.Rendering.CharacterProperties,BootsRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\BootsRenderer.cs,GetOffsets,The following statement contains a magic number: bootsOffX = _renderProperties.IsFacing(EODirection.Down' EODirection.Left) ? -6 : 6;
Magic Number,EndlessClient.Rendering.CharacterProperties,BootsRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\BootsRenderer.cs,GetOffsets,The following statement contains a magic number: bootsOffX = _renderProperties.IsFacing(EODirection.Down' EODirection.Left) ? -6 : 6;
Magic Number,EndlessClient.Rendering.CharacterProperties,BootsRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\BootsRenderer.cs,GetOffsets,The following statement contains a magic number: weaponIsMelee && _renderProperties.AttackFrame == 2
Magic Number,EndlessClient.Rendering.CharacterProperties,CharacterPropertyRendererBuilder,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\CharacterPropertyRendererBuilder.cs,IsWeaponBehindCharacter,The following statement contains a magic number: var pass1 = renderProperties.AttackFrame < 2;
Magic Number,EndlessClient.Rendering.CharacterProperties,EmoteRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\EmoteRenderer.cs,Render,The following statement contains a magic number: var emotePos = new Vector2(skinLoc.X - 15' parentCharacterDrawArea.Y - _emoteSheet.SheetTexture.Height + 10);
Magic Number,EndlessClient.Rendering.CharacterProperties,EmoteRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\EmoteRenderer.cs,Render,The following statement contains a magic number: var emotePos = new Vector2(skinLoc.X - 15' parentCharacterDrawArea.Y - _emoteSheet.SheetTexture.Height + 10);
Magic Number,EndlessClient.Rendering.CharacterProperties,EmoteRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\EmoteRenderer.cs,Render,The following statement contains a magic number: spriteBatch.Draw(_emoteSheet.SheetTexture'                               emotePos'                               _emoteSheet.SourceRectangle'                               Color.FromNonPremultiplied(0xff' 0xff' 0xff' 128));
Magic Number,EndlessClient.Rendering.CharacterProperties,FaceRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\FaceRenderer.cs,Render,The following statement contains a magic number: var facePos = new Vector2(skinLoc.X + (_renderProperties.IsFacing(EODirection.Down) ? 2 : 3)'                                        skinLoc.Y + (_renderProperties.Gender == 0 ? 2 : 0));
Magic Number,EndlessClient.Rendering.CharacterProperties,FaceRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\FaceRenderer.cs,Render,The following statement contains a magic number: var facePos = new Vector2(skinLoc.X + (_renderProperties.IsFacing(EODirection.Down) ? 2 : 3)'                                        skinLoc.Y + (_renderProperties.Gender == 0 ? 2 : 0));
Magic Number,EndlessClient.Rendering.CharacterProperties,FaceRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\FaceRenderer.cs,Render,The following statement contains a magic number: var facePos = new Vector2(skinLoc.X + (_renderProperties.IsFacing(EODirection.Down) ? 2 : 3)'                                        skinLoc.Y + (_renderProperties.Gender == 0 ? 2 : 0));
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,CalculateDrawLocationOfCharacterHair,The following statement contains a magic number: var flippedOffset = _renderProperties.IsFacing(EODirection.Up' EODirection.Right) ? 2 : 0;
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,GetOffsets,The following statement contains a magic number: hatOffX = _renderProperties.Gender == 1 ? 6 : 8;
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,GetOffsets,The following statement contains a magic number: hatOffX = _renderProperties.Gender == 1 ? 6 : 8;
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,GetOffsets,The following statement contains a magic number: hatOffY = _renderProperties.Gender == 1 ? 5 : 6;
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,GetOffsets,The following statement contains a magic number: hatOffY = _renderProperties.Gender == 1 ? 5 : 6;
Magic Number,EndlessClient.Rendering.CharacterProperties,HairRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HairRenderLocationCalculator.cs,GetOffsets,The following statement contains a magic number: weaponIsMelee && _renderProperties.AttackFrame == 2
Magic Number,EndlessClient.Rendering.CharacterProperties,HatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HatRenderer.cs,Render,The following statement contains a magic number: var flippedOffset = _renderProperties.IsFacing(EODirection.Up' EODirection.Right) ? -2 : 0;
Magic Number,EndlessClient.Rendering.CharacterProperties,HatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\HatRenderer.cs,Render,The following statement contains a magic number: var drawLoc = new Vector2(offsets.X + flippedOffset' offsets.Y - 3);
Magic Number,EndlessClient.Rendering.CharacterProperties,ShieldRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ShieldRenderer.cs,GetOffsets,The following statement contains a magic number: const int bootsOffX = -10' bootsOffY = -7;
Magic Number,EndlessClient.Rendering.CharacterProperties,ShieldRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\ShieldRenderer.cs,GetOffsets,The following statement contains a magic number: const int bootsOffX = -10' bootsOffY = -7;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,CalculateDrawLocationOfCharacterSkin,The following statement contains a magic number: var genderOffset = _renderProperties.Gender == 0 ? 12 : 13;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,CalculateDrawLocationOfCharacterSkin,The following statement contains a magic number: var genderOffset = _renderProperties.Gender == 0 ? 12 : 13;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,CalculateDrawLocationOfCharacterSkin,The following statement contains a magic number: return new Vector2(parentCharacterDrawArea.X + 6 + offsets.X' parentCharacterDrawArea.Y + genderOffset + offsets.Y);
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetSpellCastOffset,The following statement contains a magic number: return new Vector2(0' -4);
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetWalkingOffset,The following statement contains a magic number: return new Vector2(skinXOff - 4' -1);
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetAttackingOffset,The following statement contains a magic number: skinOffX = _renderProperties.Gender == 1 ? -1 : -2;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetAttackingOffset,The following statement contains a magic number: var extraOffX = _renderProperties.Gender == 1 ? 2 : 4;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetAttackingOffset,The following statement contains a magic number: var extraOffX = _renderProperties.Gender == 1 ? 2 : 4;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetAttackingOffset,The following statement contains a magic number: var extraOffY = _renderProperties.Direction == EODirection.Up ? -2 : 1;
Magic Number,EndlessClient.Rendering.CharacterProperties,SkinRenderLocationCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\SkinRenderLocationCalculator.cs,GetAttackingOffset,The following statement contains a magic number: weaponIsMelee && _renderProperties.AttackFrame == 2
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: weaponOffX = _renderProperties.Gender == 0 ? 2 : 4;
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: weaponOffX = _renderProperties.Gender == 0 ? 2 : 4;
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: weaponIsMelee && _renderProperties.AttackFrame == 2
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: var flippedOffset = _renderProperties.IsFacing(EODirection.Up' EODirection.Right) ? -10 : -28;
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: var flippedOffset = _renderProperties.IsFacing(EODirection.Up' EODirection.Right) ? -10 : -28;
Magic Number,EndlessClient.Rendering.CharacterProperties,WeaponRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\CharacterProperties\WeaponRenderer.cs,GetOffsets,The following statement contains a magic number: return new Vector2(flippedOffset + weaponOffX' -7);
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var x = (618 - skinRect.Width)/2 + 4;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var x = (618 - skinRect.Width)/2 + 4;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var x = (618 - skinRect.Width)/2 + 4;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var y = (298 - skinRect.Height)/2 - 29;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var y = (298 - skinRect.Height)/2 - 29;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetToCenterScreenPosition,The following statement contains a magic number: var y = (298 - skinRect.Height)/2 - 29;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,FigureOutTopPixel,The following statement contains a magic number: var genderOffset = renderProperties.Gender == 0 ? 12 : 13;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,FigureOutTopPixel,The following statement contains a magic number: var genderOffset = renderProperties.Gender == 0 ? 12 : 13;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,GetAlphaColor,The following statement contains a magic number: return RenderProperties.IsHidden || RenderProperties.IsDead                  ? Color.FromNonPremultiplied(255' 255' 255' 128)                  : Color.White;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,GetAlphaColor,The following statement contains a magic number: return RenderProperties.IsHidden || RenderProperties.IsDead                  ? Color.FromNonPremultiplied(255' 255' 255' 128)                  : Color.White;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,GetAlphaColor,The following statement contains a magic number: return RenderProperties.IsHidden || RenderProperties.IsDead                  ? Color.FromNonPremultiplied(255' 255' 255' 128)                  : Color.White;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,GetAlphaColor,The following statement contains a magic number: return RenderProperties.IsHidden || RenderProperties.IsDead                  ? Color.FromNonPremultiplied(255' 255' 255' 128)                  : Color.White;
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetGridCoordinatePosition,The following statement contains a magic number: var screenX = _renderOffsetCalculator.CalculateOffsetX(RenderProperties) + 304 - GetMainCharacterOffsetX();
Magic Number,EndlessClient.Rendering.Character,CharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\CharacterRenderer.cs,SetGridCoordinatePosition,The following statement contains a magic number: var screenY = _renderOffsetCalculator.CalculateOffsetY(RenderProperties) + 91 - GetMainCharacterOffsetY();
Magic Number,EndlessClient.Rendering.Character,CharacterRendererRepository,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Character\ICharacterRendererRepository.cs,CharacterRendererRepository,The following statement contains a magic number: CharacterRenderers = new Dictionary<int' ICharacterRenderer>(64);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,BaseMapEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\BaseMapEntityRenderer.cs,GetDrawCoordinatesFromGridUnits,The following statement contains a magic number: return new Vector2(gridX * 32 - gridY * 32 + 288 - charOffX'                                 gridY * 16 + gridX * 16 + 144 - charOffY);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MainCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MainCharacterEntityRenderer.cs,MainCharacterEntityRenderer,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MainCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MainCharacterEntityRenderer.cs,MainCharacterEntityRenderer,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MainCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MainCharacterEntityRenderer.cs,MainCharacterEntityRenderer,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MainCharacterEntityRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MainCharacterEntityRenderer.cs,MainCharacterEntityRenderer,The following statement contains a magic number: _playerBlend = new BlendState              {                  BlendFactor = new Color(255' 255' 255' 64)'                    AlphaSourceBlend = Blend.One'                  AlphaDestinationBlend = Blend.One'                  AlphaBlendFunction = BlendFunction.Add'                    ColorSourceBlend = Blend.BlendFactor'                  ColorDestinationBlend = Blend.One              };
Magic Number,EndlessClient.Rendering.MapEntityRenderers,GroundLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\GroundLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(fillTile' new Vector2(pos.X - 1' pos.Y - 2)' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,GroundLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\GroundLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(fillTile' new Vector2(pos.X - 1' pos.Y - 2)' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,GroundLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\GroundLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(fillTile' new Vector2(pos.X - 1' pos.Y - 2)' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,GroundLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\GroundLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(fillTile' new Vector2(pos.X - 1' pos.Y - 2)' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(itemTexture'                                   new Vector2(itemPos.X - (int) Math.Round(itemTexture.Width/2.0)'                                               itemPos.Y - (int) Math.Round(itemTexture.Height/2.0))'                                   Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(itemTexture'                                   new Vector2(itemPos.X - (int) Math.Round(itemTexture.Width/2.0)'                                               itemPos.Y - (int) Math.Round(itemTexture.Height/2.0))'                                   Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(itemTexture'                                   new Vector2(itemPos.X - (int) Math.Round(itemTexture.Width/2.0)'                                               itemPos.Y - (int) Math.Round(itemTexture.Height/2.0))'                                   Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(itemTexture'                                   new Vector2(itemPos.X - (int) Math.Round(itemTexture.Width/2.0)'                                               itemPos.Y - (int) Math.Round(itemTexture.Height/2.0))'                                   Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapItemLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapItemLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(itemTexture'                                   new Vector2(itemPos.X - (int) Math.Round(itemTexture.Width/2.0)'                                               itemPos.Y - (int) Math.Round(itemTexture.Height/2.0))'                                   Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OnTopLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OnTopLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - 2' pos.Y - 31);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OnTopLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OnTopLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - 2' pos.Y - 31);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OnTopLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OnTopLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OnTopLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OnTopLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OnTopLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OnTopLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OverlayLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OverlayLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X + 16' pos.Y - 11);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OverlayLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OverlayLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X + 16' pos.Y - 11);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OverlayLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OverlayLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OverlayLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OverlayLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,OverlayLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\OverlayLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - gfx.Width / 2f + 30' pos.Y - gfx.Height + 28);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - gfx.Width / 2f + 30' pos.Y - gfx.Height + 28);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - gfx.Width / 2f + 30' pos.Y - gfx.Height + 28);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,RoofLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\RoofLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - 24' pos.Y - 12);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - 24' pos.Y - 12);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,ShadowLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\ShadowLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' 60));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,UnknownLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\UnknownLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X' pos.Y - 65);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,UnknownLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\UnknownLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,UnknownLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\UnknownLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,UnknownLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\UnknownLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: var gfxWidthDelta = gfx.Width/4;
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: var wallXOffset = renderLayer == MapLayer.WallRowsRight ? 47 : 15;
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: var wallXOffset = renderLayer == MapLayer.WallRowsRight ? 47 : 15;
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: var wallAnimationAdjust = (int) Math.Round((gfx.Width > WALL_FRAME_WIDTH ? gfxWidthDelta : gfx.Width)/2.0);
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: pos = new Vector2(pos.X - wallAnimationAdjust + wallXOffset'                                pos.Y - (gfx.Height - 29));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' src' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' src' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,WallLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\WallLayerRenderer.cs,DrawWall,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' src' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - (int)Math.Round(gfx.Width / 2.0) + 29' pos.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - (int)Math.Round(gfx.Width / 2.0) + 29' pos.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: pos = new Vector2(pos.X - (int)Math.Round(gfx.Width / 2.0) + 29' pos.Y - (gfx.Height - 28));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.Rendering.MapEntityRenderers,MapObjectLayerRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MapEntityRenderers\MapObjectLayerRenderer.cs,RenderElementAt,The following statement contains a magic number: spriteBatch.Draw(gfx' pos' Color.FromNonPremultiplied(255' 255' 255' alpha));
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: DrawPosition = new Vector2(334' 36 + characterIndex*124);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: DrawPosition = new Vector2(334' 36 + characterIndex*124);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: DrawPosition = new Vector2(334' 36 + characterIndex*124);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _loginButton = new XNAButton(dialogButtonService.SmallButtonSheet'                  new Vector2(161' 57)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Login)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Login));
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _loginButton = new XNAButton(dialogButtonService.SmallButtonSheet'                  new Vector2(161' 57)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Login)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Login));
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _deleteButton = new XNAButton(dialogButtonService.SmallButtonSheet'                  new Vector2(161' 85)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Delete)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Delete));
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _deleteButton = new XNAButton(dialogButtonService.SmallButtonSheet'                  new Vector2(161' 85)'                  dialogButtonService.GetSmallDialogButtonOutSource(SmallButton.Delete)'                  dialogButtonService.GetSmallDialogButtonOverSource(SmallButton.Delete));
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _backgroundImage = _gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 11);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _characterControl = new CharacterControl(character.RenderProperties' rendererFactory)              {                  DrawPosition = new Vector2(61' 24)              };
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CharacterInfoPanel,The following statement contains a magic number: _characterControl = new CharacterControl(character.RenderProperties' rendererFactory)              {                  DrawPosition = new Vector2(61' 24)              };
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetNameLabelLocation,The following statement contains a magic number: return new Rectangle(165' 26' 89' 22);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetNameLabelLocation,The following statement contains a magic number: return new Rectangle(165' 26' 89' 22);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetNameLabelLocation,The following statement contains a magic number: return new Rectangle(165' 26' 89' 22);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetNameLabelLocation,The following statement contains a magic number: return new Rectangle(165' 26' 89' 22);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetLevelLabelLocation,The following statement contains a magic number: return new Rectangle(29' 99' 1' 1);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetLevelLabelLocation,The following statement contains a magic number: return new Rectangle(29' 99' 1' 1);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetAdminGraphicLocation,The following statement contains a magic number: return new Vector2(DrawAreaWithParentOffset.X + 109' DrawAreaWithParentOffset.Y + 97);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,GetAdminGraphicLocation,The following statement contains a magic number: return new Vector2(DrawAreaWithParentOffset.X + 109' DrawAreaWithParentOffset.Y + 97);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CapitalizeName,The following statement contains a magic number: return (char)(name[0] - 32) + name.Substring(1);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: var adminGraphic = _gfxManager.TextureFromResource(GFXTypes.PreLoginUI' 22);
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanel.cs,CreateAdminGraphic,The following statement contains a magic number: switch (adminLevel)              {                  case AdminLevel.Player:                      return new EmptySpriteSheet();                  case AdminLevel.Guide:                      return new SpriteSheet(adminGraphic' new Rectangle(252' 39' 17' 17));                  case AdminLevel.Guardian:                  case AdminLevel.GM:                  case AdminLevel.HGM:                      return new SpriteSheet(adminGraphic' new Rectangle(233' 39' 17' 17));                  default:                      throw new ArgumentOutOfRangeException(nameof(adminLevel)' adminLevel' null);              }
Magic Number,EndlessClient.UIControls,CharacterInfoPanelFactory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CharacterInfoPanelFactory.cs,CreatePanels,The following statement contains a magic number: i < 3
Magic Number,EndlessClient.UIControls,ChatTextBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ChatTextBox.cs,ChatTextBox,The following statement contains a magic number: MaxChars = 140;
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,CreateCharacterControl,The following statement contains a magic number: SetSize(99' 123);
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,CreateCharacterControl,The following statement contains a magic number: SetSize(99' 123);
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,OnUpdateControl,The following statement contains a magic number: var actualDrawPosition = new Vector2(DrawPositionWithParentOffset.X + 34'                                                   DrawPositionWithParentOffset.Y + 25);
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,OnUpdateControl,The following statement contains a magic number: var actualDrawPosition = new Vector2(DrawPositionWithParentOffset.X + 34'                                                   DrawPositionWithParentOffset.Y + 25);
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,OnUpdateControl,The following statement contains a magic number: var nextDirection = (EODirection)(nextDirectionInt % 4);
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,NextGender,The following statement contains a magic number: RenderProperties = RenderProperties.WithGender((byte)((RenderProperties.Gender + 1) % 2));
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,NextRace,The following statement contains a magic number: RenderProperties = RenderProperties.WithRace((byte)((RenderProperties.Race + 1) % 6));
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,NextHairStyle,The following statement contains a magic number: RenderProperties = RenderProperties.WithHairStyle((byte)((RenderProperties.HairStyle + 1) % 21));
Magic Number,EndlessClient.UIControls,CreateCharacterControl,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\CreateCharacterControl.cs,NextHairColor,The following statement contains a magic number: RenderProperties = RenderProperties.WithHairColor((byte)((RenderProperties.HairColor + 1) % 10));
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: scrollArea = new Rectangle(0' 15' 0' (int)size.Y - 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: scrollArea = new Rectangle(0' 15' 0' (int)size.Y - 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Texture2D scrollSpriteSheet = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 29);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Rectangle[] upArrows = new Rectangle[2];
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Rectangle[] downArrows = new Rectangle[2];
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default:                      throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default:                      throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default:                      throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Rectangle scrollBox = new Rectangle(0' vertOff' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Rectangle scrollBox = new Rectangle(0' vertOff' 16' 15);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Texture2D[] upButton = new Texture2D[2];
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Texture2D[] downButton = new Texture2D[2];
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: Texture2D[] scrollButton = new Texture2D[2];
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: i < 2
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: down = new XNAButton(downButton' new Vector2(0' size.Y - 15));
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,OldScrollBar,The following statement contains a magic number: scroll = new XNAButton(scrollButton' new Vector2(0' 15));
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,ScrollToTop,The following statement contains a magic number: float pixelsPerLine = (float)(scrollArea.Height - scroll.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,arrowClicked,The following statement contains a magic number: float pixelsPerLine = (float)(scrollArea.Height - scroll.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,scrollDragged,The following statement contains a magic number: int y = Mouse.GetState().Y - (DrawAreaWithOffset.Y + scroll.DrawArea.Height / 2);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,scrollDragged,The following statement contains a magic number: double pixelsPerLine = (double)(scrollArea.Height - scroll.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,Update,The following statement contains a magic number: int dif = (currentState.ScrollWheelValue - PreviousMouseState.ScrollWheelValue) / -120;
Magic Number,EndlessClient.UIControls,OldScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\OldScrollBar.cs,Update,The following statement contains a magic number: float pixelsPerLine = (float)(scrollArea.Height - scroll.DrawArea.Height * 2) /                                            (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: scrollArea = new Rectangle(0' 15' 0' (int)size.Y - 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: scrollArea = new Rectangle(0' 15' 0' (int)size.Y - 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: var scrollSpriteSheet = nativeGraphicsManager.TextureFromResource(GFXTypes.PostLoginUI' 29);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: var upArrows = new Rectangle[2];
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: var downArrows = new Rectangle[2];
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default: throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default: throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: switch (palette)              {                  case ScrollBarColors.LightOnLight: vertOff = 0; break;                  case ScrollBarColors.LightOnMed: vertOff = 105; break;                  case ScrollBarColors.LightOnDark: vertOff = 180; break;                  case ScrollBarColors.DarkOnDark: vertOff = 255; break;                  default: throw new ArgumentOutOfRangeException(nameof(palette));              }
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[0] = new Rectangle(0' vertOff + 15 * 3' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: upArrows[1] = new Rectangle(0' vertOff + 15 * 4' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[0] = new Rectangle(0' vertOff + 15' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: downArrows[1] = new Rectangle(0' vertOff + 15 * 2' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: var scrollBox = new Rectangle(0' vertOff' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: var scrollBox = new Rectangle(0' vertOff' 16' 15);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: _downButton = new XNAButton(scrollSpriteSheet' new Vector2(0' size.Y - 15)' downArrows[0]' downArrows[1]);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollBar,The following statement contains a magic number: _scrollButton = new XNAButton(scrollSpriteSheet' new Vector2(0' 15)' scrollBox' scrollBox);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,ScrollToTop,The following statement contains a magic number: var pixelsPerLine = (float)(scrollArea.Height - _scrollButton.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,arrowClicked,The following statement contains a magic number: var pixelsPerLine = (float)(scrollArea.Height - _scrollButton.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnScrollButtonDragged,The following statement contains a magic number: var y = CurrentMouseState.Y - (DrawAreaWithParentOffset.Y + _scrollButton.DrawArea.Height / 2);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnScrollButtonDragged,The following statement contains a magic number: var pixelsPerLine = (double)(scrollArea.Height - _scrollButton.DrawArea.Height * 2) / (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The following statement contains a magic number: var dif = (CurrentMouseState.ScrollWheelValue - PreviousMouseState.ScrollWheelValue) / -120;
Magic Number,EndlessClient.UIControls,ScrollBar,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\ScrollBar.cs,OnUpdateControl,The following statement contains a magic number: var pixelsPerLine = (float)(scrollArea.Height - _scrollButton.DrawArea.Height * 2) /                                          (_totalHeight - LinesToRender);
Magic Number,EndlessClient.UIControls,StatusBarLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\StatusBarLabel.cs,StatusBarLabel,The following statement contains a magic number: DrawArea = new Rectangle(97' clientWindowSizeProvider.Height - 24' 1' 1);
Magic Number,EndlessClient.UIControls,StatusBarLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\StatusBarLabel.cs,StatusBarLabel,The following statement contains a magic number: DrawArea = new Rectangle(97' clientWindowSizeProvider.Height - 24' 1' 1);
Magic Number,EndlessClient.UIControls,TimeLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\TimeLabel.cs,OnUpdateControl,The following statement contains a magic number: Text = $"{DateTime.Now.Hour'2:D2}:{DateTime.Now.Minute'2:D2}:{DateTime.Now.Second'2:D2}";
Magic Number,EndlessClient.UIControls,TimeLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\TimeLabel.cs,OnUpdateControl,The following statement contains a magic number: Text = $"{DateTime.Now.Hour'2:D2}:{DateTime.Now.Minute'2:D2}:{DateTime.Now.Second'2:D2}";
Magic Number,EndlessClient.UIControls,TimeLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\TimeLabel.cs,OnUpdateControl,The following statement contains a magic number: Text = $"{DateTime.Now.Hour'2:D2}:{DateTime.Now.Minute'2:D2}:{DateTime.Now.Second'2:D2}";
Magic Number,EndlessClient.UIControls,TimeLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\TimeLabel.cs,GetPositionBasedOnWindowSize,The following statement contains a magic number: var xLoc = windowSizeProvider.Width - 82;
Magic Number,EndlessClient.UIControls,TimeLabel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\UIControls\TimeLabel.cs,GetPositionBasedOnWindowSize,The following statement contains a magic number: var yLoc = windowSizeProvider.Height - 24;
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: i < SPELL_ROW_LENGTH*4
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: slot >= SPELL_ROW_LENGTH*(SPELL_NUM_ROWS/2)
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyGraphics = ((EOGame) Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 58' true);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow1SourceRect = new Rectangle(148' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow1SourceRect = new Rectangle(148' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow1SourceRect = new Rectangle(148' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow1SourceRect = new Rectangle(148' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _functionKeyRow2SourceRect = new Rectangle(148 + 18*8' 51' 18' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellName = new XNALabel(new Rectangle(9' 50' 81' 13)' Constants.FontSize08pt5)              {                  Visible = false'                  Text = ""'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellName = new XNALabel(new Rectangle(9' 50' 81' 13)' Constants.FontSize08pt5)              {                  Visible = false'                  Text = ""'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellName = new XNALabel(new Rectangle(9' 50' 81' 13)' Constants.FontSize08pt5)              {                  Visible = false'                  Text = ""'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellName = new XNALabel(new Rectangle(9' 50' 81' 13)' Constants.FontSize08pt5)              {                  Visible = false'                  Text = ""'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleCenter'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellLevel = new XNALabel(new Rectangle(32' 78' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = "0"'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellLevel = new XNALabel(new Rectangle(32' 78' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = "0"'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellLevel = new XNALabel(new Rectangle(32' 78' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = "0"'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _selectedSpellLevel = new XNALabel(new Rectangle(32' 78' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = "0"'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _totalSkillPoints = new XNALabel(new Rectangle(32' 96' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = skillPoints.ToString()'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _totalSkillPoints = new XNALabel(new Rectangle(32' 96' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = skillPoints.ToString()'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _totalSkillPoints = new XNALabel(new Rectangle(32' 96' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = skillPoints.ToString()'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _totalSkillPoints = new XNALabel(new Rectangle(32' 96' 42' 15)' Constants.FontSize08pt5)              {                  Visible = true'                  Text = skillPoints.ToString()'                  AutoSize = false'                  TextAlign = LabelAlignment.MiddleLeft'                  ForeColor = ColorConstants.LightGrayText              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: var buttonSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton1 = new XNAButton(buttonSheet' new Vector2(71' 77)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _levelUpButton2 = new XNAButton(buttonSheet' new Vector2(71' 95)' new Rectangle(215' 386' 19' 15)' new Rectangle(234' 386' 19' 15))              {                  FlashSpeed = 500'                  Visible = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll = new OldScrollBar(this' new Vector2(467' 2)' new Vector2(16' 115)' ScrollBarColors.LightOnMed) { LinesToRender = 2 };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll = new OldScrollBar(this' new Vector2(467' 2)' new Vector2(16' 115)' ScrollBarColors.LightOnMed) { LinesToRender = 2 };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll = new OldScrollBar(this' new Vector2(467' 2)' new Vector2(16' 115)' ScrollBarColors.LightOnMed) { LinesToRender = 2 };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll = new OldScrollBar(this' new Vector2(467' 2)' new Vector2(16' 115)' ScrollBarColors.LightOnMed) { LinesToRender = 2 };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll = new OldScrollBar(this' new Vector2(467' 2)' new Vector2(16' 115)' ScrollBarColors.LightOnMed) { LinesToRender = 2 };
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,OldActiveSpells,The following statement contains a magic number: _scroll.UpdateDimensions(4);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: SpriteBatch.Draw(_functionKeyGraphics'                          new Vector2(202 + 45*i' 338)'                          _functionKeyRow1SourceRect.WithPosition(new Vector2(_functionKeyRow1SourceRect.X + offset'                              _functionKeyRow1SourceRect.Y))'                          Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: SpriteBatch.Draw(_functionKeyGraphics'                          new Vector2(202 + 45*i' 338)'                          _functionKeyRow1SourceRect.WithPosition(new Vector2(_functionKeyRow1SourceRect.X + offset'                              _functionKeyRow1SourceRect.Y))'                          Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: SpriteBatch.Draw(_functionKeyGraphics'                          new Vector2(202 + 45*i' 338)'                          _functionKeyRow1SourceRect.WithPosition(new Vector2(_functionKeyRow1SourceRect.X + offset'                              _functionKeyRow1SourceRect.Y))'                          Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: var yCoord = _scroll.ScrollOffset == 0 ? 390 : 338;
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: var yCoord = _scroll.ScrollOffset == 0 ? 390 : 338;
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: SpriteBatch.Draw(_functionKeyGraphics'                          new Vector2(202 + 45*i' yCoord)'                          _functionKeyRow2SourceRect.WithPosition(new Vector2(_functionKeyRow2SourceRect.X + offset'                              _functionKeyRow2SourceRect.Y))'                          Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: SpriteBatch.Draw(_functionKeyGraphics'                          new Vector2(202 + 45*i' yCoord)'                          _functionKeyRow2SourceRect.WithPosition(new Vector2(_functionKeyRow2SourceRect.X + offset'                              _functionKeyRow2SourceRect.Y))'                          Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: _scroll.ScrollOffset < 2
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawFunctionKeyLabels,The following statement contains a magic number: i < 8
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawActiveSpell,The following statement contains a magic number: var srcRect = new Rectangle(0' 0' _activeSpellIcon.Width/2' _activeSpellIcon.Height);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawActiveSpell,The following statement contains a magic number: var dstRect = new Rectangle(DrawAreaWithOffset.X + 32' DrawAreaWithOffset.Y + 14' srcRect.Width' srcRect.Height);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,DrawActiveSpell,The following statement contains a magic number: var dstRect = new Rectangle(DrawAreaWithOffset.X + 32' DrawAreaWithOffset.Y + 14' srcRect.Width' srcRect.Height);
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,_addNewSpellToSlot,The following statement contains a magic number: newSpell.Visible = displaySlot >= scrollOffset*SPELL_ROW_LENGTH &&                                 displaySlot < scrollOffset*SPELL_ROW_LENGTH + 2*SPELL_ROW_LENGTH;
Magic Number,EndlessClient.HUD.Panels.Old,OldActiveSpells,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldActiveSpellsPanel.cs,UpdateIconsForScroll,The following statement contains a magic number: var lastValidSlot = firstValidSlot + 2*SPELL_ROW_LENGTH;
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: tabLabel = new XNALabel(new Rectangle(14' 2' 1' 1)' Constants.FontSize08);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: tabLabel = new XNALabel(new Rectangle(14' 2' 1' 1)' Constants.FontSize08);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: relativeTextPos = new Vector2(20' 3);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: relativeTextPos = new Vector2(20' 3);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: scrollBar = new OldScrollBar(parent' new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  Visible = selected'                  LinesToRender = 7              };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: scrollBar = new OldScrollBar(parent' new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  Visible = selected'                  LinesToRender = 7              };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: scrollBar = new OldScrollBar(parent' new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  Visible = selected'                  LinesToRender = 7              };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: scrollBar = new OldScrollBar(parent' new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  Visible = selected'                  LinesToRender = 7              };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following statement contains a magic number: scrollBar = new OldScrollBar(parent' new Vector2(467' 2)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  Visible = selected'                  LinesToRender = 7              };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,AddText,The following statement contains a magic number: const int LINE_LEN = 380;
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,AddText,The following statement contains a magic number: chatStrings.Count > 7
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,AddText,The following statement contains a magic number: chatStrings.Count > 7
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: Texture2D ret = new Texture2D(EOGame.Instance.GraphicsDevice' 13' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: Texture2D ret = new Texture2D(EOGame.Instance.GraphicsDevice' 13' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: Color[] data = new Color[169];
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,GetChatIcon,The following statement contains a magic number: EOGame.Instance.GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 32' true).GetData(0' new Rectangle(0' (int)icon * 13' 13' 13)' data' 0' 169);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Draw,The following statement contains a magic number: Vector2 pos = new Vector2(parent.DrawAreaWithOffset.X' parent.DrawAreaWithOffset.Y + relativeTextPos.Y + (i - scrollBar.ScrollOffset)*13);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(GetChatIcon(chatStrings.Keys[i].Icon)' new Vector2(pos.X + 3' pos.Y)' Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,Draw,The following statement contains a magic number: SpriteBatch.DrawString(EOGame.Instance.DBGFont' strToDraw' new Vector2(pos.X + 20' pos.Y)' chatStrings.Keys[i].GetColor());
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldChatRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatRenderer,The following statement contains a magic number: tabs[i] = new OldChatTab((ChatTab) i' this' (ChatTab) i == ChatTab.Local)                  {                      DrawLocation = i > (int) ChatTab.Private2                          ? new Vector2(289 + 44*(i - 2)' 102)                          : new Vector2((ChatTab) i == ChatTab.Private1 ? 23 : 156' 102)                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: i < INVENTORY_ROW_LENGTH * 4
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_lblWeight = new XNALabel(new Rectangle(385' 37' 88' 18)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleCenter'                  Visible = true'                  AutoSize = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_lblWeight = new XNALabel(new Rectangle(385' 37' 88' 18)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleCenter'                  Visible = true'                  AutoSize = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_lblWeight = new XNALabel(new Rectangle(385' 37' 88' 18)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleCenter'                  Visible = true'                  AutoSize = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_lblWeight = new XNALabel(new Rectangle(385' 37' 88' 18)' Constants.FontSize08pt5)              {                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleCenter'                  Visible = true'                  AutoSize = false              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: Texture2D thatWeirdSheet = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnPaperdoll = new XNAButton(thatWeirdSheet' new Vector2(385' 9)' /*new Rectangle(39' 385' 88' 19)*/null' new Rectangle(126' 385' 88' 19));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnDrop = new XNAButton(thatWeirdSheet' new Vector2(389' 68)' new Rectangle(0' 15' 38' 37)' new Rectangle(0' 52' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,OldEOInventory,The following statement contains a magic number: m_btnJunk = new XNAButton(thatWeirdSheet' new Vector2(431' 68)' new Rectangle(0' 89' 38' 37)' new Rectangle(0' 126' 38' 37));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_addItemToSlot,The following statement contains a magic number: m_childItems[m_childItems.Count - 1].DrawOrder = (int) ControlDrawLayer.DialogLayer - (2 + slot%INVENTORY_ROW_LENGTH);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,ItemsFit,The following statement contains a magic number: bool['] tempFilledSlots = new bool[4' INVENTORY_ROW_LENGTH];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,ItemsFit,The following statement contains a magic number: row < 4
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,MoveItem,The following statement contains a magic number: childItem.DrawOrder = (int)ControlDrawLayer.DialogLayer - (2 + childItem.Slot % INVENTORY_ROW_LENGTH);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getNextOpenSlot,The following statement contains a magic number: y >= 4
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getNextOpenSlot,The following statement contains a magic number: row < 4
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_fitsInSlot,The following statement contains a magic number: slot < 0 || slot >= 4*INVENTORY_ROW_LENGTH
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_fitsInSlot,The following statement contains a magic number: y >= 4 || x >= INVENTORY_ROW_LENGTH
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_fitsInSlot,The following statement contains a magic number: points.Count(_t => _t.Item1 < 0 || _t.Item1 > 3 || _t.Item2 < 0 || _t.Item2 >= INVENTORY_ROW_LENGTH) > 0
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getItemSizeDeltas,The following statement contains a magic number: sizeStr == null || sizeStr.Length != 7
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getItemSizeDeltas,The following statement contains a magic number: width = Convert.ToInt32(sizeStr.Substring(4' 1));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOInventory,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldInventoryPanel.cs,_getItemSizeDeltas,The following statement contains a magic number: height = Convert.ToInt32(sizeStr.Substring(6' 1));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_totalNumPlayers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_totalNumPlayers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_totalNumPlayers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_totalNumPlayers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterClick = new Rectangle(2 + DrawAreaWithOffset.X' 2 + DrawAreaWithOffset.Y' 14' 14);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterClick = new Rectangle(2 + DrawAreaWithOffset.X' 2 + DrawAreaWithOffset.Y' 14' 14);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterClick = new Rectangle(2 + DrawAreaWithOffset.X' 2 + DrawAreaWithOffset.Y' 14' 14);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterClick = new Rectangle(2 + DrawAreaWithOffset.X' 2 + DrawAreaWithOffset.Y' 14' 14);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Texture2D weirdOffsets = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Rectangle offsetsSource = new Rectangle(i % 2 == 0 ? 0 : 12' i >= 2 ? 246 : 233' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterTextures[i] = new Texture2D(EOGame.Instance.GraphicsDevice' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: m_filterTextures[i] = new Texture2D(EOGame.Instance.GraphicsDevice' 12' 13);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Color[] dat = new Color[12*13];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,OldEOOnlineList,The following statement contains a magic number: Color[] dat = new Color[12*13];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_filterTextures[(int) m_filter]' new Vector2(DrawAreaWithOffset.X + 4' DrawAreaWithOffset.Y + 2)' Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The following statement contains a magic number: SpriteBatch.Draw(m_filterTextures[(int) m_filter]' new Vector2(DrawAreaWithOffset.X + 4' DrawAreaWithOffset.Y + 2)' Color.White);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The following statement contains a magic number: int yCoord = DRAW_OFFSET_Y + DrawAreaWithOffset.Y + (i - m_scrollBar.ScrollOffset)*13;
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_removeTexture = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 43);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_healthBar = new Texture2D[4];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_numMembers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_numMembers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_numMembers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_numMembers = new XNALabel(new Rectangle(455' 2' 27' 14)' Constants.FontSize08pt5)              {                  AutoSize = false'                  ForeColor = ColorConstants.LightGrayText'                  TextAlign = LabelAlignment.MiddleRight              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,OldEOPartyPanel,The following statement contains a magic number: m_scrollBar = new OldScrollBar(this' new Vector2(467' 20)' new Vector2(16' 97)' ScrollBarColors.LightOnMed)              {                  LinesToRender = 7'                  Visible = true              };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_addRemoveButtonForMember,The following statement contains a magic number: int delta = m_removeTexture.Height / 3;
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_addRemoveButtonForMember,The following statement contains a magic number: XNAButton nextButton = new XNAButton(m_removeTexture'                  new Vector2(DrawAreaWithOffset.X + DRAW_REMOVE_X' DRAW_OFFSET_Y)'                  enabled ? new Rectangle(0' 0' m_removeTexture.Width' delta) : new Rectangle(0' delta' m_removeTexture.Width' delta)'                  enabled ? new Rectangle(0' delta * 2' m_removeTexture.Width' delta) : new Rectangle(0' delta' m_removeTexture.Width' delta));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,Draw,The following statement contains a magic number: int yCoord = DRAW_OFFSET_Y + DrawAreaWithOffset.Y + (i - m_scrollBar.ScrollOffset) * 13;
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_drawHealthBar,The following statement contains a magic number: Rectangle barSrcRect = new Rectangle(0' 0' (int)Math.Round(m_healthBar[HP_RED].Width * (percentHealth / 100.0))' m_healthBar[1].Height);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_drawHealthBar,The following statement contains a magic number: int color = percentHealth > 50 ? HP_GREEN : percentHealth > 25 ? HP_YELLOW : HP_RED;
Magic Number,EndlessClient.HUD.Panels.Old,OldEOPartyPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldPartyPanel.cs,_drawHealthBar,The following statement contains a magic number: int color = percentHealth > 50 ? HP_GREEN : percentHealth > 25 ? HP_YELLOW : HP_RED;
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide = new XNALabel[5];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide = new XNALabel[5];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide[i] = new XNALabel(new Rectangle(117' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide[i] = new XNALabel(new Rectangle(117' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide[i] = new XNALabel(new Rectangle(117' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide[i] = new XNALabel(new Rectangle(117' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_leftSide[i] = new XNALabel(new Rectangle(117' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide[i] = new XNALabel(new Rectangle(356' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide[i] = new XNALabel(new Rectangle(356' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide[i] = new XNALabel(new Rectangle(356' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide[i] = new XNALabel(new Rectangle(356' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_rightSide[i] = new XNALabel(new Rectangle(356' 25 + (18*i)' 100' 15)' Constants.FontSize08pt5)                  {                      ForeColor = ColorConstants.LightGrayText                  };
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons = new XNAButton[10];
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,OldEOSettingsPanel,The following statement contains a magic number: m_buttons[i] = new XNAButton(((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.PostLoginUI' 27' true)'                      new Vector2(i < 5 ? 215 : 454' 25 + (18*(i%5)))'                       new Rectangle(0' 0' 19' 15)'                       new Rectangle(19' 0' 19' 15));
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_leftSide[2].Text = OldWorld.GetString(EOResourceID.SETTING_KEYBOARD_ENGLISH);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_leftSide[3].Text = OldWorld.GetString(EOResourceID.SETTING_LANG_CURRENT);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_leftSide[4].Text = OldWorld.GetString(w.HearWhispers ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_rightSide[2].Text = OldWorld.GetString(EOResourceID.SETTING_EXCLUSIVE);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_rightSide[3].Text = OldWorld.GetString(w.LogChatToFile ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED);
Magic Number,EndlessClient.HUD.Panels.Old,OldEOSettingsPanel,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldSettingsPanel.cs,_setTextForLanguage,The following statement contains a magic number: m_rightSide[4].Text = OldWorld.GetString(w.Interaction ? EOResourceID.SETTING_ENABLED : EOResourceID.SETTING_DISABLED);
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,EmptySpellIcon,The following statement contains a magic number: _highlightColor.SetData(new[] { Color.FromNonPremultiplied(200' 200' 200' 60) });
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,EmptySpellIcon,The following statement contains a magic number: _highlightColor.SetData(new[] { Color.FromNonPremultiplied(200' 200' 200' 60) });
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,EmptySpellIcon,The following statement contains a magic number: _highlightColor.SetData(new[] { Color.FromNonPremultiplied(200' 200' 200' 60) });
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,EmptySpellIcon,The following statement contains a magic number: _highlightColor.SetData(new[] { Color.FromNonPremultiplied(200' 200' 200' 60) });
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,OnSlotChanged,The following statement contains a magic number: DrawLocation = new Vector2(101 + col * 45' 9 + row * 52);
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,OnSlotChanged,The following statement contains a magic number: DrawLocation = new Vector2(101 + col * 45' 9 + row * 52);
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,OnSlotChanged,The following statement contains a magic number: DrawLocation = new Vector2(101 + col * 45' 9 + row * 52);
Magic Number,EndlessClient.HUD.Spells,EmptySpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\EmptySpellIcon.cs,OnSlotChanged,The following statement contains a magic number: DrawLocation = new Vector2(101 + col * 45' 9 + row * 52);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,SpellIcon,The following statement contains a magic number: _spellGraphicSourceRect = new Rectangle(0' 0' _spellGraphic.Width / 2' _spellGraphic.Height);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnLevelChanged,The following statement contains a magic number: var width = (int)(Level / 100.0 * 36);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnLevelChanged,The following statement contains a magic number: var width = (int)(Level / 100.0 * 36);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnLevelChanged,The following statement contains a magic number: _levelDestinationRectangle = new Rectangle(DrawAreaWithOffset.X + 3' DrawAreaWithOffset.Y + 40' width' 6);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnLevelChanged,The following statement contains a magic number: _levelDestinationRectangle = new Rectangle(DrawAreaWithOffset.X + 3' DrawAreaWithOffset.Y + 40' width' 6);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnLevelChanged,The following statement contains a magic number: _levelDestinationRectangle = new Rectangle(DrawAreaWithOffset.X + 3' DrawAreaWithOffset.Y + 40' width' 6);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,SetIconHover,The following statement contains a magic number: var halfWidth = _spellGraphic.Width/2;
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,DoClickAndDragLogic,The following statement contains a magic number: !_dragging && _followMouse && (DateTime.Now - _clickTime).TotalMilliseconds >= 75
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,DrawSpellIcon,The following statement contains a magic number: targetDrawArea = new Rectangle(                      DrawAreaWithOffset.X + (DrawAreaWithOffset.Width - _spellGraphicSourceRect.Width) / 2'                      DrawAreaWithOffset.Y + (DrawAreaWithOffset.Height - _spellGraphicSourceRect.Height) / 2'                      _spellGraphicSourceRect.Width'                      _spellGraphicSourceRect.Height);
Magic Number,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,DrawSpellIcon,The following statement contains a magic number: targetDrawArea = new Rectangle(                      DrawAreaWithOffset.X + (DrawAreaWithOffset.Width - _spellGraphicSourceRect.Width) / 2'                      DrawAreaWithOffset.Y + (DrawAreaWithOffset.Height - _spellGraphicSourceRect.Height) / 2'                      _spellGraphicSourceRect.Width'                      _spellGraphicSourceRect.Height);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetHatTexture,The following statement contains a magic number: var offset = 2 * GetBaseOffsetFromDirection(characterRenderProperties.Direction);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,The following statement contains a magic number: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,The following statement contains a magic number: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,The following statement contains a magic number: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following statement contains a magic number: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: var sheetRows = 7;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: var sheetColumns = 4;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: gfxNum = 2;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: sheetColumns = 16;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: var sectionDelta = texture.Width / 4;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetSkinTexture,The following statement contains a magic number: var sourceArea = new Rectangle(                  characterRenderProperties.Gender * widthDelta * (sheetColumns / 2) + (rotated ? sectionDelta : 0) + walkExtra'                  characterRenderProperties.Race * heightDelta'                  widthDelta'                  heightDelta);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetHairTexture,The following statement contains a magic number: var offset = 2 * GetBaseOffsetFromDirection(characterRenderProperties.Direction);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetHairTexture,The following statement contains a magic number: var gfxNumber = GetBaseHairGraphic(characterRenderProperties.HairStyle' characterRenderProperties.HairColor) + 2 + offset;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The following statement contains a magic number: const int ROWS = 14;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The following statement contains a magic number: const int COLS = 11;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The following statement contains a magic number: var texture = _gfxManager.TextureFromResource(GFXTypes.SkinSprites' 8' true);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The following statement contains a magic number: var genderOffset = texture.Height / 2 * characterRenderProperties.Gender;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetFaceTexture,The following statement contains a magic number: var emote = characterRenderProperties.Emote == Emote.Playful ||                          characterRenderProperties.Emote == Emote.Drunk                          ? 10 : (int)characterRenderProperties.Emote - 1;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetEmoteTexture,The following statement contains a magic number: const int NUM_EMOTES = 15;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetEmoteTexture,The following statement contains a magic number: const int NUM_FRAMES = 4;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetEmoteTexture,The following statement contains a magic number: var emoteTexture = _gfxManager.TextureFromResource(GFXTypes.PostLoginUI' 38' true);
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseBootGraphic,The following statement contains a magic number: return (bootsGraphic - 1) * 40;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseArmorGraphic,The following statement contains a magic number: return (armorGraphic - 1) * 50;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseHatGraphic,The following statement contains a magic number: return (hatGraphic - 1) * 10;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseShieldGraphic,The following statement contains a magic number: return (shieldGraphic - 1) * 50;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseWeaponGraphic,The following statement contains a magic number: return (weaponGraphic - 1) * 100;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseHairGraphic,The following statement contains a magic number: return (hairStyle - 1) * 40 + hairColor * 4;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBaseHairGraphic,The following statement contains a magic number: return (hairStyle - 1) * 40 + hairColor * 4;
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following statement contains a magic number: switch (type)              {                  case BootsSpriteType.WalkFrame1:                  case BootsSpriteType.WalkFrame2:                  case BootsSpriteType.WalkFrame3:                  case BootsSpriteType.WalkFrame4:                      return 4;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following statement contains a magic number: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following statement contains a magic number: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following statement contains a magic number: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following statement contains a magic number: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: switch (whichFrame)              {                  case NPCFrame.Standing:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 1 : 3;                      break;                  case NPCFrame.StandingFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 2 : 4;                      break;                  case NPCFrame.WalkFrame1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 5 : 9;                      break;                  case NPCFrame.WalkFrame2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 6 : 10;                      break;                  case NPCFrame.WalkFrame3:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 7 : 11;                      break;                  case NPCFrame.WalkFrame4:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 8 : 12;                      break;                  case NPCFrame.Attack1:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 13 : 15;                      break;                  case NPCFrame.Attack2:                      offset = direction == EODirection.Down || direction == EODirection.Right ? 14 : 16;                      break;                  default:                      return null;              }
Magic Number,EndlessClient.Rendering.Sprites,NPCSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\NPCSpriteSheet.cs,GetNPCTexture,The following statement contains a magic number: var baseGfx = (baseGraphic - 1) * 40;
Magic Number,EndlessClient.Rendering.Effects,BottomAlignedEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\BottomAlignedEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var x = targetActorRectangle.X + (targetActorRectangle.Width - textureSourceRectangle.Width) / 2;
Magic Number,EndlessClient.Rendering.Effects,EffectRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectRenderer.cs,Update,The following statement contains a magic number: (nowTime - _lastFrameChange).TotalMilliseconds > 100
Magic Number,EndlessClient.Rendering.Effects,EffectRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectRenderer.cs,GetTargetRectangle,The following statement contains a magic number: rect.Offset(6' 11);
Magic Number,EndlessClient.Rendering.Effects,EffectRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectRenderer.cs,GetTargetRectangle,The following statement contains a magic number: rect.Offset(6' 11);
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,DrawToSpriteBatch,The following statement contains a magic number: sb.Draw(_graphic' drawLocation' sourceRect' Color.FromNonPremultiplied(255' 255' 255' _alpha));
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,DrawToSpriteBatch,The following statement contains a magic number: sb.Draw(_graphic' drawLocation' sourceRect' Color.FromNonPremultiplied(255' 255' 255' _alpha));
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,DrawToSpriteBatch,The following statement contains a magic number: sb.Draw(_graphic' drawLocation' sourceRect' Color.FromNonPremultiplied(255' 255' 255' _alpha));
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var targetX = targetActorRectangle.X + (targetActorRectangle.Width - textureSourceRectangle.Width) / 2;
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var targetY = targetActorRectangle.Y + (targetActorRectangle.Height - textureSourceRectangle.Height) / 2;
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWarpEffect,The following statement contains a magic number: switch (warpEffect)              {                  case EffectType.WarpOriginal: gfxIDs = new[] {108' 109}; break;                  case EffectType.WarpDestination: gfxIDs = new[] {112}; break;                  default: throw new ArgumentOutOfRangeException(nameof(warpEffect)' warpEffect' null);              }
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWarpEffect,The following statement contains a magic number: switch (warpEffect)              {                  case EffectType.WarpOriginal: gfxIDs = new[] {108' 109}; break;                  case EffectType.WarpDestination: gfxIDs = new[] {112}; break;                  default: throw new ArgumentOutOfRangeException(nameof(warpEffect)' warpEffect' null);              }
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWarpEffect,The following statement contains a magic number: switch (warpEffect)              {                  case EffectType.WarpOriginal: gfxIDs = new[] {108' 109}; break;                  case EffectType.WarpDestination: gfxIDs = new[] {112}; break;                  default: throw new ArgumentOutOfRangeException(nameof(warpEffect)' warpEffect' null);              }
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWarpEffect,The following statement contains a magic number: return gfxIDs.Select(id => new EffectSpriteInfo(8' 1' true' 255' GetGraphic(id)))                           .OfType<IEffectSpriteInfo>()                           .ToList();
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWarpEffect,The following statement contains a magic number: return gfxIDs.Select(id => new EffectSpriteInfo(8' 1' true' 255' GetGraphic(id)))                           .OfType<IEffectSpriteInfo>()                           .ToList();
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWaterEffect,The following statement contains a magic number: return new List<IEffectSpriteInfo>              {                  new EffectSpriteInfo(6' 1' false' 255' GetGraphic(125))              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWaterEffect,The following statement contains a magic number: return new List<IEffectSpriteInfo>              {                  new EffectSpriteInfo(6' 1' false' 255' GetGraphic(125))              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetWaterEffect,The following statement contains a magic number: return new List<IEffectSpriteInfo>              {                  new EffectSpriteInfo(6' 1' false' 255' GetGraphic(125))              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,GetGraphic,The following statement contains a magic number: return _graphicsManager.TextureFromResource(GFXTypes.Spells' actualResourceID - 100' true);
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreatePotionEffectDictionary,The following statement contains a magic number: _potionEffects = new Dictionary<HardCodedPotionEffect' IList<IEffectSpriteInfo>>(6)              {                  {                      HardCodedPotionEffect.FLAMES'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(101))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(102))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(103)))                  }'                  {                      HardCodedPotionEffect.LOVE'                      CreateList(new EffectSpriteInfo(4' 4' true' 255' GetGraphic(106)))                  }'                  {                      HardCodedPotionEffect.CELEBRATE'                      CreateList(new EffectSpriteInfo(7' 2' true' 255' GetGraphic(115)))                  }'                  {                      HardCodedPotionEffect.SPARKLES'                      CreateList(new EffectSpriteInfo(5' 1' true' 128' GetGraphic(117))'                                 new EffectSpriteInfo(5' 1' true' 128' GetGraphic(118)))                  }'                  {                      HardCodedPotionEffect.EVIL'                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(119)))                  }'                  {                      HardCodedPotionEffect.TERROR'                       CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(122)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EffectSpriteManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EffectSpriteManager.cs,CreateSpellEffectDictionary,The following statement contains a magic number: _spellEffects = new Dictionary<HardCodedSpellGraphic' IList<IEffectSpriteInfo>>(32)              {                  { HardCodedSpellGraphic.FIRE' _potionEffects[HardCodedPotionEffect.FLAMES] }'                  { HardCodedSpellGraphic.HEAL'                       CreateList(new EffectSpriteInfo(5' 1' false' 128' GetGraphic(129))'                                 new EffectSpriteInfo(5' 1' true' 255' GetGraphic(130)))                  }'                  {                      HardCodedSpellGraphic.THUNDER'                      CreateList(new EffectSpriteInfo(4' 1' true' 255' GetGraphic(133)))                  }'                  {                      HardCodedSpellGraphic.ULTIMA_BLAST'                      CreateList(new EffectSpriteInfo(4' 3' true' 255' GetGraphic(137))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(138)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BALL'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(140))'                                 new FallingEffectSpriteInfo(6' 1' true' 128' GetGraphic(141)))                  }'                  {                      HardCodedSpellGraphic.SHIELD'                      CreateList(new EffectSpriteInfo(6' 1' false' 128' GetGraphic(144))'                                 new EffectSpriteInfo(6' 1' true' 255' GetGraphic(145)))                  }'                  {                      HardCodedSpellGraphic.RING_OF_FIRE'                      CreateList(new EffectSpriteInfo(4' 3' false' 255' GetGraphic(146))'                                 new EffectSpriteInfo(4' 3' true' 128' GetGraphic(148)))                  }'                  {                      HardCodedSpellGraphic.ICE_BLAST_1'                      CreateList(new EffectSpriteInfo(7' 1 'false' 128' GetGraphic(150))'                                 new EffectSpriteInfo(7' 1' true' 255' GetGraphic(151)))                  }'                  {                      HardCodedSpellGraphic.ENERGY_BALL'                      CreateList(new EnergyBallEffectSpriteInfo(7' 1' true' 255' GetGraphic(154)))                  }'                  {                      HardCodedSpellGraphic.WHIRL'                      CreateList(new EffectSpriteInfo(4' 2' false' 255' GetGraphic(155))'                                 new EffectSpriteInfo(4' 2' true' 128' GetGraphic(156))'                                 new EffectSpriteInfo(4' 2' true' 255' GetGraphic(157)))                  }'                  {                      HardCodedSpellGraphic.AURA'                      CreateList(new AuraEffectSpriteInfo(GetGraphic(159)))                  }'                  {                      HardCodedSpellGraphic.BOULDER'                      CreateList(new FallingEffectSpriteInfo(7' 1' true' 255' GetGraphic(163)))                  }'                  //{                  //    HardCodedSpellGraphic.HEAVEN' //todo: this isn't quite right yet...                  //    CreateList(new HeavenEffectSpriteInfo(false' 255' GetGraphic(164))'                  //               new HeavenEffectSpriteInfo(true' 128' GetGraphic(165)))                  //}'                  {                      HardCodedSpellGraphic.ICE_BLAST_2'                      CreateList(new FallingEffectSpriteInfo(6' 1' false' 255' GetGraphic(167))'                                 new FallingEffectSpriteInfo(6' 1' true' 255' GetGraphic(168)))                  }'                  //{                  //    HardCodedSpellGraphic.DARK_BEAM' //todo: figure this out...                  //}                  {                      HardCodedSpellGraphic.DARK_HAND'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(176))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(177)))                  }'                  {                      HardCodedSpellGraphic.DARK_SKULL'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(179))'                                 new EffectSpriteInfo(5' 2' true' 128' GetGraphic(180)))                  }'                  {                      HardCodedSpellGraphic.FIRE_BLAST'                      CreateList(new EffectSpriteInfo(4' 1' true' 192' GetGraphic(184)))                  }'                  {                      HardCodedSpellGraphic.TENTACLES'                      CreateList(new EffectSpriteInfo(5' 2' false' 255' GetGraphic(185))'                                 new EffectSpriteInfo(5' 2' true' 255' GetGraphic(187)))                  }'                  {                      HardCodedSpellGraphic.POWER_WIND'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(188))'                                 new EffectSpriteInfo(6' 2' true' 255' GetGraphic(190)))                  }'                  {                      HardCodedSpellGraphic.MAGIC_WHIRL'                      CreateList(new BottomAlignedEffectSpriteInfo(15' 1' false' 255' GetGraphic(191))'                                 new BottomAlignedEffectSpriteInfo(15' 1' true' 128' GetGraphic(193)))                  }'                  {                      HardCodedSpellGraphic.DARK_BITE'                      CreateList(new EffectSpriteInfo(6' 2' false' 255' GetGraphic(194))'                                 new EffectSpriteInfo(6' 2' true' 128' GetGraphic(195)))                  }'                  {                      HardCodedSpellGraphic.SHELL' //todo: why isn't this rendering correctly?                      CreateList(new EffectSpriteInfo(4' 4' false' 255' GetGraphic(197))'                                 new EffectSpriteInfo(4' 4' true' 128' GetGraphic(198)))                  }'                  {                      HardCodedSpellGraphic.GREEN_FLAME'                      CreateList(new BottomAlignedEffectSpriteInfo(5' 1' false' 255' GetGraphic(200))'                                 new BottomAlignedEffectSpriteInfo(5' 1' true' 128' GetGraphic(201)))                  }              };
Magic Number,EndlessClient.Rendering.Effects,EnergyBallEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EnergyBallEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var x = targetActorRectangle.X + (targetActorRectangle.Width - textureSourceRectangle.Width) / 2;
Magic Number,EndlessClient.Rendering.Effects,EnergyBallEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\EnergyBallEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var y = targetActorRectangle.Y - _currentFrame * textureSourceRectangle.Height / 3;
Magic Number,EndlessClient.Rendering.Effects,FallingEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\FallingEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var x = targetActorRectangle.X + (targetActorRectangle.Width - textureSourceRectangle.Width) / 2;
Magic Number,EndlessClient.Rendering.Effects,FallingEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\FallingEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var y = targetActorRectangle.Y - (_numberOfFrames - _currentFrame) * textureSourceRectangle.Height / 3;
Magic Number,EndlessClient.Rendering.Effects,FlickeringEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\FlickeringEffectSpriteInfo.cs,DrawToSpriteBatch,The following statement contains a magic number: (DateTime.Now - _lastDrawTime).TotalMilliseconds > _msToWait + 100
Magic Number,EndlessClient.Rendering.Effects,HeavenEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\HeavenEffectSpriteInfo.cs,HeavenEffectSpriteInfo,The following statement contains a magic number: _whichFrame = _numberOfFrames - 2;
Magic Number,EndlessClient.Rendering.Effects,HeavenEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\HeavenEffectSpriteInfo.cs,FlickerTimeChanged,The following statement contains a magic number: _whichFrame =                  _whichFrame == _numberOfFrames - 2                      ? _numberOfFrames - 1                      : _numberOfFrames - 2;
Magic Number,EndlessClient.Rendering.Effects,HeavenEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\HeavenEffectSpriteInfo.cs,FlickerTimeChanged,The following statement contains a magic number: _whichFrame =                  _whichFrame == _numberOfFrames - 2                      ? _numberOfFrames - 1                      : _numberOfFrames - 2;
Magic Number,EndlessClient.Rendering.Effects,HeavenEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\HeavenEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var targetX = targetActorRectangle.X + (targetActorRectangle.Width - textureSourceRectangle.Width) / 2;
Magic Number,EndlessClient.Rendering.Effects,HeavenEffectSpriteInfo,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Effects\HeavenEffectSpriteInfo.cs,GetDrawLocation,The following statement contains a magic number: var targetY = targetActorRectangle.Bottom - textureSourceRectangle.Height + 30;
Missing Default,EndlessClient.Dialogs,EOMessageBox,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\EOMessageBox.cs,EOMessageBox,The following switch statement is missing a default case: switch (whichButtons)              {                  case EODialogButtons.Ok:                      _ok = new XNAButton(smallButtonSheet' new Vector2(181' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                      break;                  case EODialogButtons.Cancel:                      _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (sender' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;                  case EODialogButtons.OkCancel:                      //implement this more fully when it is needed                      //update draw location of ok button to be on left?                      _ok = new XNAButton(smallButtonSheet' new Vector2(89' 113)' okOut' okOver);                      _ok.OnClick += (sender' e) => Close(XNADialogResult.OK);                      _ok.SetParentControl(this);                        _cancel = new XNAButton(smallButtonSheet' new Vector2(181' 113)' cancelOut' cancelOver);                      _cancel.OnClick += (s' e) => Close(XNADialogResult.Cancel);                      _cancel.SetParentControl(this);                      break;              }
Missing Default,EndlessClient.Dialogs,ScrollingListDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ScrollingListDialog.cs,_setButtons,The following switch statement is missing a default case: switch (setButtons)              {                  case ScrollingListDialogButtons.BackCancel:                  case ScrollingListDialogButtons.AddCancel:                      {                          SmallButton which = setButtons == ScrollingListDialogButtons.BackCancel ? SmallButton.Back : SmallButton.Add;                          XNAButton add = new XNAButton(smallButtonSheet' new Vector2(48' 252)' _getSmallButtonOut(which)' _getSmallButtonOver(which));                          add.SetParent(this);                          add.OnClick += (o' e) => Close(add' setButtons == ScrollingListDialogButtons.BackCancel ? XNADialogResult.Back : XNADialogResult.Add);                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(144' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(add);                          dlgButtons.Add(cancel);                      }                      break;                  case ScrollingListDialogButtons.Cancel:                      {                          XNAButton cancel = new XNAButton(smallButtonSheet' new Vector2(96' 252)' _getSmallButtonOut(SmallButton.Cancel)' _getSmallButtonOver(SmallButton.Cancel));                          cancel.SetParent(this);                          cancel.OnClick += (o' e) => Close(cancel' XNADialogResult.Cancel);                            dlgButtons.Add(cancel);                      }                      break;              }
Missing Default,EndlessClient.Dialogs,ShopDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\ShopDialog.cs,_setState,The following switch statement is missing a default case: switch (newState)              {                  case ShopState.Initial:                      {                          string buyNum =                              $"{m_tradeItems.FindAll(x => x.Buy > 0).Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_IN_STORE)}";                          string sellNum = $"{sellNumInt} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                          string craftNum =                              $"{m_craftItems.Count} {OldWorld.GetString(EOResourceID.DIALOG_SHOP_ITEMS_ACCEPTED)}";                            ListDialogItem buy = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_BUY_ITEMS)'                              SubText = buyNum'                              IconGraphic = BuyIcon'                              OffsetY = 45                          };                          buy.OnLeftClick += (o' e) => _setState(ShopState.Buying);                          buy.OnRightClick += (o' e) => _setState(ShopState.Buying);                          buy.ShowItemBackGround = false;                          AddItemToList(buy' false);                          ListDialogItem sell = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                          {                              Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_SELL_ITEMS)'                              SubText = sellNum'                              IconGraphic = SellIcon'                              OffsetY = 45                          };                          sell.OnLeftClick += (o' e) => _setState(ShopState.Selling);                          sell.OnRightClick += (o' e) => _setState(ShopState.Selling);                          sell.ShowItemBackGround = false;                          AddItemToList(sell' false);                          if (m_craftItems.Count > 0)                          {                              ListDialogItem craft = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                              {                                  Text = OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_ITEMS)'                                  SubText = craftNum'                                  IconGraphic = CraftIcon'                                  OffsetY = 45                              };                              craft.OnLeftClick += (o' e) => _setState(ShopState.Crafting);                              craft.OnRightClick += (o' e) => _setState(ShopState.Crafting);                              craft.ShowItemBackGround = false;                              AddItemToList(craft' false);                          }                          _setButtons(ScrollingListDialogButtons.Cancel);                      }                      break;                  case ShopState.Buying:                  case ShopState.Selling:                      {                          //re-use the logic for Buying/Selling: it is almost identical                          bool buying = newState == ShopState.Buying;                            List<ListDialogItem> itemList = new List<ListDialogItem>();                          foreach (ShopItem si in m_tradeItems)                          {                              if (si.ID <= 0 || (buying && si.Buy <= 0) ||                                  (!buying && (si.Sell <= 0 || OldWorld.Instance.MainPlayer.ActiveCharacter.Inventory.FindIndex(inv => inv.ItemID == si.ID) < 0)))                                  continue;                                ShopItem localItem = si;                              var rec = OldWorld.Instance.EIF[si.ID];                              string secondary = string.Format("{2}: {0} {1}"' buying ? si.Buy : si.Sell'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_PRICE));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _buySellItem(localItem);                              nextItem.OnRightClick += (o' e) => _buySellItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;                  case ShopState.Crafting:                      {                          List<ListDialogItem> itemList = new List<ListDialogItem>(m_craftItems.Count);                          foreach (CraftItem ci in m_craftItems)                          {                              if (ci.Ingredients.Count <= 0) continue;                                CraftItem localItem = ci;                              var rec = OldWorld.Instance.EIF[ci.ID];                              string secondary = string.Format("{2}: {0} {1}"' ci.Ingredients.Count'                                  rec.Type == ItemType.Armor ? "(" + (rec.Gender == 0 ? OldWorld.GetString(EOResourceID.FEMALE) : OldWorld.GetString(EOResourceID.MALE)) + ")" : ""'                                  OldWorld.GetString(EOResourceID.DIALOG_SHOP_CRAFT_INGREDIENTS));                                ListDialogItem nextItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large)                              {                                  Text = rec.Name'                                  SubText = secondary'                                  IconGraphic = ((EOGame)Game).GFXManager.TextureFromResource(GFXTypes.Items' 2 * rec.Graphic - 1' true)'                                  OffsetY = 45                              };                              nextItem.OnLeftClick += (o' e) => _craftItem(localItem);                              nextItem.OnRightClick += (o' e) => _craftItem(localItem);                                itemList.Add(nextItem);                          }                          SetItemList(itemList);                          _setButtons(ScrollingListDialogButtons.BackCancel);                      }                      break;              }
Missing Default,EndlessClient.Dialogs,SkillmasterDialog,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Dialogs\SkillmasterDialog.cs,_setState,The following switch statement is missing a default case: switch (newState)              {                  case SkillState.Initial:                  {                      string learnNum = $"{numToLearn}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_TO_LEARN)}";                      string forgetNum = $"{numToForget}{OldWorld.GetString(EOResourceID.SKILLMASTER_ITEMS_LEARNED)}";                        ListDialogItem learn = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 0)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_LEARN)'                          SubText = learnNum'                          IconGraphic = LearnIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      learn.OnLeftClick += (o' e) => _setState(SkillState.Learn);                      learn.OnRightClick += (o' e) => _setState(SkillState.Learn);                      AddItemToList(learn' false);                        ListDialogItem forget = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 1)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_FORGET)'                          SubText = forgetNum'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forget.OnLeftClick += (o' e) => _setState(SkillState.Forget);                      forget.OnRightClick += (o' e) => _setState(SkillState.Forget);                      AddItemToList(forget' false);                        ListDialogItem forgetAll = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' 2)                      {                          Text = OldWorld.GetString(EOResourceID.SKILLMASTER_FORGET_ALL)'                          SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_RESET_YOUR_CHARACTER)'                          IconGraphic = ForgetIcon'                          ShowItemBackGround = false'                          OffsetY = 45                      };                      forgetAll.OnLeftClick += (o' e) => _setState(SkillState.ForgetAll);                      forgetAll.OnRightClick += (o' e) => _setState(SkillState.ForgetAll);                      AddItemToList(forgetAll' false);                        _setButtons(ScrollingListDialogButtons.Cancel);                  }                      break;                  case SkillState.Learn:                  {                      int index = 0;                      for (int i = 0; i < m_skills.Count; ++i)                      {                          if (OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.FindIndex(_sp => m_skills[i].ID == _sp.ID) >= 0)                              continue;                          int localI = i;                            var spellData = OldWorld.Instance.ESF.Data[m_skills[localI].ID];                            ListDialogItem nextListItem = new ListDialogItem(this' ListDialogItem.ListItemStyle.Large' index++)                          {                              Visible = false'                              Text = spellData.Name'                              SubText = OldWorld.GetString(EOResourceID.SKILLMASTER_WORD_REQUIREMENTS)'                              IconGraphic = OldWorld.GetSpellIcon(spellData.Icon' false)'                              ShowItemBackGround = false'                              OffsetY = 45'                              ID = m_skills[localI].ID                          };                          nextListItem.OnLeftClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnRightClick += (o' e) => _learn(m_skills[localI]);                          nextListItem.OnMouseEnter += (o' e) => _showRequirementsLabel(m_skills[localI]);                          nextListItem.SetSubtextLink(() => _showRequirements(m_skills[localI]));                          AddItemToList(nextListItem' false);                      }                        _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;                  case SkillState.Forget:                  {                      TextInputDialog input = new TextInputDialog(OldWorld.GetString(DialogResourceID.SKILL_PROMPT_TO_FORGET' false)' 32);                      input.SetAsKeyboardSubscriber();                      input.DialogClosing += (sender' args) =>                      {                          if (args.Result == XNADialogResult.Cancel) return;                          bool found =                              OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Any(                                  _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower());                            if (!found)                          {                              args.CancelClose = true;                              EOMessageBox.Show(DialogResourceID.SKILL_FORGET_ERROR_NOT_LEARNED' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                              input.SetAsKeyboardSubscriber();                          }                            if (!m_api.ForgetSpell(                                  OldWorld.Instance.MainPlayer.ActiveCharacter.Spells.Find(                                      _spell => OldWorld.Instance.ESF.Data[_spell.ID].Name.ToLower() == input.ResponseText.ToLower()).ID))                          {                              Close();                              ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                          }                      };                        //should show initial info in the actual dialog since this uses a pop-up input box                      //    to select a skill to remove                      newState = SkillState.Initial;                      goto case SkillState.Initial;                  }                  case SkillState.ForgetAll:                  {                      _showForgetAllMessage(_forgetAllAction);                      _setButtons(ScrollingListDialogButtons.BackCancel);                  }                      break;              }
Missing Default,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,Update,The following switch statement is missing a default case: switch (m_itemData.Type)                      {                          case ItemType.Accessory:                          case ItemType.Armlet:                          case ItemType.Armor:                          case ItemType.Belt:                          case ItemType.Boots:                          case ItemType.Bracer:                          case ItemType.Gloves:                          case ItemType.Hat:                          case ItemType.Necklace:                          case ItemType.Ring:                          case ItemType.Shield:                          case ItemType.Weapon:                              _handleDoubleClick();                              break;                      }
Missing Default,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,_handleDoubleClick,The following switch statement is missing a default case: switch (m_itemData.Type)              {                  //equippable items                  case ItemType.Accessory:                  case ItemType.Armlet:                  case ItemType.Armor:                  case ItemType.Belt:                  case ItemType.Boots:                  case ItemType.Bracer:                  case ItemType.Gloves:                  case ItemType.Hat:                  case ItemType.Necklace:                  case ItemType.Ring:                  case ItemType.Shield:                  case ItemType.Weapon:                      byte subLoc = 0;                      if (m_itemData.Type == ItemType.Armlet || m_itemData.Type == ItemType.Ring || m_itemData.Type == ItemType.Bracer)                      {                          if (c.PaperDoll[(int)m_itemData.GetEquipLocation()] == 0)                              subLoc = 0;                          else if (c.PaperDoll[(int)m_itemData.GetEquipLocation() + 1] == 0)                              subLoc = 1;                          else                          {                              EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                                  EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                              break;                          }                      }                      else if (m_itemData.Type == ItemType.Armor &&                               m_itemData.Gender != c.RenderData.gender)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_DOES_NOT_FIT_GENDER);                          break;                      }                        //check stat requirements                      int[] reqs = new int[6];                      string[] reqNames = { "STR"' "INT"' "WIS"' "AGI"' "CON"' "CHA" };                      if ((reqs[0] = m_itemData.StrReq) > c.Stats.Str || (reqs[1] = m_itemData.IntReq) > c.Stats.Int                       || (reqs[2] = m_itemData.WisReq) > c.Stats.Wis || (reqs[3] = m_itemData.AgiReq) > c.Stats.Agi                       || (reqs[4] = m_itemData.ConReq) > c.Stats.Con || (reqs[5] = m_itemData.ChaReq) > c.Stats.Cha)                      {                          int reqIndex = reqs.ToList().FindIndex(x => x > 0);                            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_THIS_ITEM_REQUIRES'                              $" {reqs[reqIndex]} {reqNames[reqIndex]}");                          break;                      }                      //check class requirement                      if (m_itemData.ClassReq > 0 && m_itemData.ClassReq != c.Class)                      {                          ((EOGame) Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_CAN_ONLY_BE_USED_BY'                              OldWorld.Instance.ECF[m_itemData.ClassReq].Name);                          break;                      }                        if (c.EquipItem(m_itemData.Type' (short)m_itemData.ID'                          (short)m_itemData.DollGraphic))                      {                          if (!m_api.EquipItem((short)m_itemData.ID' subLoc))                              EOGame.Instance.DoShowLostConnectionDialogAndReturnToMainMenu();                      }                      else                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_INFORMATION'                              EOResourceID.STATUS_LABEL_ITEM_EQUIP_TYPE_ALREADY_EQUIPPED);                        break;                  //usable items                  case ItemType.Teleport:                      if (!OldWorld.Instance.ActiveMapRenderer.MapRef.Properties.CanScroll)                      {                          EOGame.Instance.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_ACTION' EOResourceID.STATUS_LABEL_NOTHING_HAPPENED);                          break;                      }                      if (m_itemData.ScrollMap == OldWorld.Instance.MainPlayer.ActiveCharacter.CurrentMap &&                          m_itemData.ScrollX == OldWorld.Instance.MainPlayer.ActiveCharacter.X &&                          m_itemData.ScrollY == OldWorld.Instance.MainPlayer.ActiveCharacter.Y)                          break; //already there - no need to scroll!                      useItem = true;                      break;                  case ItemType.Heal:                  case ItemType.HairDye:                  case ItemType.Beer:                      useItem = true;                      break;                  case ItemType.CureCurse:                      //note: don't actually set the useItem bool here. Call API.UseItem if the dialog result is OK.                      if (c.PaperDoll.Select(id => OldWorld.Instance.EIF[id])                                     .Any(rec => rec.Special == ItemSpecial.Cursed))                      {                          EOMessageBox.Show(DialogResourceID.ITEM_CURSE_REMOVE_PROMPT' EODialogButtons.OkCancel' EOMessageBoxStyle.SmallDialogSmallHeader'                              (o' e) =>                              {                                  if (e.Result == XNADialogResult.OK && !m_api.UseItem((short)m_itemData.ID))                                  {                                      ((EOGame)Game).DoShowLostConnectionDialogAndReturnToMainMenu();                                  }                              });                      }                      break;                  case ItemType.EXPReward:                      useItem = true;                      break;                  case ItemType.EffectPotion:                      useItem = true;                      break;                  //Not implemented server-side                  //case ItemType.SkillReward:                  //    break;                  //case ItemType.StatReward:                  //    break;              }
Missing Default,EndlessClient.HUD.Inventory,OldEOInventoryItem,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Inventory\OldEOInventoryItem.cs,GetItemTextColor,The following switch statement is missing a default case: switch (data.Special)              {                  case ItemSpecial.Lore:                  case ItemSpecial.Unique:                      return Color.FromNonPremultiplied(0xff' 0xf0' 0xa5' 0xff);                  case ItemSpecial.Rare:                      return Color.FromNonPremultiplied(0xf5' 0xc8' 0x9c' 0xff);              }
Missing Default,EndlessClient.Input,WalkErrorHandler,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Input\WalkErrorHandler.cs,HandleWalkToTileSpec,The following switch statement is missing a default case: switch (cellState.TileSpec)              {                  case TileSpec.ChairDown: //todo: chairs                  case TileSpec.ChairLeft:                  case TileSpec.ChairRight:                  case TileSpec.ChairUp:                  case TileSpec.ChairDownRight:                  case TileSpec.ChairUpLeft:                  case TileSpec.ChairAll:                      break;                  case TileSpec.Chest: //todo: chests                      //if (!walkValid)                      //{                      //    var chest = OldWorld.Instance.ActiveMapRenderer.MapRef.Chests.Single(_c => _c.X == destX && _c.Y == destY);                      //    if (chest != null)                      //    {                      //        string requiredKey = null;                      //        switch (Character.CanOpenChest(chest))                      //        {                      //            case ChestKey.Normal: requiredKey = "Normal Key"; break;                      //            case ChestKey.Silver: requiredKey = "Silver Key"; break;                      //            case ChestKey.Crystal: requiredKey = "Crystal Key"; break;                      //            case ChestKey.Wraith: requiredKey = "Wraith Key"; break;                      //            default:                      //                ChestDialog.Show(((EOGame)Game).API' (byte)chest.X' (byte)chest.Y);                      //                break;                      //        }                        //        if (requiredKey != null)                      //        {                      //            EOMessageBox.Show(DialogResourceID.CHEST_LOCKED' XNADialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                      //            ((EOGame)Game).Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_THE_CHEST_IS_LOCKED_EXCLAMATION'                      //                " - " + requiredKey);                      //        }                      //    }                      //    else                      //    {                      //        ChestDialog.Show(((EOGame)Game).API' destX' destY);                      //    }                      //}                      break;                  case TileSpec.BankVault: //todo: locker                      //walkValid = Renderer.NoWall;                      //if (!walkValid)                      //{                      //    LockerDialog.Show(((EOGame)Game).API' destX' destY);                      //}                      break;                  case TileSpec.Board1: //todo: boards                  case TileSpec.Board2:                  case TileSpec.Board3:                  case TileSpec.Board4:                  case TileSpec.Board5:                  case TileSpec.Board6:                  case TileSpec.Board7:                  case TileSpec.Board8:                      break;                  case TileSpec.Jukebox: //todo: jukebox                      break;              }
Missing Default,EndlessClient.Old,EOGame,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\Game.cs,doStateChange,The following switch statement is missing a default case: switch (State)              {                  case GameStates.PlayingTheGame:                      FieldInfo[] fi = GetType().GetFields(BindingFlags.Instance | BindingFlags.GetField | BindingFlags.NonPublic);                      for (int i = Components.Count - 1; i >= 0; --i)                      {                          IGameComponent comp = Components[i];                          if (comp != _backButton && (comp as DrawableGameComponent) != null &&                               fi.Count(_fi => _fi.GetValue(this) == comp) == 1)                          {                              (comp as DrawableGameComponent).Dispose();                              Components.Remove(comp);                          }                      }                        _backButton.Visible = true;                      //note: HUD construction moved to successful welcome message in GameLoadingDialog close event handler                        break;              }
Missing Default,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_useItem,The following switch statement is missing a default case: switch (data.Type)              {                  case ItemType.Teleport: /*Warp packet handles the rest!*/ break;                  case ItemType.Heal:                      {                          OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.HP = data.HP;                          OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.TP = data.TP;                            int percent = (int)Math.Round(100.0 * ((double)data.HP / OldWorld.Instance.MainPlayer.ActiveCharacter.Stats.MaxHP));                            if (data.HPGain > 0)                              OldWorld.Instance.ActiveCharacterRenderer.SetDamageCounterValue(data.HPGain' percent' true);                          m_game.Hud.RefreshStats();                      }                      break;                  case ItemType.HairDye:                      {                          OldWorld.Instance.MainPlayer.ActiveCharacter.RenderData.SetHairColor(data.HairColor);                      }                      break;                  case ItemType.Beer:                      OldWorld.Instance.ActiveCharacterRenderer.MakeDrunk();                      m_game.Hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.STATUS_LABEL_ITEM_USE_DRUNK);                      break;                  case ItemType.EffectPotion: //todo: effect potions for other players                      OldWorld.Instance.ActiveCharacterRenderer.ShowPotionAnimation(data.EffectID);                      break;                  case ItemType.CureCurse:                      {                          //actually remove the item(s) from the main character                          OldCharacter c = OldWorld.Instance.MainPlayer.ActiveCharacter;                          for (int i = 0; i < (int)EquipLocation.PAPERDOLL_MAX; ++i)                          {                              int nextID = c.PaperDoll[i];                              if (nextID > 0 && OldWorld.Instance.EIF[nextID].Special == ItemSpecial.Cursed)                              {                                  c.PaperDoll[i] = 0;                                  switch ((EquipLocation)i)                                  {                                      case EquipLocation.Boots: c.RenderData.SetBoots(0); break;                                      case EquipLocation.Armor: c.RenderData.SetArmor(0); break;                                      case EquipLocation.Hat: c.RenderData.SetHat(0); break;                                      case EquipLocation.Shield: c.RenderData.SetShield(0); break;                                      case EquipLocation.Weapon: c.RenderData.SetWeapon(0); break;                                  }                              }                          }                            //update main character's stats                          CharStatData s = c.Stats;                          s.MaxHP = data.CureStats.MaxHP;                          s.MaxTP = data.CureStats.MaxTP;                          s.Str = data.CureStats.Str;                          s.Int = data.CureStats.Int;                          s.Wis = data.CureStats.Wis;                          s.Agi = data.CureStats.Agi;                          s.Con = data.CureStats.Con;                          s.Cha = data.CureStats.Cha;                          s.MinDam = data.CureStats.MinDam;                          s.MaxDam = data.CureStats.MaxDam;                          s.Accuracy = data.CureStats.Accuracy;                          s.Evade = data.CureStats.Evade;                          s.Armor = data.CureStats.Armor;                          m_game.Hud.RefreshStats();                      }                      break;                  case ItemType.EXPReward:                      {                          CharStatData s = OldWorld.Instance.MainPlayer.ActiveCharacter.Stats;                          if (s.Level < data.RewardStats.Level)                          {                              //level up!                              OldWorld.Instance.MainPlayer.ActiveCharacter.Emote(Emote.LevelUp);                              OldWorld.Instance.ActiveCharacterRenderer.PlayerEmote();                              s.Level = data.RewardStats.Level;                          }                          s.Experience = data.RewardStats.Exp;                          s.StatPoints = data.RewardStats.StatPoints;                          s.SkillPoints = data.RewardStats.SkillPoints;                          s.MaxHP = data.RewardStats.MaxHP;                          s.MaxTP = data.RewardStats.MaxTP;                          s.MaxSP = data.RewardStats.MaxSP;                      }                      break;              }
Missing Default,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_useItem,The following switch statement is missing a default case: switch ((EquipLocation)i)                                  {                                      case EquipLocation.Boots: c.RenderData.SetBoots(0); break;                                      case EquipLocation.Armor: c.RenderData.SetArmor(0); break;                                      case EquipLocation.Hat: c.RenderData.SetHat(0); break;                                      case EquipLocation.Shield: c.RenderData.SetShield(0); break;                                      case EquipLocation.Weapon: c.RenderData.SetWeapon(0); break;                                  }
Missing Default,EndlessClient.Old,PacketAPICallbackManager,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Old\PacketAPICallbackManager.cs,_statskillLearnError,The following switch statement is missing a default case: switch (reply)              {                  //not sure if this will ever actually be sent because client validates data before trying to learn a skill                  case SkillMasterReply.ErrorWrongClass:                      EOMessageBox.Show(DialogResourceID.SKILL_LEARN_WRONG_CLASS' " " + OldWorld.Instance.ECF.Data[id].Name + "!"' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                      break;                  case SkillMasterReply.ErrorRemoveItems:                      EOMessageBox.Show(DialogResourceID.SKILL_RESET_CHARACTER_CLEAR_PAPERDOLL' EODialogButtons.Ok' EOMessageBoxStyle.SmallDialogSmallHeader);                      break;              }
Missing Default,EndlessClient.Rendering,MouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\MouseCursorRenderer.cs,GetColorForMapDisplay,The following switch statement is missing a default case: switch (record.Special)              {                  case ItemSpecial.Lore:                  case ItemSpecial.Unique:                      return Color.FromNonPremultiplied(0xff' 0xf0' 0xa5' 0xff);                  case ItemSpecial.Rare:                      return Color.FromNonPremultiplied(0xf5' 0xc8' 0x9c' 0xff);              }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following switch statement is missing a default case: switch (State)                  {                      case CharacterActionState.SpellCast:                          skinLoc = new Vector2(skinLoc.X' skinLoc.Y - 4);                          break;                      case CharacterActionState.Walking:                          if (_data != null && _data.gender == 1)                          {                              switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }                          }                          skinLoc = new Vector2(2 + DrawAreaWithOffset.X + skinXOff' (Data.gender == 0 ? 11 : 12) + DrawAreaWithOffset.Y);                          break;                      case CharacterActionState.Attacking:                          if (weaponInfo == null || (weaponInfo != null && weaponInfo.SubType != ItemSubType.Ranged))                          {                              switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }                          }                          else if (weaponInfo != null && weaponInfo.SubType == ItemSubType.Ranged && Data.attackFrame == 1)                          {                              switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }                          }                          //else if (weaponInfo == null)                          //{                          //    switch (Facing)                          //    {                          //        case EODirection.Up:                          //        case EODirection.Right:                          //            skinXOff += Data.gender == 1 ? -1 : 0;                          //            break;                          //    }                          //}                          skinLoc = new Vector2(skinLoc.X + skinXOff' skinLoc.Y + skinYOff);                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following switch statement is missing a default case: switch (Facing)                              {                                  case EODirection.Down:                                      skinXOff = -1;                                      break;                                  case EODirection.Right:                                      skinXOff = 1;                                      break;                              }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following switch statement is missing a default case: switch (Facing)                              {                                  case EODirection.Up:                                  case EODirection.Right:                                      skinXOff = Data.gender == 1 ? -1 : -2;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? 2 : 4;                                          skinYOff += 1;                                          if (Facing == EODirection.Up) skinYOff += -2;                                      }                                      break;                                  case EODirection.Down:                                  case EODirection.Left:                                      skinXOff = Data.gender == 1 ? -5 : -4;                                      if (Data.attackFrame == 2)                                      {                                          skinXOff += Data.gender == 1 ? -2 : -4;                                          skinYOff += -1;                                          if (Facing == EODirection.Down) skinYOff += 2;                                      }                                      break;                              }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_getSkinDrawLoc,The following switch statement is missing a default case: switch (Facing)                              {                                  case EODirection.Up:                                      skinXOff += Data.gender == 1 ? 2 : 1;                                      break;                                  case EODirection.Right:                                      skinXOff += Data.gender == 1 ? 4 : 3;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                                  case EODirection.Left:                                      skinXOff += Data.gender == 1 ? -9 : -8;                                      break;                                  case EODirection.Down:                                      skinXOff += Data.gender == 1 ? -11 : -10;                                      skinYOff += 1; //Data.gender == 1 ? 1 : 1;                                      break;                              }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += -1;                          break;                      case EODirection.Right:                          xAdjust = Data.gender == 1 ? 6 : 7;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = Data.gender == 1 ? -6 : -7;                          yAdjust += -1;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawArmor,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Up:                          xAdjust = 4;                          break;                      case EODirection.Right:                          xAdjust = 6;                          yAdjust += 1;                          break;                      case EODirection.Down:                          xAdjust = -6;                          yAdjust += 1;                          break;                      case EODirection.Left:                          xAdjust = -4;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = -8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Right:                          hairOffX = 8;                          hairOffY = Data.gender == 1 ? 5 : 6;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 6 : 8;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -6 : -8;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawHatHair,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Down:                          hairOffX = Data.gender == 1 ? -3 : -1;                          hairOffY = Data.gender == 1 ? 1 : 0;                          break;                      case EODirection.Right:                          hairOffX = Data.gender == 1 ? 3 : 1;                          hairOffY = Data.gender == 1 ? 1 : 0;                          break;                      case EODirection.Up:                          hairOffX = Data.gender == 1 ? 3 : 1;                          break;                      case EODirection.Left:                          hairOffX = Data.gender == 1 ? -3 : -1;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          break;                      case EODirection.Up:                          bootsOffX = 6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                      case EODirection.Left:                          bootsOffX = -6;                          bootsOffY = Data.gender == 1 ? -1 : 0;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,_drawBoots,The following switch statement is missing a default case: switch (Facing)                  {                      case EODirection.Down:                          bootsOffX = -6;                          bootsOffY = 1;                          break;                      case EODirection.Right:                          bootsOffX = 6;                          bootsOffY = 1;                          break;                      case EODirection.Up:                          bootsOffX = Data.gender == 1 ? 7 : 3;                          break;                      case EODirection.Left:                          bootsOffX = Data.gender == 1 ? -7 : -3;                          break;                  }
Missing Default,EndlessClient.Rendering,OldCharacterRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldCharacterRenderer.cs,maskTheHair,The following switch statement is missing a default case: switch (hatInfo.SubType)                  {                      case ItemSubType.HideHair: //anything matching ^[A-Za-z ]*[Hh]elm[A-Za-z ]*$ or ^[A-Za-z ]*[Hh]ood[A-Za-z ]*$' or id=314 (pirate hat)                          hair = null;                          if (hat != null)                          {                              hatPixels = new Color[hat.Width * hat.Height];                              hat.GetData(hatPixels);                              for (int i = 0; i < hatPixels.Length; ++i)                                  if (hatPixels[i] == Color.Black) hatPixels[i] = Color.Transparent;                              hat.SetData(hatPixels);                          }                          return;                      case ItemSubType.FaceMask: //Frog Head' glasses' and Dragon Mask (anything with mask in the name' really)                          if (hatInfo.Name.ToLower() == "glasses")                          { //special case for glasses' hooray hard-coding :/                              Color[] glassesData = new Color[hat.Width * hat.Height];                              hat.GetData(glassesData);                              for (int i = 0; i < glassesData.Length; ++i)                                  if (glassesData[i] == Color.Black) glassesData[i] = Color.Transparent;                              hat.SetData(glassesData);                          }                          return;                  }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following switch statement is missing a default case: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following switch statement is missing a default case: switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following switch statement is missing a default case: switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following switch statement is missing a default case: switch (_data.attackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetArmor,The following switch statement is missing a default case: switch (_data.sitting)                      {                          case SitState.Chair:                               type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following switch statement is missing a default case: switch (_data.walkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetShield,The following switch statement is missing a default case: switch (_data.attackFrame)                      {                          case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                          case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following switch statement is missing a default case: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (isBow)                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting: return null; //no weapon when sitting              }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following switch statement is missing a default case: switch (_data.walkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following switch statement is missing a default case: switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetWeapon,The following switch statement is missing a default case: switch (_data.attackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = _data.facing == EODirection.Down || _data.facing == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec                                      : WeaponSpriteType.SwingFrame2;                                      break;                          }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following switch statement is missing a default case: switch(_charRef.State)              {                  case CharacterActionState.Walking:                      switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if(!isBow && _data.attackFrame == 2 ||                           isBow && _data.attackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following switch statement is missing a default case: switch (_data.walkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,GetBoots,The following switch statement is missing a default case: switch (_data.sitting)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following switch statement is missing a default case: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following switch statement is missing a default case: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
Missing Default,EndlessClient.Rendering,EOSpriteSheet,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\EOSpriteSheet.cs,getFactor,The following switch statement is missing a default case: switch (type)              {                  case BootsSpriteType.WalkFrame1:                  case BootsSpriteType.WalkFrame2:                  case BootsSpriteType.WalkFrame3:                  case BootsSpriteType.WalkFrame4:                      return 4;              }
Missing Default,EndlessClient.Rendering,OldMouseCursorRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldMouseCursorRenderer.cs,HandleTileSpecClick,The following switch statement is missing a default case: switch (spec)              {                  case TileSpec.Chest: HandleChestClick(); break;                  case TileSpec.BankVault: HandleBankVaultClick(); break;                  //todo: boards' chairs              }
Missing Default,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,HandleLeftClick,The following switch statement is missing a default case: switch (NPC.Data.Type)                  {                      case NPCType.Shop: ShopDialog.Show(api' this); break;                      case NPCType.Inn: break;                      case NPCType.Bank: BankAccountDialog.Show(api' NPC.Index); break;                      case NPCType.Barber: break;                      case NPCType.Guild: break;                      case NPCType.Priest: break;                      case NPCType.Law: break;                      case NPCType.Skills: SkillmasterDialog.Show(api' NPC.Index); break;                      case NPCType.Quest: QuestDialog.Show(api' NPC.Index' NPC.Data.VendorID' NPC.Data.Name); break;                  }
Missing Default,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following switch statement is missing a default case: switch (NPC.Direction)              {                  case EODirection.Down: walkingAdjustedX += -8; walkingAdjustedY += 4; break;                  case EODirection.Left: walkingAdjustedX += -8; walkingAdjustedY += -4; break;                  case EODirection.Up: walkingAdjustedX += 8; walkingAdjustedY += -4; break;                  case EODirection.Right: walkingAdjustedX += 8; walkingAdjustedY += 4; break;              }
Missing Default,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateWalkFrameIfNeeded,The following switch statement is missing a default case: switch (Frame)              {                  case NPCFrame.Standing:                  case NPCFrame.StandingFrame1:                      Frame = NPCFrame.WalkFrame1;                      break;                  case NPCFrame.WalkFrame1:                      Frame = NPCFrame.WalkFrame2;                      break;                  case NPCFrame.WalkFrame2:                      Frame = NPCFrame.WalkFrame3;                      break;                  case NPCFrame.WalkFrame3:                      Frame = NPCFrame.WalkFrame4;                      break;                  case NPCFrame.WalkFrame4:                      Frame = NPCFrame.Standing;                      NPC.EndWalking();                      walkingAdjustedX = walkingAdjustedY = 0;                      break;              }
Missing Default,EndlessClient.Rendering,OldNPCRenderer,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\OldNPCRenderer.cs,UpdateAttackFrameIfNeeded,The following switch statement is missing a default case: switch (Frame)              {                  case NPCFrame.Standing:                  case NPCFrame.StandingFrame1:                      Frame = NPCFrame.Attack1;                      break;                  case NPCFrame.Attack1:                      Frame = NPCFrame.Attack2;                      break;                  case NPCFrame.Attack2:                      Frame = NPCFrame.Standing;                      NPC.EndAttacking();                      break;              }
Missing Default,EndlessClient.HUD.Panels.Old,OldChatTab,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldChatPanel.cs,OldChatTab,The following switch statement is missing a default case: switch(WhichTab)              {                  case ChatTab.Local: tabLabel.Text = "scr";  break;                  case ChatTab.Global: tabLabel.Text = "glb"; break;                  case ChatTab.Group: tabLabel.Text = "grp"; break;                  case ChatTab.System: tabLabel.Text = "sys"; break;                  case ChatTab.Private1:                  case ChatTab.Private2:                      tabLabel.Text = "[priv " + ((int)WhichTab + 1) + "]";                      break;              }
Missing Default,EndlessClient.HUD.Panels.Old,OldEOOnlineList,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Panels\Old\OldOnlineListPanel.cs,Draw,The following switch statement is missing a default case: switch (oe.Icon)                              {                                  case PaperdollIconType.Normal:                                  case PaperdollIconType.Party:                                  case PaperdollIconType.SLNBot:                                      return false;                              }
Missing Default,EndlessClient.HUD.Spells,SpellIcon,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\HUD\Spells\SpellIcon.cs,OnSelected,The following switch statement is missing a default case: switch (SpellData.Target)              {                  case SpellTarget.Normal:                      hud.SetStatusLabel(EOResourceID.SKILLMASTER_WORD_SPELL' SpellData.Name' EOResourceID.SPELL_WAS_SELECTED);                      break;                  case SpellTarget.Group:                      if(!hud.MainPlayerIsInParty())                          hud.SetStatusLabel(EOResourceID.STATUS_LABEL_TYPE_WARNING' EOResourceID.SPELL_ONLY_WORKS_ON_GROUP);                      break;              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following switch statement is missing a default case: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (!BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 2 ||                          BowIsEquipped(characterRenderProperties) && characterRenderProperties.AttackFrame == 1)                          type = BootsSpriteType.Attack;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }                      break;              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following switch statement is missing a default case: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = BootsSpriteType.WalkFrame1; break;                          case 2: type = BootsSpriteType.WalkFrame2; break;                          case 3: type = BootsSpriteType.WalkFrame3; break;                          case 4: type = BootsSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetBootsTexture,The following switch statement is missing a default case: switch (characterRenderProperties.SitState)                      {                          case SitState.Chair: type = BootsSpriteType.SitChair; break;                          case SitState.Floor: type = BootsSpriteType.SitGround; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following switch statement is missing a default case: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = ArmorShieldSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }                      break;              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following switch statement is missing a default case: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following switch statement is missing a default case: switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.Bow; break;                              case 2: type = ArmorShieldSpriteType.Standing; break;                          }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following switch statement is missing a default case: switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                              case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                          }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetArmorTexture,The following switch statement is missing a default case: switch (characterRenderProperties.SitState)                      {                          case SitState.Chair:                              type = ArmorShieldSpriteType.SitChair;                              break;                          case SitState.Floor:                              type = ArmorShieldSpriteType.SitGround;                              break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,The following switch statement is missing a default case: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = ArmorShieldSpriteType.WalkFrame1; break;                          case 2: type = ArmorShieldSpriteType.WalkFrame2; break;                          case 3: type = ArmorShieldSpriteType.WalkFrame3; break;                          case 4: type = ArmorShieldSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetShieldTexture,The following switch statement is missing a default case: switch (characterRenderProperties.AttackFrame)                      {                          case 1: type = ArmorShieldSpriteType.PunchFrame1; break;                          case 2: type = ArmorShieldSpriteType.PunchFrame2; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following switch statement is missing a default case: switch (characterRenderProperties.CurrentAction)              {                  case CharacterActionState.Walking:                      switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }                      break;                  case CharacterActionState.Attacking:                      if (BowIsEquipped(characterRenderProperties))                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }                      }                      else                      {                          switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }                      }                      break;                  case CharacterActionState.SpellCast:                      type = WeaponSpriteType.SpellCast;                      break;                  case CharacterActionState.Sitting:                      return new EmptySpriteSheet(); //no weapon when sitting              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following switch statement is missing a default case: switch (characterRenderProperties.WalkFrame)                      {                          case 1: type = WeaponSpriteType.WalkFrame1; break;                          case 2: type = WeaponSpriteType.WalkFrame2; break;                          case 3: type = WeaponSpriteType.WalkFrame3; break;                          case 4: type = WeaponSpriteType.WalkFrame4; break;                      }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following switch statement is missing a default case: switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.Shooting; break;                              case 2: type = WeaponSpriteType.Standing; break;                          }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetWeaponTexture,The following switch statement is missing a default case: switch (characterRenderProperties.AttackFrame)                          {                              case 1: type = WeaponSpriteType.SwingFrame1; break;                              case 2:                                  type = characterRenderProperties.Direction == EODirection.Down                                      || characterRenderProperties.Direction == EODirection.Right                                      ? WeaponSpriteType.SwingFrame2Spec : WeaponSpriteType.SwingFrame2;                                  break;                          }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following switch statement is missing a default case: switch (type)              {                  case BootsSpriteType.WalkFrame1:                  case BootsSpriteType.WalkFrame2:                  case BootsSpriteType.WalkFrame3:                  case BootsSpriteType.WalkFrame4:                      return 4;              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following switch statement is missing a default case: switch (type)              {                  case ArmorShieldSpriteType.WalkFrame1:                  case ArmorShieldSpriteType.WalkFrame2:                  case ArmorShieldSpriteType.WalkFrame3:                  case ArmorShieldSpriteType.WalkFrame4:                      return 4;                  case ArmorShieldSpriteType.PunchFrame1:                  case ArmorShieldSpriteType.PunchFrame2:                      return 2;              }
Missing Default,EndlessClient.Rendering.Sprites,CharacterSpriteCalculator,D:\research\architectureSmells\repos\ethanmoffat_EndlessClient\EndlessClient\Rendering\Sprites\CharacterSpriteCalculator.cs,GetOffsetBasedOnState,The following switch statement is missing a default case: switch (type)              {                  case WeaponSpriteType.WalkFrame1:                  case WeaponSpriteType.WalkFrame2:                  case WeaponSpriteType.WalkFrame3:                  case WeaponSpriteType.WalkFrame4:                      return 4;                  case WeaponSpriteType.SwingFrame1:                  case WeaponSpriteType.SwingFrame2:                      return 2;              }
