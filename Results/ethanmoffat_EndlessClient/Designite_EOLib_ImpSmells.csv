Implementation smell,Namespace,Class,File,Method,Description
Long Method,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The method has 109 lines of code.
Complex Method,EOLib.Domain.Account,AccountActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\AccountActions.cs,CheckAccountCreateParameters,Cyclomatic complexity of the method is 8
Complex Method,EOLib.Net,ClientBase,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\ClientBase.cs,ConnectToServer,Cyclomatic complexity of the method is 9
Complex Method,EOLib.PacketHandlers,NPCLeaveMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCLeaveMapHandler.cs,HandlePacket,Cyclomatic complexity of the method is 9
Long Parameter List,EOLib,Win32,C:\repos\ethanmoffat_EndlessClient\EOLib\Win32.cs,GetVolumeInformation,The method has 8 parameters. Parameters: PathName' VolumeNameBuffer' VolumeNameSize' VolumeSerialNumber' MaximumComponentLength' FileSystemFlags' FileSystemNameBuffer' FileSystemNameSize
Long Parameter List,EOLib.Domain.Account,CreateAccountParameters,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\CreateAccountParameters.cs,CreateAccountParameters,The method has 6 parameters. Parameters: accountName' password' confirmPassword' realName' location' email
Long Parameter List,EOLib.Domain.Character,CharacterCreateParameters,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterCreateParameters.cs,CharacterCreateParameters,The method has 5 parameters. Parameters: name' gender' hairStyle' hairColor' race
Long Parameter List,EOLib.Domain.Chat,ChatActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\ChatActions.cs,ChatActions,The method has 7 parameters. Parameters: chatRepository' characterProvider' chatTypeCalculator' chatPacketBuilder' packetSendService' localCommandHandler' chatProcessor
Long Parameter List,EOLib.Domain.Login,LoginActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Login\LoginActions.cs,LoginActions,The method has 14 parameters. Parameters: packetSendService' loginPacketTranslator' loginRequestGrantedPacketTranslator' loginRequestCompletedPacketTranslator' localizedStringFinder' characterSelectorRepository' playerInfoRepository' characterRepository' currentMapStateRepository' loginFileChecksumRepository' newsRepository' chatRepository' characterInventoryRepository' paperdollRepository
Long Parameter List,EOLib.Domain.Protocol,InitializationSuccessData,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Protocol\InitializationSuccessData.cs,InitializationSuccessData,The method has 6 parameters. Parameters: sequence1' sequence2' receiveMultiple' sendMultiple' clientID' hashResponse
Long Parameter List,EOLib.Net.Communication,SafeBlockingNetworkOperation,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\SafeBlockingNetworkOperation.cs,SafeBlockingNetworkOperation,The method has 5 parameters. Parameters: backgroundReceiveActions' networkConnectionActions' operation' sendErrorAction' receiveErrorAction
Long Parameter List,EOLib.Net.Communication,SafeBlockingNetworkOperation<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\SafeBlockingNetworkOperation.cs,SafeBlockingNetworkOperation,The method has 5 parameters. Parameters: backgroundReceiveActions' networkConnectionActions' operation' sendErrorAction' receiveErrorAction
Long Parameter List,EOLib.Net.Connection,NetworkConnectionActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\NetworkConnectionActions.cs,NetworkConnectionActions,The method has 9 parameters. Parameters: networkClientRepository' connectionStateRepository' sequenceRepository' configurationProvider' hashService' hdSerialNumberService' initPacketTranslator' networkClientFactory' packetSendService
Long Parameter List,EOLib.Net.FileTransfer,FileRequestActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\FileTransfer\FileRequestActions.cs,FileRequestActions,The method has 7 parameters. Parameters: numberEncoderService' fileRequestService' pubFileSaveService' mapFileSaveService' loginFileChecksumProvider' pubFileRepository' mapFileRepository
Long Parameter List,EOLib.Net.API,AvatarData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Avatar.cs,AvatarData,The method has 8 parameters. Parameters: id' slot' sound' boots' armor' hat' weapon' shield
Long Parameter List,EOLib.Net.API,OnlineEntry,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Init.cs,OnlineEntry,The method has 5 parameters. Parameters: name' title' guild' clss' icon
Long Parameter List,EOLib.PacketHandlers,EndPlayerWarpHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\EndPlayerWarpHandler.cs,EndPlayerWarpHandler,The method has 6 parameters. Parameters: playerInfoProvider' warpAgreePacketTranslator' characterRepository' currentMapStateRepository' currentMapProvider' mapChangedNotifiers
Long Parameter List,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,NPCActionHandler,The method has 8 parameters. Parameters: playerInfoProvider' currentMapStateRepository' characterRepository' chatRepository' enfFileProvider' npcAnimationNotifiers' mainCharacterNotifiers' otherCharacterNotifiers
Long Parameter List,EOLib.PacketHandlers,NPCLeaveMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCLeaveMapHandler.cs,NPCLeaveMapHandler,The method has 5 parameters. Parameters: playerInfoProvider' currentMapStateRepository' characterRepository' npcAnimationNotifiers' mainCharacterEventNotifiers
Long Parameter List,EOLib.PacketHandlers,NPCLeaveMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCLeaveMapHandler.cs,ShowDroppedItem,The method has 6 parameters. Parameters: playerID' droppedItemUID' droppedItemID' x' y' droppedAmount
Long Parameter List,EOLib.PacketHandlers,NPCDieFromSpellCastHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCLeaveMapHandler.cs,NPCDieFromSpellCastHandler,The method has 5 parameters. Parameters: playerInfoProvider' currentMapStateRepository' characterRepository' npcAnimationNotifiers' mainCharacterEventNotifiers
Long Parameter List,EOLib.PacketHandlers,PlayerLevelUpHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerLevelUpHandler.cs,PlayerLevelUpHandler,The method has 5 parameters. Parameters: playerInfoProvider' currentMapStateRepository' characterRepository' npcAnimationNotifiers' mainCharacterEventNotifiers
Long Parameter List,EOLib.PacketHandlers,PlayerLevelUpFromSpellCastHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerLevelUpHandler.cs,PlayerLevelUpFromSpellCastHandler,The method has 5 parameters. Parameters: playerInfoProvider' currentMapStateRepository' characterRepository' npcAnimationNotifiers' mainCharacterEventNotifiers
Long Parameter List,EOLib.PacketHandlers,BeginPlayerWarpHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\BeginPlayerWarpHandler.cs,BeginPlayerWarpHandler,The method has 6 parameters. Parameters: playerInfoProvider' packetSendService' fileRequestActions' mapFileLoadActions' mapStateRepository' mapFileProvider
Long Parameter List,EOLib.PacketHandlers,RefreshMapStateHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\RefreshMapStateHandler.cs,RefreshMapStateHandler,The method has 5 parameters. Parameters: playerInfoProvider' refreshReplyTranslator' characterRepository' currentMapStateRepository' mapChangedNotifiers
Long Parameter List,EOLib.Net.PacketProcessing,PacketProcessActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketProcessActions.cs,PacketProcessActions,The method has 5 parameters. Parameters: sequenceNumberRepository' encoderRepository' encoderService' sequenceService' loggerProvider
Long Identifier,EOLib,Constants,C:\repos\ethanmoffat_EndlessClient\EOLib\misc.cs,,The length of the parameter OutOfBand_Packets_Handled_Per_Update is 36.
Long Identifier,EOLib.Domain.Account,AccountActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\AccountActions.cs,AccountActions,The length of the parameter createAccountParameterValidator is 31.
Long Identifier,EOLib.Domain.Account,AccountActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\AccountActions.cs,,The length of the parameter _createAccountParameterValidator is 32.
Long Identifier,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,CharacterManagementActions,The length of the parameter characterCreatePacketTranslator is 31.
Long Identifier,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,,The length of the parameter _characterCreatePacketTranslator is 32.
Long Identifier,EOLib.Domain.Login,LoginActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Login\LoginActions.cs,LoginActions,The length of the parameter loginRequestGrantedPacketTranslator is 35.
Long Identifier,EOLib.Domain.Login,LoginActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Login\LoginActions.cs,LoginActions,The length of the parameter loginRequestCompletedPacketTranslator is 37.
Long Identifier,EOLib.Domain.Login,LoginActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Login\LoginActions.cs,,The length of the parameter _loginRequestGrantedPacketTranslator is 36.
Long Identifier,EOLib.Domain.Login,LoginActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Login\LoginActions.cs,,The length of the parameter _loginRequestCompletedPacketTranslator is 38.
Long Identifier,EOLib.Net.Connection,BackgroundReceiveActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\BackgroundReceiveActions.cs,BackgroundReceiveActions,The length of the parameter backgroundReceiveThreadRepository is 33.
Long Identifier,EOLib.Net.Connection,BackgroundReceiveActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\BackgroundReceiveActions.cs,,The length of the parameter _backgroundReceiveThreadRepository is 34.
Long Identifier,EOLib.PacketHandlers,PlayerAttackHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerAttackHandler.cs,PlayerAttackHandler,The length of the parameter otherCharacterAnimationNotifiers is 32.
Long Identifier,EOLib.PacketHandlers,PlayerAttackHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerAttackHandler.cs,,The length of the parameter _otherCharacterAnimationNotifiers is 33.
Long Identifier,EOLib.PacketHandlers,PlayerWalkHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerWalkHandler.cs,PlayerWalkHandler,The length of the parameter otherCharacterAnimationNotifiers is 32.
Long Identifier,EOLib.PacketHandlers,PlayerWalkHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerWalkHandler.cs,,The length of the parameter _otherCharacterAnimationNotifiers is 33.
Long Statement,EOLib.Net.Communication,NetworkClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\NetworkClient.cs,LogSentPacket,The length of the statement  "            _loggerProvider.Logger.Log("SEND thread: Processing       {0'-3} packet Family={1'-13} Action={2'-8} sz={3'-5} data={4}"' " is 121.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createEffectMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.Effect' PacketAction.TargetOther)' _handleEffectTargetOther' true); " is 127.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createPaperdollMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.PaperDoll' PacketAction.Agree)' _handlePaperdollAgree' true); " is 121.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createPaperdollMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.PaperDoll' PacketAction.Remove)' _handlePaperdollRemove' true); " is 123.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createPaperdollMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.PaperDoll' PacketAction.Reply)' _handlePaperdollReply' true); " is 121.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createSpellMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.Spell' PacketAction.TargetSelf)' _handleSpellTargetSelf' true); " is 123.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createSpellMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.Spell' PacketAction.TargetOther)' _handleSpellTargetOther' true); " is 125.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createSpellMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.Spell' PacketAction.TargetGroup)' _handleSpellTargetGroup' true); " is 125.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createStatSkillMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.StatSkill' PacketAction.Reply)' _handleStatSkillReply' true); " is 121.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createStatSkillMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.StatSkill' PacketAction.Remove)' _handleStatSkillRemove' true); " is 123.
Long Statement,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_createStatSkillMembers,The length of the statement  "            m_client.AddPacketHandler(new FamilyActionPair(PacketFamily.StatSkill' PacketAction.Accept)' _handleStatSkillAccept' true); " is 123.
Long Statement,EOLib.Net,ClientBase,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\ClientBase.cs,ConnectToServer,The length of the statement  "                throw new InvalidOperationException("Client has already connected to the server. Disconnect first before connecting again."); " is 125.
Long Statement,EOLib.Net,ClientBase,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\ClientBase.cs,ConnectToServer,The length of the statement  "                    IPAddress[] ipv4Addresses = Array.FindAll(Dns.GetHostEntry(ipOrHostname).AddressList' a => a.AddressFamily == AddressFamily.InterNetwork); " is 138.
Long Statement,EOLib.Net,ClientBase,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\ClientBase.cs,ConnectToServer,The length of the statement  "                        // throw new NotSupportedException("No IPv4 addresses found for the hostname '" + ipOrHostname + "'. IPv6 is not currently supported by EOSERV."); " is 146.
Long Statement,EOLib.Net,ClientBase,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\ClientBase.cs,Disconnect,The length of the statement  "                //m_sock.Disconnect(false); //this seems to cause errors: a disconnected socket can only be reconnected asyncronously which is a pain in the ass " is 144.
Long Statement,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,OnSendRawData,The length of the statement  "                DataTransferEventArgs dte = new DataTransferEventArgs(DataTransferEventArgs.TransferType.SendRaw' pkt.Family' pkt.Action' pkt.Data); " is 132.
Long Statement,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,OnReceiveData,The length of the statement  "                            //    if (ExpectingFile || reply == (byte)InitReply.INIT_MAP_MUTATION) //handle the map mutation: should work with the byte/char weirdness " is 138.
Long Statement,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,OnReceiveData,The length of the statement  "                            //        //rewrite the InitReply with the correct value (retrieved with GetChar' server sends with GetByte for other reply types) " is 130.
Long Statement,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,OnReceiveData,The length of the statement  "                            Console.WriteLine("ERROR: Invalid data wrapper state in _recvCB (should be ReadLen1' ReadLen2' or ReadData). Closing connection."); " is 131.
Long Statement,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,_handlePacket,The length of the statement  "                DataTransferEventArgs dte = new DataTransferEventArgs(DataTransferEventArgs.TransferType.Recv' pkt.Family' pkt.Action' pkt.Data) " is 128.
Long Statement,EOLib.Net.Handlers,OutOfBandPacketHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Handlers\OutOfBandPacketHandler.cs,FindAndHandlePacket,The length of the statement  "            //      should also exit out of game gracefully as state may be corrupted by not handling packet (i.e. for warp packets) " is 120.
Long Statement,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandlePacket,The length of the statement  "                default: throw new MalformedPacketException("Unknown NPC action " + num255s + " specified in packet from server!"' packet); " is 123.
Complex Conditional,EOLib.Domain.Map,MapCellStateProvider,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Map\MapCellStateProvider.cs,GetCellStateAt,The conditional expression  "x < 0 || y < 0 || x > CurrentMap.Properties.Width || y > CurrentMap.Properties.Height"  is complex.
Magic Number,EOLib,CRC32,C:\repos\ethanmoffat_EndlessClient\EOLib\Crc.cs,GenerateTable,The following statement contains a magic number: for (int i = 0; i < 256; ++i)              {                  uint temp = (uint)i;                  for (int j = 8; j > 0; --j)                      if ((temp & 1) != 0)                          temp = (temp >> 1) ^ Magic;                      else                          temp >>= 1;                  lookup[i] = temp;              }
Magic Number,EOLib,CRC32,C:\repos\ethanmoffat_EndlessClient\EOLib\Crc.cs,GenerateTable,The following statement contains a magic number: for (int i = 0; i < 256; ++i)              {                  uint temp = (uint)i;                  for (int j = 8; j > 0; --j)                      if ((temp & 1) != 0)                          temp = (temp >> 1) ^ Magic;                      else                          temp >>= 1;                  lookup[i] = temp;              }
Magic Number,EOLib,CRC32,C:\repos\ethanmoffat_EndlessClient\EOLib\Crc.cs,Check,The following statement contains a magic number: for (uint i = offset; i < offset + length; ++i)              {                  uint index = crc >> 24' mod = crc << 8;                  index &= 0xFF;                  index ^= data[i];                    crc = lookup[index] ^ mod;              }
Magic Number,EOLib,CRC32,C:\repos\ethanmoffat_EndlessClient\EOLib\Crc.cs,Check,The following statement contains a magic number: for (uint i = offset; i < offset + length; ++i)              {                  uint index = crc >> 24' mod = crc << 8;                  index &= 0xFF;                  index ^= data[i];                    crc = lookup[index] ^ mod;              }
Magic Number,EOLib,HDSerialNumberService,C:\repos\ethanmoffat_EndlessClient\EOLib\HDSerialNumberService.cs,GetHDSerialNumber,The following statement contains a magic number: var volumeLabel = new StringBuilder(256);
Magic Number,EOLib,HDSerialNumberService,C:\repos\ethanmoffat_EndlessClient\EOLib\HDSerialNumberService.cs,GetHDSerialNumber,The following statement contains a magic number: var fileSystemName = new StringBuilder(256);
Magic Number,EOLib,DateTimeExtension,C:\repos\ethanmoffat_EndlessClient\EOLib\misc.cs,ToEOTimeStamp,The following statement contains a magic number: return dt.Hour * 360000 + dt.Minute * 6000 + dt.Second * 100 + dt.Millisecond / 10;
Magic Number,EOLib,DateTimeExtension,C:\repos\ethanmoffat_EndlessClient\EOLib\misc.cs,ToEOTimeStamp,The following statement contains a magic number: return dt.Hour * 360000 + dt.Minute * 6000 + dt.Second * 100 + dt.Millisecond / 10;
Magic Number,EOLib,DateTimeExtension,C:\repos\ethanmoffat_EndlessClient\EOLib\misc.cs,ToEOTimeStamp,The following statement contains a magic number: return dt.Hour * 360000 + dt.Minute * 6000 + dt.Second * 100 + dt.Millisecond / 10;
Magic Number,EOLib,DateTimeExtension,C:\repos\ethanmoffat_EndlessClient\EOLib\misc.cs,ToEOTimeStamp,The following statement contains a magic number: return dt.Hour * 360000 + dt.Minute * 6000 + dt.Second * 100 + dt.Millisecond / 10;
Magic Number,EOLib.Domain.Account,AccountActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\AccountActions.cs,CreateAccount,The following statement contains a magic number: var createAccountPacket = new PacketBuilder(PacketFamily.Account' PacketAction.Create)                  .AddShort(1337) //eoserv doesn't                  .AddByte(42)    //validate these values                  .AddBreakString(parameters.AccountName)                  .AddBreakString(parameters.Password)                  .AddBreakString(parameters.Location)                  .AddBreakString(parameters.Location)                  .AddBreakString(parameters.Email)                  .AddBreakString(Dns.GetHostName())                  .AddBreakString(_hdSerialNumberService.GetHDSerialNumber())                  .Build();
Magic Number,EOLib.Domain.Account,AccountActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\AccountActions.cs,CreateAccount,The following statement contains a magic number: var createAccountPacket = new PacketBuilder(PacketFamily.Account' PacketAction.Create)                  .AddShort(1337) //eoserv doesn't                  .AddByte(42)    //validate these values                  .AddBreakString(parameters.AccountName)                  .AddBreakString(parameters.Password)                  .AddBreakString(parameters.Location)                  .AddBreakString(parameters.Location)                  .AddBreakString(parameters.Email)                  .AddBreakString(Dns.GetHostName())                  .AddBreakString(_hdSerialNumberService.GetHDSerialNumber())                  .Build();
Magic Number,EOLib.Domain.Account,CreateAccountParameterValidator,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\CreateAccountParameterValidator.cs,AccountNameIsNotLongEnough,The following statement contains a magic number: return account.Length < 4;
Magic Number,EOLib.Domain.Account,CreateAccountParameterValidator,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\CreateAccountParameterValidator.cs,AccountNameIsTooObvious,The following statement contains a magic number: return account.Distinct().Count() < 3;
Magic Number,EOLib.Domain.Account,CreateAccountParameterValidator,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\CreateAccountParameterValidator.cs,PasswordIsTooShort,The following statement contains a magic number: return password.Length < 6;
Magic Number,EOLib.Domain.Account,CreateAccountParameterValidator,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Account\CreateAccountParameterValidator.cs,PasswordIsTooObvious,The following statement contains a magic number: return password.Distinct().Count() < 3;
Magic Number,EOLib.Domain.Character,CharacterStats,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterStats.cs,CreateStatCollection,The following statement contains a magic number: var stats = new Dictionary<CharacterStat' int>(25);
Magic Number,EOLib.Domain.Character,ExperienceTableProvider,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\ExperienceTableProvider.cs,ExperienceTableProvider,The following statement contains a magic number: for (int i = 1; i < byte.MaxValue - 1; ++i)                  exp_table.Add((int) Math.Round(Math.Pow(i' 3)*133.1));
Magic Number,EOLib.Domain.Character,ExperienceTableProvider,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\ExperienceTableProvider.cs,ExperienceTableProvider,The following statement contains a magic number: for (int i = 1; i < byte.MaxValue - 1; ++i)                  exp_table.Add((int) Math.Round(Math.Pow(i' 3)*133.1));
Magic Number,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following statement contains a magic number: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Magic Number,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following statement contains a magic number: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Magic Number,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following statement contains a magic number: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Magic Number,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following statement contains a magic number: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Magic Number,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following statement contains a magic number: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Magic Number,EOLib.Domain.Character,CharacterInventoryRepository,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterInventoryRepository.cs,CharacterInventoryRepository,The following statement contains a magic number: ItemInventory = new List<IInventoryItem>(32);
Magic Number,EOLib.Domain.Character,CharacterInventoryRepository,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterInventoryRepository.cs,CharacterInventoryRepository,The following statement contains a magic number: SpellInventory = new List<IInventorySpell>(32);
Magic Number,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,CreateCharacter,The following statement contains a magic number: var packet = new PacketBuilder(PacketFamily.Character' PacketAction.Create)                  .AddShort(255)                  .AddShort((short)parameters.Gender)                  .AddShort((short)parameters.HairStyle)                  .AddShort((short)parameters.HairColor)                  .AddShort((short)parameters.Race)                  .AddByte(255)                  .AddBreakString(parameters.Name)                  .Build();
Magic Number,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,CreateCharacter,The following statement contains a magic number: var packet = new PacketBuilder(PacketFamily.Character' PacketAction.Create)                  .AddShort(255)                  .AddShort((short)parameters.Gender)                  .AddShort((short)parameters.HairStyle)                  .AddShort((short)parameters.HairColor)                  .AddShort((short)parameters.Race)                  .AddByte(255)                  .AddBreakString(parameters.Name)                  .Build();
Magic Number,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,RequestCharacterDelete,The following statement contains a magic number: responsePacket.Seek(2' SeekOrigin.Current);
Magic Number,EOLib.Domain.Character,CharacterManagementActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\CharacterManagementActions.cs,DeleteCharacter,The following statement contains a magic number: var packet = new PacketBuilder(PacketFamily.Character' PacketAction.Remove)                  .AddShort(255)                  .AddInt(_characterSelectorRepository.CharacterForDelete.ID)                  .Build();
Magic Number,EOLib.Domain.Chat,ChatData,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\ChatData.cs,GetHashCode,The following statement contains a magic number: var hash = 397 ^ Icon.GetHashCode();
Magic Number,EOLib.Domain.Chat,ChatData,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\ChatData.cs,GetHashCode,The following statement contains a magic number: hash = (hash*397) ^ Who.GetHashCode();
Magic Number,EOLib.Domain.Chat,ChatData,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\ChatData.cs,GetHashCode,The following statement contains a magic number: hash = (hash*397) ^ Message.GetHashCode();
Magic Number,EOLib.Domain.Chat,ChatData,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\ChatData.cs,GetHashCode,The following statement contains a magic number: hash = (hash*397) ^ ChatColor.GetHashCode();
Magic Number,EOLib.Domain.Chat.Commands,UsageCommand,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\Commands\UsageCommand.cs,Execute,The following statement contains a magic number: var message = $"[x] usage: {usage/60}hrs. {usage%60}min.";
Magic Number,EOLib.Domain.Chat.Commands,UsageCommand,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Chat\Commands\UsageCommand.cs,Execute,The following statement contains a magic number: var message = $"[x] usage: {usage/60}hrs. {usage%60}min.";
Magic Number,EOLib.Net.Communication,AsyncSocket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\AsyncSocket.cs,BlockingIsConnected,The following statement contains a magic number: try              {                  var pollResult = !_socket.Poll(1000' SelectMode.SelectRead);                  var dataAvailable = _socket.Available != 0;                  return _connected && (pollResult || dataAvailable);              }              catch(ObjectDisposedException)              {                  _connected = false;                  return false;              }
Magic Number,EOLib.Net.Communication,NetworkClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\NetworkClient.cs,ConnectToServer,The following statement contains a magic number: using (var cts = new CancellationTokenSource(5000))              {                  var task = _socket.ConnectAsync(endPoint' cts.Token);                  await task;                    return task.IsCanceled ? ConnectResult.Timeout : task.Result;              }
Magic Number,EOLib.Net.Communication,NetworkClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\NetworkClient.cs,RunReceiveLoopAsync,The following statement contains a magic number: while (!_backgroundReceiveCTS.IsCancellationRequested)              {                  var lengthData = await _socket.ReceiveAsync(2' _backgroundReceiveCTS.Token);                  if (_backgroundReceiveCTS.IsCancellationRequested || lengthData.Length != 2)                      break;                    var length = _numberEncoderService.DecodeNumber(lengthData);                    var packetData = await _socket.ReceiveAsync(length' _backgroundReceiveCTS.Token);                  if (_backgroundReceiveCTS.IsCancellationRequested || packetData.Length != length)                      break;                    var packet = _packetProcessActions.DecodeData(packetData);                  LogReceivedPacket(packet);                    _packetHandlingActions.EnqueuePacketForHandling(packet);              }
Magic Number,EOLib.Net.Communication,NetworkClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Communication\NetworkClient.cs,RunReceiveLoopAsync,The following statement contains a magic number: while (!_backgroundReceiveCTS.IsCancellationRequested)              {                  var lengthData = await _socket.ReceiveAsync(2' _backgroundReceiveCTS.Token);                  if (_backgroundReceiveCTS.IsCancellationRequested || lengthData.Length != 2)                      break;                    var length = _numberEncoderService.DecodeNumber(lengthData);                    var packetData = await _socket.ReceiveAsync(length' _backgroundReceiveCTS.Token);                  if (_backgroundReceiveCTS.IsCancellationRequested || packetData.Length != length)                      break;                    var packet = _packetProcessActions.DecodeData(packetData);                  LogReceivedPacket(packet);                    _packetHandlingActions.EnqueuePacketForHandling(packet);              }
Magic Number,EOLib.Net.Connection,NetworkConnectionActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\NetworkConnectionActions.cs,BeginHandshake,The following statement contains a magic number: var stupidHash = _hashService.StupidHash(new Random().Next(6' 12));
Magic Number,EOLib.Net.Connection,NetworkConnectionActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\NetworkConnectionActions.cs,BeginHandshake,The following statement contains a magic number: var stupidHash = _hashService.StupidHash(new Random().Next(6' 12));
Magic Number,EOLib.Net.Connection,NetworkConnectionActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Connection\NetworkConnectionActions.cs,BeginHandshake,The following statement contains a magic number: var packet = new PacketBuilder(PacketFamily.Init' PacketAction.Init)                  .AddThree(stupidHash)                  .AddChar(_configurationProvider.VersionMajor)                  .AddChar(_configurationProvider.VersionMinor)                  .AddChar(_configurationProvider.VersionBuild)                  .AddChar(112)                  .AddChar((byte)hdSerialNumber.Length)                  .AddString(hdSerialNumber)                  .Build();
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleBankOpen,The following statement contains a magic number: pkt.Skip(3);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleEffectTargetOther,The following statement contains a magic number: var otherCharacters = new List<TimedMapHPDrainData>((pkt.Length - pkt.ReadPos) / 5);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleInitInit,The following statement contains a magic number: switch (response)              {                  case InitReply.INIT_FRIEND_LIST_PLAYERS:                  case InitReply.INIT_PLAYERS:                      if (!m_client.ExpectingPlayerList)                          break;                      _handlePlayerList(pkt' response == InitReply.INIT_FRIEND_LIST_PLAYERS);                      break;                  case InitReply.INIT_MAP_MUTATION:                  {                      string localDir = response == InitReply.INIT_FILE_MAP || response == InitReply.INIT_MAP_MUTATION ? "maps" : "pub";                        if (response == InitReply.INIT_MAP_MUTATION)                          m_init_requestedMap = 0;                        if (!Directory.Exists(localDir))                          Directory.CreateDirectory(localDir);                        string filename;                      if (response == InitReply.INIT_FILE_EIF)                          filename = "dat001.eif";                      else if (response == InitReply.INIT_FILE_ENF)                          filename = "dtn001.enf";                      else if (response == InitReply.INIT_FILE_ESF)                          filename = "dsl001.esf";                      else if (response == InitReply.INIT_FILE_ECF)                          filename = "dat001.ecf";                      else                          filename = $"{m_init_requestedMap'5:D5}.emf";                        using (FileStream fs = File.Create(Path.Combine(localDir' filename)))                      {                          int dataLen = pkt.Length - 3;                          if (dataLen == 0)                              return; //trigger error by not setting response event                          fs.Write(pkt.GetBytes(dataLen)' 0' dataLen);                      }                        if (response == InitReply.INIT_MAP_MUTATION && OnMapMutation != null)                      {                          OnMapMutation();                      }                  }                      break;              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleInitInit,The following statement contains a magic number: switch (response)              {                  case InitReply.INIT_FRIEND_LIST_PLAYERS:                  case InitReply.INIT_PLAYERS:                      if (!m_client.ExpectingPlayerList)                          break;                      _handlePlayerList(pkt' response == InitReply.INIT_FRIEND_LIST_PLAYERS);                      break;                  case InitReply.INIT_MAP_MUTATION:                  {                      string localDir = response == InitReply.INIT_FILE_MAP || response == InitReply.INIT_MAP_MUTATION ? "maps" : "pub";                        if (response == InitReply.INIT_MAP_MUTATION)                          m_init_requestedMap = 0;                        if (!Directory.Exists(localDir))                          Directory.CreateDirectory(localDir);                        string filename;                      if (response == InitReply.INIT_FILE_EIF)                          filename = "dat001.eif";                      else if (response == InitReply.INIT_FILE_ENF)                          filename = "dtn001.enf";                      else if (response == InitReply.INIT_FILE_ESF)                          filename = "dsl001.esf";                      else if (response == InitReply.INIT_FILE_ECF)                          filename = "dat001.ecf";                      else                          filename = $"{m_init_requestedMap'5:D5}.emf";                        using (FileStream fs = File.Create(Path.Combine(localDir' filename)))                      {                          int dataLen = pkt.Length - 3;                          if (dataLen == 0)                              return; //trigger error by not setting response event                          fs.Write(pkt.GetBytes(dataLen)' 0' dataLen);                      }                        if (response == InitReply.INIT_MAP_MUTATION && OnMapMutation != null)                      {                          OnMapMutation();                      }                  }                      break;              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handlePlayerList,The following statement contains a magic number: if (pkt.GetByte() != 255)                  return;
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,DropItem,The following statement contains a magic number: if (x == 255 && y == 255)              {                  pkt.AddByte(x);                  pkt.AddByte(y);              }              else              {                  pkt.AddChar(x);                  pkt.AddChar(y);              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,DropItem,The following statement contains a magic number: if (x == 255 && y == 255)              {                  pkt.AddByte(x);                  pkt.AddByte(y);              }              else              {                  pkt.AddChar(x);                  pkt.AddChar(y);              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleItemDrop,The following statement contains a magic number: OldMapItem item = new OldMapItem              {                  ItemID = _id'                  Amount = _amount'                  UniqueID = pkt.GetShort()'                  X = pkt.GetChar()'                  Y = pkt.GetChar()'                  //turn off drop protection since main player dropped it                  DropTime = DateTime.Now.AddSeconds(-5)'                  IsNPCDrop = false'                  OwningPlayerID = 0 //id of 0 means the currently logged in player owns it              };
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handlePaperdollRemove,The following statement contains a magic number: if (pkt.Length != 45) pkt.Skip(sizeof(short) * 3);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handlePaperdollRemove,The following statement contains a magic number: if (pkt.Length != 45) pkt.Skip(sizeof(short) * 3);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handlePaperdollRemove,The following statement contains a magic number: if (pkt.Length != 45) pkt.Skip(sizeof(short));
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handlePaperdollRemove,The following statement contains a magic number: if (pkt.Length != 45)              {                  shield = pkt.GetShort();                  weapon = pkt.GetShort();              }              else              {                  weapon = pkt.GetShort();                  shield = pkt.GetShort();              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleQuestDialog,The following statement contains a magic number: if (pkt.GetByte() != 255) return;
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleShopOpen,The following statement contains a magic number: while (pkt.PeekByte() != 255)              {                  ShopItem nextItem = new ShopItem(pkt.GetShort()' pkt.GetThree()' pkt.GetThree()' pkt.GetChar());                  tradeItems.Add(nextItem);              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleShopOpen,The following statement contains a magic number: while (pkt.PeekByte() != 255)              {                  int ID = pkt.GetShort();                  List<Tuple<int' int>> ingreds = new List<Tuple<int' int>>();                    for (int i = 0; i < 4; ++i)                  {                      ingreds.Add(new Tuple<int' int>(pkt.GetShort()' pkt.GetChar()));                  }                  craftItems.Add(new CraftItem(ID' ingreds));              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleShopOpen,The following statement contains a magic number: while (pkt.PeekByte() != 255)              {                  int ID = pkt.GetShort();                  List<Tuple<int' int>> ingreds = new List<Tuple<int' int>>();                    for (int i = 0; i < 4; ++i)                  {                      ingreds.Add(new Tuple<int' int>(pkt.GetShort()' pkt.GetChar()));                  }                  craftItems.Add(new CraftItem(ID' ingreds));              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleShopCreate,The following statement contains a magic number: List<InventoryItem> inventoryItems = new List<InventoryItem>(4);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,DoCastTargetSpell,The following statement contains a magic number: pkt.AddChar((byte)(targetIsNPC ? 2 : 1));
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleSpellTargetGroup,The following statement contains a magic number: while (pkt.ReadPos != pkt.Length)              {                  //malformed packet - eoserv puts 5 '255' bytes between party members                  if (pkt.GetBytes(5).Any(x => x != 255)) return;                    spellTargets.Add(new GroupSpellTarget(pkt));              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleSpellTargetGroup,The following statement contains a magic number: while (pkt.ReadPos != pkt.Length)              {                  //malformed packet - eoserv puts 5 '255' bytes between party members                  if (pkt.GetBytes(5).Any(x => x != 255)) return;                    spellTargets.Add(new GroupSpellTarget(pkt));              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,LearnSpell,The following statement contains a magic number: pkt.AddInt(1234);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,ForgetSpell,The following statement contains a magic number: pkt.AddInt(1234);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,ResetCharacterStatSkill,The following statement contains a magic number: pkt.AddInt(1234);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,TradeRequest,The following statement contains a magic number: pkt.AddChar(123);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,TradeAcceptRequest,The following statement contains a magic number: pkt.AddChar(123);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,TradeClose,The following statement contains a magic number: pkt.AddChar(123);
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_sharedTradeDataProcess,The following statement contains a magic number: while (pkt.PeekByte() != 255)              {                  player1Items.Add(new InventoryItem(pkt.GetShort()' pkt.GetInt()));              }
Magic Number,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_sharedTradeDataProcess,The following statement contains a magic number: while (pkt.PeekByte() != 255)              {                  player2Items.Add(new InventoryItem(pkt.GetShort()' pkt.GetInt()));              }
Magic Number,EOLib.Net.API,CharacterData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Character.cs,CharacterData,The following statement contains a magic number: m_guildTag = pkt.GetFixedString(3);
Magic Number,EOLib.Net.API,CharacterData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Character.cs,CharacterData,The following statement contains a magic number: pkt.Skip(3 * sizeof(short));
Magic Number,EOLib.Net.API,ChestData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Chest.cs,ChestData,The following statement contains a magic number: var numRemaining = pkt.PeekEndString().Length / 5;
Magic Number,EOLib.Net.API,InProgressQuestData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Quest.cs,InProgressQuestData,The following statement contains a magic number: if (pkt.GetByte() != 255)                  throw new ArgumentException("Malformed quest packet"' nameof(pkt));
Magic Number,EOLib.Net,EODataChunk,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,EODataChunk,The following statement contains a magic number: RawLength = new byte[2];
Magic Number,EOLib.Net,EOClient,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\EOClient.cs,EOClient,The following statement contains a magic number: _handlers = new Dictionary<FamilyActionPair' PacketHandlerInvoker>(128);
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,Packet,The following statement contains a magic number: ReadPosition = 2;
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,PeekThree,The following statement contains a magic number: ThrowIfOutOfBounds(2);
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,PeekThree,The following statement contains a magic number: var bytes = new[]              {                  RawData[ReadPosition]'                  RawData[ReadPosition + 1]'                  RawData[ReadPosition + 2]              };
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,PeekInt,The following statement contains a magic number: ThrowIfOutOfBounds(3);
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,PeekInt,The following statement contains a magic number: var bytes = new[]              {                  RawData[ReadPosition]'                  RawData[ReadPosition + 1]'                  RawData[ReadPosition + 2]'                  RawData[ReadPosition + 3]              };
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,PeekInt,The following statement contains a magic number: var bytes = new[]              {                  RawData[ReadPosition]'                  RawData[ReadPosition + 1]'                  RawData[ReadPosition + 2]'                  RawData[ReadPosition + 3]              };
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,ReadShort,The following statement contains a magic number: ReadPosition += 2;
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,ReadThree,The following statement contains a magic number: ReadPosition += 3;
Magic Number,EOLib.Net,Packet,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Packet.cs,ReadInt,The following statement contains a magic number: ReadPosition += 4;
Magic Number,EOLib.Net,PacketBuilder,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketBuilder.cs,AddShort,The following statement contains a magic number: return AddBytes(_encoderService.EncodeNumber(s' 2));
Magic Number,EOLib.Net,PacketBuilder,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketBuilder.cs,AddThree,The following statement contains a magic number: return AddBytes(_encoderService.EncodeNumber(t' 3));
Magic Number,EOLib.Net,PacketBuilder,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketBuilder.cs,AddInt,The following statement contains a magic number: return AddBytes(_encoderService.EncodeNumber(i' 4));
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,OldPacket,The following statement contains a magic number: data = new List<byte>(2) {(byte) action' (byte) family};
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,EncodeNumber,The following statement contains a magic number: for (int index = 3; index >= 1; --index)              {                  if (index >= numArray.Length)                  {                      if (number >= NumericConstants.NUMERIC_MAXIMUM[index - 1])                          number %= NumericConstants.NUMERIC_MAXIMUM[index - 1];                  }                  else if (number >= NumericConstants.NUMERIC_MAXIMUM[index - 1])                  {                      numArray[index] = (byte)(number / NumericConstants.NUMERIC_MAXIMUM[index - 1] + 1);                      number %= NumericConstants.NUMERIC_MAXIMUM[index - 1];                  }                  else                      numArray[index] = 254;              }
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,EncodeNumber,The following statement contains a magic number: for (int index = 3; index >= 1; --index)              {                  if (index >= numArray.Length)                  {                      if (number >= NumericConstants.NUMERIC_MAXIMUM[index - 1])                          number %= NumericConstants.NUMERIC_MAXIMUM[index - 1];                  }                  else if (number >= NumericConstants.NUMERIC_MAXIMUM[index - 1])                  {                      numArray[index] = (byte)(number / NumericConstants.NUMERIC_MAXIMUM[index - 1] + 1);                      number %= NumericConstants.NUMERIC_MAXIMUM[index - 1];                  }                  else                      numArray[index] = 254;              }
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,DecodeNumber,The following statement contains a magic number: for (int index = 0; index < b.Length; ++index)              {                  if (b[index] == 254)                      b[index] = 1;                  else if (b[index] == 0)                      b[index] = 128;                  --b[index];              }
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,DecodeNumber,The following statement contains a magic number: for (int index = 0; index < b.Length; ++index)              {                  if (b[index] == 254)                      b[index] = 1;                  else if (b[index] == 0)                      b[index] = 128;                  --b[index];              }
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,Clear,The following statement contains a magic number: readPos = 2;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,Clear,The following statement contains a magic number: writePos = 2;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddShort,The following statement contains a magic number: data.InsertRange(writePos' EncodeNumber(s' 2));
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddShort,The following statement contains a magic number: writePos += 2;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddThree,The following statement contains a magic number: data.InsertRange(writePos' EncodeNumber(t' 3));
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddThree,The following statement contains a magic number: writePos += 3;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddInt,The following statement contains a magic number: data.InsertRange(writePos' EncodeNumber(i' 4));
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddInt,The following statement contains a magic number: writePos += 4;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,AddBreakString,The following statement contains a magic number: for (int index = 0; index < bytes.Length; ++index)              {                  if (bytes[index] == byte.MaxValue)                      bytes[index] = 121;              }
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,PeekShort,The following statement contains a magic number: return (short)DecodeNumber(data.GetRange(readPos' 2).ToArray());
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,PeekThree,The following statement contains a magic number: return DecodeNumber(data.GetRange(readPos' 3).ToArray());
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,PeekInt,The following statement contains a magic number: return DecodeNumber(data.GetRange(readPos' 4).ToArray());
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,GetShort,The following statement contains a magic number: readPos += 2;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,GetThree,The following statement contains a magic number: readPos += 3;
Magic Number,EOLib.Net,OldPacket,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\OldPacket.cs,GetInt,The following statement contains a magic number: readPos += 4;
Magic Number,EOLib.Net.Handlers,FamilyActionPair,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Handlers\FamilyActionPair.cs,GetHashCode,The following statement contains a magic number: return (int)fap.fam << 8 & (byte)fap.act;
Magic Number,EOLib.Net.Translators,CharacterFromPacketFactory,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\CharacterFromPacketFactory.cs,CreateCharacter,The following statement contains a magic number: var guildTag = packet.ReadString(3);
Magic Number,EOLib.Net.Translators,CharacterFromPacketFactory,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\CharacterFromPacketFactory.cs,CreateCharacter,The following statement contains a magic number: packet.Seek(6' SeekOrigin.Current);
Magic Number,EOLib.Net.Translators,CharacterFromPacketFactory,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\CharacterFromPacketFactory.cs,CreateCharacter,The following statement contains a magic number: packet.Seek(2' SeekOrigin.Current);
Magic Number,EOLib.Net.Translators,WarpAgreePacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\WarpAgreePacketTranslator.cs,TranslatePacket,The following statement contains a magic number: if (packet.ReadChar() != 2)                  throw new MalformedPacketException("Missing initial marker value of 2"' packet);
Magic Number,EOLib.Net.Translators,CharacterDisplayPacketTranslator<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\CharacterDisplayPacketTranslator.cs,GetCharacters,The following statement contains a magic number: packet.Seek(2' SeekOrigin.Current);
Magic Number,EOLib.Net.Translators,CharacterDisplayPacketTranslator<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\CharacterDisplayPacketTranslator.cs,GetCharacters,The following statement contains a magic number: for (int i = 0; i < numberOfCharacters; ++i)              {                  characters.Add(GetNextCharacter(packet));                  if (packet.ReadByte() != 255)                      throw new MalformedPacketException("Login packet missing character separator byte"' packet);              }
Magic Number,EOLib.Net.Translators,InitDataTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\InitDataTranslator.cs,GetInitializationOutOfDateData,The following statement contains a magic number: packet.Seek(2' SeekOrigin.Current);
Magic Number,EOLib.Net.Translators,LoginRequestCompletedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestCompletedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: if (packet.ReadByte() != 255)                  throw new MalformedPacketException("Missing 255 byte separator after CharacterLoginReply type"' packet);
Magic Number,EOLib.Net.Translators,LoginRequestCompletedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestCompletedPacketTranslator.cs,GetInventoryItems,The following statement contains a magic number: while (packet.PeekByte() != 255)                  yield return new InventoryItem(packet.ReadShort()' packet.ReadInt());
Magic Number,EOLib.Net.Translators,LoginRequestCompletedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestCompletedPacketTranslator.cs,GetInventorySpells,The following statement contains a magic number: while (packet.PeekByte() != 255)                  yield return new InventorySpell(packet.ReadShort()' packet.ReadShort());
Magic Number,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: var mapRid = packet.ReadBytes(4).ToArray();
Magic Number,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: var paddedGuildTag = packet.ReadString(3);
Magic Number,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: packet.Seek(12' SeekOrigin.Current);
Magic Number,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: var firstTimePlayer = packet.ReadChar() == 2;
Magic Number,EOLib.Net.Translators,LoginRequestGrantedPacketTranslator,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\LoginRequestGrantedPacketTranslator.cs,TranslatePacket,The following statement contains a magic number: if (packet.ReadByte() != 255)                  throw new MalformedPacketException("Missing terminating 255 byte"' packet);
Magic Number,EOLib.Net.Translators,MapStatePacketTranslator<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\MapStatePacketTranslator.cs,GetCharacters,The following statement contains a magic number: if (packet.ReadByte() != 255)                  throw new MalformedPacketException("Missing 255 byte after number of characters"' packet);
Magic Number,EOLib.Net.Translators,MapStatePacketTranslator<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\MapStatePacketTranslator.cs,GetCharacters,The following statement contains a magic number: for (int i = 0; i < numCharacters; ++i)              {                  var character = _characterFromPacketFactory.CreateCharacter(packet);                    if (packet.ReadByte() != 255)                      throw new MalformedPacketException("Missing 255 byte after character"' packet);                    yield return character;              }
Magic Number,EOLib.Net.Translators,MapStatePacketTranslator<T>,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Translators\MapStatePacketTranslator.cs,GetNPCs,The following statement contains a magic number: while (packet.PeekByte() != 255)              {                  var index = packet.ReadChar();                  var id = packet.ReadShort();                  var x = packet.ReadChar();                  var y = packet.ReadChar();                  var direction = (EODirection) packet.ReadChar();                                    yield return new NPC(id' index)                      .WithX(x)                      .WithY(y)                      .WithDirection(direction);              }
Magic Number,EOLib.PacketHandlers,MainPlayerWalkHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\MainPlayerWalkHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.ReadByte() != 255 || packet.ReadByte() != 255)                  return false;
Magic Number,EOLib.PacketHandlers,MainPlayerWalkHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\MainPlayerWalkHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.ReadByte() != 255 || packet.ReadByte() != 255)                  return false;
Magic Number,EOLib.PacketHandlers,MainPlayerWalkHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\MainPlayerWalkHandler.cs,HandlePacket,The following statement contains a magic number: var numberOfMapItems = packet.PeekEndString().Length / 9;
Magic Number,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandleNPCWalk,The following statement contains a magic number: if (packet.ReadBytes(3).Any(b => b != 255))                  throw new MalformedPacketException("Expected 3 bytes of value 0xFF in NPC_PLAYER packet for Walk action"' packet);
Magic Number,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandleNPCWalk,The following statement contains a magic number: if (packet.ReadBytes(3).Any(b => b != 255))                  throw new MalformedPacketException("Expected 3 bytes of value 0xFF in NPC_PLAYER packet for Walk action"' packet);
Magic Number,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandleNPCAttack,The following statement contains a magic number: var isDead = packet.ReadChar() == 2;
Magic Number,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandleNPCAttack,The following statement contains a magic number: if (packet.ReadBytes(2).Any(b => b != 255))                  throw new MalformedPacketException("Expected 2 bytes of value 0xFF in NPC_PLAYER packet for Attack action"' packet);
Magic Number,EOLib.PacketHandlers,NPCActionHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCActionHandler.cs,HandleNPCAttack,The following statement contains a magic number: if (packet.ReadBytes(2).Any(b => b != 255))                  throw new MalformedPacketException("Expected 2 bytes of value 0xFF in NPC_PLAYER packet for Attack action"' packet);
Magic Number,EOLib.PacketHandlers,NPCEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.Length - packet.ReadPosition != 8)                  throw new MalformedPacketException("Invalid packet length for new NPC in map."' packet);
Magic Number,EOLib.PacketHandlers,NPCEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (!packet.ReadBytes(2).SequenceEqual(new byte[] {1' 255}))                  throw new MalformedPacketException("Invalid header data for new NPC in map. Expected byte values 0x01' 0xff."' packet);
Magic Number,EOLib.PacketHandlers,NPCEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\NPCEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (!packet.ReadBytes(2).SequenceEqual(new byte[] {1' 255}))                  throw new MalformedPacketException("Invalid header data for new NPC in map. Expected byte values 0x01' 0xff."' packet);
Magic Number,EOLib.PacketHandlers,PlayerEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.ReadByte() != 255)                  throw new MalformedPacketException("Missing 255 header byte for player enter map handler"' packet);
Magic Number,EOLib.PacketHandlers,PlayerEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.PeekByte() != 255) //next byte was the warp animation: sent on Map::Enter in eoserv              {                  //todo: need to signal client that animation should be performed                  anim = (WarpAnimation) packet.ReadChar();                  if (packet.ReadByte() != 255) //the 255 still needs to be read...                      throw new MalformedPacketException("Missing 255 byte after the warp animation for player enter map handler"' packet);              }              else //next byte was a 255. Read it and proceed normally.              {                  packet.ReadByte();              }
Magic Number,EOLib.PacketHandlers,PlayerEnterMapHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerEnterMapHandler.cs,HandlePacket,The following statement contains a magic number: if (packet.PeekByte() != 255) //next byte was the warp animation: sent on Map::Enter in eoserv              {                  //todo: need to signal client that animation should be performed                  anim = (WarpAnimation) packet.ReadChar();                  if (packet.ReadByte() != 255) //the 255 still needs to be read...                      throw new MalformedPacketException("Missing 255 byte after the warp animation for player enter map handler"' packet);              }              else //next byte was a 255. Read it and proceed normally.              {                  packet.ReadByte();              }
Magic Number,EOLib.PacketHandlers,BeginPlayerWarpHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\BeginPlayerWarpHandler.cs,HandlePacket,The following statement contains a magic number: switch (warpType)              {                  case WARP_SAME_MAP:                      SendWarpAcceptToServer(packet);                      break;                  case WARP_NEW_MAP:                      var mapID = packet.ReadShort();                      var mapRid = packet.ReadBytes(4).ToArray();                      var fileSize = packet.ReadThree();                        var mapIsDownloaded = true;                      try                      {                          if (!_mapFileProvider.MapFiles.ContainsKey(mapID))                              _mapFileLoadActions.LoadMapFileByID(mapID);                      }                      catch (IOException) { mapIsDownloaded = false; }                        if (!mapIsDownloaded || _fileRequestActions.NeedsMapForWarp(mapID' mapRid' fileSize))                          _fileRequestActions.GetMapForWarp(mapID).Wait(5000);                        SendWarpAcceptToServer(packet);                      break;                  default:                      _mapStateRepository.MapWarpState = WarpState.None;                      return false;              }
Magic Number,EOLib.PacketHandlers,BeginPlayerWarpHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\BeginPlayerWarpHandler.cs,HandlePacket,The following statement contains a magic number: switch (warpType)              {                  case WARP_SAME_MAP:                      SendWarpAcceptToServer(packet);                      break;                  case WARP_NEW_MAP:                      var mapID = packet.ReadShort();                      var mapRid = packet.ReadBytes(4).ToArray();                      var fileSize = packet.ReadThree();                        var mapIsDownloaded = true;                      try                      {                          if (!_mapFileProvider.MapFiles.ContainsKey(mapID))                              _mapFileLoadActions.LoadMapFileByID(mapID);                      }                      catch (IOException) { mapIsDownloaded = false; }                        if (!mapIsDownloaded || _fileRequestActions.NeedsMapForWarp(mapID' mapRid' fileSize))                          _fileRequestActions.GetMapForWarp(mapID).Wait(5000);                        SendWarpAcceptToServer(packet);                      break;                  default:                      _mapStateRepository.MapWarpState = WarpState.None;                      return false;              }
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,HashService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\HashService.cs,StupidHash,The following statement contains a magic number: return 110905 + (seed % 9 + 1) * ((11092004 - seed) % ((seed % 11 + 1) * 119)) * 119 + seed % 2004;
Magic Number,EOLib.Net.PacketProcessing,PacketSequenceService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketSequenceService.cs,CalculateInitialSequenceNumber,The following statement contains a magic number: return seq1*7 - 11 + seq2 - 2;
Magic Number,EOLib.Net.PacketProcessing,PacketSequenceService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketSequenceService.cs,CalculateInitialSequenceNumber,The following statement contains a magic number: return seq1*7 - 11 + seq2 - 2;
Magic Number,EOLib.Net.PacketProcessing,PacketSequenceService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketSequenceService.cs,CalculateInitialSequenceNumber,The following statement contains a magic number: return seq1*7 - 11 + seq2 - 2;
Magic Number,EOLib.Net.PacketProcessing,PacketSequenceService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketSequenceService.cs,CalculateNextSequenceIncrement,The following statement contains a magic number: return (increment + 1)%10;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,PacketValidForDecode,The following statement contains a magic number: return data.Length >= 2 && !IsInitPacket(new Packet(new[] {data[0]' data[1]}));
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,AddSequenceBytes,The following statement contains a magic number: var numberOfSequenceBytes = seq >= NumericConstants.ONE_BYTE_MAX ? 2 : 1;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,AddSequenceBytes,The following statement contains a magic number: combined.AddRange(original.Where((b' i) => i >= 2));
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,PrependLength,The following statement contains a magic number: var len = _numberEncoderService.EncodeNumber(data.Count' 2);
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Interleave,The following statement contains a magic number: while (index1 < data.Count)              {                  numArray[index1] = data[num++];                  index1 += 2;              }
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Interleave,The following statement contains a magic number: if (data.Count % 2 != 0)                  index2 -= 2;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Interleave,The following statement contains a magic number: if (data.Count % 2 != 0)                  index2 -= 2;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Interleave,The following statement contains a magic number: while (index2 >= 0)              {                  numArray[index2] = data[num++];                  index2 -= 2;              }
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Deinterleave,The following statement contains a magic number: while (index1 < data.Count)              {                  numArray[num++] = data[index1];                  index1 += 2;              }
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Deinterleave,The following statement contains a magic number: if (data.Count % 2 != 0)                  index2 -= 2;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Deinterleave,The following statement contains a magic number: if (data.Count % 2 != 0)                  index2 -= 2;
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,Deinterleave,The following statement contains a magic number: while (index2 >= 0)              {                  numArray[num++] = data[index2];                  index2 -= 2;              }
Magic Number,EOLib.Net.PacketProcessing,PacketEncoderService,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\PacketProcessing\PacketEncoderService.cs,SwapMultiples,The following statement contains a magic number: for (int index1 = 0; index1 <= data.Count; ++index1)              {                  if (index1 != data.Count && data[index1] % multi == 0)                  {                      ++num1;                  }                  else                  {                      if (num1 > 1)                      {                          for (int index2 = 0; index2 < num1 / 2; ++index2)                          {                              byte num2 = data[index1 - num1 + index2];                              result[index1 - num1 + index2] = data[index1 - index2 - 1];                              result[index1 - index2 - 1] = num2;                          }                      }                      num1 = 0;                  }              }
Missing Default,EOLib.Domain.Character,StatTrainingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Domain\Character\StatTrainingActions.cs,GetStatIndex,The following switch statement is missing a default case: switch (whichStat)              {                  case CharacterStat.Strength: return 1;                  case CharacterStat.Intelligence: return 2;                  case CharacterStat.Wisdom: return 3;                  case CharacterStat.Agility: return 4;                  case CharacterStat.Constituion: return 5;                  case CharacterStat.Charisma: return 6;              }
Missing Default,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleInitInit,The following switch statement is missing a default case: switch (response)              {                  case InitReply.INIT_FRIEND_LIST_PLAYERS:                  case InitReply.INIT_PLAYERS:                      if (!m_client.ExpectingPlayerList)                          break;                      _handlePlayerList(pkt' response == InitReply.INIT_FRIEND_LIST_PLAYERS);                      break;                  case InitReply.INIT_MAP_MUTATION:                  {                      string localDir = response == InitReply.INIT_FILE_MAP || response == InitReply.INIT_MAP_MUTATION ? "maps" : "pub";                        if (response == InitReply.INIT_MAP_MUTATION)                          m_init_requestedMap = 0;                        if (!Directory.Exists(localDir))                          Directory.CreateDirectory(localDir);                        string filename;                      if (response == InitReply.INIT_FILE_EIF)                          filename = "dat001.eif";                      else if (response == InitReply.INIT_FILE_ENF)                          filename = "dtn001.enf";                      else if (response == InitReply.INIT_FILE_ESF)                          filename = "dsl001.esf";                      else if (response == InitReply.INIT_FILE_ECF)                          filename = "dat001.ecf";                      else                          filename = $"{m_init_requestedMap'5:D5}.emf";                        using (FileStream fs = File.Create(Path.Combine(localDir' filename)))                      {                          int dataLen = pkt.Length - 3;                          if (dataLen == 0)                              return; //trigger error by not setting response event                          fs.Write(pkt.GetBytes(dataLen)' 0' dataLen);                      }                        if (response == InitReply.INIT_MAP_MUTATION && OnMapMutation != null)                      {                          OnMapMutation();                      }                  }                      break;              }
Missing Default,EOLib.Net.API,PacketAPI,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Bank.cs,_handleQuestDialog,The following switch statement is missing a default case: switch (entry)                  {                      case DialogEntry.DialogText:                          pages.Add(pkt.GetBreakString());                          break;                      case DialogEntry.DialogLink:                          links.Add(pkt.GetShort()' pkt.GetBreakString());                          break;                  }
Missing Default,EOLib.Net.API,ItemUseData,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\API\Item.cs,ItemUseData,The following switch statement is missing a default case: switch (type)              {                  case ItemType.Teleport: /*Warp packet handles the rest!*/ break;                  case ItemType.Heal:                      {                          hpGain = pkt.GetInt();                          hp = pkt.GetShort();                          tp = pkt.GetShort();                      }                      break;                  case ItemType.HairDye:                      {                          hairColor = pkt.GetChar();                      }                      break;                  case ItemType.Beer: /*No additional data*/ break;                  case ItemType.EffectPotion:                      {                          effect = pkt.GetShort();                      }                      break;                  case ItemType.CureCurse:                      {                          curecurse_stats = new CureCurseStats(pkt);                      }                      break;                  case ItemType.EXPReward:                      {                          //note: server packets may be incorrect at this point (src/handlers/Item.cpp) because of unused builder in eoserv                          //note: server also sends an ITEM_ACCEPT packet to surrounding players on level-up?                          expreward_stats = new LevelUpStats(pkt' true);                      }                      break;              }
Missing Default,EOLib.Net.Handlers,PacketHandlingActions,C:\repos\ethanmoffat_EndlessClient\EOLib\Net\Handlers\PacketHandlingActions.cs,EnqueuePacketForHandling,The following switch statement is missing a default case: switch (handleType)              {                  case PacketHandlingType.InBand:                      _packetQueueProvider.HandleInBandPacketQueue.EnqueuePacketAndSignalConsumer(packet);                      break;                  case PacketHandlingType.OutOfBand:                      _packetQueueProvider.HandleOutOfBandPacketQueue.EnqueuePacketForHandling(packet);                      break;                  /*default: don't handle the received packet*/              }
Missing Default,EOLib.PacketHandlers,PlayerAvatarChangeHandler,C:\repos\ethanmoffat_EndlessClient\EOLib\PacketHandlers\PlayerAvatarChangeHandler.cs,HandlePacket,The following switch statement is missing a default case: switch (slot)              {                  case AvatarSlot.Clothes:                  {                      var sound = packet.ReadChar() == 0; //todo: sound?                        currentRenderProps = currentRenderProps                          .WithBootsGraphic(packet.ReadShort())                          .WithArmorGraphic(packet.ReadShort())                          .WithHatGraphic(packet.ReadShort())                          .WithWeaponGraphic(packet.ReadShort())                          .WithShieldGraphic(packet.ReadShort());                        break;                  }                  case AvatarSlot.Hair:                  {                      if (packet.ReadChar() != 0) //subloc -- not sure what this does                          throw new MalformedPacketException("Missing expected 0 byte in updating hair packet"' packet);                        currentRenderProps = currentRenderProps                          .WithHairStyle(packet.ReadChar())                          .WithHairColor(packet.ReadChar());                        break;                  }                  case AvatarSlot.HairColor:                  {                      if (packet.ReadChar() != 0) //subloc -- not sure what this does                          throw new MalformedPacketException("Missing expected 0 byte in updating hair color packet"' packet);                        currentRenderProps = currentRenderProps                          .WithHairColor(packet.ReadChar());                        break;                  }              }
