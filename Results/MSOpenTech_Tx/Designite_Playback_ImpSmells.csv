Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,GetObservable,The length of the statement  "            //  - The type Parse was generated from the ETW manifest description of the first event IIS traces for each request (EventId = 2) " is 129.
Long Statement,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,Get2Observables,The length of the statement  "            // This sample shows how to subscribe to two types of events' and process the occurences (=instances) reading the file once " is 123.
Long Statement,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,Get2Observables,The length of the statement  "            playback.GetObservable<FastSend>().Subscribe(fs => Console.WriteLine("end   {0} {1}"' fs.Header.ActivityId' fs.HttpStatus)); " is 124.
Magic Number,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,Count2And12,The following statement contains a magic number: var filtered = playback.GetObservable<SystemEvent>()                  .Where(e=>e.Header.EventId == 2 || e.Header.EventId == 12);
Magic Number,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,Count2And12,The following statement contains a magic number: var filtered = playback.GetObservable<SystemEvent>()                  .Where(e=>e.Header.EventId == 2 || e.Header.EventId == 12);
Magic Number,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,Count5SecWindow,The following statement contains a magic number: var countPerWindow = from window in all.Window(TimeSpan.FromSeconds(5)' playback.Scheduler)                                   from Count in window.Count()                                   select Count;
Magic Number,TxSamples,Program,C:\repos\MSOpenTech_Tx\Samples\Playback\Program.cs,PerfCounterAverageAndDeviation,The following statement contains a magic number: var powerSums =                  from window in                      powerSumBases.Window(TimeSpan.FromMinutes(1)' TimeSpan.FromMinutes(1)' playback.Scheduler)                  from a in window.Aggregate(new { s0 = 0' s1 = 0.0' s2 = 0.1 }' (acc' point) => new                  {                      s0 = acc.s0 + point.s0_base'                      s1 = acc.s1 + point.s1_base'                      s2 = acc.s2 + point.s2_base                  })                  select a;
