Implementation smell,Namespace,Class,File,Method,Description
Long Statement,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticCacheCreatesCsvTest,The length of the statement  "            Assert.IsTrue(File.Exists(Path.Combine(Environment.CurrentDirectory' "TestData"' Path.GetFileNameWithoutExtension(testDataFile) + ".csv"))); " is 140.
Long Statement,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The length of the statement  "            Assert.IsTrue(File.Exists(Path.Combine(Environment.CurrentDirectory' "TestData"' Path.GetFileNameWithoutExtension(testDataFile) + ".csv"))); " is 140.
Magic Number,LinqPadDriver.Tests,TypeCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\TypeCacheTests.cs,TypeCacheInitHappyPathTest,The following statement contains a magic number: Assert.AreEqual(3' Directory.GetFiles(dir' "*.bond").Length);
Magic Number,LinqPadDriver.Tests,TypeCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\TypeCacheTests.cs,TypeCacheInitHappyPathTest,The following statement contains a magic number: Assert.AreEqual(3' typeCache.Cache.Count);
Magic Number,LinqPadDriver.Tests,TypeCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\TypeCacheTests.cs,TypeCacheIgnoresTypesContainingImportTest,The following statement contains a magic number: Assert.AreEqual(3' typeCache.Cache.Count);
Magic Number,LinqPadDriver.Tests,EventStatisticsTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticsTests.cs,AddOperatorTestValidations,The following statement contains a magic number: EventStatistics y = new EventStatistics              {                  AverageByteSize = 2'                  ByteSize = 3'                  EventCount = 4'                  EventsPerSecond = 5'              };
Magic Number,LinqPadDriver.Tests,EventStatisticsTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticsTests.cs,AddOperatorTestValidations,The following statement contains a magic number: EventStatistics y = new EventStatistics              {                  AverageByteSize = 2'                  ByteSize = 3'                  EventCount = 4'                  EventsPerSecond = 5'              };
Magic Number,LinqPadDriver.Tests,EventStatisticsTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticsTests.cs,AddOperatorTestValidations,The following statement contains a magic number: EventStatistics y = new EventStatistics              {                  AverageByteSize = 2'                  ByteSize = 3'                  EventCount = 4'                  EventsPerSecond = 5'              };
Magic Number,LinqPadDriver.Tests,EventStatisticsTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticsTests.cs,AddOperatorTestValidations,The following statement contains a magic number: EventStatistics y = new EventStatistics              {                  AverageByteSize = 2'                  ByteSize = 3'                  EventCount = 4'                  EventsPerSecond = 5'              };
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticCacheGetTypeStatisticsHappyPathTest,The following statement contains a magic number: Assert.AreEqual(3' result.Keys.Count);
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticCacheGetTypeStatisticsHappyPathTest,The following statement contains a magic number: Assert.IsTrue(result.All(a => a.Value.EventCount == 10));
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,EventStatisticCacheTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\EventStatisticCacheTests.cs,EventStatisticLoadCsvValuesTest,The following statement contains a magic number: switch (item.Key.Name)                  {                      case "IsoscelesTriangle":                          Assert.AreEqual(27D' item.Value.AverageByteSize);                          Assert.AreEqual(270' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "EquilateralTriangle":                          Assert.AreEqual(25D' item.Value.AverageByteSize);                          Assert.AreEqual(250' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.0370' item.Value.EventsPerSecond);                          break;                        case "RightAngledTriangle":                          Assert.AreEqual(29D' item.Value.AverageByteSize);                          Assert.AreEqual(290' item.Value.ByteSize);                          Assert.AreEqual(10' item.Value.EventCount);                          Assert.AreEqual(0.037' item.Value.EventsPerSecond);                          break;                        default:                          Assert.Fail("Unexpected test result. Test fails.");                          break;                  }
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,ReadTypesFromSingleManifestTest,The following statement contains a magic number: Assert.AreEqual(4' typecache.Cache.Count);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,ReadTypesFromSingleManifestTest,The following statement contains a magic number: Debug.WriteLine(typecache.Cache[2].Manifest.ManifestId);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,ReadTypesFromSingleManifestTest,The following statement contains a magic number: Debug.WriteLine(typecache.Cache[3].Manifest.ManifestId);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,ReadTypesFromSingleManifestTest,The following statement contains a magic number: Debug.WriteLine(typecache.Cache[2].Type.Name);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,ReadTypesFromSingleManifestTest,The following statement contains a magic number: Debug.WriteLine(typecache.Cache[3].Type.Name);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(4' typecache.Cache.Count);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(10' values[0].EventCount);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(10' values[1].EventCount);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(10' values[2].EventCount);
Magic Number,LinqPadDriver.Tests,MultipleStructsManifestTests,C:\research\architectureSmells\repos\MSOpenTech_Tx\Samples\BondEtw\LinqPadDriver.Tests\MultipleStructsManifestTests.cs,MultipleTypesStatsCalculationTest,The following statement contains a magic number: Assert.AreEqual(10' values[2].EventCount);
