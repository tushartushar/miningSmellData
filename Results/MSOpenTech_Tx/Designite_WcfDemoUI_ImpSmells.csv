Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Tx.Samples.WCFInterception,MainWindow,C:\repos\MSOpenTech_Tx\Samples\WcfInterception\WcfDemoUI\MainWindow.xaml.cs,Window_Loaded,The following statement contains a magic number: var bars = from r in requests                  group r by new                  {                      Duration = Math.Ceiling(r.Duration.TotalMilliseconds)'                      Operation = r.Operation                  }                  into groups                  from window in groups.Window(TimeSpan.FromSeconds(2)' _pb.Scheduler)                  from c in window.Count()                  select new HistogramBar                  {                      Operation = groups.Key.Operation'                      Duration = groups.Key.Duration'                      Count = c'                  };
Magic Number,Tx.Samples.WCFInterception,MainWindow,C:\repos\MSOpenTech_Tx\Samples\WcfInterception\WcfDemoUI\MainWindow.xaml.cs,Window_Loaded,The following statement contains a magic number: var histogram = bars.Buffer(TimeSpan.FromSeconds(2));
Magic Number,Tx.Samples.WCFInterception,MainWindow,C:\repos\MSOpenTech_Tx\Samples\WcfInterception\WcfDemoUI\MainWindow.xaml.cs,DrawHistogram,The following statement contains a magic number: foreach (HistogramBar h in histogram)              {                  if (!stats.ContainsKey(h.Operation))                  {                      stats.Add(h.Operation' new MethodStatistics                      {                           MethodName = h.Operation'                            TotalCount = 1'                            TotalDuration = h.Duration                      });                  }                  else                  {                      MethodStatistics ms = stats[h.Operation];                      ms.TotalCount += 1;                      ms.TotalDuration += h.Duration;                  }                    if (h.Operation != (string)HistogramFilter.Content)                      continue;                                     Rectangle r = new Rectangle();                  r.Fill = new SolidColorBrush(Colors.Red);                  r.Height = h.Count * canvas1.Height / 10;                  r.Width = canvas1.Width / 50;                  Canvas.SetLeft(r' canvas1.Width / 50 * Math.Floor(h.Duration));                  Canvas.SetTop(r' 0);                  canvas1.Children.Insert(0' r);              }
Magic Number,Tx.Samples.WCFInterception,MainWindow,C:\repos\MSOpenTech_Tx\Samples\WcfInterception\WcfDemoUI\MainWindow.xaml.cs,DrawHistogram,The following statement contains a magic number: foreach (HistogramBar h in histogram)              {                  if (!stats.ContainsKey(h.Operation))                  {                      stats.Add(h.Operation' new MethodStatistics                      {                           MethodName = h.Operation'                            TotalCount = 1'                            TotalDuration = h.Duration                      });                  }                  else                  {                      MethodStatistics ms = stats[h.Operation];                      ms.TotalCount += 1;                      ms.TotalDuration += h.Duration;                  }                    if (h.Operation != (string)HistogramFilter.Content)                      continue;                                     Rectangle r = new Rectangle();                  r.Fill = new SolidColorBrush(Colors.Red);                  r.Height = h.Count * canvas1.Height / 10;                  r.Width = canvas1.Width / 50;                  Canvas.SetLeft(r' canvas1.Width / 50 * Math.Floor(h.Duration));                  Canvas.SetTop(r' 0);                  canvas1.Children.Insert(0' r);              }
Magic Number,Tx.Samples.WCFInterception,MainWindow,C:\repos\MSOpenTech_Tx\Samples\WcfInterception\WcfDemoUI\MainWindow.xaml.cs,DrawHistogram,The following statement contains a magic number: foreach (HistogramBar h in histogram)              {                  if (!stats.ContainsKey(h.Operation))                  {                      stats.Add(h.Operation' new MethodStatistics                      {                           MethodName = h.Operation'                            TotalCount = 1'                            TotalDuration = h.Duration                      });                  }                  else                  {                      MethodStatistics ms = stats[h.Operation];                      ms.TotalCount += 1;                      ms.TotalDuration += h.Duration;                  }                    if (h.Operation != (string)HistogramFilter.Content)                      continue;                                     Rectangle r = new Rectangle();                  r.Fill = new SolidColorBrush(Colors.Red);                  r.Height = h.Count * canvas1.Height / 10;                  r.Width = canvas1.Width / 50;                  Canvas.SetLeft(r' canvas1.Width / 50 * Math.Floor(h.Duration));                  Canvas.SetTop(r' 0);                  canvas1.Children.Insert(0' r);              }
