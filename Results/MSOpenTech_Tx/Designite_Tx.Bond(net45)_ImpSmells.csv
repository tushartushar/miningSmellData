Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tx.Bond,BinaryEtwObservable,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEtwObservable.cs,CreateEtwObservable,Cyclomatic complexity of the method is 8
Complex Method,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifest,Cyclomatic complexity of the method is 8
Long Parameter List,Tx.Bond,BinaryEtwObservable,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEtwObservable.cs,FromFiles,The method has 5 parameters. Parameters: providerId' useSequentialReader' startTime' endTime' files
Long Parameter List,Tx.Bond,BinaryEtwObservable,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEtwObservable.cs,BinaryManifestFromFiles,The method has 5 parameters. Parameters: providerId' useSequentialReader' startTime' endTime' files
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,Write,The method has 6 parameters. Parameters: occurenceTime' receiveTime' protocol' source' eventData' manifestId
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifest,The method has 6 parameters. Parameters: occurenceTime' receiveTime' protocol' source' manifestId' manifestData
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifestInternal,The method has 6 parameters. Parameters: occurenceTime' receiveTime' inputProtocol' source' manifestId' manifestData
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteInternal,The method has 6 parameters. Parameters: occurenceTime' receiveTime' inputProtocol' source' manifestId' eventPayload
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteBinaryPayload,The method has 7 parameters. Parameters: occurenceFileTimeUtc' receiveFileTimeUtc' inputProtocol' source' manifestId' eventPayloadLength' eventPayload
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteChunkedBinaryPayload,The method has 10 parameters. Parameters: packageId' occurenceFileTimeUtc' receiveFileTimeUtc' inputProtocol' source' manifestId' chunkCount' currentChunkNumber' payloadLength' payload
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifestPayload,The method has 6 parameters. Parameters: occurenceFileTimeUtc' receiveFileTimeUtc' inputProtocol' source' manifestId' manifestPayload
Long Parameter List,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteChunkedManifestPayload,The method has 9 parameters. Parameters: packageId' occurenceFileTimeUtc' receiveFileTimeUtc' inputProtocol' source' manifestId' chunkCount' currentChunkNumber' manifestPayload
Long Identifier,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,,The length of the parameter writeChuckedBinaryPayloadGuard is 30.
Long Identifier,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,,The length of the parameter writeChuckedManifestPayloadGuard is 32.
Long Identifier,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,,The length of the parameter EtwBinaryEventManifestProviderId is 32.
Long Statement,Tx.Bond,BondCompactBinaryWriter<T>,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BondCompactBinaryTransformBuilder.cs,Transform,The length of the statement  "                var envelope = new Envelope(now' now' this.protocol' null' this.manifestId' this.outputBuffer.Data.ToByteArray()' null);" is 120.
Long Statement,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseV1,The length of the statement  "            uint eventPayloadLength = etwNativeEvent.ReadUInt32(); // There is a side-effect being used here with the binary length." is 120.
Long Statement,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseV1,The length of the statement  "            etwNativeEvent.ReadInt32(); // EventSource based byte array writer actually stores the byte array length here. Skip 4 bytes to account for it." is 142.
Long Statement,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseV2,The length of the statement  "            uint eventPayloadLength = etwNativeEvent.ReadUInt32(); // There is a side-effect being used here with the binary length." is 120.
Empty Catch Block,Tx.Bond,TypeExtensions,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\TypeExtensions.cs,TryGetManifestData,The method has an empty catch block.
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,Write,The following statement contains a magic number: occurenceTime.ToUniversalTime().Ticks < 504911232000000000L
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,Write,The following statement contains a magic number: receiveTime.ToUniversalTime().Ticks < 504911232000000000L
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifest,The following statement contains a magic number: occurenceTime.ToUniversalTime().Ticks < 504911232000000000L
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifest,The following statement contains a magic number: receiveTime.ToUniversalTime().Ticks < 504911232000000000L
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifestInternal,The following statement contains a magic number: var maxPayloadSize = (MaxPayloadSize / 2) - (manifestId.Length + source.Length + inputProtocol.Length) * 2;
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifestInternal,The following statement contains a magic number: var maxPayloadSize = (MaxPayloadSize / 2) - (manifestId.Length + source.Length + inputProtocol.Length) * 2;
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteInternal,The following statement contains a magic number: var maxPayloadSize = MaxPayloadSize - (typeId.Length + source.Length + protocol.Length) * 2;
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteInternal,The following statement contains a magic number: var maxPayloadSize = MaxPayloadSize - (manifestId.Length + source.Length + inputProtocol.Length) * 2;
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteChunkedBinaryPayload,The following statement contains a magic number: this.WriteEvent(                 2'                 packageId'                 occurenceFileTimeUtc'                 receiveFileTimeUtc'                 inputProtocol'                 source'                 manifestId'                 chunkCount'                 currentChunkNumber'                 payloadLength'                 payload);
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteManifestPayload,The following statement contains a magic number: this.WriteEvent(                 3'                 occurenceFileTimeUtc'                 receiveFileTimeUtc'                 inputProtocol'                 source'                 manifestId'                 manifestPayload);
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,WriteChunkedManifestPayload,The following statement contains a magic number: this.WriteEvent(                 4'                 packageId'                 occurenceFileTimeUtc'                 receiveFileTimeUtc'                 inputProtocol'                 source'                 manifestId'                 chunkCount'                 currentChunkNumber'                 manifestPayload);
Magic Number,Tx.Bond,BinaryEventSource,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BinaryEventSource.cs,Error,The following statement contains a magic number: this.WriteEvent(5' error);
Magic Number,Tx.Bond,BondJsonEnvelopeTypeMap,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\BondJsonEnvelopeTypeMap.cs,BuildDeserializers,The following statement contains a magic number: deserializerMap.Add(Protocol.CompactBinaryV2' e => DeserializeCompactBinary(2' e' deserializer));
Magic Number,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,Parse,The following statement contains a magic number: switch (etwNativeEvent.Id)                 {                     case 0:                         result = ParseV0(etwNativeEvent);                         break;                     case 1:                         result = ParseV1(etwNativeEvent);                         break;                     case 2:                         result = this.ParseV2(etwNativeEvent);                         break;                 }
Magic Number,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseManifest,The following statement contains a magic number: switch (etwNativeEvent.Id)                 {                     case 3:                         result = ParseRegularManifest(etwNativeEvent);                         break;                     case 4:                         result = this.ParseChunkedManifest(etwNativeEvent);                         break;                 }
Magic Number,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseManifest,The following statement contains a magic number: switch (etwNativeEvent.Id)                 {                     case 3:                         result = ParseRegularManifest(etwNativeEvent);                         break;                     case 4:                         result = this.ParseChunkedManifest(etwNativeEvent);                         break;                 }
Magic Number,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseV0,The following statement contains a magic number: eventPayload = (eventPayloadLength < 65000) ? etwNativeEvent.ReadBytes() : new byte[0];
Missing Default,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,Parse,The following switch statement is missing a default case: switch (etwNativeEvent.Id)                 {                     case 0:                         result = ParseV0(etwNativeEvent);                         break;                     case 1:                         result = ParseV1(etwNativeEvent);                         break;                     case 2:                         result = this.ParseV2(etwNativeEvent);                         break;                 }
Missing Default,Tx.Bond,BinaryEtwParser,C:\research\architectureSmells\repos\MSOpenTech_Tx\Source\Tx.Bond\Internal\BinaryEtwParser.cs,ParseManifest,The following switch statement is missing a default case: switch (etwNativeEvent.Id)                 {                     case 3:                         result = ParseRegularManifest(etwNativeEvent);                         break;                     case 4:                         result = this.ParseChunkedManifest(etwNativeEvent);                         break;                 }
