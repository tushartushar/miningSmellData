Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,handleMessage,Cyclomatic complexity of the method is 10
Empty Catch Block,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userSelect,The method has an empty catch block.
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,Main,The following statement contains a magic number: enabledLanguages = args[2].Split(new string[] { "'" }' StringSplitOptions.RemoveEmptyEntries);
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,Main,The following statement contains a magic number: Logger.Write("Enabled languages are: {0}"' args[2]);
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,Main,The following statement contains a magic number: args.Length > 2 && args[2].Length > 0
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,Main,The following statement contains a magic number: args.Length > 2 && args[2].Length > 0
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,startEngine,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,OpenIDE.CodeEngine,MainClass,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\Main.cs,startEngineNoX,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,setupTray,The following statement contains a magic number: trayIcon.Icon = new Icon(SystemIcons.Application' 40' 40);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,setupTray,The following statement contains a magic number: trayIcon.Icon = new Icon(SystemIcons.Application' 40' 40);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,startEngine,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,goToType,The following statement contains a magic number: _ctx.Post((s) =>                  {                      Logger.Write("Opening type search");                      try {      					if (_gotoType == null || !_gotoType.Visible)      					{                              Logger.Write("Creating typesearch form");      						_gotoType = new TypeSearchForm(      							cache'      							(file' line' column) => { editor.GoTo(file' line' column); }'      							() => { new System.Threading.Thread(() => { System.Threading.Thread.Sleep(1000); editor.SetFocus(); }).Start(); });      						_gotoType.Show(this);      					}      					setToForeground(_gotoType);                      } catch (Exception ex) {                          Logger.Write(ex);                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userSelect,The following statement contains a magic number: _ctx.Post((s) =>                  {                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var items = new List<string>();                          var keys = new List<string>();                          foreach (var item in args[3].Split(new[] {'''})) {                              var chunks = item.Split(new[] {"||"}' StringSplitOptions.None);                              if (chunks.Length > 1) {                                  keys.Add(chunks[0]);                                  items.Add(chunks[1]);                              } else {                                  keys.Add(item);                                  items.Add(item);                              }                          }                          var command = "user-selected";                          if (message.Message.StartsWith("user-select-at-caret "))                              command = "user-selected-at-caret";                          var form = new UserSelectForm(items' keys' (item) => {                              if (item != null)                                  _endpoint.PublishEvent(command+" '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent(command+" '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch {                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userSelect,The following statement contains a magic number: _ctx.Post((s) =>                  {                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var items = new List<string>();                          var keys = new List<string>();                          foreach (var item in args[3].Split(new[] {'''})) {                              var chunks = item.Split(new[] {"||"}' StringSplitOptions.None);                              if (chunks.Length > 1) {                                  keys.Add(chunks[0]);                                  items.Add(chunks[1]);                              } else {                                  keys.Add(item);                                  items.Add(item);                              }                          }                          var command = "user-selected";                          if (message.Message.StartsWith("user-select-at-caret "))                              command = "user-selected-at-caret";                          var form = new UserSelectForm(items' keys' (item) => {                              if (item != null)                                  _endpoint.PublishEvent(command+" '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent(command+" '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch {                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userSelect,The following statement contains a magic number: _ctx.Post((s) =>                  {                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var items = new List<string>();                          var keys = new List<string>();                          foreach (var item in args[3].Split(new[] {'''})) {                              var chunks = item.Split(new[] {"||"}' StringSplitOptions.None);                              if (chunks.Length > 1) {                                  keys.Add(chunks[0]);                                  items.Add(chunks[1]);                              } else {                                  keys.Add(item);                                  items.Add(item);                              }                          }                          var command = "user-selected";                          if (message.Message.StartsWith("user-select-at-caret "))                              command = "user-selected-at-caret";                          var form = new UserSelectForm(items' keys' (item) => {                              if (item != null)                                  _endpoint.PublishEvent(command+" '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent(command+" '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch {                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userInput,The following statement contains a magic number: _ctx.Post((s) =>                  {                      Logger.Write("Launching user input form");                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var defaultValue = "";                          if (args.Length > 3)                              defaultValue = args[3];                          var form = new UserInputForm(defaultValue' (item) => {                              if (item != null)                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch (Exception ex) {                          Logger.Write(ex);                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userInput,The following statement contains a magic number: _ctx.Post((s) =>                  {                      Logger.Write("Launching user input form");                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var defaultValue = "";                          if (args.Length > 3)                              defaultValue = args[3];                          var form = new UserInputForm(defaultValue' (item) => {                              if (item != null)                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch (Exception ex) {                          Logger.Write(ex);                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userInput,The following statement contains a magic number: _ctx.Post((s) =>                  {                      Logger.Write("Launching user input form");                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var defaultValue = "";                          if (args.Length > 3)                              defaultValue = args[3];                          var form = new UserInputForm(defaultValue' (item) => {                              if (item != null)                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch (Exception ex) {                          Logger.Write(ex);                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,userInput,The following statement contains a magic number: _ctx.Post((s) =>                  {                      Logger.Write("Launching user input form");                      try {                          var args = new CommandStringParser().Parse(message.Message).ToArray();                          var defaultValue = "";                          if (args.Length > 3)                              defaultValue = args[3];                          var form = new UserInputForm(defaultValue' (item) => {                              if (item != null)                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' '"  + item + "'");                              else                                  _endpoint.PublishEvent("user-inputted '" + args[2] + "' 'user-cancelled'");                              editor.SetFocus();                          });                          form.Show(this);                          setToForeground(form);                      } catch (Exception ex) {                          Logger.Write(ex);                      }                  }' null);
Magic Number,OpenIDE.CodeEngine,TrayForm,D:\research\architectureSmells\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine\TrayForm.cs,setToForeground,The following statement contains a magic number: ThreadPool.QueueUserWorkItem((u) => {                      Thread.Sleep(50);                      BringToForeGround.ByProcAndName(System.Diagnostics.Process.GetCurrentProcess().ProcessName' form.Text);                  }' null);
