Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,buildDefinitions,The method has 118 lines of code.
Complex Method,OpenIDE.Core.Commands,QueryArgumentParser,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Commands\QueryArgumentParser.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,OpenIDE.Core.UI,SnippetReplaceController,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetReplaceController.cs,setCurrentFromPosition,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,Handle,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.Core.Configs,Interpreters,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Configs\Interpreters.cs,readInterpreters,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,read,Cyclomatic complexity of the method is 8
Complex Method,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,Cyclomatic complexity of the method is 18
Complex Method,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,buildDefinitions,Cyclomatic complexity of the method is 9
Complex Method,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,cacheIsOutOfDate,Cyclomatic complexity of the method is 18
Long Parameter List,OpenIDE.Core.CodeEngineIntegration,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\Instance.cs,Instance,The method has 5 parameters. Parameters: clientFactory' file' processID' key' port
Long Parameter List,OpenIDE.Core.EditorEngineIntegration,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Instance.cs,Instance,The method has 5 parameters. Parameters: clientFactory' file' processID' key' port
Long Parameter List,OpenIDE.Core.Config,Configuration,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\Config\Configuration.cs,writeSetting,The method has 5 parameters. Parameters: writer' original' name' operatr' val
Long Parameter List,OpenIDE.Core.Caching,CodeReference,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\ICodeType.cs,CodeReference,The method has 10 parameters. Parameters: language' type' file' parent' signature' name' scope' line' column' json
Long Parameter List,OpenIDE.Core.RScripts,ReactiveScript,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\RScripts\ReactiveScript.cs,ReactiveScript,The method has 5 parameters. Parameters: file' keyPath' outputDispatcher' dispatch' dispatchErrors
Long Parameter List,OpenIDE.Core.RScripts,ReactiveScript,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\RScripts\ReactiveScript.cs,construct,The method has 5 parameters. Parameters: file' keyPath' outputDispatcher' dispatch' dispatchErrors
Long Parameter List,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Package,The method has 7 parameters. Parameters: os' target' id' version' command' name' description
Long Parameter List,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,installPackage,The method has 5 parameters. Parameters: source' package' tempPath' installPath' activeProfile
Long Parameter List,OpenIDE.Core.Packaging,SourcePackage,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Source.cs,SourcePackage,The method has 6 parameters. Parameters: id' os' version' name' description' package
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Run,The method has 5 parameters. Parameters: proc' command' arguments' visible' workingDir
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Run,The method has 6 parameters. Parameters: proc' command' arguments' visible' workingDir' replacements
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Spawn,The method has 5 parameters. Parameters: proc' command' arguments' visible' workingDir
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Spawn,The method has 6 parameters. Parameters: proc' command' arguments' visible' workingDir' replacements
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,QueryAll,The method has 6 parameters. Parameters: proc' command' arguments' visible' workingDir' errors
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,QueryAll,The method has 7 parameters. Parameters: proc' command' arguments' visible' workingDir' replacements' errors
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The method has 6 parameters. Parameters: proc' command' arguments' visible' workingDir' onRecievedLine
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The method has 7 parameters. Parameters: proc' command' arguments' visible' workingDir' onRecievedLine' replacements
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The method has 8 parameters. Parameters: proc' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,query,The method has 8 parameters. Parameters: proc' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The method has 5 parameters. Parameters: command' arguments' workingDir' onRecievedLine' replacements
Long Parameter List,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,prepareProcess,The method has 5 parameters. Parameters: proc' command' arguments' visible' workingDir
Long Parameter List,OpenIDE.Core.Definitions,DefinitionCache,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCache.cs,Add,The method has 7 parameters. Parameters: type' location' updated' ovrride' required' name' description
Long Parameter List,OpenIDE.Core.Definitions,DefinitionCache,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCache.cs,add,The method has 7 parameters. Parameters: type' location' updated' ovrride' required' name' description
Long Parameter List,OpenIDE.Core.Definitions,DefinitionCacheItem,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCache.cs,Append,The method has 7 parameters. Parameters: type' location' updated' ovrride' required' name' description
Long Parameter List,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,DefinitionBuilder,The method has 6 parameters. Parameters: token' workingDirectory' defaultLanguage' enabledLanguages' builtIn' languages
Long Parameter List,OpenIDE.Core.Environments,EnvironmentService,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Environments\EnvironmentService.cs,EnvironmentService,The method has 5 parameters. Parameters: defaultLanguage' enabledLanguages' pluginLocator' codeEnginelocator' editorLocator
Long Parameter List,OpenIDE.Core.Integration,ResponseDispatcher,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Integration\ResponseDispatcher.cs,ResponseDispatcher,The method has 6 parameters. Parameters: token' dispatchErrors' eventPrefix' outputDispatcher' dispatcher' dispatchResponse
Long Statement,OpenIDE.Core.CodeEngineIntegration,CodeEngineDispatcher,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\CodeEngineLocator.cs,getInstances,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.Core.EditorEngineIntegration,EngineLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\EngineLocator.cs,getInstances,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.Core.FileSystem,PathExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\FileSystem\PathExtensions.cs,GetRelativePath,The length of the statement  "			if (envfullpathFile.Length > templateDir.Length && envfullpathFile.Substring(0' templateDir.Length).Equals(templateDir)) " is 120.
Long Statement,OpenIDE.Core.Logging,ConsoleLogger,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Logging\Logger.cs,write,The length of the statement  "				Console.WriteLine("{0}'{1} - {2}"' Math.Round((new TimeSpan(total)).TotalMilliseconds' 0)' Math.Round((new TimeSpan(fromLast)).TotalMilliseconds)' message); " is 156.
Long Statement,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The length of the statement  "            this.labelInfo.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right))); " is 186.
Long Statement,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The length of the statement  "            this.textBoxPlaceholders.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 152.
Long Statement,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The length of the statement  "            this.textBoxPreview.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right | System.Windows.Forms.AnchorStyles.Bottom)  " is 232.
Long Statement,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The length of the statement  "            this.buttonRun.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,OpenIDE.Core.Language,UsageParser,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\UsageParser.cs,getDescription,The length of the statement  "				throw new Exception(string.Format("Invalid usage statement. Error parsing description at offset {0} in {1}"' index' _usage)); " is 125.
Long Statement,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,install,The length of the statement  "										_dispatch(string.Format("error|dependency {0} ({1}) is installed. Accepted versions are {2}"' args.Package.ID' package.Version' versions)); " is 139.
Long Statement,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,install,The length of the statement  "								_dispatch(string.Format("error|the package with the command {0} conflicts with the package you are trying to install"' command)); " is 129.
Long Statement,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,install,The length of the statement  "							_dispatch(string.Format("error|dependency {0} of version {1} is not a valid. Accepted versions are {2}"' args.Package.ID' args.Package.Version' versions)); " is 155.
Long Statement,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,runProcess,The length of the statement  "				_dispatch("error|failed running package verify. Make sure that environment supports script/executable type " + Path.GetExtension(command)); " is 139.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Run,The length of the statement  "                _dispatcher("Failed to run " + command + ". Is the file/command not executable or are you missing a configured interpreter?"); " is 126.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Spawn,The length of the statement  "                _dispatcher("Failed to run " + command + ". Is the file/command not executable or are you missing a configured interpreter?"); " is 126.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,QueryAll,The length of the statement  "                _dispatcher("Failed to run " + command + ". Is the file/command not executable or are you missing a configured interpreter?"); " is 126.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,query,The length of the statement  "                _dispatcher("Failed to run " + command + ". Is the file/command not executable or are you missing a configured interpreter?"); " is 126.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The length of the statement  "            if ((args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") || (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")) { " is 151.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The length of the statement  "                        var preparerFile = Path.Combine(fileDir' Path.GetFileNameWithoutExtension(command)+"-files"' preparerArgs.ElementAt(0)); " is 120.
Long Statement,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,batchEscape,The length of the statement  "            foreach (var str in new[] { "^"' " "' "&"' "("' ")"' "["' "]"' "{"' "}"' "="' ";"' "!"' "'"' "+"' "'"' "`"' "~"' "\"" }) " is 120.
Long Statement,OpenIDE.Core.Definitions,DefinitionCache,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCache.cs,Merge,The length of the statement  "				if (!definition.Override && definition.Type == DefinitionCacheItemType.Language && !enabledLanguages.Contains(definition.Name)) " is 127.
Long Statement,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,mergeBuiltInCommands,The length of the statement  "				if (updateDefinitions && updated != null && fileTime(System.Reflection.Assembly.GetExecutingAssembly().Location) > updated.Updated) " is 131.
Long Statement,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,isUpdated,The length of the statement  "				Logger.Write("Definition is out of date for {0} with file time {1} {2}"' file' filetime.ToShortDateString()' filetime.ToLongTimeString()); " is 138.
Long Statement,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,isUpdated,The length of the statement  "					Logger.Write("Definition is out of date for {0} with file time {1} {2}"' file' filetime.ToShortDateString()' filetime.ToLongTimeString()); " is 138.
Long Statement,OpenIDE.Core.Requests,RequestRunner,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Requests\RequestRunner.cs,Request,The length of the statement  "                response.AddRange(handleEditorRequest(msg.Substring(editorRequest.Length' msg.Length - editorRequest.Length).ToString().Trim())); " is 129.
Long Statement,OpenIDE.Core.Requests,RequestRunner,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Requests\RequestRunner.cs,Request,The length of the statement  "                response.AddRange(handleCodemodelRequest(msg.Substring(codeModelRequest.Length' msg.Length - codeModelRequest.Length).ToString().Trim())); " is 138.
Long Statement,OpenIDE.Core.EventEndpointIntegrarion,EventEndpointLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EventEndpointIntegrarion\EventEndpointLocator.cs,getInstances,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.Core.OutputEndpointIntegration,OutputEndpointLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\OutputEndpointIntegration\OutputEndpointLocator.cs,getInstances,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Complex Conditional,OpenIDE.Core.Commands,CommandMessage,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Commands\CommandMessage.cs,splitMessage,The conditional expression  "(current == " " && escapeDepth == 0) || escapeDepth == 2 || i == message.Length - 1"  is complex.
Complex Conditional,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,IsValid,The conditional expression  "(Target == "language-script" || Target == "language-rscript") && (Language == null || Language.Length == 0)"  is complex.
Complex Conditional,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The conditional expression  "(args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") || (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")"  is complex.
Complex Conditional,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The conditional expression  "(args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") ||                  (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")"  is complex.
Empty Catch Block,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,OpenIDE.Core.FileSystem,Script,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\FileSystem\Script.cs,Run,The method has an empty catch block.
Empty Catch Block,OpenIDE.Core.Logging,FileLogger,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Logging\FileLogger.cs,write,The method has an empty catch block.
Empty Catch Block,OpenIDE.Core.Packaging,Installer,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Installer.cs,getPackages,The method has an empty catch block.
Magic Number,OpenIDE.Core.CodeEngineIntegration,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\Instance.cs,Get,The following statement contains a magic number: if (lines.Length != 2)  				return null;
Magic Number,OpenIDE.Core.Commands,CommandMessage,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Commands\CommandMessage.cs,splitMessage,The following statement contains a magic number: for (int i = 0; i < message.Length; i++)  			{  				var current = message.Substring(i' 1);  				if (current == "\"")  				{  					escapeDepth++;  					if (escapeDepth == 1)  						start = i + 1;  				}  				if ((current == " " && escapeDepth == 0) || escapeDepth == 2 || i == message.Length - 1)  				{  					var length = i - start;  					if (i == message.Length - 1 && escapeDepth != 2)  						length = i - start + 1;  					var item = message.Substring(start' length).Trim();  					if (item.Length > 0)  						list.Add(item);  					start = i + 1;  					escapeDepth = 0;  				}  			}
Magic Number,OpenIDE.Core.Commands,CommandMessage,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Commands\CommandMessage.cs,splitMessage,The following statement contains a magic number: for (int i = 0; i < message.Length; i++)  			{  				var current = message.Substring(i' 1);  				if (current == "\"")  				{  					escapeDepth++;  					if (escapeDepth == 1)  						start = i + 1;  				}  				if ((current == " " && escapeDepth == 0) || escapeDepth == 2 || i == message.Length - 1)  				{  					var length = i - start;  					if (i == message.Length - 1 && escapeDepth != 2)  						length = i - start + 1;  					var item = message.Substring(start' length).Trim();  					if (item.Length > 0)  						list.Add(item);  					start = i + 1;  					escapeDepth = 0;  				}  			}
Magic Number,OpenIDE.Core.Commands,CommandMessage,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Commands\CommandMessage.cs,getRemainingChunks,The following statement contains a magic number: if (chunks.Count < 2)  				return new string[] {};
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,Connect,The following statement contains a magic number: if (retryCount >= 5)                  return;
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,SendAndWait,The following statement contains a magic number: while (IsSending && DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)                  Thread.Sleep(10);
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,SendAndWait,The following statement contains a magic number: while (IsSending && DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)                  Thread.Sleep(10);
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,SendAndWait,The following statement contains a magic number: if (DateTime.Now.Subtract(timeout).TotalMilliseconds > 8000)                  Logger.Write("Message \"" + message + "\" not sent! Operation timed out");
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,Request,The following statement contains a magic number: while (DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)  			{  				if (recieved != null)  					break;                  Thread.Sleep(10);  			}
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,Request,The following statement contains a magic number: while (DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)  			{  				if (recieved != null)  					break;                  Thread.Sleep(10);  			}
Magic Number,OpenIDE.Core.EditorEngineIntegration,Client,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Client.cs,Request,The following statement contains a magic number: if (DateTime.Now.Subtract(timeout).TotalMilliseconds >= 8000) {                  Logger.Write("Timed out while waiting for response to " + messageToSend);              }
Magic Number,OpenIDE.Core.EditorEngineIntegration,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EditorEngineIntegration\Instance.cs,Get,The following statement contains a magic number: if (lines.Length != 2)  				return null;
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(12' 1);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(648' 21);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(648' 21);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.TabIndex = 6;
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPlaceholders.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPlaceholders.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPlaceholders.Size = new System.Drawing.Size(595' 20);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPlaceholders.Size = new System.Drawing.Size(595' 20);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPreview.Location = new System.Drawing.Point(12' 51);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPreview.Location = new System.Drawing.Point(12' 51);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPreview.Size = new System.Drawing.Size(648' 250);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPreview.Size = new System.Drawing.Size(648' 250);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxPreview.TabIndex = 3;
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonRun.Location = new System.Drawing.Point(613' 25);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonRun.Location = new System.Drawing.Point(613' 25);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonRun.Size = new System.Drawing.Size(47' 20);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonRun.Size = new System.Drawing.Size(47' 20);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonRun.TabIndex = 2;
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(672' 322);
Magic Number,OpenIDE.Core.UI,SnippetForm,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(672' 322);
Magic Number,OpenIDE.Core.UI,SnippetReplaceController,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\UI\SnippetReplaceController.cs,setCurrentFromPosition,The following statement contains a magic number: if (_activePosition == _activeText.Length &&  				_activeText.EndsWith(" ") &&  				_activeText.Count(x => x.Equals('\"')) % 2 == 0)  			{  				if (_placeHolders.Length - 1 < _activeReplacements.Length)  					CurrentPlaceholder = _placeHolders[_placeHolders.Length - 1];  				else  					CurrentPlaceholder = _placeHolders[_activeReplacements.Length];  				return;  			}
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,Initialize,The following statement contains a magic number: while (!initialized)          		Thread.Sleep(10);
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,Crawl,The following statement contains a magic number: if (retryCount > 10) return;
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,Crawl,The following statement contains a magic number: try {                  var toCrawl = filesAndFolders.ToArray();                  var filename = "openide-crawl-"+ DateTime.Now.Ticks.ToString() + "-" + _rnd.Next(1'10000).ToString();                  var file = Path.Combine(FS.GetTempPath()' filename);                    using (var stream = new FileStream(file' FileMode.Create)) {                      using (var writer = new StreamWriter(stream)) {                          foreach (var line in toCrawl) {                              writer.WriteLine(line);                          }                      }                  }                  run(string.Format("crawl-source \"{0}\""' file)' onLineReceived);                  File.Delete(file);              } catch (Exception ex) {                  Logger.Write("Failed to crawl files retrying (" + retryCount.ToString() + ")");                  Logger.Write(ex);                  Crawl(filesAndFolders' onLineReceived' retryCount + 1);              }
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,SignatureFromPosition,The following statement contains a magic number: try {  				var lines = new List<string>();  				run(string.Format(  						"signature-from-position \"{0}\""'  						position.ToCommand())'  				    (m) => lines.Add(m));  				if (lines.Count != 4)  					return null;  				return new SignatureLocation(  					lines[0]'  					lines[1]'  					new Position(lines[2])'  					new Position(lines[3]));  			} catch {  				return null;  			}
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,SignatureFromPosition,The following statement contains a magic number: try {  				var lines = new List<string>();  				run(string.Format(  						"signature-from-position \"{0}\""'  						position.ToCommand())'  				    (m) => lines.Add(m));  				if (lines.Count != 4)  					return null;  				return new SignatureLocation(  					lines[0]'  					lines[1]'  					new Position(lines[2])'  					new Position(lines[3]));  			} catch {  				return null;  			}
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,SignatureFromPosition,The following statement contains a magic number: try {  				var lines = new List<string>();  				run(string.Format(  						"signature-from-position \"{0}\""'  						position.ToCommand())'  				    (m) => lines.Add(m));  				if (lines.Count != 4)  					return null;  				return new SignatureLocation(  					lines[0]'  					lines[1]'  					new Position(lines[2])'  					new Position(lines[3]));  			} catch {  				return null;  			}
Magic Number,OpenIDE.Core.Language,LanguagePlugin,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Language\LanguagePlugin.cs,queryEngine,The following statement contains a magic number: if (_process != null && !_process.HasExited) {  				// TODO: Instad of locking use correlationID to be able to run requests in parallel  				Logger.Write("Querying {0} {1}"' _path' arguments);  				lock (_processLock) {  					_isQuerying = true;  					if (onLineReceived != null)  						_responseDispatcher = onLineReceived;  					_process.StandardInput.WriteLine(arguments);  					while (_isQuerying)  						Thread.Sleep(10);  					if (onLineReceived != null)  						_responseDispatcher = (m) => {};  				}  				Logger.Write("Done - Querying {0} {1}"' _path' arguments);  				return true;  			}
Magic Number,OpenIDE.Core.Config,ConfigOptionsReader,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\Config\ConfigOptions.cs,Parse,The following statement contains a magic number: foreach (var path in _paths) {  				if (!Directory.Exists(path))  					continue;  				Logger.Write("Checking for .oicfgoptions in " + path);  				var files = Directory.GetFiles(path' "*.oicfgoptions");  				foreach (var file in files) {  					var lines = File.ReadAllLines(file);  					foreach (var line in lines) {  						var chunks = line.Split(new[] { '|' });  						if (chunks.Length == 2)  							addOption(chunks[0]' chunks[1]);  					}  				}  			}
Magic Number,OpenIDE.Core.Config,ConfigOptionsReader,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CodeEngineIntegration\Config\ConfigOptions.cs,addOption,The following statement contains a magic number: _options.Add(option.PadRight(40' ' ') + "// " + comment);
Magic Number,OpenIDE.Core.Windowing,BringToForeGroundLinux,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Windowing\BringToForeGround.cs,BringToFront,The following statement contains a magic number: try {                  string windowId = null;                  new System.Diagnostics.Process().Query(                      "/usr/bin/wmctrl"'                      "-lp"'                      false'                      Environment.CurrentDirectory'                      (err' msg) => {                          if (err) {                              Logger.Write(msg);                              return;                          }                          var chunks = msg.Split(new[] {" "}' StringSplitOptions.RemoveEmptyEntries);                          if (chunks.Length >= 4 && chunks[2] == pid.ToString())                              windowId = chunks[0];                      }                  );                  if (windowId == null)                      return;                    var args = "-i -a \"" + windowId + "\"";                  Logger.Write("Running wmctrl " + args);                  new System.Diagnostics.Process().Query(                      "/usr/bin/wmctrl"'                      args'                      false'                      Environment.CurrentDirectory'                      (err' msg) => Logger.Write(msg));              } catch {                  Logger.Write("For better window focus handling on linux and osx consider installing wmctrl");              }
Magic Number,OpenIDE.Core.Windowing,BringToForeGroundLinux,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Windowing\BringToForeGround.cs,BringToFront,The following statement contains a magic number: try {                  string windowId = null;                  new System.Diagnostics.Process().Query(                      "/usr/bin/wmctrl"'                      "-lp"'                      false'                      Environment.CurrentDirectory'                      (err' msg) => {                          if (err) {                              Logger.Write(msg);                              return;                          }                          var chunks = msg.Split(new[] {" "}' StringSplitOptions.RemoveEmptyEntries);                          if (chunks.Length >= 4 && chunks[2] == pid.ToString())                              windowId = chunks[0];                      }                  );                  if (windowId == null)                      return;                    var args = "-i -a \"" + windowId + "\"";                  Logger.Write("Running wmctrl " + args);                  new System.Diagnostics.Process().Query(                      "/usr/bin/wmctrl"'                      args'                      false'                      Environment.CurrentDirectory'                      (err' msg) => Logger.Write(msg));              } catch {                  Logger.Write("For better window focus handling on linux and osx consider installing wmctrl");              }
Magic Number,OpenIDE.Core.CommandBuilding,FilePosition,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CommandBuilding\FilePosition.cs,FilePosition,The following statement contains a magic number: if (chunks.Length > 2)  				if (int.TryParse(chunks[2]' out column))  					Column = column;
Magic Number,OpenIDE.Core.CommandBuilding,FilePosition,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CommandBuilding\FilePosition.cs,FilePosition,The following statement contains a magic number: if (chunks.Length > 2)  				if (int.TryParse(chunks[2]' out column))  					Column = column;
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleProject,The following statement contains a magic number: if (chunks.Length < 3)  				return;
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleProject,The following statement contains a magic number: var project = new Project(_currentProject' chunks[2]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleProject,The following statement contains a magic number: var args = getArguments(chunks' 3);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleFile,The following statement contains a magic number: if (chunks.Length < 2)  				return;
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleFile,The following statement contains a magic number: var args = getArguments(chunks' 2);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: if (chunks.Length < 9)  				return;
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var reference = new CodeReference(  				_language'  				chunks[4]'  				_currentFile'  				chunks[1]'  				chunks[2]'                  chunks[3]'                  chunks[5]'  				tryParse(chunks[6])'  				tryParse(chunks[7])'                  chunks[8]);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleSignature,The following statement contains a magic number: var args = getArguments(chunks' 9);
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleReference,The following statement contains a magic number: if (chunks.Length < 4)  				return;
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleReference,The following statement contains a magic number: _builder.Add(new SignatureReference(  				_currentFile'  				chunks[1]'  				tryParse(chunks[2])'  				tryParse(chunks[3])));
Magic Number,OpenIDE.Core.Caching,CrawlHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Caching\CrawlHandler.cs,handleReference,The following statement contains a magic number: _builder.Add(new SignatureReference(  				_currentFile'  				chunks[1]'  				tryParse(chunks[2])'  				tryParse(chunks[3])));
Magic Number,OpenIDE.Core.Profiles,ProfileLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Profiles\ProfileLocator.cs,GetProfilesForPath,The following statement contains a magic number: Directory.GetDirectories(path)  				.Select(x => Path.GetFileName(x))  				.Where(x => x.StartsWith("profile.")).ToList()  				.ForEach(x => profiles.Add(x.Substring(8' x.Length -8)));
Magic Number,OpenIDE.Core.Profiles,ProfileLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Profiles\ProfileLocator.cs,GetProfilesForPath,The following statement contains a magic number: Directory.GetDirectories(path)  				.Select(x => Path.GetFileName(x))  				.Where(x => x.StartsWith("profile.")).ToList()  				.ForEach(x => profiles.Add(x.Substring(8' x.Length -8)));
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,IsValid,The following statement contains a magic number: var basicValid =   				new[] { "language"' "script"' "rscript"' "language-script"' "language-rscript" }.Contains(Target) &&  				ID.Length > 0 &&  				Version.Length > 0 &&  				Command.Length > 0 &&  				Name.Length > 0 &&  				Name.Length <= 50 &&  				Description.Length > 0;
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					_os.OfType<object>()'  					(itm'tabs) => string.Format("\"{0}\""' itm.ToString())'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					Dependencies.OfType<object>()'  					(itm'tabs) => {  						var depSb = new StringBuilder();  						depSb.AppendLine("{");  						depSb.AppendLine(  							tab(tabs + 1) +   							"\"id\": \"{0}\"".Replace("{0}"' ((Dependency)itm).ID) +  							"'");  						depSb.AppendLine(tab(tabs + 1) + "\"versions\":");  						depSb.AppendLine(  							getArrayOf(  								((Dependency)itm).Versions.OfType<object>()'  								(dep'depTabs) => "\"{1}\"".Replace("{1}"' dep.ToString())'  								4));  						depSb.Append(tab(tabs) + "}");  						return depSb.ToString();  					}'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					Dependencies.OfType<object>()'  					(itm'tabs) => {  						var depSb = new StringBuilder();  						depSb.AppendLine("{");  						depSb.AppendLine(  							tab(tabs + 1) +   							"\"id\": \"{0}\"".Replace("{0}"' ((Dependency)itm).ID) +  							"'");  						depSb.AppendLine(tab(tabs + 1) + "\"versions\":");  						depSb.AppendLine(  							getArrayOf(  								((Dependency)itm).Versions.OfType<object>()'  								(dep'depTabs) => "\"{1}\"".Replace("{1}"' dep.ToString())'  								4));  						depSb.Append(tab(tabs) + "}");  						return depSb.ToString();  					}'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					PreInstallActions.OfType<object>()'  					(itm'tabs) => itm.ToString()'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					PostInstallActions.OfType<object>()'  					(itm'tabs) => itm.ToString()'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					PreUninstallActions.OfType<object>()'  					(itm'tabs) => itm.ToString()'  					2) + "'");
Magic Number,OpenIDE.Core.Packaging,Package,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Packaging\Package.cs,Write,The following statement contains a magic number: sb.AppendLine(  				getArrayOf(  					PostUninstallActions.OfType<object>()'  					(itm'tabs) => itm.ToString()'  					2));
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The following statement contains a magic number: var exitCode = 255;
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The following statement contains a magic number: while (exitCode == 255 && retries < 5) {                  _logger("Running query");                  exitCode = query(process' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments);                  _logger("Done running with " + exitCode.ToString());                  retries++;                  // Seems to happen on linux when a file is beeing executed while being modified (locked)                  if (exitCode == 255) {                      _logger("Recreating process");                      process = new Process();                      Thread.Sleep(100);                  }                  _logger("Done running process");              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The following statement contains a magic number: while (exitCode == 255 && retries < 5) {                  _logger("Running query");                  exitCode = query(process' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments);                  _logger("Done running with " + exitCode.ToString());                  retries++;                  // Seems to happen on linux when a file is beeing executed while being modified (locked)                  if (exitCode == 255) {                      _logger("Recreating process");                      process = new Process();                      Thread.Sleep(100);                  }                  _logger("Done running process");              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The following statement contains a magic number: while (exitCode == 255 && retries < 5) {                  _logger("Running query");                  exitCode = query(process' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments);                  _logger("Done running with " + exitCode.ToString());                  retries++;                  // Seems to happen on linux when a file is beeing executed while being modified (locked)                  if (exitCode == 255) {                      _logger("Recreating process");                      process = new Process();                      Thread.Sleep(100);                  }                  _logger("Done running process");              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,Query,The following statement contains a magic number: while (exitCode == 255 && retries < 5) {                  _logger("Running query");                  exitCode = query(process' command' arguments' visible' workingDir' onRecievedLine' replacements' preparedArguments);                  _logger("Done running with " + exitCode.ToString());                  retries++;                  // Seems to happen on linux when a file is beeing executed while being modified (locked)                  if (exitCode == 255) {                      _logger("Recreating process");                      process = new Process();                      Thread.Sleep(100);                  }                  _logger("Done running process");              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The following statement contains a magic number: if ((args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") || (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")) {                  // Run preparer if exists                  if (lnk.Preparer != null) {                      var preparerArgs = new CommandStringParser(' ').Parse(lnk.Preparer);                      if (preparerArgs.Count() > 0) {                          var preparerFile = Path.Combine(fileDir' Path.GetFileNameWithoutExtension(command)+"-files"' preparerArgs.ElementAt(0));                          var preparerArguments = "";                          if (preparerArgs.Count() > 1)                              preparerArguments = new CommandStringParser(' ').GetArgumentString(preparerArgs.Skip(1).ToArray());                          Logger.Write("Running preparer: "+preparerFile);                          if (File.Exists(preparerFile)) {                              string[] errors;                              var output = new Process()                                  .QueryAll(preparerFile' preparerArguments' false' workingDir' out errors);                              var hasErrors = false;                              foreach (var line in output) {                                  if (line.StartsWith("error|")) {                                      onRecievedLine(true' line.Substring(6' line.Length-6));                                      hasErrors = true;                                  }                              }                              foreach (var line in errors) {                                  if (line.Trim().Length > 0) {                                      onRecievedLine(true' line);                                      hasErrors = true;                                  }                              }                              if (hasErrors)                                  return true;                          }                      }                  } else {                      Logger.Write("No preparer registered");                  }              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The following statement contains a magic number: if ((args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") || (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")) {                  // Run preparer if exists                  if (lnk.Preparer != null) {                      var preparerArgs = new CommandStringParser(' ').Parse(lnk.Preparer);                      if (preparerArgs.Count() > 0) {                          var preparerFile = Path.Combine(fileDir' Path.GetFileNameWithoutExtension(command)+"-files"' preparerArgs.ElementAt(0));                          var preparerArguments = "";                          if (preparerArgs.Count() > 1)                              preparerArguments = new CommandStringParser(' ').GetArgumentString(preparerArgs.Skip(1).ToArray());                          Logger.Write("Running preparer: "+preparerFile);                          if (File.Exists(preparerFile)) {                              string[] errors;                              var output = new Process()                                  .QueryAll(preparerFile' preparerArguments' false' workingDir' out errors);                              var hasErrors = false;                              foreach (var line in output) {                                  if (line.StartsWith("error|")) {                                      onRecievedLine(true' line.Substring(6' line.Length-6));                                      hasErrors = true;                                  }                              }                              foreach (var line in errors) {                                  if (line.Trim().Length > 0) {                                      onRecievedLine(true' line);                                      hasErrors = true;                                  }                              }                              if (hasErrors)                                  return true;                          }                      }                  } else {                      Logger.Write("No preparer registered");                  }              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The following statement contains a magic number: if ((args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") || (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")) {                  // Run preparer if exists                  if (lnk.Preparer != null) {                      var preparerArgs = new CommandStringParser(' ').Parse(lnk.Preparer);                      if (preparerArgs.Count() > 0) {                          var preparerFile = Path.Combine(fileDir' Path.GetFileNameWithoutExtension(command)+"-files"' preparerArgs.ElementAt(0));                          var preparerArguments = "";                          if (preparerArgs.Count() > 1)                              preparerArguments = new CommandStringParser(' ').GetArgumentString(preparerArgs.Skip(1).ToArray());                          Logger.Write("Running preparer: "+preparerFile);                          if (File.Exists(preparerFile)) {                              string[] errors;                              var output = new Process()                                  .QueryAll(preparerFile' preparerArguments' false' workingDir' out errors);                              var hasErrors = false;                              foreach (var line in output) {                                  if (line.StartsWith("error|")) {                                      onRecievedLine(true' line.Substring(6' line.Length-6));                                      hasErrors = true;                                  }                              }                              foreach (var line in errors) {                                  if (line.Trim().Length > 0) {                                      onRecievedLine(true' line);                                      hasErrors = true;                                  }                              }                              if (hasErrors)                                  return true;                          }                      }                  } else {                      Logger.Write("No preparer registered");                  }              }
Magic Number,CoreExtensions,ProcessExtensions,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\CoreExtensions\ProcessExtensions.cs,handleOiLnk,The following statement contains a magic number: if (                  (args.Count() == 2 && args.ElementAt(1) == "get-command-definitions") ||                  (args.Count() == 1 && args.ElementAt(0) == "reactive-script-reacts-to")              )              {                  return false;              }
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheReader,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheReader.cs,getTime,The following statement contains a magic number: return  				new DateTime(  					int.Parse(date[0])'  					int.Parse(date[1])'  					int.Parse(date[2])'  					int.Parse(time[0])'  					int.Parse(time[1])'  					int.Parse(time[2]));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheReader,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheReader.cs,getTime,The following statement contains a magic number: return  				new DateTime(  					int.Parse(date[0])'  					int.Parse(date[1])'  					int.Parse(date[2])'  					int.Parse(time[0])'  					int.Parse(time[1])'  					int.Parse(time[2]));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheWriter,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheWriter.cs,getDefinition,The following statement contains a magic number: json.Updated =   				string.Format("{0}.{1}.{2} {3}:{4}:{5}"'  					parameter.Updated.Year'  					parameter.Updated.Month.ToString().PadLeft(2' '0')'  					parameter.Updated.Day.ToString().PadLeft(2' '0')'  					parameter.Updated.Hour.ToString().PadLeft(2' '0')'  					parameter.Updated.Minute.ToString().PadLeft(2' '0')'  					parameter.Updated.Second.ToString().PadLeft(2' '0'));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheWriter,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheWriter.cs,getDefinition,The following statement contains a magic number: json.Updated =   				string.Format("{0}.{1}.{2} {3}:{4}:{5}"'  					parameter.Updated.Year'  					parameter.Updated.Month.ToString().PadLeft(2' '0')'  					parameter.Updated.Day.ToString().PadLeft(2' '0')'  					parameter.Updated.Hour.ToString().PadLeft(2' '0')'  					parameter.Updated.Minute.ToString().PadLeft(2' '0')'  					parameter.Updated.Second.ToString().PadLeft(2' '0'));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheWriter,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheWriter.cs,getDefinition,The following statement contains a magic number: json.Updated =   				string.Format("{0}.{1}.{2} {3}:{4}:{5}"'  					parameter.Updated.Year'  					parameter.Updated.Month.ToString().PadLeft(2' '0')'  					parameter.Updated.Day.ToString().PadLeft(2' '0')'  					parameter.Updated.Hour.ToString().PadLeft(2' '0')'  					parameter.Updated.Minute.ToString().PadLeft(2' '0')'  					parameter.Updated.Second.ToString().PadLeft(2' '0'));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheWriter,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheWriter.cs,getDefinition,The following statement contains a magic number: json.Updated =   				string.Format("{0}.{1}.{2} {3}:{4}:{5}"'  					parameter.Updated.Year'  					parameter.Updated.Month.ToString().PadLeft(2' '0')'  					parameter.Updated.Day.ToString().PadLeft(2' '0')'  					parameter.Updated.Hour.ToString().PadLeft(2' '0')'  					parameter.Updated.Minute.ToString().PadLeft(2' '0')'  					parameter.Updated.Second.ToString().PadLeft(2' '0'));
Magic Number,OpenIDE.Core.Definitions,DefinitionCacheWriter,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionCacheWriter.cs,getDefinition,The following statement contains a magic number: json.Updated =   				string.Format("{0}.{1}.{2} {3}:{4}:{5}"'  					parameter.Updated.Year'  					parameter.Updated.Month.ToString().PadLeft(2' '0')'  					parameter.Updated.Day.ToString().PadLeft(2' '0')'  					parameter.Updated.Hour.ToString().PadLeft(2' '0')'  					parameter.Updated.Minute.ToString().PadLeft(2' '0')'  					parameter.Updated.Second.ToString().PadLeft(2' '0'));
Magic Number,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,printError,The following statement contains a magic number: var error = msg.Substring(6' msg.Length-6);
Magic Number,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,printError,The following statement contains a magic number: var error = msg.Substring(6' msg.Length-6);
Magic Number,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,addPlaceholderLanguages,The following statement contains a magic number: foreach (var dir in Directory.GetDirectories(path)) {  				if (!dir.EndsWith("-files"))  					continue;  				if (existingShort.Contains(dir))  					continue;  				existing.Add(dir.Substring(0' dir.Length - 6));  			}
Magic Number,OpenIDE.Core.Environments,EnvironmentService,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Environments\EnvironmentService.cs,startInstance,The following statement contains a magic number: var timeout = DateTime.Now.AddSeconds(5);
Magic Number,OpenIDE.Core.Environments,EnvironmentService,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Environments\EnvironmentService.cs,startInstance,The following statement contains a magic number: while (DateTime.Now < timeout)  			{  				if (_editorLocator.GetInstance(token) != null)  					break;  				Thread.Sleep(10);  			}
Magic Number,OpenIDE.Core.Integration,ResponseDispatcher,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Integration\ResponseDispatcher.cs,Handle,The following statement contains a magic number: if (error) {                  if (_dispatchErrors)                      _outputDispatcher(_eventPrefix' "error|" + m);              } else {                  if (m.StartsWith(cmdText)) {                      Logger.Write("Handling command "+m);                      var toDispatch = m.Substring(cmdText.Length' m.Length - cmdText.Length);                      var args = toDispatch.Split(new[] {" "}' StringSplitOptions.RemoveEmptyEntries);                      if (args.Length > 1 && args[0] == "editor") {                          var _editor = _editorFactory();                          if (_editor == null)                              return;                          _editor.Send(toDispatch.Substring(6' toDispatch.Length - 6).Trim());                      } else {                          _dispatcher(toDispatch);                      }                  } else if (m.StartsWith(eventText)) {                      if (_onlyCommands)                          return;                      _dispatcher(m.Substring(eventText.Length' m.Length - eventText.Length));                  } else if (_requestRunner.IsRequest(m)) {                      if (_onlyCommands)                          return;                      var response = _requestRunner.Request(m);                      foreach (var content in response)                          _dispatchResponse(content);                  } else {                      if (_onlyCommands)                          return;                      _outputDispatcher(_eventPrefix' m);                  }              }
Magic Number,OpenIDE.Core.Integration,ResponseDispatcher,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Integration\ResponseDispatcher.cs,Handle,The following statement contains a magic number: if (error) {                  if (_dispatchErrors)                      _outputDispatcher(_eventPrefix' "error|" + m);              } else {                  if (m.StartsWith(cmdText)) {                      Logger.Write("Handling command "+m);                      var toDispatch = m.Substring(cmdText.Length' m.Length - cmdText.Length);                      var args = toDispatch.Split(new[] {" "}' StringSplitOptions.RemoveEmptyEntries);                      if (args.Length > 1 && args[0] == "editor") {                          var _editor = _editorFactory();                          if (_editor == null)                              return;                          _editor.Send(toDispatch.Substring(6' toDispatch.Length - 6).Trim());                      } else {                          _dispatcher(toDispatch);                      }                  } else if (m.StartsWith(eventText)) {                      if (_onlyCommands)                          return;                      _dispatcher(m.Substring(eventText.Length' m.Length - eventText.Length));                  } else if (_requestRunner.IsRequest(m)) {                      if (_onlyCommands)                          return;                      var response = _requestRunner.Request(m);                      foreach (var content in response)                          _dispatchResponse(content);                  } else {                      if (_onlyCommands)                          return;                      _outputDispatcher(_eventPrefix' m);                  }              }
Magic Number,OpenIDE.Core.EventEndpointIntegrarion,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\EventEndpointIntegrarion\EventEndpointLocator.cs,Get,The following statement contains a magic number: if (lines.Length != 2)                  return null;
Magic Number,OpenIDE.Core.OutputEndpointIntegration,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\OutputEndpointIntegration\OutputEndpointLocator.cs,Get,The following statement contains a magic number: if (lines.Length != 2)                  return null;
Duplicate Code,OpenIDE.Core.Definitions,DefinitionBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.Core\Definitions\DefinitionBuilder.cs,buildDefinitions,The method contains a code clone-set at the following line numbers (starting from the method definition): ((36' 56)' (74' 94))
