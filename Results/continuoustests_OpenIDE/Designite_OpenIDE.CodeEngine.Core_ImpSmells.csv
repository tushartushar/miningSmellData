Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,Cyclomatic complexity of the method is 18
Complex Method,OpenIDE.CodeEngine.Core.FileSystem,PathParser,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\FileSystem\PathParser.cs,RelativeTo,Cyclomatic complexity of the method is 13
Complex Method,OpenIDE.CodeEngine.Core.Handlers,LanguageCommandHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\LanguageCommandHandler.cs,Handle,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.CodeEngine.Core.Handlers,GetCodeRefsHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\GetCodeRefsHandler.cs,isWildCard,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.CodeEngine.Core.Handlers,GetCodeRefsHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\GetCodeRefsHandler.cs,filter,Cyclomatic complexity of the method is 9
Complex Method,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,Cyclomatic complexity of the method is 8
Complex Method,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,treeViewFiles_KeyDown,Cyclomatic complexity of the method is 10
Complex Method,OpenIDE.CodeEngine.Core.ReactiveScripts,ReactiveScriptEngine,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\ReactiveScripts\ReactiveScriptEngine.cs,handleScriptTouched,Cyclomatic complexity of the method is 10
Long Parameter List,OpenIDE.CodeEngine.Core.ChangeTrackers,PluginFileTracker,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\ChangeTrackers\CSharpFileTracker.cs,Start,The method has 6 parameters. Parameters: path' cache' crawlReader' pluginLocator' eventDispatcher' ignoreDirectories
Long Statement,OpenIDE.CodeEngine.Core.Caching.Search,HierarchyBuilder,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\Search\HierarchyBuilder.cs,getResult,The length of the statement  "                return new FileFindResult(typeWhenDirectory' x.Substring(0' x.IndexOf(Path.DirectorySeparatorChar' searchDir.Length + 1))' project); " is 132.
Long Statement,OpenIDE.CodeEngine.Core.Endpoints,CommandEndpoint,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\CommandEndpoint.cs,writeInstanceInfo,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.CodeEngine.Core.Endpoints,EventEndpoint,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\EventEndpoint.cs,writeInstanceInfo,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.CodeEngine.Core.Endpoints,OutputEndpoint,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\OutputEndpoint.cs,writeInstanceInfo,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.CodeEngine.Core.Endpoints.Tcp,TcpServer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\TcpServer.cs,isEndOfMessage,The length of the statement  "				if (!Encoding.UTF8.GetString(new byte[] { _buffer[i]}).Equals(_messageTermination.Substring(_messageTermination.Length - (index - i) - 1' 1))) " is 142.
Long Statement,OpenIDE.CodeEngine.Core.EditorEngine,EngineLocator,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\EditorEngine\EditorEngineLocator.cs,getInstances,The length of the statement  "            var user = System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(Path.DirectorySeparatorChar.ToString()' "-"); " is 124.
Long Statement,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FileExplorer)); " is 132.
Long Statement,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The length of the statement  "            this.textBoxSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The length of the statement  "            this.treeViewFiles.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The length of the statement  "            this.treeViewFiles.BeforeExpand += new System.Windows.Forms.TreeViewCancelEventHandler(this.treeViewFiles_BeforeExpand); " is 120.
Long Statement,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The length of the statement  "            this.labelInfo.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)  " is 145.
Long Statement,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The length of the statement  "			this.textBoxSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 146.
Long Statement,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The length of the statement  "            this.informationList.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The length of the statement  "            this.labelInfo.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The length of the statement  "            this.textBoxSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The length of the statement  "            this.informationList.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The length of the statement  "            this.labelComment.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The length of the statement  "            this.textBoxSearch.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 146.
Long Statement,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The length of the statement  "            this.informationList.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The length of the statement  "            this.textBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 140.
Empty Catch Block,OpenIDE.CodeEngine.Core.FileSystem,PathParser,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\FileSystem\PathParser.cs,ToAbsolute,The method has an empty catch block.
Empty Catch Block,OpenIDE.CodeEngine.Core.Endpoints.Tcp,TcpServer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\TcpServer.cs,AcceptCallback,The method has an empty catch block.
Empty Catch Block,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,SendFromQueue,The method has an empty catch block.
Empty Catch Block,OpenIDE.CodeEngine.Core.Bootstrapping,Bootstrapper,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Bootstrapping\Bootstrapper.cs,shutdownPlugins,The method has an empty catch block.
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Caching,SearchSorter,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Caching\SearchSorter.cs,Sort,The following statement contains a magic number: foreach (var compareString in compareStrings) {  				if (name.Equals(compareString)) {  					score += 1000;  					continue;  				}  				if (name.ToLower().Equals(compareString.ToLower())) {  					score += 2000;  					continue;  				}  				if (name.StartsWith(compareString)) {  					score += 3000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.ToLower().StartsWith(compareString.ToLower())) {  					score += 4000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.EndsWith(compareString)) {  					score += 5000;  					continue;  				}  				if (name.Contains(compareString)) {  					score += 6000 + (name.Length - name.IndexOf(compareString));  					continue;  				}  				if (name.Contains(compareString)) {  					score += 7000 + (name.Length - name.IndexOf(compareString));  					continue;  				}    				if (signature.Equals(compareString)) {  					score += 8000;  					continue;  				}  				if (signature.ToLower().Equals(compareString.ToLower())) {  					score += 9000;  					continue;  				}  				if (signature.StartsWith(compareString)) {  					score += 10000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().StartsWith(compareString.ToLower())) {  					score += 11000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.EndsWith(compareString)) {  					score += 12000;  					continue;  				}  				if (signature.ToLower().EndsWith(compareString.ToLower())) {  					score += 13000;  					continue;  				}  				if (signature.Contains(compareString)) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}  				if (signature.ToLower().Contains(compareString.ToLower())) {  					score += 14000 + (signature.Length - signature.IndexOf(compareString));  					continue;  				}    				if (filename.Contains(compareString)) {  					score += 14000 + (filename.Length - filename.IndexOf(compareString));  					continue;  				}  				score += 100000;  			}
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,TcpServer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\TcpServer.cs,AcceptCallback,The following statement contains a magic number: if (_nextClientCleanup < DateTime.Now) {                  var cleanupThread = new Thread(cleanupClients);                  cleanupThread.Start();                  _nextClientCleanup = DateTime.Now.AddSeconds(10);              }
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,Connect,The following statement contains a magic number: if (retryCount >= 5)                  return;
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,SendAndWait,The following statement contains a magic number: while (IsSending && DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)                  Thread.Sleep(10);
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,SendAndWait,The following statement contains a magic number: while (IsSending && DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)                  Thread.Sleep(10);
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,Request,The following statement contains a magic number: while (DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)  			{  				if (recieved != null)  					break;                  Thread.Sleep(10);  			}
Magic Number,OpenIDE.CodeEngine.Core.Endpoints.Tcp,SocketClient,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Endpoints\Tcp\SocketClient.cs,Request,The following statement contains a magic number: while (DateTime.Now.Subtract(timeout).TotalMilliseconds < 8000)  			{  				if (recieved != null)  					break;                  Thread.Sleep(10);  			}
Magic Number,OpenIDE.CodeEngine.Core.EditorEngine,Editor,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\EditorEngine\EditorEngineLocator.cs,isConnected,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,OpenIDE.CodeEngine.Core.EditorEngine,Instance,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\EditorEngine\Instance.cs,Get,The following statement contains a magic number: if (lines.Length != 2)  				return null;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,LanguageCommandHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\LanguageCommandHandler.cs,Handle,The following statement contains a magic number: if (message.Arguments.Count < 2)                  return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length < 3)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: if (lines.Length < 3)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: for (int i = 2; i < lines.Length; i++)  				snippet.AppendLine(lines[i]);
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length == 4)  				indentation = arguments[3].Replace("t"' "\t").Replace("s"' " ");
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length == 4)  				indentation = arguments[3].Replace("t"' "\t").Replace("s"' " ");
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CompleteSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CompleteSnippetHandler.cs,Handle,The following statement contains a magic number: form.OnRun((content) =>  				{  					try {  						var sb = new StringBuilder();  						var contentLines = content.Split(new[] { Environment.NewLine }' StringSplitOptions.None);  						for (int i = 0; i < contentLines.Length; i++)  						{  							var contentLine  = contentLines[i];  							if (i == 0)  							{  								sb.AppendLine(contentLine);  								lastLineLength = contentLine.Length;  								lineCount++;  							}  							else if (i == contentLines.Length - 1 && contentLine == "")  								break;  							else if (i == contentLines.Length - 1)  							{  								sb.Append(indentation + contentLine);  								lastLineLength = indentation.Length + contentLine.Length;  								lineCount++;  							}  							else  							{  								sb.AppendLine(indentation + contentLine);  								lastLineLength = indentation.Length + contentLine.Length;  								lineCount++;  							}  						}    						form = null;  						var tempFile = FS.GetTempFileName();  						File.WriteAllText(tempFile' sb.ToString());  						var offset = new OpenIDE.Core.CommandBuilding.Position(offsetLine);  						if (offset.Line == -1 && offset.Column == -1)  							offset = new OpenIDE.Core.CommandBuilding.Position(lineCount - 1' lastLineLength);  						else  							offset.AddToColumn(indentation.Length);  			            var insertMessage = "insert \"" + tempFile + "\" \"" +  arguments[2] + "\" \"" + offset.ToCommand() + "\"";  			            if (_editor != null)  							_editor.Send(insertMessage);  					} catch (Exception ex) {  						Logger.Write(ex);  					}  				});
Magic Number,OpenIDE.CodeEngine.Core.Handlers,CreateSnippetHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\CreateSnippetHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length < 2)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,FindTypeHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\FindTypeHandler.cs,Handle,The following statement contains a magic number: if (message.Arguments.Count > 2 || message.Arguments.Count == 0)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,FindTypeHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\FindTypeHandler.cs,Handle,The following statement contains a magic number: if (message.Arguments.Count == 2) {  				Logger.Write("arg is " + message.Arguments[1]);  				int limitParam;  				if (!int.TryParse(message.Arguments[1]' out limitParam))  					return;  				if (limitParam <= 0)  					return;  				limit = limitParam;  			}
Magic Number,OpenIDE.CodeEngine.Core.Handlers,SnippetEditHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\SnippetEditHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length < 2)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,SnippetDeleteHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\SnippetDeleteHandler.cs,Handle,The following statement contains a magic number: if (arguments.Length < 2)  				return;
Magic Number,OpenIDE.CodeEngine.Core.Handlers,WriteOutputHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\WriteOutputHandler.cs,Handle,The following statement contains a magic number: if (message.Arguments.Count != 2)                  return;
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(5' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(5' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(347' 20);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(347' 20);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFiles.Location = new System.Drawing.Point(5' 31);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFiles.Location = new System.Drawing.Point(5' 31);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFiles.Size = new System.Drawing.Size(347' 422);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.treeViewFiles.Size = new System.Drawing.Size(347' 422);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStripRightClick.Size = new System.Drawing.Size(153' 48);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStripRightClick.Size = new System.Drawing.Size(153' 48);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName(2' "Document-Blank-icon.png");
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName(3' "file-icon.png");
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName(4' "Files-Font-icon.png");
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName(5' "documents-icon.png");
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(2' 458);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(2' 458);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(331' 16);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(331' 16);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.TabIndex = 2;
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.runCommandToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.runCommandToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(357' 476);
Magic Number,OpenIDE.CodeEngine.Core.UI,FileExplorer,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(357' 476);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,continuousSearch,The following statement contains a magic number: while (_runSearch) {                  if (_lastKeypress.AddMilliseconds(400) > DateTime.Now || _searchTerms.Count == 0) {                      System.Threading.Thread.Sleep(50);                      continue;                  }                  var searchText = "";                  while (_searchTerms.Count > 0) {                      searchText = _searchTerms.Dequeue();                  }                  try                  {                      var items = _cache.Find(searchText).Take(30).ToList();                      if (items.Count > 30)                          items = items.GetRange(0' 30);                      _syncContext.Post(nothing => informationList.Items.Clear()' null);                      foreach (var item in items) {                          _syncContext.Post(itm => addItem((ICodeReference)itm)' item);                      }                      _syncContext.Post(nothing => {                          if (informationList.Items.Count > 0)                              informationList.Items[0].Selected = true;                          informationList.Refresh();                      }' items);                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex.ToString());                  }              }
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,continuousSearch,The following statement contains a magic number: while (_runSearch) {                  if (_lastKeypress.AddMilliseconds(400) > DateTime.Now || _searchTerms.Count == 0) {                      System.Threading.Thread.Sleep(50);                      continue;                  }                  var searchText = "";                  while (_searchTerms.Count > 0) {                      searchText = _searchTerms.Dequeue();                  }                  try                  {                      var items = _cache.Find(searchText).Take(30).ToList();                      if (items.Count > 30)                          items = items.GetRange(0' 30);                      _syncContext.Post(nothing => informationList.Items.Clear()' null);                      foreach (var item in items) {                          _syncContext.Post(itm => addItem((ICodeReference)itm)' item);                      }                      _syncContext.Post(nothing => {                          if (informationList.Items.Count > 0)                              informationList.Items[0].Selected = true;                          informationList.Refresh();                      }' items);                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex.ToString());                  }              }
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,continuousSearch,The following statement contains a magic number: while (_runSearch) {                  if (_lastKeypress.AddMilliseconds(400) > DateTime.Now || _searchTerms.Count == 0) {                      System.Threading.Thread.Sleep(50);                      continue;                  }                  var searchText = "";                  while (_searchTerms.Count > 0) {                      searchText = _searchTerms.Dequeue();                  }                  try                  {                      var items = _cache.Find(searchText).Take(30).ToList();                      if (items.Count > 30)                          items = items.GetRange(0' 30);                      _syncContext.Post(nothing => informationList.Items.Clear()' null);                      foreach (var item in items) {                          _syncContext.Post(itm => addItem((ICodeReference)itm)' item);                      }                      _syncContext.Post(nothing => {                          if (informationList.Items.Count > 0)                              informationList.Items[0].Selected = true;                          informationList.Refresh();                      }' items);                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex.ToString());                  }              }
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,continuousSearch,The following statement contains a magic number: while (_runSearch) {                  if (_lastKeypress.AddMilliseconds(400) > DateTime.Now || _searchTerms.Count == 0) {                      System.Threading.Thread.Sleep(50);                      continue;                  }                  var searchText = "";                  while (_searchTerms.Count > 0) {                      searchText = _searchTerms.Dequeue();                  }                  try                  {                      var items = _cache.Find(searchText).Take(30).ToList();                      if (items.Count > 30)                          items = items.GetRange(0' 30);                      _syncContext.Post(nothing => informationList.Items.Clear()' null);                      foreach (var item in items) {                          _syncContext.Post(itm => addItem((ICodeReference)itm)' item);                      }                      _syncContext.Post(nothing => {                          if (informationList.Items.Count > 0)                              informationList.Items[0].Selected = true;                          informationList.Refresh();                      }' items);                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex.ToString());                  }              }
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,continuousSearch,The following statement contains a magic number: while (_runSearch) {                  if (_lastKeypress.AddMilliseconds(400) > DateTime.Now || _searchTerms.Count == 0) {                      System.Threading.Thread.Sleep(50);                      continue;                  }                  var searchText = "";                  while (_searchTerms.Count > 0) {                      searchText = _searchTerms.Dequeue();                  }                  try                  {                      var items = _cache.Find(searchText).Take(30).ToList();                      if (items.Count > 30)                          items = items.GetRange(0' 30);                      _syncContext.Post(nothing => informationList.Items.Clear()' null);                      foreach (var item in items) {                          _syncContext.Post(itm => addItem((ICodeReference)itm)' item);                      }                      _syncContext.Post(nothing => {                          if (informationList.Items.Count > 0)                              informationList.Items[0].Selected = true;                          informationList.Refresh();                      }' items);                  }                  catch (Exception ex)                  {                      Console.WriteLine(ex.ToString());                  }              }
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(12' 2);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(12' 2);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(770' 21);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(770' 21);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.TabIndex = 3;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(770' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(770' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 57);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 57);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)  				this.informationList.Size = new System.Drawing.Size(770' 291);  			else              	this.informationList.Size = new System.Drawing.Size(770' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)  				this.informationList.Size = new System.Drawing.Size(770' 291);  			else              	this.informationList.Size = new System.Drawing.Size(770' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)  				this.informationList.Size = new System.Drawing.Size(770' 291);  			else              	this.informationList.Size = new System.Drawing.Size(770' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)  				this.informationList.Size = new System.Drawing.Size(770' 291);  			else              	this.informationList.Size = new System.Drawing.Size(770' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.TabIndex = 2;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader1.Width = 70;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader2.Width = 70;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader3.Width = 270;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader4.Width = 465;
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(794' 362);
Magic Number,OpenIDE.CodeEngine.Core.UI,TypeSearchForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\TypeSearchForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(794' 362);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  labelComment.Location = new System.Drawing.Point(12' 360);              else                  labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  labelComment.Location = new System.Drawing.Point(12' 360);              else                  labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  labelComment.Location = new System.Drawing.Point(12' 360);              else                  labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  labelComment.Location = new System.Drawing.Point(12' 360);              else                  labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  informationList.Size = new System.Drawing.Size(526' 291);              else                  informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  informationList.Size = new System.Drawing.Size(526' 291);              else                  informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  informationList.Size = new System.Drawing.Size(526' 291);              else                  informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,initControls,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  informationList.Size = new System.Drawing.Size(526' 291);              else                  informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(543' 2);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Location = new System.Drawing.Point(543' 2);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(526' 21);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.Size = new System.Drawing.Size(526' 21);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelInfo.TabIndex = 3;
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(526' 20);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(526' 20);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 57);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 57);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.Size = new System.Drawing.Size(526' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.informationList.TabIndex = 2;
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader1.Width = 515;
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelComment.Location = new System.Drawing.Point(12' 373);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelComment.Size = new System.Drawing.Size(526' 98);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelComment.Size = new System.Drawing.Size(526' 98);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.labelComment.TabIndex = 4;
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(550' 480);
Magic Number,OpenIDE.CodeEngine.Core.UI,MemberLookupForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\MemberLookupForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(550' 480);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,populateList,The following statement contains a magic number: foreach (var item in items) {                  var listItem = informationList.Items.Add(item.Value);                  listItem.Tag = item.Key;                  populatedCount++;                  if (populatedCount > 50)                      break;              }
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.textBoxSearch.Location = new System.Drawing.Point(12' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(300' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.textBoxSearch.Size = new System.Drawing.Size(300' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.informationList.Location = new System.Drawing.Point(12' 25);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  this.informationList.Size = new System.Drawing.Size(300' 320);              else                  this.informationList.Size = new System.Drawing.Size(300' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  this.informationList.Size = new System.Drawing.Size(300' 320);              else                  this.informationList.Size = new System.Drawing.Size(300' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  this.informationList.Size = new System.Drawing.Size(300' 320);              else                  this.informationList.Size = new System.Drawing.Size(300' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix)                  this.informationList.Size = new System.Drawing.Size(300' 320);              else                  this.informationList.Size = new System.Drawing.Size(300' 304);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.informationList.TabIndex = 2;
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.columnHeader1.Width = 320;
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(324' 362);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserSelectForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserSelectForm.cs,initialize,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(324' 362);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.textBox.Location = new System.Drawing.Point(12' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.textBox.Location = new System.Drawing.Point(12' 5);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.textBox.Size = new System.Drawing.Size(300' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.textBox.Size = new System.Drawing.Size(300' 45);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(324' 55);
Magic Number,OpenIDE.CodeEngine.Core.UI,UserInputForm,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\UserInputForm.cs,initialize,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(324' 55);
Magic Number,OpenIDE.CodeEngine.Core.ChangeTrackers,FileChangeTracker,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\ChangeTrackers\FileChangeTracker.cs,startChangeHandler,The following statement contains a magic number: while (true)  			{  				Thread.Sleep(300);  				_changeHandler.Invoke(_buffer);  			}
Magic Number,OpenIDE.CodeEngine.Core.UI.FileExplorerHelpers,CacheSearchHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorerHelpers\CacheSearchHandler.cs,addNode,The following statement contains a magic number: if (result.Type == FileFindResultType.File)                  image = 4;
Magic Number,OpenIDE.CodeEngine.Core.UI.FileExplorerHelpers,CacheSearchHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\UI\FileExplorerHelpers\CacheSearchHandler.cs,addNode,The following statement contains a magic number: if (result.Type == FileFindResultType.Project)                  image = 5;
Magic Number,OpenIDE.CodeEngine.Core.ReactiveScripts,ScriptTouchHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\ReactiveScripts\ScriptTouchHandler.cs,GetPath,The following statement contains a magic number: var start = message.LastIndexOf("'"' message.Length - 2) + 1;
Missing Default,OpenIDE.CodeEngine.Core.Handlers,GetTokenPathHandler,C:\repos\continuoustests_OpenIDE\OpenIDE.CodeEngine.Core\Handlers\GetTokenPathHandler.cs,Handle,The following switch statement is missing a default case: switch (message.Command) {                       case "get-token-path":                          response = tokenPath;                          break;                      case "get-token-endpoint":                          var instance = (new CodeEngineDispatcher(new FS())).GetInstances().FirstOrDefault(x => matchPath(tokenPath' x.Key));                          if (instance != null)                              response = string.Format("127.0.0.1:{0}"' instance.Port);                          break;                      case "get-token-event-endpoint":                          var events = (new OpenIDE.Core.EventEndpointIntegrarion.EventClient(tokenPath)).GetInstance();                          if (events != null)                              response = string.Format("127.0.0.1:{0}"' events.Port);                          break;                      case "get-token-output-endpoint":                          var output = (new OpenIDE.Core.OutputEndpointIntegration.OutputClient(tokenPath)).GetInstance();                          if (output != null)                              response = string.Format("127.0.0.1:{0}"' output.Port);                          break;                      case "get-token-editor-endpoint":                          var editor = (new OpenIDE.Core.EditorEngineIntegration.EngineLocator(new FS()))                              .GetInstances()                              .FirstOrDefault(x => x.Key == tokenPath);                          if (editor != null)                              response = string.Format("127.0.0.1:{0}"' editor.Port);                          break;                  }
