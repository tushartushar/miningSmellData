Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DejaVu,Command,C:\repos\EmbraceUnity_DejaVu\Dejavu\Command.cs,Dispose,The length of the statement  "				throw new InvalidOperationException ("Command '" + _parentArea.CurrentCommand.Caption + "' was not commited/canceled within parent command '" + Caption + "'."); " is 160.
Long Statement,DejaVu,UndoRedoArea,C:\repos\EmbraceUnity_DejaVu\Dejavu\UndoRedoArea.cs,AssertNoCommand,The length of the statement  "		throw new InvalidOperationException ("Previous command is not completed. Use UndoRedoManager.Commit() to complete current command."); " is 133.
Long Statement,DejaVu,UndoRedoArea,C:\repos\EmbraceUnity_DejaVu\Dejavu\UndoRedoArea.cs,AssertCommand,The length of the statement  "		throw new InvalidOperationException ("Command is not started. Use methods UndoRedoManager.Start() or UndoRedoArea.Start() before changing any data."); " is 150.
Long Statement,DejaVu.Collections.Generic,ObservableUndoRedoList,C:\repos\EmbraceUnity_DejaVu\Dejavu\Collections\Generic\ObservableUndoRedoList.cs,OnChanged,The length of the statement  "	UndoRedoMemberExtender.OnChanged (this' type' new ReadOnlyCollection<T> ((IList<T>)change.NewObject)' new ReadOnlyCollection<T> ((IList<T>)change.OldObject)); " is 158.
Long Statement,DejaVu.Collections.Generic,UndoRedoDictionary,C:\repos\EmbraceUnity_DejaVu\Dejavu\Collections\Generic\UndoRedoDictionary.cs,OnChanged,The length of the statement  "	UndoRedoMemberExtender.OnChanged (this' type' ((ChangesList)change).NewState.Count' ((ChangesList)change).OldState.Count); " is 122.
Long Statement,DejaVu.Collections.Generic,UndoRedoList,C:\repos\EmbraceUnity_DejaVu\Dejavu\Collections\Generic\UndoRedoList.cs,OnChanged,The length of the statement  "	UndoRedoMemberExtender.OnChanged (this' type' new ReadOnlyCollection<T> ((IList<T>)change.NewObject)' new ReadOnlyCollection<T> ((IList<T>)change.OldObject)); " is 158.
Complex Conditional,DejaVu,UndoRedoArea,C:\repos\EmbraceUnity_DejaVu\Dejavu\UndoRedoArea.cs,Start,The conditional expression  "owner == this._affinityOwner && // owners are equal  owner != null && // owners are not null  _currentPosition >= 0 && // history has a command to check affinity  _history [_currentPosition].Caption == commandCaption"  is complex.
