Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,GotContext,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Handshake,Cyclomatic complexity of the method is 8
Long Parameter List,MonoTorrent.Client,ExceptionWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,ExceptionWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,PieceWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,PieceWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,TestWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,TestWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,TestRig,The method has 5 parameters. Parameters: savePath' piecelength' writer' trackers' files
Long Parameter List,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,TestRig,The method has 6 parameters. Parameters: savePath' piecelength' writer' trackers' files' metadataMode
Long Parameter List,MonoTorrent.Client.PiecePicking,TestPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PieceWriters,NullWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NullWriter.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,NullWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NullWriter.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadPastTheEnd,The length of the statement  "            Assert.ThrowsAsync<ArgumentOutOfRangeException> (() => diskManager.ReadAsync (fileData' Piece.BlockSize * 1000' buffer' buffer.Length).AsTask ()' "#1"); " is 152.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadPieceTwo,The length of the statement  "            Assert.IsTrue (Toolbox.ByteMatch (buffer' data1.Length - data0.Length' data2' 0' Piece.BlockSize - (data1.Length - data0.Length))' "#3"); " is 137.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteBlock_SpanTwoFiles,The length of the statement  "            Assert.IsTrue (Toolbox.ByteMatch (fileData.Data [1]' fileData.Data[0].Length' buffer' 0' Piece.BlockSize - fileData.Data[1].Length)' "#3"); " is 139.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The length of the statement  "            var blocks = fileData.Data.SelectMany (t => t).Partition (Piece.BlockSize).Take (fileData.PieceLength / Piece.BlockSize).ToArray (); " is 132.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_InOrder,The length of the statement  "            var blocks = fileData.Data.SelectMany (t => t).Partition (Piece.BlockSize).Take (fileData.PieceLength / Piece.BlockSize).ToArray (); " is 132.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_LastTwoSwapped,The length of the statement  "            var blocks = fileData.Data.SelectMany (t => t).Partition (Piece.BlockSize).Take (fileData.PieceLength / Piece.BlockSize).ToArray (); " is 132.
Long Statement,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The length of the statement  "            var blocks = fileData.Data.SelectMany (t => t).Partition (Piece.BlockSize).Take (fileData.PieceLength / Piece.BlockSize).ToArray (); " is 132.
Long Statement,MonoTorrent.Client,FileManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FileManager.cs,GenerateTestFiles,The length of the statement  "            string data = "this is my teststring. It's not really that long' but i'll be writing a lot more where this come from\r\n"; " is 122.
Long Statement,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The length of the statement  "            List<PeerId> peers = new List<PeerId>(new PeerId[] { rig.CreatePeer(true)' rig.CreatePeer(true)' rig.CreatePeer(true) }); " is 121.
Long Statement,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The length of the statement  "            PeerId a = new PeerId(new Peer(new string('a'' 20)' new Uri("ipv4://127.0.0.5:5353"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false)); " is 159.
Long Statement,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The length of the statement  "            PeerId b = new PeerId(new Peer(new string('b'' 20)' new Uri("ipv4://127.0.0.5:5354"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false)); " is 159.
Long Statement,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The length of the statement  "            PeerId c = new PeerId(new Peer(new string('c'' 20)' new Uri("ipv4://127.0.0.5:5355"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false)); " is 159.
Long Statement,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The length of the statement  "            PeerId d = new PeerId(new Peer(new string('d'' 20)' new Uri("ipv4://127.0.0.5:5356"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false)); " is 159.
Long Statement,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,LargeMessageBodyLength,The length of the statement  "            Assert.ThrowsAsync<ConnectionClosedException> (async () => await PeerIO.ReceiveMessageAsync (pair.Outgoing' PlainTextEncryption.Instance)' "#2"); " is 145.
Long Statement,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,NegativeMessageBodyLength,The length of the statement  "            Assert.ThrowsAsync<ConnectionClosedException> (async () => await PeerIO.ReceiveMessageAsync (pair.Outgoing' PlainTextEncryption.Instance)' "#2"); " is 145.
Long Statement,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CompleteChunkBeforeRequestNext,The length of the statement  "                rig.Manager.PieceManager.PieceDataReceived (id' new PieceMessage (messages[i].PieceIndex' messages[i].StartOffset' messages[i].RequestLength)); " is 143.
Long Statement,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CompleteChunkBeforeRequestNext,The length of the statement  "            rig.Manager.PieceManager.PieceDataReceived (id' new PieceMessage (messages.Last ().PieceIndex' messages.Last ().StartOffset' messages.Last ().RequestLength)); " is 158.
Long Statement,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,SingleFileTorrent,The length of the statement  "            id = new PeerId(new Peer("this is my id"' connection.Uri)' id.Connection' rig.Manager.Bitfield?.Clone ().SetAll (false)); " is 121.
Long Statement,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The length of the statement  "            AnnounceResponseMessage d = (AnnounceResponseMessage)UdpTrackerMessage.DecodeMessage(m.Encode()' 0' m.ByteLength' MessageType.Response); " is 136.
Long Statement,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ConnectResponseTest,The length of the statement  "            ConnectResponseMessage d = (ConnectResponseMessage)UdpTrackerMessage.DecodeMessage(m.Encode()' 0' m.ByteLength' MessageType.Response); " is 134.
Long Statement,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The length of the statement  "            ScrapeResponseMessage d = (ScrapeResponseMessage)UdpTrackerMessage.DecodeMessage(m.Encode()' 0' m.ByteLength' MessageType.Response); " is 132.
Long Statement,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest_GetPeers,The length of the statement  "            var endpoints = peers.Select (t => new IPEndPoint (IPAddress.Parse (t.ConnectionUri.Host)' t.ConnectionUri.Port)).ToArray (); " is 125.
Long Statement,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Handshake,The length of the statement  "            var incomingTask = EncryptorFactory.CheckIncomingConnectionAsync (Incoming' incomingEncryption' new EngineSettings ()' SKeys); " is 126.
Long Statement,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Handshake,The length of the statement  "            var outgoingTask = EncryptorFactory.CheckOutgoingConnectionAsync (Outgoing' outgoingEncryption' new EngineSettings ()' InfoHash' appendInitialPayload ? handshakeOut : null); " is 173.
Long Statement,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,CancelAllPendingWhenPieceReceived,The length of the statement  "            Assert.IsFalse (picker.ValidatePiece (other' otherRequest.PieceIndex' otherRequest.StartOffset' otherRequest.RequestLength' out piece)' "#1"); " is 142.
Long Statement,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,HashFail,The length of the statement  "                Assert.IsTrue(picker.ValidatePiece(id' message.PieceIndex' message.StartOffset' message.RequestLength' out Piece piece)); " is 121.
Long Statement,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,SmallTorrent_InitializeSwitcher_NoExisting,The length of the statement  "            Assert.IsNotNull (Standard.PickPiece (SmallTorrent.Seeder' SmallTorrent.Seeder.BitField' Array.Empty<IPieceRequester>())' "#4"); " is 128.
Long Statement,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,SmallTorrent_InitializeSwitcher_NoExisting,The length of the statement  "            Assert.IsNotNull (Endgame.PickPiece  (SmallTorrent.Seeder' SmallTorrent.Seeder.BitField' Array.Empty<IPieceRequester>())' "#5"); " is 128.
Long Statement,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,ReceiveAllPieces_PieceUnhashed,The length of the statement  "                if (requests.Any (t => t.PieceIndex == p.PieceIndex && t.RequestLength == p.RequestLength && t.StartOffset == p.StartOffset)) " is 125.
Long Statement,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestEntireFastPiece,The length of the statement  "                Assert.AreEqual (2' pieceRequests.Count (t => t.StartOffset == i * Piece.BlockSize && t.RequestLength == Piece.BlockSize)' "#2." + i); " is 134.
Long Statement,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,CompletePartialTest,The length of the statement  "            Assert.IsTrue(picker.ValidatePiece(peer' message.PieceIndex' message.StartOffset' message.RequestLength' out piece)' "#1"); " is 123.
Long Statement,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,CompletePartialTest,The length of the statement  "                Assert.IsTrue(picker.ValidatePiece(peer' message.PieceIndex' message.StartOffset' message.RequestLength' out p)' "#2." + i); " is 124.
Long Statement,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The length of the statement  "            await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 100' TorrentEvent.Started' infoHash' false' "peer1"' null' 1' false)); " is 128.
Long Statement,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The length of the statement  "            await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 0' TorrentEvent.Started' infoHash' false' "peer2"' null' 2' false)); " is 126.
Long Statement,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The length of the statement  "            await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 0' TorrentEvent.Completed' infoHash' false' "peer3"' null' 3' false)); " is 128.
Long Statement,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest,The length of the statement  "            Assert.IsTrue(m.Supports.Exists(delegate(ExtensionSupport s) { return s.Name.Equals(PeerExchangeMessage.Support.Name); })' "#2"); " is 129.
Long Statement,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest,The length of the statement  "            Assert.IsTrue(m.Supports.Exists(delegate(ExtensionSupport s) { return s.Name.Equals(LTMetadata.Support.Name); })' "#4"); " is 120.
Long Statement,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest_Private,The length of the statement  "            Assert.IsFalse(m.Supports.Exists(delegate(ExtensionSupport s) { return s.Name.Equals(PeerExchangeMessage.Support.Name); })' "#2"); " is 130.
Long Statement,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest_Private,The length of the statement  "            Assert.IsTrue(m.Supports.Exists(delegate(ExtensionSupport s) { return s.Name.Equals(LTMetadata.Support.Name); })' "#4"); " is 120.
Long Statement,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeDecodeTest,The length of the statement  "            m.Supports.ForEach(delegate(ExtensionSupport s) { Assert.IsTrue(decoded.Supports.Contains(s)' "#6:" + s.ToString()); }); " is 120.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitfieldCorrupt,The length of the statement  "                bool[] data = { true' false' false' true' false' true' false' true' false' true' false' true' false' false' false' true }; " is 122.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The length of the statement  "            int length = new HandshakeMessage(new InfoHash (infohash)' "12312312345645645678"' VersionInfo.ProtocolStringV100' false' false).Encode(buffer' offset); " is 152.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The length of the statement  "            length = new HandshakeMessage(new InfoHash (infohash)' "12312312345645645678"' VersionInfo.ProtocolStringV100' true' false).Encode(buffer' offset); " is 147.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The length of the statement  "            Assert.AreEqual(BitConverter.ToString(buffer' offset' length)' "13-42-69-74-54-6F-72-72-65-6E-74-20-70-72-6F-74-6F-63-6F-6C-00-00-00-00-00-00-00-04-01-02-03-04-05-06-07-08-09-0A-0B-0C-0D-0E-0F-00-0C-0F-0C-34-31-32-33-31-32-33-31-32-33-34-35-36-34-35-36-34-35-36-37-38"' "#7"); " is 276.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The length of the statement  "            HandshakeMessage orig = new HandshakeMessage(new InfoHash (infohash)' "12312312345645645678"' VersionInfo.ProtocolStringV100); " is 126.
Long Statement,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,EncodeDecode,The length of the statement  "            Assert.IsTrue(Toolbox.ByteMatch(orig.Encode()' PeerMessage.DecodeMessage(orig.Encode()' 0' orig.ByteLength' torrentData).Encode())); " is 132.
Long Statement,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,ToByteArray2,The length of the statement  "            BitField first = new BitField(new bool[] { true' false' true' false' true' false' true' true' true' false' false' true }); " is 122.
Long Statement,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,ToByteArray3,The length of the statement  "            BitField first = new BitField(new bool[] { true' false' true' false' true' false' true' true' true' false' false' true' false }); " is 129.
Long Statement,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,TrackersTest,The length of the statement  "            MagnetLink other = MagnetLink.Parse ($"magnet:?tr=http://example.com/announce&tr.2=http://example.com/announce2&xt=urn:btih:{Create ().ToHex ()}"); " is 147.
Long Statement,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The length of the statement  "                { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }' " is 122.
Long Statement,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,ED2K,The length of the statement  "            Assert.IsTrue(Toolbox.ByteMatch(torrent.ED2K' sha.ComputeHash(System.Text.Encoding.UTF8.GetBytes("ed2k isn't a sha' but who cares")))); " is 135.
Long Statement,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,SHA1,The length of the statement  "            Assert.IsTrue(Toolbox.ByteMatch(torrent.SHA1' sha.ComputeHash(System.Text.Encoding.UTF8.GetBytes("this is a sha1 hash string")))); " is 130.
Long Statement,MonoTorrent.Dht,ClosestNodesCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\ClosestNodesCollectionTests.cs,CloserNodes,The length of the statement  "                farNodes.Add   (new Node (new NodeId (value << (i + Bucket.MaxCapacity))' new IPEndPoint (IPAddress.Any' i + Bucket.MaxCapacity))); " is 131.
Long Statement,MonoTorrent.Dht,MessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageTests.cs,AnnouncePeerEncode,The length of the statement  "            Compare(m' "d1:ad2:id20:abcdefghij01234567899:info_hash20:mnopqrstuvwxyz1234564:porti6881e5:token8:aoeusnthe1:q13:announce_peer1:t2:aa1:y1:qe"); " is 144.
Long Statement,MonoTorrent.Dht,MessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageTests.cs,AnnouncePeerDecode,The length of the statement  "            string text = "d1:ad2:id20:abcdefghij01234567899:info_hash20:mnopqrstuvwxyz1234564:porti6881e5:token8:aoeusnthe1:q13:announce_peer1:t2:aa1:y1:qe"; " is 146.
Long Statement,MonoTorrent.Dht,MessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageTests.cs,AnnouncePeerDecode,The length of the statement  "            AnnouncePeer m = (AnnouncePeer)Decode("d1:ad2:id20:abcdefghij01234567899:info_hash20:mnopqrstuvwxyz1234564:porti6881e5:token8:aoeusnthe1:q13:announce_peer1:t2:aa1:y1:qe"); " is 171.
Long Statement,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The length of the statement  "            byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 }; " is 124.
Long Statement,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The length of the statement  "            Peer = new PeerId (new Peer (""' new Uri ("ipv4://123.123.123.123:12345")' EncryptionTypes.All)' conn.Outgoing' Manager.Bitfield?.Clone ().SetAll (false)) { " is 156.
Long Statement,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_Tracker_Private,The length of the statement  "            TrackerManager.RaiseAnnounceComplete (TrackerManager.CurrentTracker' true' new [] { new Peer ("One"' new Uri ("ipv4://1.1.1.1:1111"))' new Peer ("Two"' new Uri ("ipv4://2.2.2.2:2222")) }); " is 188.
Long Statement,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AnnounceWhenComplete,The length of the statement  "            Manager.LoadFastResume (new FastResume (Manager.InfoHash' Manager.Bitfield.Clone ().SetAll (true)' Manager.Bitfield.Clone ().SetAll (false))); " is 142.
Long Statement,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The length of the statement  "            Peer = new PeerId (new Peer (""' new Uri ("ipv4://123.123.123.123:12345")' EncryptionTypes.All)' conn.Outgoing' Manager.Bitfield?.Clone ().SetAll (true)) { " is 155.
Long Statement,MonoTorrent.Client.Modes,InitialSeedingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\InitialSeedingModeTest.cs,Setup,The length of the statement  "            Rig.Manager.Mode = new InitialSeedingMode(Rig.Manager' Rig.Engine.DiskManager' Rig.Engine.ConnectionManager' Rig.Engine.Settings); " is 130.
Long Statement,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,Setup,The length of the statement  "            var result = await EncryptorFactory.CheckIncomingConnectionAsync(id.Connection' id.Peer.AllowedEncryption' rig.Engine.Settings' new InfoHash[] { rig.Manager.InfoHash }); " is 169.
Long Statement,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The length of the statement  "            var sendHandshake = new HandshakeMessage(rig.Manager.Torrent.InfoHash' new string('g'' 20)' VersionInfo.ProtocolStringV100' true' true); " is 136.
Long Statement,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The length of the statement  "                await PeerIO.SendMessageAsync(connection' encryptor' new LTMetadata(LTMetadata.Support.MessageId' LTMetadata.eMessageType.Request' i' null)); " is 141.
Long Statement,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadata_ToFolder,The length of the statement  "            await SendMetadataCore(Path.Combine(AppDomain.CurrentDomain.BaseDirectory' rig.Torrent.InfoHash.ToHex () + ".torrent")); " is 120.
Long Statement,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The length of the statement  "            var sendHandshake = new HandshakeMessage(rig.Manager.InfoHash' new string('g'' 20)' VersionInfo.ProtocolStringV100' true' true); " is 128.
Long Statement,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The length of the statement  "            Peer = new PeerId (new Peer (""' new Uri ("ipv4://123.123.123.123:12345")' EncryptionTypes.All)' conn.Outgoing' Manager.Bitfield?.Clone ().SetAll (false)) { " is 156.
Long Statement,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The length of the statement  "            Peer = new PeerId (new Peer (""' new Uri ("ipv4://123.123.123.123:5555")' EncryptionTypes.All)' conn.Outgoing' Manager.Bitfield?.Clone ().SetAll (false)) { " is 155.
Long Statement,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,CheckPeersAdded,The length of the statement  "            List<PeerDetails>[] lists = { new List<PeerDetails>()' new List<PeerDetails>()' new List<PeerDetails>()' new List<PeerDetails>() }; " is 131.
Complex Conditional,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,Xor,The conditional expression  "(initalValues[i] || secondValues[i]) && !(initalValues[i] && secondValues[i])"  is complex.
Complex Conditional,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The conditional expression  "(endpoint.Port == 3 && nodeCount == 0) ||                       (endpoint.Port == 1 && nodeCount == 1) ||                       (endpoint.Port == 5 && nodeCount == 2)"  is complex.
Empty Catch Block,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,GotContext,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,GotContext,The method has an empty catch block.
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,AddPeers_Dht,The following statement contains a magic number: var result = await tcs.Task.WithTimeout (TimeSpan.FromSeconds (5));
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,AddPeers_Dht_Private,The following statement contains a magic number: var result = await tcs.Task.WithTimeout (TimeSpan.FromSeconds (5));
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,AddPeers_LocalPeerDiscovery,The following statement contains a magic number: var result = await tcs.Task.WithTimeout (TimeSpan.FromSeconds (5));
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,AddPeers_LocalPeerDiscovery_Private,The following statement contains a magic number: var result = await tcs.Task.WithTimeout (TimeSpan.FromSeconds (5));
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,StopTest,The following statement contains a magic number: Assert.IsTrue(hashingState.Wait(5000)' "Started");
Magic Number,MonoTorrent.Client,ClientEngineTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ClientEngineTests.cs,StopTest,The following statement contains a magic number: Assert.IsTrue(stoppedState.Wait(5000)' "Stopped");
Magic Number,MonoTorrent.Client,ConnectionListenerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ConnectionListenerTests.cs,AcceptTen,The following statement contains a magic number: await Task.WhenAny (Task.Delay (1000)' task) != task
Magic Number,MonoTorrent.Client,ConnectionListenerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\ConnectionListenerTests.cs,AcceptTen,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Client,DiskManagerExceptionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 2 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerExceptionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 2 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerExceptionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 2 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerExceptionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 2 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerExceptionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerExceptionTests.cs,Setup,The following statement contains a magic number: data = new TestTorrentData {                  Files = files'                  Size = files.Sum (f => f.Length)'                  PieceLength = Piece.BlockSize * 2              };
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 6 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 6 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 6 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Setup,The following statement contains a magic number: var files = new [] {                  new TorrentFile ("First"'  Piece.BlockSize / 2)'                  new TorrentFile ("Second"' Piece.BlockSize)'                  new TorrentFile ("Third"'  Piece.BlockSize + Piece.BlockSize / 2)'                  new TorrentFile ("Fourth"' Piece.BlockSize * 6 + Piece.BlockSize / 2)'              };
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,Setup,The following statement contains a magic number: int pieceLength = Piece.BlockSize * 3;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: int count = 6;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: settings.MaximumDiskReadRate = Piece.BlockSize * 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: count -= 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: i < 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: i < 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: count -= 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedReadRate,The following statement contains a magic number: Assert.DoesNotThrowAsync (async () => await v.WithTimeout (1000)' "#6");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: int count = 6;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: settings.MaximumDiskWriteRate = Piece.BlockSize * 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: count -= 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: i < 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: i < 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: count -= 2;
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ExceedWriteRate,The following statement contains a magic number: Assert.DoesNotThrowAsync (async () => await v.WithTimeout (1000)' "#6");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadPastTheEnd,The following statement contains a magic number: Assert.ThrowsAsync<ArgumentOutOfRangeException> (() => diskManager.ReadAsync (fileData' Piece.BlockSize * 1000' buffer' buffer.Length).AsTask ()' "#1");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadPieceTwo,The following statement contains a magic number: var data2 = fileData.Data [2];
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadRate,The following statement contains a magic number: i < SpeedMonitor.DefaultAveragePeriod * 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,ReadRate,The following statement contains a magic number: Assert.IsTrue (Math.Abs (Piece.BlockSize - diskManager.ReadRate) < (Piece.BlockSize * 0.1)' "#1");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteBlock_SpanTwoFiles,The following statement contains a magic number: Assert.AreEqual (2' writer.WrittenData.Count' "#1");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 2' writer.ReadData.Sum (t => t.Item3)' "#2");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_FirstTwoSwapped,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' writer.ReadData.Sum (t => t.Item3)' "#4");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_InOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_InOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_InOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_InOrder,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' writer.ReadData.Sum (t => t.Item3)' "#4");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_LastTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_LastTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_LastTwoSwapped,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_LastTwoSwapped,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' writer.ReadData.Sum (t => t.Item3)' "#4");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The following statement contains a magic number: await diskManager.WriteAsync (fileData' Piece.BlockSize * 2' blocks[2]' blocks[2].Length);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 2' writer.ReadData.Sum (t => t.Item3)' "#2");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WritePiece_ReverseOrder,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' writer.ReadData.Sum (t => t.Item3)' "#4");
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteRate,The following statement contains a magic number: i < SpeedMonitor.DefaultAveragePeriod * 2
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteRate,The following statement contains a magic number: await diskManager.Tick (1000);
Magic Number,MonoTorrent.Client,DiskManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\DiskManagerTests.cs,WriteRate,The following statement contains a magic number: Assert.IsTrue (Math.Abs (Piece.BlockSize - diskManager.WriteRate) < (Piece.BlockSize * 0.1)' "#1");
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,AllHashed_AllDownloaded,The following statement contains a magic number: var unhashedPieces = new  BitField (10).SetAll (false);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,AllHashed_AllDownloaded,The following statement contains a magic number: var downloaded = new  BitField (10).SetAll (true);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,AllHashed_NothingDownloaded,The following statement contains a magic number: var unhashedPieces = new  BitField (10).SetAll (false);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,AllHashed_NothingDownloaded,The following statement contains a magic number: var downloaded = new  BitField (10).SetAll (false);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,NoneHashed_NothingDownloaded,The following statement contains a magic number: var unhashedPieces = new  BitField (10).SetAll (true);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,NoneHashed_NothingDownloaded,The following statement contains a magic number: var downloaded = new  BitField (10).SetAll (false);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,NoneHashed_AllDownloaded,The following statement contains a magic number: var unhashedPieces = new  BitField (10).SetAll (true);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,NoneHashed_AllDownloaded,The following statement contains a magic number: var downloaded = new  BitField (10).SetAll (true);
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV1FastResumeData,The following statement contains a magic number: var v1Data = new BEncodedDictionary {                  { FastResume.VersionKey' (BEncodedNumber)1 }'                  { FastResume.InfoHashKey' new BEncodedString(InfoHash.Hash) }'                  { FastResume.BitfieldKey' new BEncodedString(new BitField (10).SetAll (true).ToByteArray ()) }'                  { FastResume.BitfieldLengthKey' (BEncodedNumber)10 }'              };
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV1FastResumeData,The following statement contains a magic number: var v1Data = new BEncodedDictionary {                  { FastResume.VersionKey' (BEncodedNumber)1 }'                  { FastResume.InfoHashKey' new BEncodedString(InfoHash.Hash) }'                  { FastResume.BitfieldKey' new BEncodedString(new BitField (10).SetAll (true).ToByteArray ()) }'                  { FastResume.BitfieldLengthKey' (BEncodedNumber)10 }'              };
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV2FastResumeData,The following statement contains a magic number: var v1Data = new BEncodedDictionary {                  { FastResume.VersionKey' (BEncodedNumber)1 }'                  { FastResume.InfoHashKey' new BEncodedString(InfoHash.Hash) }'                  { FastResume.BitfieldKey' new BEncodedString(new BitField (10).SetAll (false).Set (0' true).ToByteArray ()) }'                  { FastResume.BitfieldLengthKey' (BEncodedNumber)10 }'                  { FastResume.UnhashedPiecesKey' new BEncodedString (new BitField (10).SetAll (true).Set (0' false).ToByteArray ()) }'              };
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV2FastResumeData,The following statement contains a magic number: var v1Data = new BEncodedDictionary {                  { FastResume.VersionKey' (BEncodedNumber)1 }'                  { FastResume.InfoHashKey' new BEncodedString(InfoHash.Hash) }'                  { FastResume.BitfieldKey' new BEncodedString(new BitField (10).SetAll (false).Set (0' true).ToByteArray ()) }'                  { FastResume.BitfieldLengthKey' (BEncodedNumber)10 }'                  { FastResume.UnhashedPiecesKey' new BEncodedString (new BitField (10).SetAll (true).Set (0' false).ToByteArray ()) }'              };
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV2FastResumeData,The following statement contains a magic number: var v1Data = new BEncodedDictionary {                  { FastResume.VersionKey' (BEncodedNumber)1 }'                  { FastResume.InfoHashKey' new BEncodedString(InfoHash.Hash) }'                  { FastResume.BitfieldKey' new BEncodedString(new BitField (10).SetAll (false).Set (0' true).ToByteArray ()) }'                  { FastResume.BitfieldLengthKey' (BEncodedNumber)10 }'                  { FastResume.UnhashedPiecesKey' new BEncodedString (new BitField (10).SetAll (true).Set (0' false).ToByteArray ()) }'              };
Magic Number,MonoTorrent.Client,FastResumeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FastResumeTests.cs,LoadV2FastResumeData,The following statement contains a magic number: Assert.AreEqual (9' fastResume.UnhashedPieces.TrueCount' "#2");
Magic Number,MonoTorrent.Client,FileManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FileManager.cs,GenerateTestFiles,The following statement contains a magic number: i < 100
Magic Number,MonoTorrent.Client,FileManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\FileManager.cs,GenerateTestFiles,The following statement contains a magic number: i < 5000
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Setup,The following statement contains a magic number: rig.Manager.Settings.UploadSlots = 4;
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise3,The following statement contains a magic number: peer.BitField.SetTrue(1).SetTrue(3).SetTrue(5).SetTrue(7);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise3,The following statement contains a magic number: peer.BitField.SetTrue(1).SetTrue(3).SetTrue(5).SetTrue(7);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise3,The following statement contains a magic number: peer.BitField.SetTrue(1).SetTrue(3).SetTrue(5).SetTrue(7);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise3,The following statement contains a magic number: Assert.AreEqual(i * 2' ((HaveMessage)peer.Dequeue()).PieceIndex' "#3." + i);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[0].BitField.SetTrue(0).SetTrue(7).SetTrue(14);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[0].BitField.SetTrue(0).SetTrue(7).SetTrue(14);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[1].BitField.SetTrue(2).SetTrue(6).SetTrue(10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[1].BitField.SetTrue(2).SetTrue(6).SetTrue(10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[1].BitField.SetTrue(2).SetTrue(6).SetTrue(10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[2].BitField.SetTrue(5).SetTrue(9).SetTrue(12);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[2].BitField.SetTrue(5).SetTrue(9).SetTrue(12);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[2].BitField.SetTrue(5).SetTrue(9).SetTrue(12);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise5,The following statement contains a magic number: peers[2].BitField.SetTrue(5).SetTrue(9).SetTrue(12);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: peer.BitField.SetTrue(0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Advertise6,The following statement contains a magic number: Assert.AreEqual(i + 11' ((HaveMessage)peer.Dequeue()).PieceIndex' "#5." + i);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Choke,The following statement contains a magic number: i < 25
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Choke2,The following statement contains a magic number: Assert.IsTrue(peers[2].AmChoking);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,Choke2,The following statement contains a magic number: Assert.IsTrue(peers[2].AmChoking);
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: PeerId a = new PeerId(new Peer(new string('a'' 20)' new Uri("ipv4://127.0.0.5:5353"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false));
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: PeerId b = new PeerId(new Peer(new string('b'' 20)' new Uri("ipv4://127.0.0.5:5354"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false));
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: PeerId c = new PeerId(new Peer(new string('c'' 20)' new Uri("ipv4://127.0.0.5:5355"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false));
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: PeerId d = new PeerId(new Peer(new string('d'' 20)' new Uri("ipv4://127.0.0.5:5356"))' NullConnection.Incoming' rig.Manager.Bitfield?.Clone ().SetAll (false));
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: Assert.AreEqual(2' unchoker.PeerCount' "#3");
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: Assert.AreEqual(3' unchoker.PeerCount' "#4");
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: Assert.AreEqual(3' unchoker.PeerCount' "#5");
Magic Number,MonoTorrent.Client,InitialSeedUnchokerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\InitialSeedUnchokerTests.cs,ConnectDisconnect,The following statement contains a magic number: Assert.AreEqual(2' unchoker.PeerCount' "#6");
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,TaskTest,The following statement contains a magic number: Assert.AreEqual(5' loop.QueueWait(delegate { return 5; })' "#1");
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,TaskTest,The following statement contains a magic number: Assert.AreEqual(5' loop.QueueWait(delegate { return 5; })' "#1");
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,TaskTest,The following statement contains a magic number: Assert.IsTrue(handle.WaitOne(5000' true)' "#2");
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,RepeatedTask,The following statement contains a magic number: loop.QueueTimeout(TimeSpan.FromMilliseconds(0)' delegate {                  this.count++;                  if (count == 3)                  {                      handle.Set();                      return false;                  }                    return true;              });
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,RepeatedTask,The following statement contains a magic number: Assert.IsTrue(handle.WaitOne(5000' true)' "#1: Executed {0} times"' count);
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,RepeatedTask,The following statement contains a magic number: Assert.AreEqual(3' count' "#2");
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,LongRunningTask,The following statement contains a magic number: loop.QueueTimeout(TimeSpan.FromMilliseconds(10)' delegate {                  System.Threading.Thread.Sleep(50);                  if (++count == 3)                  {                      handle.Set();                      return false;                  }                    return true;              });
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,LongRunningTask,The following statement contains a magic number: loop.QueueTimeout(TimeSpan.FromMilliseconds(10)' delegate {                  System.Threading.Thread.Sleep(50);                  if (++count == 3)                  {                      handle.Set();                      return false;                  }                    return true;              });
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,LongRunningTask,The following statement contains a magic number: loop.QueueTimeout(TimeSpan.FromMilliseconds(10)' delegate {                  System.Threading.Thread.Sleep(50);                  if (++count == 3)                  {                      handle.Set();                      return false;                  }                    return true;              });
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,LongRunningTask,The following statement contains a magic number: Assert.IsTrue(handle.WaitOne(5000' false)' "#1: Executed {0} times"' count);
Magic Number,MonoTorrent.Client,MainLoopTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MainLoopTests.cs,LongRunningTask,The following statement contains a magic number: Assert.AreEqual(3' count' "#2");
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ReceiveData_RateLimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ReceiveData_RateLimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ReceiveData_Unlimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ReceiveData_Unlimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,DoReceive,The following statement contains a magic number: var data = new byte [16384];
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,DoReceive,The following statement contains a magic number: Assert.DoesNotThrowAsync (() => task.WithTimeout (TimeSpan.FromSeconds (10))' "Data should be all received");
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,SendData_RateLimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,SendData_RateLimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,SendData_Unlimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,SendData_Unlimited,The following statement contains a magic number: var oneMegabyte = 1 * 1024 * 1024;
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,DoSend,The following statement contains a magic number: var data = new byte [16384];
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ZeroReceivedClosesConnection,The following statement contains a magic number: var data = new byte[100];
Magic Number,MonoTorrent.Client,NetworkIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\NetworkIOTests.cs,ZeroSentClosesConnection,The following statement contains a magic number: var data = new byte[100];
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,LargeMessageBodyLength,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,NegativeMessageBodyLength,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,NegativeMessageBodyLength,The following statement contains a magic number: Message.Write (buffer' 0' -6);
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,UnknownMessage,The following statement contains a magic number: var data = new byte[20];
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,UnknownMessage,The following statement contains a magic number: Message.Write (data' 0' 16);
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,UnknownMessage,The following statement contains a magic number: i < 16
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,UnknownMessage,The following statement contains a magic number: await NetworkIO.SendAsync(pair.Outgoing' data' 0' 20' null' null' null);
Magic Number,MonoTorrent.Client,PeerIOTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerIOTests.cs,ZeroMessageBodyIsKeepAlive,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: peers.Add(new Peer(new string(i.ToString()[0]' 20)' uri));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: peers.Add(new Peer(new string('a'' 20)' new Uri("ipv4://255.255.255.255:6530")));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: peers.Add(new Peer(new string('b'' 20)' new Uri("ipv4://255.0.0.0:123")));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: peers.Add(new Peer(new string('c'' 20)' new Uri("ipv4://0.0.255.0:312")));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,Setup,The following statement contains a magic number: peers.Add(new Peer(new string('a'' 20)' new Uri("ipv4://0.0.0.255:3454")));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptList,The following statement contains a magic number: list.Insert(2' new BEncodedNumber(5));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptList,The following statement contains a magic number: list.Insert(2' new BEncodedNumber(5));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptList,The following statement contains a magic number: list.Add(new BEncodedString(new byte[3]));
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: byte[] b = new byte[] { 255' 255' 255' 255' 255' 255 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,CorruptString,The following statement contains a magic number: b = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,DecodeCompact,The following statement contains a magic number: byte[] bytes = new byte[peers.Count * 6];
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,DecodeCompact,The following statement contains a magic number: peers[i].CompactPeer(bytes' i * 6);
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,DecodePeerId,The following statement contains a magic number: var peerId = new BEncodedString (Enumerable.Repeat ((byte)255' 20).ToArray ());
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,DecodePeerId,The following statement contains a magic number: var peerId = new BEncodedString (Enumerable.Repeat ((byte)255' 20).ToArray ());
Magic Number,MonoTorrent.Client,PeerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PeerTests.cs,DecodePeerId,The following statement contains a magic number: dict.Add("port"' (BEncodedNumber) 12345);
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 51));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 51));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(51' 51));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(51' 51));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(50' 51)' c.Ranges[0]' "#2b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(50' 51)' c.Ranges[0]' "#2b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(49' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(49' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(49' 51)' c.Ranges[0]' "#3b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(49' 51)' c.Ranges[0]' "#3b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(45' 47));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(45' 47));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#4");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(49' 51)' c.Ranges[1]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(49' 51)' c.Ranges[1]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(47' 49));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: c.Add(new AddressRange(47' 49));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(45' 51)' c.Ranges[0]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(45' 51)' c.Ranges[0]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(0' 100));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(101' 200));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(101' 200));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 200)' ranges[0]' "#1b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(300' 400));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(300' 400));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(500' 600));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(500' 600));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(3' ranges.Count' "#2");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(50' 205));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(50' 205));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(3' ranges.Count' "#3");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 205)' ranges[0]' "#3b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(-100' -1));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(3' ranges.Count' "#4");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 205)' ranges[0]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 205)' ranges[0]' "#4b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(206' 299));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(206' 299));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(2' ranges.Count' "#5");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 400)' ranges[0]' "#5b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 400)' ranges[0]' "#5b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: c.Add(new AddressRange(0' 600));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 600)' ranges[0]' "#6b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest2,The following statement contains a magic number: Assert.AreEqual(new AddressRange(-100' 600)' ranges[0]' "#6b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(0' 100));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(200' 300));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(200' 300));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(150' 600));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(150' 600));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(2' ranges.Count' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 100)' ranges[0]' "#1b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(150' 600)' ranges[1]' "#1c");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(150' 600)' ranges[1]' "#1c");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(102' 500));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(102' 500));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(2' ranges.Count' "#2");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(102' 600)' ranges[1]' "#2b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(102' 600)' ranges[1]' "#2b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(400' 700));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: c.Add(new AddressRange(400' 700));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(2' ranges.Count' "#3");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(102' 700)' ranges[1]' "#3b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,AddTest3,The following statement contains a magic number: Assert.AreEqual(new AddressRange(102' 700)' ranges[1]' "#3b");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,ContainsTest,The following statement contains a magic number: c.Add(new AddressRange(1' 100));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,ContainsTest,The following statement contains a magic number: c.Add(new AddressRange(-10' -1));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,ContainsTest,The following statement contains a magic number: bool shouldContain = (i >= -10 && i <= -1) || (i >= 1 && i <= 100);
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,ContainsTest,The following statement contains a magic number: bool shouldContain = (i >= -10 && i <= -1) || (i >= 1 && i <= 100);
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,ContainsTest,The following statement contains a magic number: i < 120
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Add(new AddressRange(0'100));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(50' 50));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 49)' c.Ranges[0]' "#2");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(51' 100)' c.Ranges[1]' "#3");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(51' 100)' c.Ranges[1]' "#3");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(50' 55));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(50' 55));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#4");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 49)' c.Ranges[0]' "#5");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(56' 100)' c.Ranges[1]' "#6");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(56' 100)' c.Ranges[1]' "#6");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(45' 60));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(45' 60));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#7");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 44)' c.Ranges[0]' "#8");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#9");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#9");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(45' 60));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(45' 60));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#10");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(0' 44)' c.Ranges[0]' "#11");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#12");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#12");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(-100' 5));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(-100' 5));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(6' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(6' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(6' 15));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(6' 15));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(2' c.Ranges.Count' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(16' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(16' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61' 100)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(70' 80));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: c.Remove(new AddressRange(70' 80));
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(3' c.Ranges.Count' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(16' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(16' 44)' c.Ranges[0]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61'69)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(61'69)' c.Ranges[1]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(81' 100)' c.Ranges[2]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(81' 100)' c.Ranges[2]' "#1");
Magic Number,MonoTorrent.Client,RangeCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RangeCollectionTests.cs,RemoveTest,The following statement contains a magic number: Assert.AreEqual(new AddressRange(81' 100)' c.Ranges[2]' "#1");
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileReceiving,The following statement contains a magic number: var task = Incoming.ReceiveAsync (new byte[100]' 0' 100).AsTask ();
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileReceiving,The following statement contains a magic number: var task = Incoming.ReceiveAsync (new byte[100]' 0' 100).AsTask ();
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileReceiving,The following statement contains a magic number: _ = await Task.WhenAny (task).WithTimeout (1000);
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileSending,The following statement contains a magic number: var task = Incoming.SendAsync (new byte[1000000]' 0' 1000000).AsTask ();
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileSending,The following statement contains a magic number: var task = Incoming.SendAsync (new byte[1000000]' 0' 1000000).AsTask ();
Magic Number,MonoTorrent.Client,SocketConnectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\SocketConnectionTests.cs,DisposeWhileSending,The following statement contains a magic number: _ = await Task.WhenAny (task).WithTimeout (1000);
Magic Number,MonoTorrent.Client,CustomConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,ReceiveAsync,The following statement contains a magic number: count = Math.Min(88' count);
Magic Number,MonoTorrent.Client,CustomConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,SendAsync,The following statement contains a magic number: count = Math.Min(88' count);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePeer,The following statement contains a magic number: i < 20
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreateTorrent,The following statement contains a magic number: dict["creation date"] = (BEncodedNumber)(int)(DateTime.Now - new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,AddFiles,The following statement contains a magic number: dict[new BEncodedString("pieces")] = new BEncodedString(new byte[20 * (totalSize / pieceLength)]);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardPieceSize,The following statement contains a magic number: return 256 * 1024;
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardPieceSize,The following statement contains a magic number: return 256 * 1024;
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardMultiFile,The following statement contains a magic number: return new TorrentFile[] {                  new TorrentFile ("Dir1/File1"' (int)(StandardPieceSize () * 0.44))'                  new TorrentFile ("Dir1/Dir2/File2"' (int)(StandardPieceSize () * 13.25))'                  new TorrentFile ("File3"' (int)(StandardPieceSize () * 23.68))'                  new TorrentFile ("File4"' (int)(StandardPieceSize () * 2.05))'              };
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardMultiFile,The following statement contains a magic number: return new TorrentFile[] {                  new TorrentFile ("Dir1/File1"' (int)(StandardPieceSize () * 0.44))'                  new TorrentFile ("Dir1/Dir2/File2"' (int)(StandardPieceSize () * 13.25))'                  new TorrentFile ("File3"' (int)(StandardPieceSize () * 23.68))'                  new TorrentFile ("File4"' (int)(StandardPieceSize () * 2.05))'              };
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardMultiFile,The following statement contains a magic number: return new TorrentFile[] {                  new TorrentFile ("Dir1/File1"' (int)(StandardPieceSize () * 0.44))'                  new TorrentFile ("Dir1/Dir2/File2"' (int)(StandardPieceSize () * 13.25))'                  new TorrentFile ("File3"' (int)(StandardPieceSize () * 23.68))'                  new TorrentFile ("File4"' (int)(StandardPieceSize () * 2.05))'              };
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardMultiFile,The following statement contains a magic number: return new TorrentFile[] {                  new TorrentFile ("Dir1/File1"' (int)(StandardPieceSize () * 0.44))'                  new TorrentFile ("Dir1/Dir2/File2"' (int)(StandardPieceSize () * 13.25))'                  new TorrentFile ("File3"' (int)(StandardPieceSize () * 23.68))'                  new TorrentFile ("File4"' (int)(StandardPieceSize () * 2.05))'              };
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,StandardSingleFile,The following statement contains a magic number: return new TorrentFile[] {                   new TorrentFile ("Dir1/File1"' (int)(StandardPieceSize () * 0.44))              };
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,TestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestRig.cs,CreatePrivate,The following statement contains a magic number: var dict = CreateTorrent (16 * 1024 * 8' new [] { new TorrentFile ("File"' 16 * 1024 * 8) } ' null);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_ReceiveFirst,The following statement contains a magic number: var task = connection.ReceiveAsync (new byte[100]' 0' 100).AsTask ();
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_ReceiveFirst,The following statement contains a magic number: var task = connection.ReceiveAsync (new byte[100]' 0' 100).AsTask ();
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_SendAndReceiveFirst,The following statement contains a magic number: var receiveTask = connection.ReceiveAsync (new byte[100000]' 0' 100000);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_SendAndReceiveFirst,The following statement contains a magic number: var receiveTask = connection.ReceiveAsync (new byte[100000]' 0' 100000);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_SendAndReceiveFirst,The following statement contains a magic number: Assert.CatchAsync<OperationCanceledException> (async () => {                  await receiveTask;                  await connection.ReceiveAsync (new byte[100000]' 0' 100000);              }' "#2");
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Cancel_SendAndReceiveFirst,The following statement contains a magic number: Assert.CatchAsync<OperationCanceledException> (async () => {                  await receiveTask;                  await connection.ReceiveAsync (new byte[100000]' 0' 100000);              }' "#2");
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CreatePeerIds,The following statement contains a magic number: Assert.AreEqual (20' id.TextBytes.Length' "#1");
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CreatePeerIds,The following statement contains a magic number: i < 20
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,TestInactiveServer,The following statement contains a magic number: connection.ConnectionTimeout = TimeSpan.FromMilliseconds(100);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,RecieveFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,RecieveFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,RecieveFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,RecieveFirst,The following statement contains a magic number: var receiveTask = NetworkIO.ReceiveAsync(connection' buffer' 0' 4' null' null' null);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,SendFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,SendFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,SendFirst,The following statement contains a magic number: byte[] buffer = new byte[1024 * 1024 * 3];
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,SendFirst,The following statement contains a magic number: var receiveTask  = connection.ReceiveAsync (buffer' 0' 4);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CompleteSendOrReceiveFirst,The following statement contains a magic number: await NetworkIO.ReceiveAsync (connection' buffer' 4' size' null' null' null);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,CompleteSendOrReceiveFirst,The following statement contains a magic number: PieceMessage m = (PieceMessage)PeerMessage.DecodeMessage(buffer' 0' size + 4' rig.Manager.Torrent);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,GotContext,The following statement contains a magic number: int end = int.Parse(match.Groups[2].Captures[0].Value);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,GotContext,The following statement contains a magic number: p = c.Request.RawUrl.Substring(10 + rig.Torrent.Name.Length + 1);
Magic Number,MonoTorrent.Client,WebSeedTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TestWebSeed.cs,Wait,The following statement contains a magic number: Assert.IsTrue(handle.WaitOne(5000' true)' "WaitHandle did not trigger");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,AnnounceFailed,The following statement contains a magic number: trackers[0][3].FailAnnounce = true;
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,AnnounceFailed,The following statement contains a magic number: Assert.AreEqual(trackers[0][2]' trackerManager.CurrentTracker' "#1");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,AnnounceFailed,The following statement contains a magic number: Assert.AreEqual(1' trackers[0][2].AnnouncedAt.Count' "#4");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,AnnounceFailed,The following statement contains a magic number: Assert.AreEqual(0' trackers[0][3].AnnouncedAt.Count' "#5");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,AnnounceFailed,The following statement contains a magic number: Assert.AreEqual (args.Tracker' trackers[0][2]' "#6");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,Defaults,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(3)' tracker.MinUpdateInterval' "#1");
Magic Number,MonoTorrent.Client,TrackerManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\TrackerManagerTests.cs,Defaults,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(30)' tracker.UpdateInterval' "#2");
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,Setup,The following statement contains a magic number: peerEndpoints = new List<IPEndPoint> {                  new IPEndPoint (IPAddress.Parse ("123.123.123.123")' 12312)'                  new IPEndPoint (IPAddress.Parse ("254.254.254.254")' 3522)'                  new IPEndPoint (IPAddress.Parse ("1.1.1.1")' 123)'                  new IPEndPoint (IPAddress.Parse ("1.2.3.4")' 65000)'              };
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,Setup,The following statement contains a magic number: peerEndpoints = new List<IPEndPoint> {                  new IPEndPoint (IPAddress.Parse ("123.123.123.123")' 12312)'                  new IPEndPoint (IPAddress.Parse ("254.254.254.254")' 3522)'                  new IPEndPoint (IPAddress.Parse ("1.1.1.1")' 123)'                  new IPEndPoint (IPAddress.Parse ("1.2.3.4")' 65000)'              };
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,Setup,The following statement contains a magic number: peerEndpoints = new List<IPEndPoint> {                  new IPEndPoint (IPAddress.Parse ("123.123.123.123")' 12312)'                  new IPEndPoint (IPAddress.Parse ("254.254.254.254")' 3522)'                  new IPEndPoint (IPAddress.Parse ("1.1.1.1")' 123)'                  new IPEndPoint (IPAddress.Parse ("1.2.3.4")' 65000)'              };
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,Setup,The following statement contains a magic number: peerEndpoints = new List<IPEndPoint> {                  new IPEndPoint (IPAddress.Parse ("123.123.123.123")' 12312)'                  new IPEndPoint (IPAddress.Parse ("254.254.254.254")' 3522)'                  new IPEndPoint (IPAddress.Parse ("1.1.1.1")' 123)'                  new IPEndPoint (IPAddress.Parse ("1.2.3.4")' 65000)'              };
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceMessageTest,The following statement contains a magic number: AnnounceMessage m = new AnnounceMessage(0' 12345' announceparams);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceMessageTest,The following statement contains a magic number: Assert.AreEqual(12345' d.ConnectionId);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The following statement contains a magic number: AnnounceResponseMessage m = new AnnounceResponseMessage(12345' TimeSpan.FromSeconds(10)' 43' 65' peers);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The following statement contains a magic number: AnnounceResponseMessage m = new AnnounceResponseMessage(12345' TimeSpan.FromSeconds(10)' 43' 65' peers);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The following statement contains a magic number: AnnounceResponseMessage m = new AnnounceResponseMessage(12345' TimeSpan.FromSeconds(10)' 43' 65' peers);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The following statement contains a magic number: AnnounceResponseMessage m = new AnnounceResponseMessage(12345' TimeSpan.FromSeconds(10)' 43' 65' peers);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceResponseTest,The following statement contains a magic number: Assert.AreEqual(12345' d.TransactionId);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ConnectResponseTest,The following statement contains a magic number: ConnectResponseMessage m = new ConnectResponseMessage(5371' 12345);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ConnectResponseTest,The following statement contains a magic number: ConnectResponseMessage m = new ConnectResponseMessage(5371' 12345);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ConnectResponseTest,The following statement contains a magic number: Assert.AreEqual(12345' d.ConnectionId);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ConnectResponseTest,The following statement contains a magic number: Assert.AreEqual(5371' d.TransactionId);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: byte[] hash1 = new byte[20];
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: byte[] hash2 = new byte[20];
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: byte[] hash3 = new byte[20];
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: ScrapeMessage m = new ScrapeMessage(12345' 123' hashes);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: ScrapeMessage m = new ScrapeMessage(12345' 123' hashes);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeMessageTest,The following statement contains a magic number: Assert.AreEqual(2' m.Action);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(1' 2' 3));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(1' 2' 3));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(4' 5' 6));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(4' 5' 6));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(4' 5' 6));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(7' 8' 9));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(7' 8' 9));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: details.Add(new ScrapeDetails(7' 8' 9));
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: ScrapeResponseMessage m = new ScrapeResponseMessage(12345' details);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: Assert.AreEqual(2' m.Action);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeResponseTest,The following statement contains a magic number: Assert.AreEqual(12345' d.TransactionId);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: announceparams = announceparams                  .WithBytesDownloaded (123)                  .WithBytesLeft (456)                  .WithBytesUploaded (789);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: announceparams = announceparams                  .WithBytesDownloaded (123)                  .WithBytesLeft (456)                  .WithBytesUploaded (789);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: announceparams = announceparams                  .WithBytesDownloaded (123)                  .WithBytesLeft (456)                  .WithBytesUploaded (789);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: Assert.AreEqual (123' args.Peer.Downloaded);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: Assert.AreEqual (456' args.Peer.Remaining);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest,The following statement contains a magic number: Assert.AreEqual (789' args.Peer.Uploaded);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest_NoConnect_ThenConnect,The following statement contains a magic number: tracker.RetryDelay = TimeSpan.FromSeconds (5);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,AnnounceTest_NoAnnounce_ThenAnnounce,The following statement contains a magic number: tracker.RetryDelay = TimeSpan.FromSeconds (5);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeTest_NoConnect_ThenConnect,The following statement contains a magic number: tracker.RetryDelay = TimeSpan.FromSeconds (5);
Magic Number,MonoTorrent.Client,UdpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\UdpTrackerTests.cs,ScrapeTest_NoScrapes_ThenScrape,The following statement contains a magic number: tracker.RetryDelay = TimeSpan.FromSeconds (5);
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: InfoHash = new InfoHash (Enumerable.Repeat ((byte)255' 20).ToArray ());
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: InfoHash = new InfoHash (Enumerable.Repeat ((byte)255' 20).ToArray ());
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: SKeys = new [] {                  new InfoHash (Enumerable.Repeat ((byte)254' 20).ToArray ())'                  new InfoHash (Enumerable.Repeat ((byte)253' 20).ToArray ())'                  InfoHash'                  new InfoHash (Enumerable.Repeat ((byte)252' 20).ToArray ())              };
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: IncomingId = new BEncodedString (Enumerable.Repeat ((byte)'0'' 20).ToArray ());
Magic Number,MonoTorrent.Client.Encryption,EncryptorFactoryTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EncryptorFactoryTests.cs,Setup,The following statement contains a magic number: OutgoingId = new BEncodedString (Enumerable.Repeat ((byte)'1'' 20).ToArray ());
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: var pieceCount = 40;
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: var pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: var pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: bitfield = new BitField(torrentData.PieceCount)                  .SetAll(true)                  .Set(4' false)                  .Set(6' false)                  .Set(24' false)                  .Set(36' false);
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: bitfield = new BitField(torrentData.PieceCount)                  .SetAll(true)                  .Set(4' false)                  .Set(6' false)                  .Set(24' false)                  .Set(36' false);
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: bitfield = new BitField(torrentData.PieceCount)                  .SetAll(true)                  .Set(4' false)                  .Set(6' false)                  .Set(24' false)                  .Set(36' false);
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: bitfield = new BitField(torrentData.PieceCount)                  .SetAll(true)                  .Set(4' false)                  .Set(6' false)                  .Set(24' false)                  .Set(36' false);
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: pieces = new List<Piece>(new Piece[] {                   new Piece(4' torrentData.PieceLength' torrentData.Size)'                  new Piece(6' torrentData.PieceLength' torrentData.Size)'                  new Piece(24' torrentData.PieceLength' torrentData.Size)'                  new Piece(36' torrentData.PieceLength' torrentData.Size)              });
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: pieces = new List<Piece>(new Piece[] {                   new Piece(4' torrentData.PieceLength' torrentData.Size)'                  new Piece(6' torrentData.PieceLength' torrentData.Size)'                  new Piece(24' torrentData.PieceLength' torrentData.Size)'                  new Piece(36' torrentData.PieceLength' torrentData.Size)              });
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: pieces = new List<Piece>(new Piece[] {                   new Piece(4' torrentData.PieceLength' torrentData.Size)'                  new Piece(6' torrentData.PieceLength' torrentData.Size)'                  new Piece(24' torrentData.PieceLength' torrentData.Size)'                  new Piece(36' torrentData.PieceLength' torrentData.Size)              });
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,Setup,The following statement contains a magic number: pieces = new List<Piece>(new Piece[] {                   new Piece(4' torrentData.PieceLength' torrentData.Size)'                  new Piece(6' torrentData.PieceLength' torrentData.Size)'                  new Piece(24' torrentData.PieceLength' torrentData.Size)'                  new Piece(36' torrentData.PieceLength' torrentData.Size)              });
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,CancelTest,The following statement contains a magic number: i % 2 == 0
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,CancelTest,The following statement contains a magic number: id.BitField[4] = true;
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,MultiPick,The following statement contains a magic number: Assert.AreEqual(2' id.AmRequestingPiecesCount' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,MultiPick,The following statement contains a magic number: Assert.AreEqual(2' other.AmRequestingPiecesCount' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,MultiPick,The following statement contains a magic number: Assert.AreEqual(16' pieces[0].TotalRequested' "#6");
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGamePickerTests.cs,MultiPick,The following statement contains a magic number: Assert.AreEqual(15' pieces[0].TotalReceived' "#7");
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: SmallTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 3' startIndex: 0' endIndex: 2) }'                  PieceLength = Piece.BlockSize * 2'                  Size = Piece.BlockSize * 2 * 3'                    Bitfield = new BitField(3)'                  Seeder = PeerId.CreateNull(3' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,EndGameSwitcherTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\EndGameSwitcherTests.cs,Setup,The following statement contains a magic number: LargeTorrent = new TestTorrentData {                  Files = new[] { new TorrentFile("foo"' length: Piece.BlockSize * 2 * 300' startIndex: 0' endIndex: 299) }'                  PieceLength = Piece.BlockSize * 256 '                  Size = Piece.BlockSize * 256 * 300'                    Bitfield = new BitField(300)'                  Seeder = PeerId.CreateNull(300' seeder: true' isChoking: false' amInterested: true)              };
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,Setup,The following statement contains a magic number: int pieceCount = 40;
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,Setup,The following statement contains a magic number: int pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,Setup,The following statement contains a magic number: int pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,Setup,The following statement contains a magic number: magnetLink = new MagnetLink (new InfoHash (new byte[20]));
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,Setup,The following statement contains a magic number: i < 20
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PieceManagerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PieceManagerTests.cs,RequestFastHaveEverything,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateSingleFile,The following statement contains a magic number: int pieceLength = Piece.BlockSize * 16;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateSingleFile,The following statement contains a magic number: var file = new TorrentFile ("Single"' pieceLength * 32 + 123' 0' 33);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateSingleFile,The following statement contains a magic number: var file = new TorrentFile ("Single"' pieceLength * 32 + 123' 0' 33);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateSingleFile,The following statement contains a magic number: var file = new TorrentFile ("Single"' pieceLength * 32 + 123' 0' 33);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int pieceLength = Piece.BlockSize * 16;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,CreateMultiFile,The following statement contains a magic number: int[] sizes = {                  pieceLength * 10'                  pieceLength * 7  + 123'                  pieceLength * 32 + 123'                  pieceLength * 16 + 543'                  pieceLength * 19 + 591'                  pieceLength * 22 + 591'                  pieceLength * 0  + 12' // 12 byte file!                  pieceLength * 7'              };
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_ChangingPriority,The following statement contains a magic number: multiFile.Files [2].Priority = i % 2 == 0 ? Priority.DoNotDownload : Priority.Normal;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_ChangingPriority,The following statement contains a magic number: multiFile.Files [2].Priority = i % 2 == 0 ? Priority.DoNotDownload : Priority.Normal;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_ChangingPriority,The following statement contains a magic number: Assert.AreEqual ((i / 2) + (i % 2)' tester.PickPieceBitfield.Count' "#1." + i);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_ChangingPriority,The following statement contains a magic number: Assert.AreEqual ((i / 2) + (i % 2)' tester.PickPieceBitfield.Count' "#1." + i);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_ChangingPriority,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_CheckInteresting,The following statement contains a magic number: multiFile.Files [4].Priority = Priority.Lowest;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_CheckInteresting,The following statement contains a magic number: multiFile.Files [4].Priority = Priority.DoNotDownload;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_CheckInteresting,The following statement contains a magic number: multiFile.Files [4].Priority = Priority.High;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[2].Priority = Priority.Highest;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[3].Priority = Priority.High;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[4].Priority = Priority.Lowest;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[5].Priority = Priority.Low;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[6].Priority = Priority.DoNotDownload;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: multiFile.Files[7].Priority = Priority.High;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: Assert.AreEqual(5' tester.PickPieceBitfield.Count' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: bf = multiFile.Files[2].GetSelector (multiBitfield.Length);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: bf = multiFile.Files[3].GetSelector (multiBitfield.Length)                  .Or (multiFile.Files[7].GetSelector (multiBitfield.Length));
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: bf = multiFile.Files[3].GetSelector (multiBitfield.Length)                  .Or (multiFile.Files[7].GetSelector (multiBitfield.Length));
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: Assert.AreEqual (bf' tester.PickPieceBitfield[2]' "#8");
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: bf = multiFile.Files[5].GetSelector (multiBitfield.Length);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: Assert.AreEqual (bf' tester.PickPieceBitfield[3]' "#9");
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: bf = multiFile.Files[4].GetSelector (multiBitfield.Length);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_EveryPriority,The following statement contains a magic number: Assert.AreEqual (bf' tester.PickPieceBitfield[4]' "#10");
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,MultiFile_Highest_RestNormal,The following statement contains a magic number: Assert.AreEqual(2' tester.PickPieceBitfield.Count' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,SingleFile_ChangingPriority,The following statement contains a magic number: singleFile.Files [0].Priority = i % 2 == 0 ? Priority.DoNotDownload : Priority.Normal;
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,SingleFile_ChangingPriority,The following statement contains a magic number: Assert.AreEqual ((i / 2) + (i % 2)' tester.PickPieceBitfield.Count' "#1." + i);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,SingleFile_ChangingPriority,The following statement contains a magic number: Assert.AreEqual ((i / 2) + (i % 2)' tester.PickPieceBitfield.Count' "#1." + i);
Magic Number,MonoTorrent.Client.PiecePicking,PriorityPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\PriorityPickerTests.cs,SingleFile_ChangingPriority,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,Setup,The following statement contains a magic number: pieceCount = 40;
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,SinglePieceRange,The following statement contains a magic number: picker.PickPiece(peer' peer.BitField' new List<PeerId> ()' 1' 12' 13);
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,SinglePieceRange,The following statement contains a magic number: picker.PickPiece(peer' peer.BitField' new List<PeerId> ()' 1' 12' 13);
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,SinglePieceRange,The following statement contains a magic number: Assert.AreEqual (12' checker.PickedIndex[0].Item1' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,SinglePieceRange,The following statement contains a magic number: Assert.AreEqual (13' checker.PickedIndex[0].Item2' "#3");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: picker.PickPiece(peer' peer.BitField' new List<PeerId> ()' 1' 12' 14);
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: picker.PickPiece(peer' peer.BitField' new List<PeerId> ()' 1' 12' 14);
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: Assert.AreEqual (2' checker.PickPieceBitfield.Count' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: Assert.AreEqual (13' checker.PickedIndex[0].Item1' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: Assert.AreEqual (14' checker.PickedIndex[0].Item2' "#3");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: Assert.AreEqual (12' checker.PickedIndex[1].Item1' "#4");
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RandomisedPickerTests.cs,TwoPieceRange,The following statement contains a magic number: Assert.AreEqual (13' checker.PickedIndex[1].Item2' "#5");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,Setup,The following statement contains a magic number: int pieceLength = 16 * Piece.BlockSize;
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,Setup,The following statement contains a magic number: int pieces = 40;
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,Setup,The following statement contains a magic number: i < 5
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: i < 5
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (6' checker.PickPieceBitfield.Count);
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (25' checker.PickPieceBitfield[0].FirstTrue ()' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[0].FirstFalse (25' torrentData.Pieces)' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (20' checker.PickPieceBitfield[1].FirstTrue ()' "#3");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[1].FirstFalse (20' torrentData.Pieces)' "#4");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (15' checker.PickPieceBitfield[2].FirstTrue ()' "#4");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (15' checker.PickPieceBitfield[2].FirstTrue ()' "#4");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[2].FirstFalse (15' torrentData.Pieces)' "#6");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[2].FirstFalse (15' torrentData.Pieces)' "#6");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (10' checker.PickPieceBitfield[3].FirstTrue ()' "#5");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (10' checker.PickPieceBitfield[3].FirstTrue ()' "#5");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[3].FirstFalse (10' torrentData.Pieces)' "#8");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,RarestPieceTest,The following statement contains a magic number: Assert.AreEqual (-1' checker.PickPieceBitfield[3].FirstFalse (10' torrentData.Pieces)' "#8");
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,OnlyAvailablePiecesAllowed,The following statement contains a magic number: var available = new BitField (bitfield.Length)                  .Set (1' true)                  .Set (2' true)                  .Set (4' true)                  .Set (8' true);
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,OnlyAvailablePiecesAllowed,The following statement contains a magic number: var available = new BitField (bitfield.Length)                  .Set (1' true)                  .Set (2' true)                  .Set (4' true)                  .Set (8' true);
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,OnlyAvailablePiecesAllowed,The following statement contains a magic number: var available = new BitField (bitfield.Length)                  .Set (1' true)                  .Set (2' true)                  .Set (4' true)                  .Set (8' true);
Magic Number,MonoTorrent.Client.PiecePicking,RarestFirstPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\RarestFirstPickerTests.cs,OnlyAvailablePiecesAllowed,The following statement contains a magic number: i < 5
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Setup,The following statement contains a magic number: int pieceCount = 40;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Setup,The following statement contains a magic number: int pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Setup,The following statement contains a magic number: int pieceLength = 256 * 1024;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Setup,The following statement contains a magic number: i < 20
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: int[] allowedFast = { 1' 2' 3' 5' 8' 13' 21 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: j < 16
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastSeeder,The following statement contains a magic number: i < 7
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestEntireFastPiece,The following statement contains a magic number: int[] allowedFast = { 1' 2 };
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestEntireFastPiece,The following statement contains a magic number: Assert.AreEqual (expectedRequests * 2' pieceRequests.Count' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestEntireFastPiece,The following statement contains a magic number: Assert.IsTrue (pieceRequests.All (r => r.PieceIndex == 1 || r.PieceIndex == 2)' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestEntireFastPiece,The following statement contains a magic number: Assert.AreEqual (2' pieceRequests.Count (t => t.StartOffset == i * Piece.BlockSize && t.RequestLength == Piece.BlockSize)' "#2." + i);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 5' 8' 13' 21 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].BitField[3] = false;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: peers[0].BitField[5] = false;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 2 || m.PieceIndex == 8 || m.PieceIndex == 13 || m.PieceIndex == 21);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 2 || m.PieceIndex == 8 || m.PieceIndex == 13 || m.PieceIndex == 21);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 2 || m.PieceIndex == 8 || m.PieceIndex == 13 || m.PieceIndex == 21);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 2 || m.PieceIndex == 8 || m.PieceIndex == 13 || m.PieceIndex == 21);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestFastNotSeeder,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,StandardPicker_PickStandardPiece,The following statement contains a magic number: var message = picker.PickPiece (peers [0]' bitfield.Clone ().Not ()' peers' 1' 0' 10);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,StandardPicker_PickStandardPiece,The following statement contains a magic number: message = picker.PickPiece (peers [1]' bitfield.Clone ().Not ()' peers' 1' 0' 10);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,StandardPicker_PickStandardPiece,The following statement contains a magic number: Assert.AreEqual (2' message[0].PieceIndex);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestBlocks_50,The following statement contains a magic number: var b = picker.PickPiece(peer' peer.BitField' peers' 50);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestBlocks_50,The following statement contains a magic number: Assert.AreEqual(50' b.Count' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,RequestBlocks_TooMany,The following statement contains a magic number: var b = picker.PickPiece(peer' peer.BitField' peers' torrentData.TotalBlocks * 2);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 1 || m.PieceIndex == 2 || m.PieceIndex == 5' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex == 1 || m.PieceIndex == 2 || m.PieceIndex == 5' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: i < torrentData.BlocksPerPiece * 3
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidFastPiece,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveFastPiece,The following statement contains a magic number: peer.IsAllowedFastPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveSuggestedPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveSuggestedPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,DoesntHaveSuggestedPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 3' 4 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,InvalidSuggestPiece,The following statement contains a magic number: peer.SuggestedPieces.AddRange(new int[] { 1' 2' 5' 55' 62' 235' 42624 });
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle,The following statement contains a magic number: Assert.IsTrue(bundle.Count == torrentData.BlocksPerPiece * 5                                || (bundle.Count + messages.Count) == torrentData.TotalBlocks' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle,The following statement contains a magic number: (bundle = picker.PickPiece(peer' peer.BitField' peers' torrentData.BlocksPerPiece * 5)) != null
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_2,The following statement contains a magic number: i < 7
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_2,The following statement contains a magic number: Assert.IsTrue(bundle.Count == torrentData.BlocksPerPiece * 5                                || (bundle.Count + messages.Count) == torrentData.BlocksPerPiece * 7' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_2,The following statement contains a magic number: Assert.IsTrue(bundle.Count == torrentData.BlocksPerPiece * 5                                || (bundle.Count + messages.Count) == torrentData.BlocksPerPiece * 7' "#1");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_2,The following statement contains a magic number: (bundle = picker.PickPiece(peer' peer.BitField' peers' torrentData.BlocksPerPiece * 5)) != null
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_2,The following statement contains a magic number: Assert.AreEqual(torrentData.BlocksPerPiece * 7' messages.Count' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: peers[2].IsChoking = false;
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: peers[2].BitField.SetAll(true);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: messages.Add(picker.PickPiece(peers[2]' peers[2].BitField' peers));
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: messages.Add(picker.PickPiece(peers[2]' peers[2].BitField' peers));
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: i < 7
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: (bundle = picker.PickPiece(peer' peer.BitField' peers' torrentData.BlocksPerPiece * 5)) != null
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle_3,The following statement contains a magic number: Assert.AreEqual(torrentData.BlocksPerPiece * 7' messages.Count' "#2");
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 4' 4);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 4' 4);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 6' 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 6' 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: var b = picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 20 * torrentData.BlocksPerPiece);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle4,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex > 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Enumerable.Range (0' 5).Concat (Enumerable.Range (10' 20))
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Enumerable.Range (0' 5).Concat (Enumerable.Range (10' 20))
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Enumerable.Range (0' 5).Concat (Enumerable.Range (10' 20))
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: var b = picker.PickPiece(peers[0]' bitfield' new List<PeerId>()' 20 * torrentData.BlocksPerPiece);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Assert.AreEqual(20 * torrentData.BlocksPerPiece' b.Count);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex >=10 && m.PieceIndex < 30);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,Pick20SequentialPieces,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex >=10 && m.PieceIndex < 30);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 3' 3);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 3' 3);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 6' 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 1' 6' 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: var b = picker.PickPiece(peers[0]' peers[0].BitField' new List<PeerId>()' 2 * torrentData.BlocksPerPiece);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: Assert.AreEqual(2 * torrentData.BlocksPerPiece' b.Count);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex >= 4 && m.PieceIndex < 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,PickBundle6,The following statement contains a magic number: Assert.IsTrue(m.PieceIndex >= 4 && m.PieceIndex < 6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,FastPieceTest,The following statement contains a magic number: peers[i].IsAllowedFastPieces.Add(5);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,FastPieceTest,The following statement contains a magic number: peers[i].IsAllowedFastPieces.Add(6);
Magic Number,MonoTorrent.Client.PiecePicking,StandardPickerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardPickerTests.cs,FastPieceTest,The following statement contains a magic number: i < 2
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,FixtureSetup,The following statement contains a magic number: peerId = Enumerable.Repeat ((byte)254' 20).ToArray ();
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,FixtureSetup,The following statement contains a magic number: peerId = Enumerable.Repeat ((byte)254' 20).ToArray ();
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,FixtureSetup,The following statement contains a magic number: trackerId = Enumerable.Repeat ((byte)255' 20).ToArray ();
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,FixtureSetup,The following statement contains a magic number: trackerId = Enumerable.Repeat ((byte)255' 20).ToArray ();
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Setup,The following statement contains a magic number: announceParams = new AnnounceParameters()                  .WithPort (5555)                  .WithPeerId (peerId)                  .WithInfoHash (infoHash);
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Setup,The following statement contains a magic number: scrapeParams = new ScrapeParameters (new InfoHash (new byte[20]));
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Announce_ValidateParams,The following statement contains a magic number: Assert.IsTrue (argsTask.Task.Wait (5000)' "#1");
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The following statement contains a magic number: infoHash = new InfoHash (Enumerable.Repeat ((byte)1' 20).ToArray ());
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The following statement contains a magic number: await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 100' TorrentEvent.Started' infoHash' false' "peer1"' null' 1' false));
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The following statement contains a magic number: await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 0' TorrentEvent.Started' infoHash' false' "peer2"' null' 2' false));
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The following statement contains a magic number: await tracker.AnnounceAsync(new AnnounceParameters (0' 0' 0' TorrentEvent.Completed' infoHash' false' "peer3"' null' 3' false));
Magic Number,MonoTorrent.Client.Tracker,HttpTrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\HttpTrackerTests.cs,Scrape,The following statement contains a magic number: Assert.AreEqual(2' tracker.Complete' "#10");
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(false' 1234' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(false' 1234' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest_Private,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(true' 123' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeSupportsTest_Private,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(true' 123' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeDecodeTest,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(false' 123' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,HandshakeDecodeTest,The following statement contains a magic number: ExtendedHandshakeMessage m = new ExtendedHandshakeMessage(false' 123' 5555);
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,PeerExchangeMessageDecode,The following statement contains a magic number: byte[] peer = { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,PeerExchangeMessageDecode,The following statement contains a magic number: byte[] peer = { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,PeerExchangeMessageDecode,The following statement contains a magic number: byte[] peer = { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Messages,LibtorrentMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\LibtorrentMessageTests.cs,PeerExchangeMessageDecode,The following statement contains a magic number: byte[] supports = { (byte)(1 | 2) };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,Setup,The following statement contains a magic number: buffer = new byte[100000];
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,Setup,The following statement contains a magic number: offset = 2362;
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,Setup,The following statement contains a magic number: torrentData = new TestTorrentData {                  PieceLength = 16 * Piece.BlockSize'                  Size =   40 * 16 * Piece.BlockSize'              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,Setup,The following statement contains a magic number: torrentData = new TestTorrentData {                  PieceLength = 16 * Piece.BlockSize'                  Size =   40 * 16 * Piece.BlockSize'              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,Setup,The following statement contains a magic number: torrentData = new TestTorrentData {                  PieceLength = 16 * Piece.BlockSize'                  Size =   40 * 16 * Piece.BlockSize'              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: BitfieldMessage msg = (BitfieldMessage)PeerMessage.DecodeMessage(buf' 0' 8' torrentData);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: i < 8
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: i < 12
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: Assert.IsTrue(msg.BitField[12]' 12.ToString());
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: Assert.IsTrue(msg.BitField[12]' 12.ToString());
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,BitFieldDecoding,The following statement contains a magic number: i < 15
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelEncoding,The following statement contains a magic number: int length = new CancelMessage(15' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelEncoding,The following statement contains a magic number: int length = new CancelMessage(15' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelEncoding,The following statement contains a magic number: int length = new CancelMessage(15' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelDecoding,The following statement contains a magic number: EncodeDecode(new CancelMessage(563' 4737' 88888));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelDecoding,The following statement contains a magic number: EncodeDecode(new CancelMessage(563' 4737' 88888));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,CancelDecoding,The following statement contains a magic number: EncodeDecode(new CancelMessage(563' 4737' 88888));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.AreEqual(19' buffer[offset]' "1");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(protocolVersion' 0' buffer' offset + 1' 19)' "2");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(new byte[8]' 0' buffer' offset + 20' 8)' "3");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(new byte[8]' 0' buffer' offset + 20' 8)' "3");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(new byte[8]' 0' buffer' offset + 20' 8)' "3");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(infohash' 0' buffer' offset + 28' 20)' "4");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(infohash' 0' buffer' offset + 28' 20)' "4");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(peerId' 0' buffer' offset + 48' 20)' "5");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeEncoding,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(peerId' 0' buffer' offset + 48' 20)' "5");
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HandshakeDecoding,The following statement contains a magic number: byte[] infohash = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 0' 12' 15' 12' 52 };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HaveEncoding,The following statement contains a magic number: int length = new HaveMessage(150).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,HaveDecoding,The following statement contains a magic number: EncodeDecode(new HaveMessage(34622));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,KeepAliveEncoding,The following statement contains a magic number: Assert.IsTrue(buffer[offset] == 0                              && buffer[offset + 1] == 0                              && buffer[offset + 2] == 0                              && buffer[offset + 3] == 0);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,KeepAliveEncoding,The following statement contains a magic number: Assert.IsTrue(buffer[offset] == 0                              && buffer[offset + 1] == 0                              && buffer[offset + 2] == 0                              && buffer[offset + 3] == 0);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PieceEncoding,The following statement contains a magic number: PieceMessage message = new PieceMessage(15' 10' Piece.BlockSize) {                  Data = new byte[Piece.BlockSize]              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PieceEncoding,The following statement contains a magic number: PieceMessage message = new PieceMessage(15' 10' Piece.BlockSize) {                  Data = new byte[Piece.BlockSize]              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PieceDecoding,The following statement contains a magic number: PieceMessage message = new PieceMessage(15' 10' Piece.BlockSize) {                  Data = new byte[Piece.BlockSize]              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PieceDecoding,The following statement contains a magic number: PieceMessage message = new PieceMessage(15' 10' Piece.BlockSize) {                  Data = new byte[Piece.BlockSize]              };
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PortEncoding,The following statement contains a magic number: int length = new PortMessage(2500).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,PortDecoding,The following statement contains a magic number: EncodeDecode(new PortMessage(5452));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestEncoding,The following statement contains a magic number: int length = new RequestMessage(5' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestEncoding,The following statement contains a magic number: int length = new RequestMessage(5' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestEncoding,The following statement contains a magic number: int length = new RequestMessage(5' 1024' 16384).Encode(buffer' offset);
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestDecoding,The following statement contains a magic number: EncodeDecode(new RequestMessage(123' 789' 4235));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestDecoding,The following statement contains a magic number: EncodeDecode(new RequestMessage(123' 789' 4235));
Magic Number,MonoTorrent.Client.Messages,StandardMessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\StandardMessageTests.cs,RequestDecoding,The following statement contains a magic number: EncodeDecode(new RequestMessage(123' 789' 4235));
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,Setup,The following statement contains a magic number: file = new TorrentFile ("Relative/Path.txt"' Piece.BlockSize * 5);
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,Setup,The following statement contains a magic number: level2 = new MemoryWriter(new NullWriter()' Piece.BlockSize * 3);
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,Setup,The following statement contains a magic number: level1 = new MemoryWriter(level2' Piece.BlockSize * 3);
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,FillFirstBuffer,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,FillFirstBuffer,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' level1.CacheUsed' "#1");
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,FillFirstBuffer,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,FillFirstBuffer,The following statement contains a magic number: Assert.AreEqual (Piece.BlockSize * 3' level1.CacheHits' "#3");
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,ReadWriteBlock,The following statement contains a magic number: var buffer = Enumerable.Repeat ((byte) 55' Piece.BlockSize).ToArray ();
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,ReadWriteBlock,The following statement contains a magic number: Assert.That (buffer' Is.All.EqualTo (55));
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,ReadWriteBlockChangeOriginal,The following statement contains a magic number: var buffer = Enumerable.Repeat ((byte) 5' Piece.BlockSize).ToArray ();
Magic Number,MonoTorrent.Client.PieceWriters,MemoryWriterTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Client\MemoryWriterTests.cs,ReadWriteBlockChangeOriginal,The following statement contains a magic number: Assert.That(buffer' Is.All.EqualTo ((byte)5)' "#2");
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberDecoding,The following statement contains a magic number: Assert.AreEqual(((BEncodedNumber)result).Number' 12412);
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding,The following statement contains a magic number: BEncodedNumber number = 12345;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding2,The following statement contains a magic number: Assert.AreEqual(3' number.LengthInBytes());
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding3,The following statement contains a magic number: BEncodedNumber number = 1230;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding3,The following statement contains a magic number: Assert.AreEqual(6' number.LengthInBytes());
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding4,The following statement contains a magic number: BEncodedNumber number = -1230;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding4,The following statement contains a magic number: Assert.AreEqual(7' number.LengthInBytes());
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding5,The following statement contains a magic number: BEncodedNumber number = -123;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding5,The following statement contains a magic number: Assert.AreEqual(6' number.LengthInBytes());
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncoding6,The following statement contains a magic number: BEncodedNumber a = -123;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberEncodingBuffered,The following statement contains a magic number: BEncodedNumber number = 12345;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberLengthInBytes,The following statement contains a magic number: int number = 1635;
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benNumberLengthInBytes,The following statement contains a magic number: Assert.AreEqual(number.ToString().Length + 2' num.LengthInBytes());
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benListDecoding,The following statement contains a magic number: Assert.AreEqual(list.Count' 3);
Magic Number,MonoTorrent.Common,BEncodeTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BEncodingTest.cs,benListDecoding,The following statement contains a magic number: Assert.AreEqual(((BEncodedString)list[2]).Text' "tested");
Magic Number,MonoTorrent.Common,BigEndianBigIntegerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BigEndianBigIntegerTests.cs,Zero_Create,The following statement contains a magic number: Assert.AreEqual(new BigEndianBigInteger (new byte[2])' zero);
Magic Number,MonoTorrent.Common,BigEndianBigIntegerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BigEndianBigIntegerTests.cs,Zero_Create,The following statement contains a magic number: Assert.AreEqual(new BigEndianBigInteger (BigEndianBigInteger.FallbackConstructor (new byte[2]))' zero);
Magic Number,MonoTorrent.Common,BigEndianBigIntegerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BigEndianBigIntegerTests.cs,Zero_ToByteArray,The following statement contains a magic number: new byte[][] { new byte[0]' new byte[1]' new byte[2] }
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,SetUp,The following statement contains a magic number: initialByteValues = new byte[] { 171' 144 };
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,SetUp,The following statement contains a magic number: initialByteValues = new byte[] { 171' 144 };
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue,The following statement contains a magic number: Assert.AreEqual(11' bf.FirstTrue(bf.Length - 1' bf.Length - 1));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue,The following statement contains a magic number: Assert.AreEqual(11' bf.FirstTrue(bf.Length - 1' bf.Length));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue,The following statement contains a magic number: Assert.AreEqual(11' bf.FirstTrue(9' bf.Length));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue,The following statement contains a magic number: Assert.AreEqual(11' bf.FirstTrue(9' bf.Length));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue_2,The following statement contains a magic number: BitField b = new BitField(1025);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue_2,The following statement contains a magic number: b[1024] = true;
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue_2,The following statement contains a magic number: Assert.AreEqual(1024' b.FirstTrue(0' 1025));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,FirstTrue_2,The following statement contains a magic number: Assert.AreEqual(1024' b.FirstTrue(0' 1025));
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LargeBitfield,The following statement contains a magic number: BitField bf = new BitField(1000);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LargeBitfield,The following statement contains a magic number: Assert.AreEqual(1000' bf.TrueCount);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(1' new BitField(8).LengthInBytes' "#2");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(9).LengthInBytes' "#3");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(9).LengthInBytes' "#3");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(15).LengthInBytes' "#4");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(15).LengthInBytes' "#4");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(16).LengthInBytes' "#5");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(2' new BitField(16).LengthInBytes' "#5");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(3' new BitField(17).LengthInBytes' "#6");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,LengthInBytes,The following statement contains a magic number: Assert.AreEqual(3' new BitField(17).LengthInBytes' "#6");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,And2,The following statement contains a magic number: byte [] a = new byte [100];
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,And2,The following statement contains a magic number: byte [] b = new byte [100];
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,And2,The following statement contains a magic number: i < a.Length * 8
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: BitField b = new BitField(31);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: Assert.AreEqual(31' b.TrueCount' "#1");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: b = new BitField(32);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: Assert.AreEqual(32' b.TrueCount' "#2");
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: b = new BitField(33);
Magic Number,MonoTorrent.Common,BitFieldTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\BitFieldTest.cs,From,The following statement contains a magic number: Assert.AreEqual(33' b.TrueCount' "#3");
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,InfoHashTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\InfoHashTests.cs,HexTest,The following statement contains a magic number: Assert.AreEqual(40' hex.Length' "#1");
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,Create,The following statement contains a magic number: return new InfoHash(new byte[] {                  1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20              });
Magic Number,MonoTorrent.Common,MagnetLinkTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\MagnetLinkTest.cs,ExactLength,The following statement contains a magic number: Assert.AreEqual (12345' link.Size' "#1");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: var speed = 500 * 1024 * 1024;
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: var speed = 500 * 1024 * 1024;
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: var speed = 500 * 1024 * 1024;
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: var estimatedActualSpeed = speed * 4 / 3;
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: var estimatedActualSpeed = speed * 4 / 3;
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: monitor.Tick (750);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: Assert.Less (monitor.Rate' estimatedActualSpeed + (1 * 1024 * 1024)' "#2." + i);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: Assert.Less (monitor.Rate' estimatedActualSpeed + (1 * 1024 * 1024)' "#2." + i);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: i < 37
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: Assert.IsTrue((monitor.Rate - estimatedActualSpeed) < (1 * 1024 * 1024)' "#3");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,VeryFastRate,The following statement contains a magic number: Assert.IsTrue((monitor.Rate - estimatedActualSpeed) < (1 * 1024 * 1024)' "#3");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick,The following statement contains a magic number: monitor.AddDelta (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick,The following statement contains a magic number: Assert.AreEqual (1000' monitor.Rate' "#1");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickTwice,The following statement contains a magic number: monitor.AddDelta (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickTwice,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickTwice,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickTwice,The following statement contains a magic number: Assert.AreEqual (500' monitor.Rate' "#1");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: var monitor = new SpeedMonitor (3);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: monitor.AddDelta (1200);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,TickFull,The following statement contains a magic number: Assert.AreEqual (400' monitor.Rate' "#1");
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick_AveragingTwo_TickThree,The following statement contains a magic number: var monitor = new SpeedMonitor (2);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick_AveragingTwo_TickThree,The following statement contains a magic number: monitor.AddDelta (1200);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick_AveragingTwo_TickThree,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick_AveragingTwo_TickThree,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,Tick_AveragingTwo_TickThree,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,ZeroAveragingPeriod,The following statement contains a magic number: monitor.AddDelta (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,ZeroAveragingPeriod,The following statement contains a magic number: monitor.Tick (1000);
Magic Number,MonoTorrent.Common,SpeedMonitorTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SpeedMonitorTest.cs,ZeroAveragingPeriod,The following statement contains a magic number: Assert.AreEqual (1000' monitor.Rate' "#1");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,Setup,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File1")' (int)(PieceLength * 2.30)' 0' 1)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir1")' "File2")' (int)(PieceLength * 36.5)' 1' 3)'                  new TorrentFile(Path.Combine(Path.Combine("Dir1"' "SDir2")' "File3")' (int)(PieceLength * 3.17)' 3' 12)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir1")' "File4")' (int)(PieceLength * 1.22)' 12' 15)'                  new TorrentFile(Path.Combine(Path.Combine("Dir2"' "SDir2")' "File5")' (int)(PieceLength * 6.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: files = new List<TorrentFile>(new TorrentFile[] {                   new TorrentFile(name1' (long)(PieceLength * 200.30)' 0' 1)'                  new TorrentFile(name2' (long)(PieceLength * 42000.5)' 1' 3)'                  new TorrentFile(name3' (long)(PieceLength * 300.17)' 3' 12)'                  new TorrentFile(name4' (long)(PieceLength * 100.22)' 12' 15)'                  new TorrentFile(name5' (long)(PieceLength * 600.94)' 15' 15)'              });
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: Assert.AreEqual(5' torrent.Files.Length' "#1");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: Assert.AreEqual(name3' torrent.Files[2].Path' "#4");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: Assert.AreEqual(name4' torrent.Files[3].Path' "#5");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,LargeMultiTorrent,The following statement contains a magic number: Assert.AreEqual(name5' torrent.Files[4].Path' "#6");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,VerifyCommonParts,The following statement contains a magic number: Assert.IsTrue((DateTime.UtcNow - torrent.CreationDate) < TimeSpan.FromSeconds(5)' "#3");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,VerifyCommonParts,The following statement contains a magic number: Assert.AreEqual(2' torrent.AnnounceUrls.Count' "#7");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,VerifyCommonParts,The following statement contains a magic number: Assert.AreEqual(2' torrent.AnnounceUrls[0].Count' "#8");
Magic Number,MonoTorrent.Common,TorrentCreatorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentCreatorTests.cs,VerifyCommonParts,The following statement contains a magic number: Assert.AreEqual(2' torrent.AnnounceUrls[1].Count' "#9");
Magic Number,MonoTorrent.Common,TorrentEditorTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentEditorTests.cs,EditProtectedProperty_NotAllowed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>             {                 var editor = new TorrentEditor(new BEncodedDictionary()) { CanEditSecureMetadata = false };                 editor.PieceLength = 16;             });
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime current = new DateTime(2006' 7' 1' 5' 5' 5);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime current = new DateTime(2006' 7' 1' 5' 5' 5);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime current = new DateTime(2006' 7' 1' 5' 5' 5);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime current = new DateTime(2006' 7' 1' 5' 5' 5);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime current = new DateTime(2006' 7' 1' 5' 5' 5);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartUp,The following statement contains a magic number: DateTime epochStart = new DateTime(1970' 1' 1' 0' 0' 0);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The following statement contains a magic number: BEncodedDictionary dict = new BEncodedDictionary {                  { "source"' new BEncodedString ("http://www.thisiswhohostedit.com") }'                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("this is a sha1 hash string"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }'                  { "publisher-url.utf-8"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher-url"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher.utf-8"' new BEncodedString ("MonoTorrent Inc.") }'                  { "publisher"' new BEncodedString ("MonoTorrent Inc.") }'                  { "files"' CreateFiles () }'                  { "name.utf-8"' new BEncodedString ("MyBaseFolder") }'                  { "name"' new BEncodedString ("MyBaseFolder") }'                  { "piece length"' new BEncodedNumber (512) }'                  { "private"' new BEncodedString ("1") }'                  { "pieces"' new BEncodedString (new byte [((26000 + 512) / 512) * 20]) } // Total size is 26000' piecelength is 512              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The following statement contains a magic number: BEncodedDictionary dict = new BEncodedDictionary {                  { "source"' new BEncodedString ("http://www.thisiswhohostedit.com") }'                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("this is a sha1 hash string"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }'                  { "publisher-url.utf-8"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher-url"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher.utf-8"' new BEncodedString ("MonoTorrent Inc.") }'                  { "publisher"' new BEncodedString ("MonoTorrent Inc.") }'                  { "files"' CreateFiles () }'                  { "name.utf-8"' new BEncodedString ("MyBaseFolder") }'                  { "name"' new BEncodedString ("MyBaseFolder") }'                  { "piece length"' new BEncodedNumber (512) }'                  { "private"' new BEncodedString ("1") }'                  { "pieces"' new BEncodedString (new byte [((26000 + 512) / 512) * 20]) } // Total size is 26000' piecelength is 512              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The following statement contains a magic number: BEncodedDictionary dict = new BEncodedDictionary {                  { "source"' new BEncodedString ("http://www.thisiswhohostedit.com") }'                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("this is a sha1 hash string"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }'                  { "publisher-url.utf-8"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher-url"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher.utf-8"' new BEncodedString ("MonoTorrent Inc.") }'                  { "publisher"' new BEncodedString ("MonoTorrent Inc.") }'                  { "files"' CreateFiles () }'                  { "name.utf-8"' new BEncodedString ("MyBaseFolder") }'                  { "name"' new BEncodedString ("MyBaseFolder") }'                  { "piece length"' new BEncodedNumber (512) }'                  { "private"' new BEncodedString ("1") }'                  { "pieces"' new BEncodedString (new byte [((26000 + 512) / 512) * 20]) } // Total size is 26000' piecelength is 512              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The following statement contains a magic number: BEncodedDictionary dict = new BEncodedDictionary {                  { "source"' new BEncodedString ("http://www.thisiswhohostedit.com") }'                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("this is a sha1 hash string"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }'                  { "publisher-url.utf-8"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher-url"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher.utf-8"' new BEncodedString ("MonoTorrent Inc.") }'                  { "publisher"' new BEncodedString ("MonoTorrent Inc.") }'                  { "files"' CreateFiles () }'                  { "name.utf-8"' new BEncodedString ("MyBaseFolder") }'                  { "name"' new BEncodedString ("MyBaseFolder") }'                  { "piece length"' new BEncodedNumber (512) }'                  { "private"' new BEncodedString ("1") }'                  { "pieces"' new BEncodedString (new byte [((26000 + 512) / 512) * 20]) } // Total size is 26000' piecelength is 512              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateInfoDict,The following statement contains a magic number: BEncodedDictionary dict = new BEncodedDictionary {                  { "source"' new BEncodedString ("http://www.thisiswhohostedit.com") }'                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("this is a sha1 hash string"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("ed2k isn't a sha' but who cares"))) }'                  { "publisher-url.utf-8"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher-url"' new BEncodedString ("http://www.iamthepublisher.com") }'                  { "publisher.utf-8"' new BEncodedString ("MonoTorrent Inc.") }'                  { "publisher"' new BEncodedString ("MonoTorrent Inc.") }'                  { "files"' CreateFiles () }'                  { "name.utf-8"' new BEncodedString ("MyBaseFolder") }'                  { "name"' new BEncodedString ("MyBaseFolder") }'                  { "piece length"' new BEncodedNumber (512) }'                  { "private"' new BEncodedString ("1") }'                  { "pieces"' new BEncodedString (new byte [((26000 + 512) / 512) * 20]) } // Total size is 26000' piecelength is 512              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateFiles,The following statement contains a magic number: file = new BEncodedDictionary {                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash1"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash2"))) }'                  { "length"' new BEncodedNumber (50000) }'                  { "md5sum"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash3"))) }'                  { "path.utf-8"' path }'                  { "path"' path }              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateFiles,The following statement contains a magic number: file = new BEncodedDictionary {                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash1"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash2"))) }'                  { "length"' new BEncodedNumber (60000) }'                  { "md5sum"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash3"))) }'                  { "path.utf-8"' path }'                  { "path"' path }              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateFiles,The following statement contains a magic number: file = new BEncodedDictionary {                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash1"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash2"))) }'                  { "length"' new BEncodedNumber (70000) }'                  { "md5sum"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash3"))) }'                  { "path.utf-8"' path }'                  { "path"' path }              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreateFiles,The following statement contains a magic number: file = new BEncodedDictionary {                  { "sha1"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash1"))) }'                  { "ed2k"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash2"))) }'                  { "length"' new BEncodedNumber (80000) }'                  { "md5sum"' new BEncodedString (sha.ComputeHash (System.Text.Encoding.UTF8.GetBytes ("file1 hash3"))) }'                  { "path.utf-8"' path }'                  { "path"' path }              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(2006' torrent.CreationDate.Year' "Year wrong");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(7' torrent.CreationDate.Month' "Month Wrong");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(5' torrent.CreationDate.Hour' "Hour Wrong");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(5' torrent.CreationDate.Minute' "Minute Wrong");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(5' torrent.CreationDate.Second' "Second Wrong");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 1' 5' 5' 5)' torrent.CreationDate);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 1' 5' 5' 5)' torrent.CreationDate);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 1' 5' 5' 5)' torrent.CreationDate);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 1' 5' 5' 5)' torrent.CreationDate);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,CreationDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2006' 7' 1' 5' 5' 5)' torrent.CreationDate);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(4' torrent.Files.Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(50000' torrent.Files[0].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(60000' torrent.Files[1].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(Path.Combine(Path.Combine("subfolder1"' "subfolder2")' "file3.txt")' torrent.Files[2].Path);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(70000' torrent.Files[2].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(70000' torrent.Files[2].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(Path.Combine(Path.Combine("subfolder1"' "subfolder2")' "file4.txt")' torrent.Files[3].Path);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(80000' torrent.Files[3].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Files,The following statement contains a magic number: Assert.AreEqual(80000' torrent.Files[3].Length);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,PieceLength,The following statement contains a magic number: Assert.IsTrue(torrent.PieceLength == 512);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Size,The following statement contains a magic number: Assert.AreEqual((50000 + 60000 + 70000 + 80000)' torrent.Size);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Size,The following statement contains a magic number: Assert.AreEqual((50000 + 60000 + 70000 + 80000)' torrent.Size);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Size,The following statement contains a magic number: Assert.AreEqual((50000 + 60000 + 70000 + 80000)' torrent.Size);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,Size,The following statement contains a magic number: Assert.AreEqual((50000 + 60000 + 70000 + 80000)' torrent.Size);
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' 0)'                  new TorrentFile ("File1"' pieceLength)'                  new TorrentFile ("File2"' 0)'                  new TorrentFile ("File3"' pieceLength - 1)'                  new TorrentFile ("File4"' 1)'                  new TorrentFile ("File5"' 236)'                  new TorrentFile ("File6"' pieceLength * 7)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' 0)'                  new TorrentFile ("File1"' pieceLength)'                  new TorrentFile ("File2"' 0)'                  new TorrentFile ("File3"' pieceLength - 1)'                  new TorrentFile ("File4"' 1)'                  new TorrentFile ("File5"' 236)'                  new TorrentFile ("File6"' pieceLength * 7)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(0' t.Files[2].StartPieceIndex' "#3");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(0' t.Files[2].EndPieceIndex' "#4");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(1' t.Files[3].StartPieceIndex' "#5");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(1' t.Files[3].EndPieceIndex' "#6");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(1' t.Files[4].StartPieceIndex' "#7");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(1' t.Files[4].EndPieceIndex' "#8");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[5].StartPieceIndex' "#9");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[5].StartPieceIndex' "#9");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[5].EndPieceIndex' "#10");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[5].EndPieceIndex' "#10");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[6].StartPieceIndex' "#11");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(2' t.Files[6].StartPieceIndex' "#11");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(9' t.Files[6].EndPieceIndex' "#12");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices,The following statement contains a magic number: Assert.AreEqual(9' t.Files[6].EndPieceIndex' "#12");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices2,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices2,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices3,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices3,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices3,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 10)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices3,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 10)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices4,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices4,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices4,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 11)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices4,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 11)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: int pieceLength = 32 * 32;
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 10)'                  new TorrentFile ("File1"' 1)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: TorrentFile[] files = {                  new TorrentFile ("File0"' pieceLength- 10)'                  new TorrentFile ("File1"' 10)'                  new TorrentFile ("File1"' 1)              };
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: Assert.AreEqual(1' t.Files[2].StartPieceIndex' "#5");
Magic Number,MonoTorrent.Common,TorrentTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\TorrentTest.cs,StartEndIndices5,The following statement contains a magic number: Assert.AreEqual(1' t.Files[2].EndPieceIndex' "#6");
Magic Number,MonoTorrent.Common,UriQueryBuilderTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\UriQueryBuilderTests.cs,TestToString,The following statement contains a magic number: bld.Add ("key"' 2);
Magic Number,MonoTorrent.Common,UriQueryBuilderTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\UriQueryBuilderTests.cs,TestToString,The following statement contains a magic number: bld.Add ("foo"' 2);
Magic Number,MonoTorrent.Common,UriQueryBuilderTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\UriQueryBuilderTests.cs,TestToString,The following statement contains a magic number: bld.Add ("key"' 2);
Magic Number,MonoTorrent.Common,UriQueryBuilderTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\UriQueryBuilderTests.cs,TestToString,The following statement contains a magic number: byte[] infoHash = new byte[6] {0x01' 0x47' 0xff' 0xaa' 0xbb' 0xcc};
Magic Number,MonoTorrent,SHA1Fake,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Common\SHA1Fake.cs,HashFinal,The following statement contains a magic number: return new byte[20];
Magic Number,MonoTorrent.Dht,BucketTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\BucketTest.cs,SortBySeen,The following statement contains a magic number: newNode.Seen (TimeSpan.FromDays (2));
Magic Number,MonoTorrent.Dht,ClosestNodesCollectionTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\ClosestNodesCollectionTests.cs,RemoveOnlyElement,The following statement contains a magic number: var otherNode = new Node (NodeId.Maximum' new IPEndPoint (IPAddress.Any' 2));
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,ErrorReceived,The following statement contains a magic number: Assert.IsTrue (task.Wait (100000)' "#1");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,ErrorReceived,The following statement contains a magic number: Assert.IsTrue (pingSuccessful.Task.Wait (1000)' "#2");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,SendPing,The following statement contains a magic number: Assert.IsTrue(tcs.Task.Wait(1000)' "#1a");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,PingTimeout,The following statement contains a magic number: var timedOutPing = new Ping(node.Id) {                  TransactionId = (BEncodedNumber)5              };
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,PingTimeout,The following statement contains a magic number: Assert.IsTrue (engine.SendQueryAsync (ping' node).Wait (1000)' "#0a");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,PingTimeout,The following statement contains a magic number: Assert.IsTrue (engine.SendQueryAsync (timedOutPing' node).Wait (1000)' "#0c");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,PingTimeout,The following statement contains a magic number: Assert.AreEqual(4' node.FailedCount' "#1");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,TransactionIdCollision,The following statement contains a magic number: listener.RaiseMessageReceived (ping' new IPEndPoint (IPAddress.Any' 9876));
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,TransactionIdCollision,The following statement contains a magic number: Assert.IsTrue (task.Wait (1000)' "#1");
Magic Number,MonoTorrent.Dht,MessageHandlingTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageHandlingTests.cs,TransactionIdCollision,The following statement contains a magic number: Assert.IsTrue (pingSuccessful.Task.Wait (1000)' "#2");
Magic Number,MonoTorrent.Dht,MessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageTests.cs,AnnouncePeerEncode,The following statement contains a magic number: AnnouncePeer m = new AnnouncePeer(id' infohash' 6881' token);
Magic Number,MonoTorrent.Dht,MessageTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\MessageTests.cs,AnnouncePeerDecode,The following statement contains a magic number: Assert.AreEqual((BEncodedNumber)6881' m.Port' "#4");
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,Setup,The following statement contains a magic number: nodes = new NodeId[20];
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,Setup,The following statement contains a magic number: byte[] id = new byte[20];
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,Setup,The following statement contains a magic number: id[j] = (byte)(i * 20 + j);
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GreaterLessThanTest,The following statement contains a magic number: Assert.IsTrue(nodes[2] > nodes[1]' "#5");
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GreaterLessThanTest,The following statement contains a magic number: Assert.IsTrue(nodes[15] < nodes[10]' "#6");
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GreaterLessThanTest,The following statement contains a magic number: Assert.IsTrue(nodes[15] < nodes[10]' "#6");
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,XorTest,The following statement contains a magic number: NodeId zero = new NodeId(new byte[20]);
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,XorTest,The following statement contains a magic number: byte[] b = new byte[20];
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest,The following statement contains a magic number: byte[] i = new byte[20];
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest,The following statement contains a magic number: byte[] j = new byte[20];
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest,The following statement contains a magic number: i[19] = 1;
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest,The following statement contains a magic number: j[19] = 2;
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest,The following statement contains a magic number: j[19] = 2;
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,CompareTest2,The following statement contains a magic number: byte[] data = { 1' 179' 114' 132' 233' 117' 195' 250' 164' 35' 157' 48' 170' 96' 87' 111' 42' 137' 195' 199 };
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: var str = new NodeId (new BEncodedString (new byte [20])).BencodedString ();
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: Assert.AreEqual (20' str.TextBytes.Length);
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: str = new NodeId (new byte [20]).BencodedString ();
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: Assert.AreEqual (20' str.TextBytes.Length);
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: str = new NodeId (new InfoHash (new byte [20])).BencodedString ();
Magic Number,MonoTorrent.Dht,NodeIdTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeIdTests.cs,GetBytesTest,The following statement contains a magic number: Assert.AreEqual (20' str.TextBytes.Length);
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Node n = new Node(NodeId.Create()' new IPEndPoint(IPAddress.Parse("1.21.121.3")' 511));
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(21' port.TextBytes[1]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(121' port.TextBytes[2]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(121' port.TextBytes[2]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(3' port.TextBytes[3]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(3' port.TextBytes[3]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(1' port.TextBytes[4]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(255' port.TextBytes[5]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactPort,The following statement contains a magic number: Assert.AreEqual(255' port.TextBytes[5]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: byte[] buffer = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 1' 21' 131' 3' 1' 255 };
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(buffer' 0' n.Id.Bytes' 0' 20)' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,FromCompactNode,The following statement contains a magic number: Assert.AreEqual(511' n.EndPoint.Port' "#3");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Node n = new Node(NodeId.Create()' new IPEndPoint(IPAddress.Parse("1.21.121.3")' 511));
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.IsTrue(Toolbox.ByteMatch(n.Id.Bytes' 0' port.TextBytes' 0' 20)' "#A");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(1' port.TextBytes[20]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(21' port.TextBytes[21]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(21' port.TextBytes[21]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(121' port.TextBytes[22]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(121' port.TextBytes[22]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(3' port.TextBytes[23]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(3' port.TextBytes[23]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(1' port.TextBytes[24]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(255' port.TextBytes[25]' "#1");
Magic Number,MonoTorrent.Dht,NodeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\NodeTests.cs,CompactNode,The following statement contains a magic number: Assert.AreEqual(255' port.TextBytes[25]' "#1");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,Setup,The following statement contains a magic number: id = new byte[20];
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,Setup,The following statement contains a magic number: id[1] = 128;
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: i < Bucket.MaxCapacity * 3
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(Bucket.MaxCapacity * 3' table.CountNodes ()' "#1");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(6' table.Buckets.Count' "#2");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(8' table.Buckets[0].Nodes.Count' "#3");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(8' table.Buckets[1].Nodes.Count' "#4");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(8' table.Buckets[2].Nodes.Count' "#5");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(8' table.Buckets[2].Nodes.Count' "#5");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(0' table.Buckets[3].Nodes.Count' "#6");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(0' table.Buckets[4].Nodes.Count' "#7");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,AddSimilar,The following statement contains a magic number: Assert.AreEqual(0' table.Buckets[5].Nodes.Count' "#8");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,GetClosestTest,The following statement contains a magic number: Assert.AreEqual(8' closest.Count' "#1");
Magic Number,MonoTorrent.Dht,RoutingTableTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\RoutingTableTests.cs,GetClosestTest,The following statement contains a magic number: i < 8
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,Setup,The following statement contains a magic number: node = new Node(NodeId.Create()' new IPEndPoint(IPAddress.Any' 4));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,SendQueryTaskTimeout,The following statement contains a magic number: Assert.IsTrue(engine.SendQueryAsync (ping' node).Wait (3000)' "#1");
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,SendQueryTaskTimeout,The following statement contains a magic number: Assert.AreEqual (4' counter' "#2");
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,SendQueryTaskSucceed,The following statement contains a magic number: Assert.IsFalse(node.LastSeen < TimeSpan.FromSeconds(2));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,SendQueryTaskSucceed,The following statement contains a magic number: Assert.IsTrue(engine.SendQueryAsync (ping' node).Wait (3000)' "#1");
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,SendQueryTaskSucceed,The following statement contains a magic number: Assert.IsTrue(n.LastSeen < TimeSpan.FromSeconds(2));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: b.Nodes[3].Seen (TimeSpan.FromDays (5));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: b.Nodes[3].Seen (TimeSpan.FromDays (5));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: b.Nodes[1].Seen (TimeSpan.FromDays (4));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: b.Nodes[5].Seen (TimeSpan.FromDays (3));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: b.Nodes[5].Seen (TimeSpan.FromDays (3));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: listener.MessageSent += (message' endpoint) => {                    b.Nodes.Sort((l' r) => l.LastSeen.CompareTo (r.LastSeen));                  if ((endpoint.Port == 3 && nodeCount == 0) ||                       (endpoint.Port == 1 && nodeCount == 1) ||                       (endpoint.Port == 5 && nodeCount == 2))                  {                      Node n = b.Nodes.Find(delegate(Node no) { return no.EndPoint.Port == endpoint.Port; });                      n.Seen();                      PingResponse response = new PingResponse(n.Id' message.TransactionId);                      listener.RaiseMessageReceived(response' node.EndPoint);                      nodeCount++;                  }                };
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: listener.MessageSent += (message' endpoint) => {                    b.Nodes.Sort((l' r) => l.LastSeen.CompareTo (r.LastSeen));                  if ((endpoint.Port == 3 && nodeCount == 0) ||                       (endpoint.Port == 1 && nodeCount == 1) ||                       (endpoint.Port == 5 && nodeCount == 2))                  {                      Node n = b.Nodes.Find(delegate(Node no) { return no.EndPoint.Port == endpoint.Port; });                      n.Seen();                      PingResponse response = new PingResponse(n.Id' message.TransactionId);                      listener.RaiseMessageReceived(response' node.EndPoint);                      nodeCount++;                  }                };
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: listener.MessageSent += (message' endpoint) => {                    b.Nodes.Sort((l' r) => l.LastSeen.CompareTo (r.LastSeen));                  if ((endpoint.Port == 3 && nodeCount == 0) ||                       (endpoint.Port == 1 && nodeCount == 1) ||                       (endpoint.Port == 5 && nodeCount == 2))                  {                      Node n = b.Nodes.Find(delegate(Node no) { return no.EndPoint.Port == endpoint.Port; });                      n.Seen();                      PingResponse response = new PingResponse(n.Id' message.TransactionId);                      listener.RaiseMessageReceived(response' node.EndPoint);                      nodeCount++;                  }                };
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,NodeReplaceTest,The following statement contains a magic number: Assert.IsTrue(task.Execute ().Wait (4000)' "#10");
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,BucketRefreshTest,The following statement contains a magic number: i < 5
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,ReplaceNodeTest,The following statement contains a magic number: Node replacement = new Node(NodeId.Create()' new IPEndPoint(IPAddress.Loopback' 1337));
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,ReplaceNodeTest,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,ReplaceNodeTest,The following statement contains a magic number: Node nodeToReplace = engine.RoutingTable.Buckets[0].Nodes[3];
Magic Number,MonoTorrent.Dht,TaskTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TaskTests.cs,ReplaceNodeTest,The following statement contains a magic number: Assert.IsTrue(task.Execute ().Wait (1000)' "#a");
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: byte[] id = new byte[20];
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: id[19] = 7;
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: id[19] = 7;
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: i == 7
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: id = new byte[20];
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: id[19] = (byte)i;
Magic Number,MonoTorrent.Dht,TestHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TestHelper.cs,ManyNodes,The following statement contains a magic number: i <= 30
Magic Number,MonoTorrent.Dht,TokenManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TokenManagerTest.cs,Setup,The following statement contains a magic number: node = new Node(NodeId.Create()'new IPEndPoint(IPAddress.Parse("127.0.0.1")' 25));
Magic Number,MonoTorrent.Dht,TokenManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TokenManagerTest.cs,InvalidTokenForNode,The following statement contains a magic number: var otherNode = new Node(node.Id'new IPEndPoint(IPAddress.Parse("127.0.0.2")' 25));
Magic Number,MonoTorrent.Dht,TokenManagerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Dht\TokenManagerTest.cs,InvalidTokenForNode,The following statement contains a magic number: otherNode = new Node(node.Id'new IPEndPoint(IPAddress.Parse("127.0.0.1")' 26));
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,Setup,The following statement contains a magic number: Manager = TestRig.CreateMultiFileManager (fileSizes' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_TooMany,The following statement contains a magic number: Manager.Settings.MaximumConnections = 100;
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_TooMany,The following statement contains a magic number: peers.Add (new Peer (""' new Uri ($"ipv4://192.168.0.1:{i + 1000}")));
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_TooMany,The following statement contains a magic number: i < Manager.Settings.MaximumPeerDetails + 100
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0' 192' 168' 0' 2' 101' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var id = PeerId.CreateNull (40);
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: var exchangeMessage = new PeerExchangeMessage (13' peer' dotF' null);
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage,The following statement contains a magic number: Assert.AreEqual (2' addedArgs.NewPeers' "#1");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var peer = new byte[] { 192' 168' 0' 1' 100' 0 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var dotF = new byte[] { 1 << 0 | 1 << 2 };
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var id = PeerId.CreateNull (40);
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_PeerExchangeMessage_Private,The following statement contains a magic number: var exchangeMessage = new PeerExchangeMessage (13' peer' dotF' null);
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_Tracker_Private,The following statement contains a magic number: Assert.AreEqual (2' addedArgs.NewPeers' "#1");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,AddPeers_Tracker_Private,The following statement contains a magic number: Assert.AreEqual (2' manager.Peers.AvailablePeers.Count' "#2");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_AllDownloaded_AllDownloadable,The following statement contains a magic number: Assert.AreEqual (100.0' Manager.Progress' "#3");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_AllDownloaded_AllDownloadable,The following statement contains a magic number: Assert.AreEqual (100.0' Manager.PartialProgress' "#4");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_AllDownloaded_SomeDownloadable,The following statement contains a magic number: Assert.AreEqual (100.0' Manager.PartialProgress' "#4");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_RelatedDownloaded,The following statement contains a magic number: Assert.That (Manager.Progress' Is.LessThan (100.0)' "#3b");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_RelatedDownloaded,The following statement contains a magic number: Assert.That (Manager.PartialProgress' Is.EqualTo (100.0)' "#4");
Magic Number,MonoTorrent.Client.Modes,DownloadModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\DownloadModeTests.cs,PartialProgress_RelatedDownloaded2,The following statement contains a magic number: Assert.That (Manager.PartialProgress' Is.EqualTo (100.0 / totalPieces).Within (1).Percent' "#1");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,Setup,The following statement contains a magic number: Manager = TestRig.CreateMultiFileManager (fileSizes' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,PauseResumeHashingMode,The following statement contains a magic number: await Task.Delay (50);
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,PauseResumeHashingMode,The following statement contains a magic number: Assert.AreEqual (pieceHashed.Task' await Task.WhenAny (pieceHashed.Task' Task.Delay (1000))' "#2");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,DoNotDownload_ThenDownload,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  if (index >= 0 && index <= 4)                      return Manager.Torrent.Pieces.ReadHash (index);                    return Enumerable.Repeat ((byte)255' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,DoNotDownload_ThenDownload,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  if (index >= 0 && index <= 4)                      return Manager.Torrent.Pieces.ReadHash (index);                    return Enumerable.Repeat ((byte)255' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,DoNotDownload_ThenDownload,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  if (index >= 0 && index <= 4)                      return Manager.Torrent.Pieces.ReadHash (index);                    return Enumerable.Repeat ((byte)255' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,DoNotDownload_ThenDownload,The following statement contains a magic number: Assert.AreEqual (5' Manager.finishedPieces.Count' "#5");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPendingFiles,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  pieceHashCount ++;                  if (pieceHashCount == 3)                      Manager.StopAsync ().Wait ();                    return Enumerable.Repeat ((byte)0' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPendingFiles,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  pieceHashCount ++;                  if (pieceHashCount == 3)                      Manager.StopAsync ().Wait ();                    return Enumerable.Repeat ((byte)0' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPendingFiles,The following statement contains a magic number: Assert.AreEqual (3' pieceHashCount' "#2");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPaused,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  getHashCount++;                  if (getHashCount == 2)                      Manager.PauseAsync ().Wait ();                  return Enumerable.Repeat ((byte)0' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPaused,The following statement contains a magic number: DiskManager.GetHashAsyncOverride = (manager' index) => {                  getHashCount++;                  if (getHashCount == 2)                      Manager.PauseAsync ().Wait ();                  return Enumerable.Repeat ((byte)0' 20).ToArray ();              };
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPaused,The following statement contains a magic number: Assert.AreEqual (2' getHashCount' "#1");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,StopWhileHashingPaused,The following statement contains a magic number: Assert.AreEqual (2' getHashCount' "#4");
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,ReadZeroFromDisk,The following statement contains a magic number: PieceWriter.FilesThatExist.AddRange(new[]{                  Manager.Torrent.Files [0]'                  Manager.Torrent.Files [2]'              });
Magic Number,MonoTorrent.Client.Modes,HashingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\HashingModeTests.cs,ReadZeroFromDisk,The following statement contains a magic number: PieceWriter.DoNotReadFrom.AddRange(new[]{                  Manager.Torrent.Files[0]'                  Manager.Torrent.Files[3]'              });
Magic Number,MonoTorrent.Client.Modes,InitialSeedingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\InitialSeedingModeTest.cs,Setup,The following statement contains a magic number: Rig = TestRig.CreateSingleFile(Piece.BlockSize * 20' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,InitialSeedingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\InitialSeedingModeTest.cs,Setup,The following statement contains a magic number: Rig = TestRig.CreateSingleFile(Piece.BlockSize * 20' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,Setup,The following statement contains a magic number: rig = TestRig.CreateSingleFile(1024 * 1024 * 1024' 32768' metadataMode);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,Setup,The following statement contains a magic number: rig = TestRig.CreateSingleFile(1024 * 1024 * 1024' 32768' metadataMode);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,Setup,The following statement contains a magic number: rig = TestRig.CreateSingleFile(1024 * 1024 * 1024' 32768' metadataMode);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,Setup,The following statement contains a magic number: rig = TestRig.CreateSingleFile(1024 * 1024 * 1024' 32768' metadataMode);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The following statement contains a magic number: var sendHandshake = new HandshakeMessage(rig.Manager.Torrent.InfoHash' new string('g'' 20)' VersionInfo.ProtocolStringV100' true' true);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The following statement contains a magic number: ExtendedHandshakeMessage exHand = new ExtendedHandshakeMessage(false' rig.TorrentDict.LengthInBytes()' 5555);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The following statement contains a magic number: int length = (rig.TorrentDict.LengthInBytes() + 16383) / 16384;
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,RequestMetadata,The following statement contains a magic number: int length = (rig.TorrentDict.LengthInBytes() + 16383) / 16384;
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The following statement contains a magic number: var sendHandshake = new HandshakeMessage(rig.Manager.InfoHash' new string('g'' 20)' VersionInfo.ProtocolStringV100' true' true);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The following statement contains a magic number: ExtendedHandshakeMessage exHand = new ExtendedHandshakeMessage(false' rig.Torrent.Metadata.Length' 5555);
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The following statement contains a magic number: int length = (buffer.Length + 16383) / 16384;
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The following statement contains a magic number: int length = (buffer.Length + 16383) / 16384;
Magic Number,MonoTorrent.Client.Modes,MetadataModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\MetadataModeTests.cs,SendMetadataCore,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,Setup,The following statement contains a magic number: Manager = TestRig.CreateMultiFileManager (fileSizes' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,StateChanges_AlreadyHashed,The following statement contains a magic number: Assert.AreEqual (2' modeChanged.Count' "#1");
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,StateChanges_NeedsHashing,The following statement contains a magic number: Assert.AreEqual (3' modeChanged.Count' "#1");
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,StateChanges_NeedsHashing,The following statement contains a magic number: Assert.IsInstanceOf<DownloadMode> (modeChanged[2]' "#4");
Magic Number,MonoTorrent.Client.Modes,StartingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StartingModeTests.cs,FastResume_SomeExist,The following statement contains a magic number: PieceWriter.FilesThatExist.AddRange(new[]{                  Manager.Torrent.Files [0]'                  Manager.Torrent.Files [2]'              });
Magic Number,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppedModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppedModeTests.cs,Setup,The following statement contains a magic number: Manager = TestRig.CreateMultiFileManager (fileSizes' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The following statement contains a magic number: int[] fileSizes = {                  Piece.BlockSize / 2'                  Piece.BlockSize * 32'                  Piece.BlockSize * 2'                  Piece.BlockSize * 13'              };
Magic Number,MonoTorrent.Client.Modes,StoppingModeTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\MonoTorrent.Client.Modes\StoppingModeTests.cs,Setup,The following statement contains a magic number: Manager = TestRig.CreateMultiFileManager (fileSizes' Piece.BlockSize * 2);
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,AnnounceInvalidTest,The following statement contains a magic number: rig.Peers.ForEach(delegate(PeerDetails d) { rig.Listener.Handle(d' (TorrentEvent)((i++) % 4)' rig.Trackables[0]); });
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,CheckPeersAdded,The following statement contains a magic number: rig.Peers.ForEach(delegate(PeerDetails d) {                  lists[i % 4].Add(d);                  rig.Listener.Handle(d' TorrentEvent.Started' rig.Trackables[i++ % 4]);              });
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,CheckPeersAdded,The following statement contains a magic number: rig.Peers.ForEach(delegate(PeerDetails d) {                  lists[i % 4].Add(d);                  rig.Listener.Handle(d' TorrentEvent.Started' rig.Trackables[i++ % 4]);              });
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,CheckPeersAdded,The following statement contains a magic number: Assert.AreEqual(25' peers.Count' "#1");
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,CheckPeersAdded,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,TestReturnedPeers,The following statement contains a magic number: i < 25
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,TestReturnedPeers,The following statement contains a magic number: BEncodedDictionary dict = (BEncodedDictionary)rig.Listener.Handle(rig.Peers[24]' TorrentEvent.None' rig.Trackables[0]);
Magic Number,MonoTorrent.Tracker,TrackerTest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTest.cs,TestReturnedPeers,The following statement contains a magic number: Assert.AreEqual(25' list.Count' "#1");
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GenerateTrackables,The following statement contains a magic number: byte[] infoHash = new byte[20];
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GenerateTrackables,The following statement contains a magic number: i < 10
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Downloaded = (int)(10000 * r.NextDouble());
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Port = r.Next(65000);
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Remaining = r.Next(10000' 100000);
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Remaining = r.Next(10000' 100000);
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Uploaded = r.Next(10000' 100000);
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: d.Uploaded = r.Next(10000' 100000);
Magic Number,MonoTorrent.Tracker,TrackerTestRig,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTestRig.cs,GeneratePeers,The following statement contains a magic number: i < 100
Magic Number,MonoTorrent.Tracker,TrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTests.cs,MultipleAnnounce,The following statement contains a magic number: InfoHash infoHash = new InfoHash(new byte[20]);
Magic Number,MonoTorrent.Tracker,TrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTests.cs,MultipleAnnounce,The following statement contains a magic number: var parameters = new MonoTorrent.Client.Tracker.AnnounceParameters(0' 0' 0' TorrentEvent.Started'                                                                         infoHash' false' new string('1'' 20)' ""' 1411' false);
Magic Number,MonoTorrent.Tracker,TrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTests.cs,MultipleAnnounce,The following statement contains a magic number: var parameters = new MonoTorrent.Client.Tracker.AnnounceParameters(0' 0' 0' TorrentEvent.Started'                                                                         infoHash' false' new string('1'' 20)' ""' 1411' false);
Magic Number,MonoTorrent.Tracker,TrackerTests,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent.Tests\Tracker\TrackerTests.cs,MultipleAnnounce,The following statement contains a magic number: i < 20
