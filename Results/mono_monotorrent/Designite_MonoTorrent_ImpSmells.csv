Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,ReceiveAsync,The method has 103 lines of code.
Long Method,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The method has 166 lines of code.
Long Method,MonoTorrent,Software,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\PeerID.cs,Software,The method has 236 lines of code.
Long Method,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadInternal,The method has 129 lines of code.
Complex Method,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,ReceiveAsync,Cyclomatic complexity of the method is 12
Complex Method,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,GetActiveSetSize,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,Cyclomatic complexity of the method is 13
Complex Method,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,AllocateSlots,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,Cyclomatic complexity of the method is 21
Complex Method,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,TryConnect,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,Cyclomatic complexity of the method is 13
Complex Method,MonoTorrent.Client,ListenManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ListenManager.cs,HandleHandshake,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,PieceManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PieceManager.cs,AddPieceRequests,Cyclomatic complexity of the method is 10
Complex Method,MonoTorrent.Client,PeerList,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\PeerList.cs,GetOUPeer,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,PeerList,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\PeerList.cs,CompareOptimisticUnchokeCandidatesWhileDownloading,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,PeerList,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\PeerList.cs,CompareOptimisticUnchokeCandidatesWhileSeeding,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client,InitialSeedUnchoker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Unchokers\InitialSeedUnchoker.cs,TryAdvertisePiece,Cyclomatic complexity of the method is 10
Complex Method,MonoTorrent.Client,RangeCollection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\RangeCollection.cs,Remove,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Client.Encryption,EncryptorFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptorFactory.cs,DoCheckIncomingConnectionAsync,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client.Messages.UdpTracker,UdpTrackerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\UdpTrackerMessage.cs,DecodeMessage,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client.PiecePicking,EndGamePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGamePicker.cs,PickPiece,Cyclomatic complexity of the method is 12
Complex Method,MonoTorrent.Client.PiecePicking,PriorityPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\PriorityPicker.cs,PickPiece,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,HandleAnnounce,Cyclomatic complexity of the method is 13
Complex Method,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,Cyclomatic complexity of the method is 13
Complex Method,MonoTorrent,Software,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\PeerID.cs,Software,Cyclomatic complexity of the method is 54
Complex Method,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadTorrentFiles,Cyclomatic complexity of the method is 15
Complex Method,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,ProcessInfo,Cyclomatic complexity of the method is 22
Complex Method,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadInternal,Cyclomatic complexity of the method is 30
Complex Method,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent,TorrentFileSource,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentFileSource.cs,LoadFiles,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client.Modes,MetadataMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\MetadataMode.cs,HandleLtMetadataMessage,Cyclomatic complexity of the method is 10
Complex Method,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,HandleMessage,Cyclomatic complexity of the method is 27
Complex Method,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,WritePieceAsync,Cyclomatic complexity of the method is 10
Complex Method,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PostLogicTick,Cyclomatic complexity of the method is 11
Complex Method,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,SendHaveMessagesToAll,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Dht.Tasks,GetPeersTask,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht.Tasks\GetPeersTask.cs,ExecuteAsync,Cyclomatic complexity of the method is 9
Complex Method,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAsync,Cyclomatic complexity of the method is 8
Complex Method,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAnnounce,Cyclomatic complexity of the method is 9
Long Parameter List,MonoTorrent.Client,NtfsSparseFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\NtfsSparseFile.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' dwIoControlCode' InBuffer' nInBufferSize' OutBuffer' nOutBufferSize' pBytesReturned' lpOverlapped
Long Parameter List,MonoTorrent.Client,NtfsSparseFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\NtfsSparseFile.cs,CreateFileW,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,MonoTorrent.Client,NtfsSparseFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\NtfsSparseFile.cs,GetVolumeInformationW,The method has 8 parameters. Parameters: lpRootPathName' lpVolumeNameBuffer' nVolumeNameSize' lpVolumeSerialNumber' lpMaximumComponentLength' lpFileSystemFlags' lpFileSystemNameBuffer' nFileSystemNameSize
Long Parameter List,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ReceiveMessagesAsync,The method has 6 parameters. Parameters: connection' decryptor' downloadLimiter' monitor' torrentManager' id
Long Parameter List,MonoTorrent.Client,BufferedIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\DiskManager.cs,BufferedIO,The method has 5 parameters. Parameters: manager' offset' buffer' count' tcs
Long Parameter List,MonoTorrent.Client,ListenManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ListenManager.cs,HandleHandshake,The method has 5 parameters. Parameters: peer' connection' message' decryptor' encryptor
Long Parameter List,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,TorrentManager,The method has 5 parameters. Parameters: infoHash' savePath' settings' torrentSave' announces
Long Parameter List,MonoTorrent.Client,NetworkIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\NetworkIO.cs,ReceiveAsync,The method has 7 parameters. Parameters: connection' buffer' offset' count' rateLimiter' peerMonitor' managerMonitor
Long Parameter List,MonoTorrent.Client,NetworkIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\NetworkIO.cs,SendAsync,The method has 7 parameters. Parameters: connection' buffer' offset' count' rateLimiter' peerMonitor' managerMonitor
Long Parameter List,MonoTorrent.Client,QueuedIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\NetworkIO.cs,QueuedIO,The method has 6 parameters. Parameters: connection' buffer' offset' count' rateLimiter' tcs
Long Parameter List,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,ReceiveMessageAsync,The method has 5 parameters. Parameters: connection' decryptor' rateLimiter' monitor' manager
Long Parameter List,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,SendMessageAsync,The method has 6 parameters. Parameters: connection' encryptor' message' rateLimiter' peerMonitor' managerMonitor
Long Parameter List,MonoTorrent.Client.Encryption,EncryptorFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptorFactory.cs,CheckOutgoingConnectionAsync,The method has 5 parameters. Parameters: connection' encryption' settings' infoHash' handshake
Long Parameter List,MonoTorrent.Client.Encryption,EncryptorFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptorFactory.cs,DoCheckOutgoingConnectionAsync,The method has 5 parameters. Parameters: connection' encryption' settings' infoHash' handshake
Long Parameter List,MonoTorrent.Client.Encryption,IEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\IEncryption.cs,Decrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,IEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\IEncryption.cs,Encrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,PlainTextEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\NullEncryption.cs,Decrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,PlainTextEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\NullEncryption.cs,Encrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,Decrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,Encrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,RC4Header,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4Header.cs,Decrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Encryption,RC4Header,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4Header.cs,Encrypt,The method has 5 parameters. Parameters: src' srcOffset' dest' destOffset' count
Long Parameter List,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,AnnounceResponseMessage,The method has 5 parameters. Parameters: transactionId' interval' leechers' seeders' peers
Long Parameter List,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,HandshakeMessage,The method has 5 parameters. Parameters: infoHash' peerId' protocolString' enableFastPeer' enableExtended
Long Parameter List,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The method has 5 parameters. Parameters: dest' destOffset' src' srcOffset' count
Long Parameter List,MonoTorrent.Client.PiecePicking,EndGamePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGamePicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,EndGamePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGamePicker.cs,ValidatePiece,The method has 5 parameters. Parameters: peer' pieceIndex' startOffset' length' piece
Long Parameter List,MonoTorrent.Client.PiecePicking,EndGameSwitcher,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGameSwitcher.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,EndGameSwitcher,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGameSwitcher.cs,ValidatePiece,The method has 5 parameters. Parameters: peer' pieceIndex' startOffset' length' piece
Long Parameter List,MonoTorrent.Client.PiecePicking,IgnoringPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\IgnoringPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,NullPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\NullPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,NullPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\NullPicker.cs,ValidatePiece,The method has 5 parameters. Parameters: peer' pieceIndex' startOffset' length' piece
Long Parameter List,MonoTorrent.Client.PiecePicking,PiecePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\PiecePicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,PiecePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\PiecePicker.cs,ValidatePiece,The method has 5 parameters. Parameters: peer' pieceIndex' startOffset' length' piece
Long Parameter List,MonoTorrent.Client.PiecePicking,PriorityPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\PriorityPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,RandomisedPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\RandomisedPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,RarestFirstPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\RarestFirstPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,SlidingWindowPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\SlidingWindowPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,StandardPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\StandardPicker.cs,PickPiece,The method has 6 parameters. Parameters: peer' available' otherPeers' count' startIndex' endIndex
Long Parameter List,MonoTorrent.Client.PiecePicking,StandardPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\StandardPicker.cs,ValidatePiece,The method has 5 parameters. Parameters: peer' pieceIndex' startOffset' length' piece
Long Parameter List,MonoTorrent.Client.PiecePicking,StandardPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\StandardPicker.cs,GetStandardRequest,The method has 5 parameters. Parameters: peer' current' startIndex' endIndex' count
Long Parameter List,MonoTorrent.Client.PieceWriters,DiskWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\DiskWriter.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,DiskWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\DiskWriter.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,IPieceWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\IPieceWriter.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,IPieceWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\IPieceWriter.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,MemoryWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\MemoryWriter.cs,Read,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,MemoryWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\MemoryWriter.cs,Write,The method has 5 parameters. Parameters: file' offset' buffer' bufferOffset' count
Long Parameter List,MonoTorrent.Client.PieceWriters,MemoryWriter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\MemoryWriter.cs,Write,The method has 6 parameters. Parameters: file' offset' buffer' bufferOffset' count' forceWrite
Long Parameter List,MonoTorrent.Client.Tracker,AnnounceParameters,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\AnnounceParameters.cs,AnnounceParameters,The method has 10 parameters. Parameters: bytesDownloaded' bytesUploaded' bytesLeft' clientEvent' infoHash' requireEncryption' peerId' ipAddress' port' supportsEncryption
Long Parameter List,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,MagnetLink,The method has 5 parameters. Parameters: infoHash' name' announceUrls' webSeeds' size
Long Parameter List,MonoTorrent,Toolbox,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\ToolBox.cs,ByteMatch,The method has 5 parameters. Parameters: array1' offset1' array2' offset2' count
Long Parameter List,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The method has 5 parameters. Parameters: startPiece' totalBytesToRead' synchronizer' files' token
Long Parameter List,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,ReadAllDataAsync,The method has 8 parameters. Parameters: startOffset' totalBytesToRead' synchronizer' files' writer' emptyBuffers' filledBuffers' token
Long Parameter List,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,HashAllDataAsync,The method has 5 parameters. Parameters: startPiece' totalBytesToRead' emptyBuffers' filledBuffers' token
Long Parameter List,MonoTorrent,TorrentCreatorEventArgs,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreatorEventArgs.cs,TorrentCreatorEventArgs,The method has 5 parameters. Parameters: file' fileHashed' fileTotal' overallHashed' overallTotal
Long Parameter List,MonoTorrent,TorrentFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentFile.cs,TorrentFile,The method has 5 parameters. Parameters: path' length' fullPath' startIndex' endIndex
Long Parameter List,MonoTorrent,TorrentFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentFile.cs,TorrentFile,The method has 9 parameters. Parameters: path' length' fullPath' startIndex' endIndex' startOffset' md5' ed2k' sha1
Long Parameter List,MonoTorrent.Client.Modes,MetadataMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\MetadataMode.cs,MetadataMode,The method has 5 parameters. Parameters: manager' diskManager' connectionManager' settings' savePath
Long Identifier,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the parameter indexOfFirstUninterestingCandidate is 34.
Long Identifier,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the parameter indexOfFirstInterestingCandidate is 32.
Long Identifier,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the parameter candidateSecondsSinceLastBlock is 30.
Long Identifier,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,,The length of the parameter ReadAllData_EnqueueFilledBufferTime is 35.
Long Statement,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,ReceiveAsync,The length of the statement  "            // If we reach this point it means that we processed all webrequests and still ended up receiving *less* data than we required' " is 127.
Long Statement,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The length of the statement  "            if (!AmChoking && IsChoking && IsInterested) // only increase upload rate if he's interested' otherwise he won't request any pieces " is 131.
Long Statement,MonoTorrent.Client,NtfsSparseFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\NtfsSparseFile.cs,CanCreateSparse,The length of the statement  "            bool result = GetVolumeInformationW(volume' volumeName' MAX_PATH' out serialNumber' out maxComponent' out fsFlags' systemName' MAX_PATH); " is 137.
Long Statement,MonoTorrent.Client,Block,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Block.cs,Equals,The length of the statement  "            return this.PieceIndex == other.PieceIndex && this.startOffset == other.startOffset && this.requestLength == other.requestLength; " is 129.
Long Statement,MonoTorrent.Client,FastResume,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\FastResume\FastResume.cs,CheckContent,The length of the statement  "                throw new TorrentException(string.Format("Invalid FastResume data. The value of '{0}' was '{1}' instead of '{2}'"' key' dict[key]' value)); " is 139.
Long Statement,MonoTorrent.Client,LocalPeerDiscovery,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\LocalPeerDiscovery.cs,Announce,The length of the statement  "                    sendingClient.Client.SetSocketOption(SocketOptionLevel.IP' SocketOptionName.MulticastInterface' IPAddress.HostToNetworkOrder(nic.GetIPProperties().GetIPv4Properties().Index)); " is 175.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The length of the statement  "            bool skipDownload = (isDownloading && (owningTorrent.Monitor.DownloadSpeed < (owningTorrent.Settings.MaximumDownloadSpeed * percentOfMaxRateToSkipReview / 100.0))); " is 164.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The length of the statement  "            bool skipUpload = (!isDownloading && (owningTorrent.Monitor.UploadSpeed < (owningTorrent.Settings.MaximumUploadSpeed * percentOfMaxRateToSkipReview / 100.0))); " is 159.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The length of the statement  "            else if (minimumTimeBetweenReviews != TimeSpan.Zero && ((DateTime.Now - timeOfLastReview) >= minimumTimeBetweenReviews) && " is 122.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "            //    logEntry.Append(B2YN(owningTorrent.State == TorrentState.Seeding) + timeOfLastReview.ToString() + "'" + DateTime.Now.ToString() + ";"); " is 141.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                            connectedPeer.LastReviewUploadRate = (connectedPeer.Monitor.DataBytesUploaded - connectedPeer.BytesUploadedAtLastReview) / timeSinceLastReview.TotalSeconds; " is 156.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                            connectedPeer.LastReviewDownloadRate = (connectedPeer.Monitor.DataBytesDownloaded - connectedPeer.BytesDownloadedAtLastReview) / timeSinceLastReview.TotalSeconds; " is 162.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                        //A peer is optimistically unchoking us.  Take the maximum of their current download rate and their download rate over the " is 122.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                        //	review period since they might have only just unchoked us and we don't want to miss out on a good opportunity.  Upload " is 121.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                            connectedPeer.LastReviewUploadRate = (connectedPeer.Monitor.DataBytesUploaded - connectedPeer.BytesUploadedAtLastReview) / timeSinceLastReview.TotalSeconds; " is 156.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "                            connectedPeer.LastReviewDownloadRate = Math.Max((connectedPeer.Monitor.DataBytesDownloaded - connectedPeer.BytesDownloadedAtLastReview) / timeSinceLastReview.TotalSeconds' " is 171.
Long Statement,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The length of the statement  "            //				Send2Log(nascentPeers.Count.ToString() + "'" + candidatePeers.Count.ToString() + "'" + optimisticUnchokeCandidates.Count.ToString()); " is 139.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ConnectToPeer,The length of the statement  "                    manager.RaiseConnectionAttemptFailed (new ConnectionAttemptFailedEventArgs (peer' ConnectionFailureReason.Unreachable' manager)); " is 129.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessNewOutgoingConnection,The length of the statement  "                var result = await EncryptorFactory.CheckOutgoingConnectionAsync (id.Connection' id.Peer.AllowedEncryption' Settings' manager.InfoHash' handshake); " is 147.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessNewOutgoingConnection,The length of the statement  "                manager.RaiseConnectionAttemptFailed (new ConnectionAttemptFailedEventArgs(id.Peer' ConnectionFailureReason.EncryptionNegiotiationFailed' manager)); " is 148.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessNewOutgoingConnection,The length of the statement  "                manager.RaiseConnectionAttemptFailed (new ConnectionAttemptFailedEventArgs(id.Peer' ConnectionFailureReason.HandshakeFailed' manager)); " is 135.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessNewOutgoingConnection,The length of the statement  "                    throw new TorrentException($"The peer's bitfield was of length {id.BitField.Length} but the TorrentManager's bitfield was of length {manager.Bitfield.Length}."); " is 161.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessNewOutgoingConnection,The length of the statement  "                manager.RaiseConnectionAttemptFailed (new ConnectionAttemptFailedEventArgs(id.Peer' ConnectionFailureReason.Unknown' manager)); " is 127.
Long Statement,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ProcessQueue,The length of the statement  "                            await DiskManager.ReadAsync (manager.Torrent' pm.StartOffset + ((long)pm.PieceIndex * manager.Torrent.PieceLength)' pm.Data' pm.RequestLength); " is 143.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "			// If we find one that is not interesting' disconnect it straightaway; otherwise disconnect the first interesting one we found " is 126.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "				if (nextPeer.Monitor.DataBytesDownloaded == 0 && nextPeer.WhenConnected.Elapsed > TorrentManager.Settings.TimeToWaitUntilIdle) " is 126.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "					// This is an eligible peer' but we're interested in it; remember it for potential disconnection if it's the first one we found " is 127.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "					// No point looking for inactive peers that have sent us data if we found a candidate that's sent us nothing or if we aren't allowed " is 132.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "					// If the number of available peers is running low (less than max number of peer connections)' don't try to inactivate peers that have given us data " is 148.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "						int calculatedInactiveTime = Convert.ToInt32(timeSinceLastBlock.TotalSeconds - Convert.ToInt32(nextPeer.Monitor.DataBytesDownloaded / TorrentManager.Settings.ConnectionRetentionFactor)); " is 186.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "						// Register as the least attractive candidate if the calculated time is more than the idle wait time and more than any other candidate " is 134.
Long Statement,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The length of the statement  "						if (calculatedInactiveTime > TorrentManager.Settings.TimeToWaitUntilIdle.TotalSeconds  && calculatedInactiveTime > longestCalculatedInactiveTime) " is 145.
Long Statement,MonoTorrent.Client,ListenManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ListenManager.cs,ConnectionReceived,The length of the statement  "                var result = await EncryptorFactory.CheckIncomingConnectionAsync(connection' e.Peer.AllowedEncryption' Engine.Settings' skeys.ToArray()); " is 137.
Long Statement,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,HashCheckAsync,The length of the statement  "                throw new TorrentException ("A hashcheck cannot be performed if the TorrentManager was created with a Magnet link and the metadata has not been downloaded."); " is 158.
Long Statement,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,HashCheckAsync,The length of the statement  "                throw new TorrentException(string.Format("A hashcheck can only be performed when the manager is stopped. State is: {0}"' State)); " is 129.
Long Statement,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,LocalPeerAnnounceAsync,The length of the statement  "            if (CanUseLocalPeerDiscovery && (!LastLocalPeerAnnounceTimer.IsRunning || LastLocalPeerAnnounceTimer.Elapsed > LocalPeerDiscovery.MinimumAnnounceInternal)) { " is 157.
Long Statement,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,DhtAnnounce,The length of the statement  "            if (CanUseDht && (!LastDhtAnnounceTimer.IsRunning || LastDhtAnnounceTimer.Elapsed > MonoTorrent.Dht.DhtEngine.MinimumAnnounceInterval)) { " is 137.
Long Statement,MonoTorrent.Client,TorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TorrentManager.cs,SaveFastResume,The length of the statement  "                throw new InvalidOperationException ("Fast resume data cannot be created when the TorrentManager has not been hash checked"); " is 125.
Long Statement,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,ReceiveHandshakeAsync,The length of the statement  "                await NetworkIO.ReceiveAsync (connection' buffer' 0' HandshakeMessage.HandshakeLength' null' null' null).ConfigureAwait (false); " is 128.
Long Statement,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,ReceiveMessageAsync,The length of the statement  "                await NetworkIO.ReceiveAsync (connection' messageLengthBuffer' 0' messageLength' rateLimiter' monitor?.ProtocolDown' manager?.Monitor.ProtocolDown).ConfigureAwait (false); " is 171.
Long Statement,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,ReceiveMessageAsync,The length of the statement  "                await NetworkIO.ReceiveAsync (connection' messageBuffer' messageLength' messageBody' rateLimiter' monitor?.ProtocolDown' manager?.Monitor.ProtocolDown).ConfigureAwait (false); " is 175.
Long Statement,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,SendMessageAsync,The length of the statement  "                await NetworkIO.SendAsync (connection' buffer' 0' count' pieceMessage == null ? null : rateLimiter' peerMonitor?.DataUp' managerMonitor?.DataUp).ConfigureAwait (false); " is 168.
Long Statement,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,Synchronize,The length of the statement  "            // The strategy here is to create a window the size of the data to synchronize and just refill that until its contents match syncData " is 133.
Long Statement,MonoTorrent.Client.Encryption,EncryptorFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptorFactory.cs,DoCheckIncomingConnectionAsync,The length of the statement  "                await NetworkIO.ReceiveAsync(connection' buffer' 0' HandshakeMessage.HandshakeLength' null' null' null).ConfigureAwait(false); " is 126.
Long Statement,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,doneSynchronize,The length of the statement  "            var verifyBytes = new byte[20 + VerificationConstant.Length + 4 + 2]; // ... HASH('req2'' SKEY) xor HASH('req3'' S)' ENCRYPT(VC' crypto_provide' len(PadC)' PadC' len(IA)) " is 170.
Long Statement,MonoTorrent.Client.Messages.Libtorrent,LTMetadata,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.Libtorrent\LTMetadata.cs,Encode,The length of the statement  "                written += Write(buffer' written' metadata' piece * BlockSize' Math.Min(metadata.Length - piece * BlockSize' BlockSize)); " is 121.
Long Statement,MonoTorrent.Client.PiecePicking,EndGamePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGamePicker.cs,ValidatePiece,The length of the statement  "            var r = requests.SingleOrDefault (t => t.Block.PieceIndex == pieceIndex && t.Block.StartOffset == startOffset && t.Block.RequestLength == length && t.Peer == peer); " is 164.
Long Statement,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,DecodeResponseAsync,The length of the statement  "                        while ((bytesRead = await reader.ReadAsync(buffer' 0' (int)Math.Min (response.ContentLength - totalRead' buffer.Length)).ConfigureAwait (false)) > 0) " is 149.
Long Statement,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,HandleAnnounce,The length of the statement  "                        Logger.Log(null' "HttpTracker - Unknown announce tag received: Key {0}  Value: {1}"' keypair.Key.ToString()' keypair.Value.ToString()); " is 135.
Long Statement,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,ScrapeReceivedAsync,The length of the statement  "                            Logger.Log(null' "HttpTracker - Unknown scrape tag received: Key {0}  Value {1}"' kp.Key.ToString()' kp.Value.ToString()); " is 122.
Long Statement,MonoTorrent.Client.Tracker,UdpTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\UdpTracker.cs,ReceiveAsync,The length of the statement  "                UdpTrackerMessage rsp = UdpTrackerMessage.DecodeMessage (received.Buffer' 0' received.Buffer.Length' MessageType.Response); " is 123.
Long Statement,MonoTorrent,EditableTorrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\EditableTorrent.cs,CheckCanEditSecure,The length of the statement  "                throw new InvalidOperationException ("Cannot edit metadata which alters the infohash while CanEditSecureMetadata is false"); " is 124.
Long Statement,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The length of the statement  "                tasks.Add (CalcPiecesHash (i * piecesPerPartition' piecesPerPartition * PieceLength' synchronizers.Dequeue ()' files' token)); " is 126.
Long Statement,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The length of the statement  "            tasks.Add (CalcPiecesHash (piecesPerPartition * (parallelFactor - 1)' totalLength - ((parallelFactor - 1) * piecesPerPartition * PieceLength)' synchronizers.Dequeue ()' files' token)); " is 184.
Long Statement,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The length of the statement  "            var readAllTask = ReadAllDataAsync(startPiece * PieceLength' totalBytesToRead' synchronizer' files' writer' emptyBuffers' filledBuffers' token); " is 144.
Long Statement,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,ToFileInfoDict,The length of the statement  "            string [] splittetPath = file.Path.Split (new char [] { Path.DirectorySeparatorChar }' StringSplitOptions.RemoveEmptyEntries); " is 126.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,MessageReceived,The length of the statement  "                if (DhtMessageFactory.TryDecodeMessage((BEncodedDictionary)BEncodedValue.Decode(buffer' 0' buffer.Length' false)' out message)) " is 127.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                        query.CompletionSource.TrySetResult (new SendQueryEventArgs (node' node.EndPoint' (QueryMessage) query.Message' response)); " is 123.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                        query.CompletionSource.TrySetResult (new SendQueryEventArgs (node' node.EndPoint' (QueryMessage) query.Message' error)); " is 120.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                var error = new ErrorMessage(message.TransactionId' ErrorCode.GenericError' "Unexpected error responding to the message"); " is 122.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                    query.CompletionSource.TrySetResult (new SendQueryEventArgs (query.Node' query.Destination' (QueryMessage)query.Message' error)); " is 129.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                var error = new ErrorMessage(message.TransactionId' ErrorCode.GenericError' "Unexpected exception responding to the message"); " is 126.
Long Statement,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,ReceiveMessage,The length of the statement  "                    query.CompletionSource.TrySetResult (new SendQueryEventArgs (query.Node' query.Destination' (QueryMessage)query.Message' error)); " is 129.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                Manager.RaiseTorrentStateChanged(new TorrentStateChangedEventArgs(Manager' TorrentState.Downloading' TorrentState.Seeding)); " is 124.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                // If some files are marked as DoNotDownload and we have downloaded all downloadable files' mark the torrent as 'seeding'. " is 122.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                if (Manager.Bitfield.CountTrue (Manager.PartialProgressSelector) == Manager.PartialProgressSelector.TrueCount && state == TorrentState.Downloading) { " is 149.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                    Manager.RaiseTorrentStateChanged(new TorrentStateChangedEventArgs(Manager' TorrentState.Downloading' TorrentState.Seeding)); " is 124.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                } else if (Manager.Bitfield.CountTrue (Manager.PartialProgressSelector) < Manager.PartialProgressSelector.TrueCount && state == TorrentState.Seeding) { " is 151.
Long Statement,MonoTorrent.Client.Modes,DownloadMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\DownloadMode.cs,UpdateSeedingDownloadingState,The length of the statement  "                    Manager.RaiseTorrentStateChanged(new TorrentStateChangedEventArgs(Manager' TorrentState.Downloading' TorrentState.Seeding)); " is 124.
Long Statement,MonoTorrent.Client.Modes,HashingMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\HashingMode.cs,WaitForHashingToComplete,The length of the statement  "                    if (!Manager.Torrent.Files.Any (f => index >= f.StartPieceIndex && index <= f.EndPieceIndex && f.Priority != Priority.DoNotDownload)) { " is 135.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,HandleHandshakeMessage,The length of the statement  "                id.AmAllowedFastPieces = AllowedFastAlgorithm.Calculate(id.AddressBytes' Manager.InfoHash' (uint)Manager.Torrent.Pieces.Count); " is 127.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,HandleCancelMessage,The length of the statement  "                if (!(piece.PieceIndex == message.PieceIndex && piece.StartOffset == message.StartOffset && piece.RequestLength == message.RequestLength)) " is 138.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,HandleRequestMessage,The length of the statement  "                    throw new MessageException("Illegal piece request received. Peer requested " + message.RequestLength.ToString() + " byte"); " is 123.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,AppendExtendedHandshake,The length of the statement  "                bundle.Messages.Add(new ExtendedHandshakeMessage(Manager.Torrent?.IsPrivate ?? false' Manager.HasMetadata ? Manager.Torrent.Metadata.Length : 0' Settings.ListenPort)); " is 167.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The length of the statement  "            if (Manager.CanUseLocalPeerDiscovery && (!Manager.LastLocalPeerAnnounceTimer.IsRunning || Manager.LastLocalPeerAnnounceTimer.Elapsed > LocalPeerDiscovery.AnnounceInternal)) { " is 174.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The length of the statement  "            if (Manager.CanUseDht && (!Manager.LastDhtAnnounceTimer.IsRunning || Manager.LastDhtAnnounceTimer.Elapsed > Dht.DhtEngine.AnnounceInternal)) { " is 142.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The length of the statement  "                int maxRequests = PieceManager.NormalRequestAmount + (int)(id.Monitor.DownloadSpeed / 1024.0 / PieceManager.BonusRequestPerKb); " is 127.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,DownloadLogic,The length of the statement  "            if ((DateTime.Now - Manager.StartTime) > Manager.Settings.WebSeedDelay && Manager.Monitor.DownloadSpeed < Manager.Settings.WebSeedSpeedTrigger) " is 143.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,DownloadLogic,The length of the statement  "                    ConnectionManager.ReceiveMessagesAsync (id.Connection' id.Decryptor' Manager.DownloadLimiters' id.Monitor' Manager' id); " is 120.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,DownloadLogic,The length of the statement  "            if (Manager.State == TorrentState.Downloading && Manager.lastCalledInactivePeerManager + TimeSpan.FromSeconds(5) < DateTime.Now) " is 128.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,DownloadLogic,The length of the statement  "                Manager.chokeUnchoker = new ChokeUnchokeManager(Manager' Manager.Settings.MinimumTimeBetweenReviews' Manager.Settings.PercentOfMaxRateToSkipReview); " is 148.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,SeedingLogic,The length of the statement  "                Manager.chokeUnchoker = new ChokeUnchokeManager(Manager' Manager.Settings.MinimumTimeBetweenReviews' Manager.Settings.PercentOfMaxRateToSkipReview); " is 148.
Long Statement,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,TryHashPendingFilesAsync,The length of the statement  "                    if (file.Priority != Priority.DoNotDownload && (Manager.UnhashedPieces[file.StartPieceIndex] || Manager.UnhashedPieces[file.EndPieceIndex])) { " is 142.
Long Statement,MonoTorrent.Dht.Tasks,InitialiseTask,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht.Tasks\InitialiseTask.cs,ExecuteAsync,The length of the statement  "                Node utorrent = new Node(NodeId.Create()' new IPEndPoint(Dns.GetHostEntry("router.bittorrent.com").AddressList[0]' 6881)); " is 122.
Long Statement,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveConnect,The length of the statement  "                m = new ErrorMessage (connectMessage.TransactionId' $"The connection_id was {connectMessage.ConnectionId} but expected {ConnectMessage.InitialiseConnectionId}"); " is 161.
Long Statement,MonoTorrent.Tracker,AnnounceRequest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\AnnounceRequest.cs,CheckMandatoryFields,The length of the statement  "                Response.Add(FailureKey' (BEncodedString)(string.Format("infohash was {0} bytes long' it must be 20 bytes long."' hash.Length))); " is 129.
Long Statement,MonoTorrent.Tracker,TrackerServer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\TrackerServer.cs,ListenerReceivedScrape,The length of the statement  "                e.Response.Add(TrackerRequest.FailureKey' (BEncodedString)"You must specify at least one infohash when scraping this tracker"); " is 127.
Complex Conditional,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The conditional expression  "!IsChoking && !AmChoking                      && LastChokedTime.Elapsed.TotalSeconds > 30                      && LastRateReductionTime.Elapsed.TotalSeconds > 30"  is complex.
Complex Conditional,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,Register,The conditional expression  "DhtEngine != null && manager.Torrent != null && manager.Torrent.Nodes != null && DhtEngine.State != DhtState.Ready"  is complex.
Complex Conditional,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The conditional expression  "minimumTimeBetweenReviews != TimeSpan.Zero && ((DateTime.Now - timeOfLastReview) >= minimumTimeBetweenReviews) &&                  (skipDownload || skipUpload)"  is complex.
Complex Conditional,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The conditional expression  "!connectedPeer.AmChoking &&                              (timeUnchoked < minimumTimeBetweenReviews ||                              (connectedPeer.FirstReviewPeriod && bytesTransferred > 0))"  is complex.
Complex Conditional,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ExecuteReview,The conditional expression  "isDownloading && connectedPeer.IsInterested && connectedPeer.AmChoking && bytesTransferred > 0"  is complex.
Complex Conditional,MonoTorrent.Client,InactivePeerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\InactivePeerManager.cs,TimePassed,The conditional expression  "indexOfFirstInterestingCandidate < 0   						&& TorrentManager.Settings.ConnectionRetentionFactor > 0  						&& nextPeer.Monitor.DataBytesDownloaded > 0   						&& TorrentManager.Peers.Available >= TorrentManager.Settings.MaximumConnections"  is complex.
Complex Conditional,MonoTorrent.Client.Encryption,EncryptorFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptorFactory.cs,DoCheckOutgoingConnectionAsync,The conditional expression  "(settings.PreferEncryption || !supportsPlainText) && (supportsRC4Header || supportsRC4Full)"  is complex.
Complex Conditional,MonoTorrent.Client.PiecePicking,StandardPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\StandardPicker.cs,ContinueAnyExisting,The conditional expression  "p.AllBlocksRequested || p.AllBlocksReceived || !peer.BitField[p.Index] ||                      (p.Blocks[0].RequestedOff != null && p.Blocks[0].RequestedOff.RepeatedHashFails != 0)"  is complex.
Complex Conditional,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlEncodeChar,The conditional expression  "(c < '0') ||                  (c < 'A' && c > '9') ||                  (c > 'Z' && c < 'a') ||                  (c > 'z')"  is complex.
Empty Catch Block,MonoTorrent.Client,NtfsSparseFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PieceWriters\NtfsSparseFile.cs,CreateSparse,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,HandleLocalPeerFound,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,Register,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,LocalPeerDiscovery,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\LocalPeerDiscovery.cs,Announce,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,LocalPeerDiscovery,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\LocalPeerDiscovery.cs,ReceiveAsync,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,ConnectToPeer,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,Decode,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client.Tracker,TrackerManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\TrackerManager.cs,Announce,The method has an empty catch block.
Empty Catch Block,MonoTorrent,IDisposableExtensions,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\IDisposableExtensions.cs,SafeDispose,The method has an empty catch block.
Empty Catch Block,MonoTorrent,UdpListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UdpListener.cs,ReceiveAsync,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,Add,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,Announce,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,GetPeers,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,MessageReceived,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,MessageReceived,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client.Modes,MetadataMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\MetadataMode.cs,SendAnnounces,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Client.Modes,StartingMode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\StartingMode.cs,SendAnnounces,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Tracker.Listeners,HttpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\HttpTrackerListener.cs,GetContextAsync,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAsync,The method has an empty catch block.
Empty Catch Block,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveConnect,The method has an empty catch block.
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: reversed = reversed * 10 + i % 10;
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: reversed = reversed * 10 + i % 10;
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: buffer[written++] = (byte)(i % 10 + '0');
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,Encode,The following statement contains a magic number: i % 10 == 0 && number != 0
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,DecodeInternal,The following statement contains a magic number: number = number * 10 + (letter - '0');
Magic Number,MonoTorrent.BEncoding,BEncodedNumber,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedNumber.cs,LengthInBytes,The following statement contains a magic number: int count = 2;
Magic Number,MonoTorrent.BEncoding,BEncodedString,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.BEncoding\BEncodedString.cs,WriteLengthAsAscii,The following statement contains a magic number: asciiLength > 100000
Magic Number,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,CreatePeerId,The following statement contains a magic number: peerId += Interlocked.Increment (ref webSeedId).ToString().PadLeft(20 - peerId.Length' '0');
Magic Number,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,ReceiveAsync,The following statement contains a magic number: CurrentRequest.TotalReceived += 4;
Magic Number,MonoTorrent.Client.Connections,HttpConnection,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\HTTPConnection.cs,ReceiveAsync,The following statement contains a magic number: return 4;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,PeerId,The following statement contains a magic number: MaxPendingRequests = 2;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,PeerId,The following statement contains a magic number: MaxSupportedPendingRequests = 50;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,PeerId,The following statement contains a magic number: SendQueue = new List<PeerMessage>(12);
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: this.UploadRateForRecip = (this.UploadRateForRecip * 12) / 10;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: this.UploadRateForRecip = (this.UploadRateForRecip * 12) / 10;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: this.UploadRateForRecip = (this.UploadRateForRecip * 9) / 10;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: this.UploadRateForRecip = (this.UploadRateForRecip * 9) / 10;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: !IsChoking && !AmChoking                      && LastChokedTime.Elapsed.TotalSeconds > 30                      && LastRateReductionTime.Elapsed.TotalSeconds > 30
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,UpdateTyrantStats,The following statement contains a magic number: !IsChoking && !AmChoking                      && LastChokedTime.Elapsed.TotalSeconds > 30                      && LastRateReductionTime.Elapsed.TotalSeconds > 30
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,GetActiveSetSize,The following statement contains a magic number: return 2;
Magic Number,MonoTorrent.Client,PeerId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Connections\PeerId.cs,GetActiveSetSize,The following statement contains a magic number: uploadRate < 11
Magic Number,MonoTorrent.Client,AllowedFastAlgorithm,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\AllowedFastAlgorithm.cs,Calculate,The following statement contains a magic number: byte[] hashBuffer = new byte[24];
Magic Number,MonoTorrent.Client,AllowedFastAlgorithm,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\AllowedFastAlgorithm.cs,Calculate,The following statement contains a magic number: Buffer.BlockCopy(BitConverter.GetBytes(ip2)' 0' hashBuffer' 0' 4);
Magic Number,MonoTorrent.Client,AllowedFastAlgorithm,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\AllowedFastAlgorithm.cs,Calculate,The following statement contains a magic number: Buffer.BlockCopy(infohash.Hash' 0' hashBuffer' 4' 20);
Magic Number,MonoTorrent.Client,AllowedFastAlgorithm,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\AllowedFastAlgorithm.cs,Calculate,The following statement contains a magic number: Buffer.BlockCopy(infohash.Hash' 0' hashBuffer' 4' 20);
Magic Number,MonoTorrent.Client,AllowedFastAlgorithm,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\AllowedFastAlgorithm.cs,Calculate,The following statement contains a magic number: i < 20
Magic Number,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,LogicTick,The following statement contains a magic number: tickCount % 2 == 0
Magic Number,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,GeneratePeerId,The following statement contains a magic number: StringBuilder sb = new StringBuilder(20);
Magic Number,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,GeneratePeerId,The following statement contains a magic number: sb.Append(PeerIdRandomGenerator.Next(0' 9));
Magic Number,MonoTorrent.Client,ClientEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\ClientEngine.cs,GeneratePeerId,The following statement contains a magic number: sb.Length < 20
Magic Number,MonoTorrent.Client,FastResume,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\FastResume\FastResume.cs,CheckVersion,The following statement contains a magic number: version.GetValueOrDefault () == 1 || version.GetValueOrDefault () == 2
Magic Number,MonoTorrent.Client,LocalPeerDiscovery,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\LocalPeerDiscovery.cs,ReceiveAsync,The following statement contains a magic number: portcheck <= 0 || portcheck > 65535
Magic Number,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The following statement contains a magic number: bool skipDownload = (isDownloading && (owningTorrent.Monitor.DownloadSpeed < (owningTorrent.Settings.MaximumDownloadSpeed * percentOfMaxRateToSkipReview / 100.0)));
Magic Number,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,UnchokeReview,The following statement contains a magic number: bool skipUpload = (!isDownloading && (owningTorrent.Monitor.UploadSpeed < (owningTorrent.Settings.MaximumUploadSpeed * percentOfMaxRateToSkipReview / 100.0)));
Magic Number,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,ReallocateSlots,The following statement contains a magic number: int maximumUnchokes = NumberOfSlots / 2;
Magic Number,MonoTorrent.Client,ChokeUnchokeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ChokeUnchokeManager.cs,SecondsBetween,The following statement contains a magic number: return difference.TotalMilliseconds / 1000;
Magic Number,MonoTorrent.Client,ConnectionManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\ConnectionManager.cs,CleanupSocket,The following statement contains a magic number: !manager.Peers.AvailablePeers.Contains(id.Peer) && id.Peer.CleanedUpCount < 5
Magic Number,MonoTorrent.Client,DiskManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\DiskManager.cs,Tick,The following statement contains a magic number: delta > 800
Magic Number,MonoTorrent.Client,PeerExchangeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PeerExchangeManager.cs,OnTick,The following statement contains a magic number: byte[] added = new byte[len * 6];
Magic Number,MonoTorrent.Client,PeerExchangeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PeerExchangeManager.cs,OnTick,The following statement contains a magic number: addedPeers[i].CompactPeer(added' i * 6);
Magic Number,MonoTorrent.Client,PeerExchangeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PeerExchangeManager.cs,OnTick,The following statement contains a magic number: byte[] dropped = new byte[len * 6];
Magic Number,MonoTorrent.Client,PeerExchangeManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PeerExchangeManager.cs,OnTick,The following statement contains a magic number: droppedPeers[i].CompactPeer(dropped' i * 6);
Magic Number,MonoTorrent.Client,PieceManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PieceManager.cs,AddPieceRequests,The following statement contains a magic number: count = (2 * 1024 * 1024) / Manager.Torrent.PieceLength;
Magic Number,MonoTorrent.Client,PieceManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PieceManager.cs,AddPieceRequests,The following statement contains a magic number: count = (2 * 1024 * 1024) / Manager.Torrent.PieceLength;
Magic Number,MonoTorrent.Client,PieceManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Managers\PieceManager.cs,AddPieceRequests,The following statement contains a magic number: count = (2 * 1024 * 1024) / Manager.Torrent.PieceLength;
Magic Number,MonoTorrent.Client,NetworkIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\NetworkIO.cs,NetworkIO,The following statement contains a magic number: IOLoop.QueueTimeout(TimeSpan.FromMilliseconds(100)' delegate {                  while (receiveQueue.Count > 0) {                      var io = receiveQueue.Peek ();                      if (io.rateLimiter.TryProcess(io.count))                          ReceiveQueuedAsync(receiveQueue.Dequeue());                      else                          break;                  }                  while (sendQueue.Count > 0) {                      var io = sendQueue.Peek ();                      if (io.rateLimiter.TryProcess(io.count))                          SendQueuedAsync(sendQueue.Dequeue());                      else                          break;                  }                    return true;              });
Magic Number,MonoTorrent.Client,PeerIO,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\PeerIO.cs,ReceiveMessageAsync,The following statement contains a magic number: int messageLength = 4;
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,CompactPeer,The following statement contains a magic number: byte[] data = new byte[6];
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,CompactPeer,The following statement contains a magic number: Buffer.BlockCopy(IPAddress.Parse(ConnectionUri.Host).GetAddressBytes()' 0' data' offset' 4);
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,CompactPeer,The following statement contains a magic number: Message.Write(data' offset + 4' (short)ConnectionUri.Port);
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,FromCompact,The following statement contains a magic number: StringBuilder sb = new StringBuilder(27);
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,FromCompact,The following statement contains a magic number: var list = new List<Peer>((byteOrderedData.Length / 6) + 1);
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,FromCompact,The following statement contains a magic number: i += 2;
Magic Number,MonoTorrent.Client,Peer,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\Peer.cs,FromCompact,The following statement contains a magic number: (i + 5) < byteOrderedData.Length
Magic Number,MonoTorrent.Client,BanListParser,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BanListParser.cs,Parse,The following statement contains a magic number: var start =(int.Parse(s[0]) << 24) | (int.Parse(s[1]) << 16) | (int.Parse(s[2]) << 8) | (int.Parse(s[3]));
Magic Number,MonoTorrent.Client,BanListParser,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BanListParser.cs,Parse,The following statement contains a magic number: var start =(int.Parse(s[0]) << 24) | (int.Parse(s[1]) << 16) | (int.Parse(s[2]) << 8) | (int.Parse(s[3]));
Magic Number,MonoTorrent.Client,BanListParser,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BanListParser.cs,Parse,The following statement contains a magic number: var start =(int.Parse(s[0]) << 24) | (int.Parse(s[1]) << 16) | (int.Parse(s[2]) << 8) | (int.Parse(s[3]));
Magic Number,MonoTorrent.Client,BanListParser,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BanListParser.cs,Parse,The following statement contains a magic number: var start =(int.Parse(s[0]) << 24) | (int.Parse(s[1]) << 16) | (int.Parse(s[2]) << 8) | (int.Parse(s[3]));
Magic Number,MonoTorrent.Client,BanListParser,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BanListParser.cs,Parse,The following statement contains a magic number: var start =(int.Parse(s[0]) << 24) | (int.Parse(s[1]) << 16) | (int.Parse(s[2]) << 8) | (int.Parse(s[3]));
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,EncryptedSocket,The following statement contains a magic number: X = new byte[20];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,RandomNumber,The following statement contains a magic number: byte[] b = new byte[4];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SendY,The following statement contains a magic number: var length = 96 + RandomNumber(512);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SendY,The following statement contains a magic number: var length = 96 + RandomNumber(512);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SendY,The following statement contains a magic number: Buffer.BlockCopy(Y' 0' toSend' 0' 96);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SendY,The following statement contains a magic number: random.GetBytes(toSend' 96' length - 96);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SendY,The following statement contains a magic number: random.GetBytes(toSend' 96' length - 96);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,ReceiveY,The following statement contains a magic number: var otherY = new byte[96];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,ReceiveY,The following statement contains a magic number: await ReceiveMessage(otherY' 96);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: CryptoSelect[3] |= 2;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: CryptoSelect[3] |= 2;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: return 2;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: (remoteCryptoBytes[3] & 2) == 2 && allowedEncryption.HasFlag (EncryptionTypes.RC4Full)
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: (remoteCryptoBytes[3] & 2) == 2 && allowedEncryption.HasFlag (EncryptionTypes.RC4Full)
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: (remoteCryptoBytes[3] & 2) == 2 && allowedEncryption.HasFlag (EncryptionTypes.RC4Full)
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: CryptoSelect[3] |= 1;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SelectCrypto,The following statement contains a magic number: (remoteCryptoBytes[3] & 1) == 1 && allowedEncryption.HasFlag (EncryptionTypes.RC4Header)
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,DeLen,The following statement contains a magic number: return (int)(data[0] << 8) + data[1];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,Len,The following statement contains a magic number: byte[] lenBuffer = new byte[2];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,Len,The following statement contains a magic number: lenBuffer[0] = (byte)((data.Length >> 8) & 0xff);
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,GeneratePad,The following statement contains a magic number: return new byte[RandomNumber(512)];
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SetMinCryptoAllowed,The following statement contains a magic number: CryptoProvide[0] = CryptoProvide[1] = CryptoProvide[2] = CryptoProvide[3] = 0;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SetMinCryptoAllowed,The following statement contains a magic number: CryptoProvide[0] = CryptoProvide[1] = CryptoProvide[2] = CryptoProvide[3] = 0;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SetMinCryptoAllowed,The following statement contains a magic number: CryptoProvide[3] |= 1 << 1;
Magic Number,MonoTorrent.Client.Encryption,EncryptedSocket,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\EncryptedSocket.cs,SetMinCryptoAllowed,The following statement contains a magic number: CryptoProvide[3] |= 1;
Magic Number,MonoTorrent.Client.Encryption,ModuloCalculator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\ModuloCalculator.cs,Calculate,The following statement contains a magic number: bytes = new byte[96];
Magic Number,MonoTorrent.Client.Encryption,ModuloCalculator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\ModuloCalculator.cs,Calculate,The following statement contains a magic number: Array.Copy(oldBytes' 0' bytes' 96 - oldBytes.Length' oldBytes.Length);
Magic Number,MonoTorrent.Client.Encryption,ModuloCalculator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\ModuloCalculator.cs,Calculate,The following statement contains a magic number: i < (96 - oldBytes.Length)
Magic Number,MonoTorrent.Client.Encryption,ModuloCalculator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\ModuloCalculator.cs,Calculate,The following statement contains a magic number: bytes.Length < 96
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: var bufferLength = req1.Length + req2.Length + VerificationConstant.Length + CryptoProvide.Length                               + 2 + padC.Length + 2 + InitialPayload.Length;
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: var bufferLength = req1.Length + req2.Length + VerificationConstant.Length + CryptoProvide.Length                               + 2 + padC.Length + 2 + InitialPayload.Length;
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: DoEncrypt (buffer' offset - 2' 2);
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: DoEncrypt (buffer' offset - 2' 2);
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: DoEncrypt (buffer' offset - 2' 2);
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: DoEncrypt (buffer' offset - 2' 2);
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneReceiveY,The following statement contains a magic number: await Synchronize(VerificationConstant' 616);
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneSynchronize,The following statement contains a magic number: var verifyBytesLength = 4 + 2;
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneSynchronize,The following statement contains a magic number: var verifyBytesLength = 4 + 2;
Magic Number,MonoTorrent.Client.Encryption,PeerAEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerAEncryption.cs,doneSynchronize,The following statement contains a magic number: var padDLength = Message.ReadShort (verifyBytes' 4);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,doneReceiveY,The following statement contains a magic number: await Synchronize(req1' 628);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,doneSynchronize,The following statement contains a magic number: var verifyBytes = new byte[20 + VerificationConstant.Length + 4 + 2];
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,doneSynchronize,The following statement contains a magic number: var verifyBytes = new byte[20 + VerificationConstant.Length + 4 + 2];
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,doneSynchronize,The following statement contains a magic number: var verifyBytes = new byte[20 + VerificationConstant.Length + 4 + 2];
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: byte[] torrentHash = new byte[20];
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: byte[] myCP = new byte[4];
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: DoDecrypt(verifyBytes' 20' 14);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: DoDecrypt(verifyBytes' 20' 14);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: !Toolbox.ByteMatch(verifyBytes' 20' VerificationConstant' 0' VerificationConstant.Length)
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: Array.Copy(verifyBytes' 28' myCP' 0' myCP.Length);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: var lenPadC = Message.ReadShort (verifyBytes' 32) + 2;
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: var lenPadC = Message.ReadShort (verifyBytes' 32) + 2;
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: lenInitialPayload = Message.ReadShort (padC' lenPadC - 2);
Magic Number,MonoTorrent.Client.Encryption,PeerBEncryption,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\PeerBEncryption.cs,gotVerification,The following statement contains a magic number: var finalBufferLength = VerificationConstant.Length + CryptoSelect.Length + 2 + padD.Length;
Magic Number,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,RC4,The following statement contains a magic number: S = new byte[256];
Magic Number,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,RC4,The following statement contains a magic number: x = (x + S[i] + key[i % key.Length]) % 256;
Magic Number,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,RC4,The following statement contains a magic number: i <= 255
Magic Number,MonoTorrent.Client.Encryption,RC4,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Encryption\RC4.cs,RC4,The following statement contains a magic number: byte[] wasteBuffer = new byte[1024];
Magic Number,MonoTorrent.Client.Listeners,PeerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Listeners\PeerListener.cs,Start,The following statement contains a magic number: listener.Listen(6);
Magic Number,MonoTorrent.Client.Messages.FastPeer,AllowedFastMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.FastPeer\AllowedFastMessage.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(24);
Magic Number,MonoTorrent.Client.Messages.FastPeer,RejectRequestMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.FastPeer\RejectRequestMessage.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(24);
Magic Number,MonoTorrent.Client.Messages.FastPeer,SuggestPieceMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.FastPeer\SuggestPieceMessage.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(24);
Magic Number,MonoTorrent.Client.Messages.Libtorrent,LTChat,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.Libtorrent\LTChat.cs,Encode,The following statement contains a magic number: written += Write(buffer' offset' ByteLength - 4);
Magic Number,MonoTorrent.Client.Messages.Libtorrent,LTMetadata,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.Libtorrent\LTMetadata.cs,Encode,The following statement contains a magic number: written += Write(buffer' written' ByteLength - 4);
Magic Number,MonoTorrent.Client.Messages.Libtorrent,PeerExchangeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\PeerExchangeMessage.cs,Encode,The following statement contains a magic number: written += Write(buffer' offset' ByteLength - 4);
Magic Number,MonoTorrent.Client.Messages.Libtorrent,PeerExchangeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\PeerExchangeMessage.cs,ToString,The following statement contains a magic number: int numPeers = added.TextBytes.Length / 6;
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceMessage.cs,AnnounceMessage,The following statement contains a magic number: NumWanted = 50;
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceMessage.cs,Decode,The following statement contains a magic number: InfoHash = new InfoHash(ReadBytes(buffer' ref offset' 20));
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceMessage.cs,Decode,The following statement contains a magic number: PeerId = new BEncodedString (ReadBytes(buffer' ref offset' 20));
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Decode,The following statement contains a magic number: TransactionId = ReadInt(buffer' offset + 4);
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Decode,The following statement contains a magic number: Interval = TimeSpan.FromSeconds(ReadInt(buffer' offset + 8));
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Decode,The following statement contains a magic number: Leechers = ReadInt(buffer' offset + 12);
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Decode,The following statement contains a magic number: Seeders = ReadInt(buffer' offset + 16);
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Decode,The following statement contains a magic number: var peers = Peer.FromCompact (buffer' 20);
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AnnounceResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AnnounceResponseMessage.cs,Encode,The following statement contains a magic number: Peers[i].CompactPeer(buffer' written + (i * 6));
Magic Number,MonoTorrent.Client.Messages.UdpTracker,AuthenticationMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\AuthenticationMessage.cs,Decode,The following statement contains a magic number: password = new byte[8];
Magic Number,MonoTorrent.Client.Messages.UdpTracker,ScrapeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\ScrapeMessage.cs,Decode,The following statement contains a magic number: InfoHashes.Add(ReadBytes(buffer' ref offset' 20));
Magic Number,MonoTorrent.Client.Messages.UdpTracker,ScrapeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\ScrapeMessage.cs,Decode,The following statement contains a magic number: offset <= (length - 20)
Magic Number,MonoTorrent.Client.Messages.UdpTracker,ScrapeResponseMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\ScrapeResponseMessage.cs,Decode,The following statement contains a magic number: offset <= (buffer.Length - 12)
Magic Number,MonoTorrent.Client.Messages.UdpTracker,UdpTrackerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\UdpTrackerMessage.cs,DecodeMessage,The following statement contains a magic number: int action = type == MessageType.Request ? ReadInt(buffer' offset + 8) : ReadInt(buffer' offset);
Magic Number,MonoTorrent.Client.Messages.UdpTracker,UdpTrackerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\UdpTrackerMessage.cs,DecodeMessage,The following statement contains a magic number: switch (action)              {                  case 0:                      if (type == MessageType.Request)                          m = new ConnectMessage();                      else                          m = new ConnectResponseMessage();                      break;                  case 1:                      if (type == MessageType.Request)                          m = new AnnounceMessage();                      else                          m = new AnnounceResponseMessage();                      break;                  case 2:                      if (type == MessageType.Request)                          m = new ScrapeMessage();                      else                          m = new ScrapeResponseMessage();                      break;                  case 3:                      m = new ErrorMessage();                      break;                  default:                      throw new ProtocolException(string.Format("Invalid udp message received: {0}"' buffer[offset]));              }
Magic Number,MonoTorrent.Client.Messages.UdpTracker,UdpTrackerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages.UdpTracker\UdpTrackerMessage.cs,DecodeMessage,The following statement contains a magic number: switch (action)              {                  case 0:                      if (type == MessageType.Request)                          m = new ConnectMessage();                      else                          m = new ConnectResponseMessage();                      break;                  case 1:                      if (type == MessageType.Request)                          m = new AnnounceMessage();                      else                          m = new AnnounceResponseMessage();                      break;                  case 2:                      if (type == MessageType.Request)                          m = new ScrapeMessage();                      else                          m = new ScrapeResponseMessage();                      break;                  case 3:                      m = new ErrorMessage();                      break;                  default:                      throw new ProtocolException(string.Format("Invalid udp message received: {0}"' buffer[offset]));              }
Magic Number,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,Encode,The following statement contains a magic number: buffer[written - 3] |= ExtendedMessagingFlag;
Magic Number,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,Decode,The following statement contains a magic number: InfoHash = new InfoHash(ReadBytes(buffer' ref offset' 20));
Magic Number,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,Decode,The following statement contains a magic number: PeerId = ReadBytes(buffer' ref offset' 20);
Magic Number,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,CheckForSupports,The following statement contains a magic number: offset += 8;
Magic Number,MonoTorrent.Client.Messages.Standard,HandshakeMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\HandshakeMessage.cs,CheckForSupports,The following statement contains a magic number: SupportsExtendedMessaging = (ExtendedMessagingFlag & buffer[offset - 3]) != 0;
Magic Number,MonoTorrent.Client.Messages.Standard,PieceMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PieceMessage.cs,Decode,The following statement contains a magic number: RequestLength = length - 8;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,ReadShort,The following statement contains a magic number: offset += 2;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,ReadInt,The following statement contains a magic number: offset += 4;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,ReadLong,The following statement contains a magic number: offset += 8;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: offset += Write(buffer' offset' (byte)(value >> 8));
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: return 2;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: offset += Write(buffer' offset' (byte)(value >> 24));
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: offset += Write(buffer' offset' (byte)(value >> 16));
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: offset += Write(buffer' offset' (byte)(value >> 8));
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: return 4;
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: offset += Write(buffer' offset' (int)(value >> 32));
Magic Number,MonoTorrent.Client.Messages,Message,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\Message.cs,Write,The following statement contains a magic number: return 8;
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: count < 4
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: messageLength > (count - 4)
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: return ExtensionMessage.DecodeExtensionMessage(buffer' offset + 4 + 1' count - 4 - 1' manager);
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: return ExtensionMessage.DecodeExtensionMessage(buffer' offset + 4 + 1' count - 4 - 1' manager);
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: buffer[offset + 4] == ExtensionMessage.MessageId
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: !messageDict.TryGetValue(buffer[offset + 4]' out creator)
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: message.Decode(buffer' offset + 4 + 1' count - 4 - 1);
Magic Number,MonoTorrent.Client.Messages,PeerMessage,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Messages\PeerMessage.cs,DecodeMessage,The following statement contains a magic number: message.Decode(buffer' offset + 4 + 1' count - 4 - 1);
Magic Number,MonoTorrent.Client.PiecePicking,EndGamePicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\EndGamePicker.cs,PickPiece,The following statement contains a magic number: peer.IsChoking || peer.AmRequestingPiecesCount > 2
Magic Number,MonoTorrent.Client.PiecePicking,RandomisedPicker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.PiecePicking\RandomisedPicker.cs,PickPiece,The following statement contains a magic number: endIndex - startIndex < 2
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: maxRate = (long)(maxRate * 1.05);
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: long delta = (long)(0.4 * errorRateDown + 0.6 * this.savedError);
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: long delta = (long)(0.4 * errorRateDown + 0.6 * this.savedError);
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: Interlocked.Exchange(ref this.chunks' (int)(maxRate * 1.2));
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: this.chunks > (maxRate * 1.2)
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: Interlocked.Exchange(ref this.chunks' (maxRate / 2));
Magic Number,MonoTorrent.Client.RateLimiters,RateLimiter,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.RateLimiters\RateLimiter.cs,UpdateChunks,The following statement contains a magic number: this.chunks < (maxRate / 2)
Magic Number,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,CreateAnnounceString,The following statement contains a magic number: b.Add ("info_hash"' parameters.InfoHash.UrlEncode ())               .Add ("peer_id"' parameters.PeerId.UrlEncode ())               .Add ("port"' parameters.Port)               .Add ("uploaded"' parameters.BytesUploaded)               .Add ("downloaded"' parameters.BytesDownloaded)               .Add ("left"' parameters.BytesLeft)               .Add ("compact"' 1)               .Add ("numwant"' 100);
Magic Number,MonoTorrent.Client.Tracker,HTTPTracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\HTTPTracker.cs,DecodeResponseAsync,The following statement contains a magic number: byte[] buffer = new byte[2048];
Magic Number,MonoTorrent.Client.Tracker,Tracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\Tracker.cs,Tracker,The following statement contains a magic number: MinUpdateInterval = TimeSpan.FromMinutes(3);
Magic Number,MonoTorrent.Client.Tracker,Tracker,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\Tracker.cs,Tracker,The following statement contains a magic number: UpdateInterval = TimeSpan.FromMinutes(30);
Magic Number,MonoTorrent.Client.Tracker,TrackerRequestFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\TrackerRequestFactory.cs,CreateAnnounce,The following statement contains a magic number: long bytesLeft = 1000;
Magic Number,MonoTorrent.Client.Tracker,TrackerRequestFactory,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client.Tracker\TrackerRequestFactory.cs,CreateAnnounce,The following statement contains a magic number: bytesLeft = (long)((1 - Manager.Bitfield.PercentComplete / 100.0) * Manager.Torrent.Size);
Magic Number,MonoTorrent,BigEndianBigInteger,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BigEndianBigInteger.cs,BigEndianBigInteger,The following statement contains a magic number: var ctor = typeof (BigInteger).GetConstructors ()                  .FirstOrDefault (c => {                      var parameters = c.GetParameters ();                      if (parameters.Length != 3)                          return false;                      if (!parameters [0].ParameterType.Name.Contains ("ReadOnlySpan"))                          return false;                      if (parameters [0].ParameterType.GenericTypeArguments.FirstOrDefault () != typeof (byte))                          return false;                        readonlySpanByte = parameters[0].ParameterType;                      if (parameters [1].ParameterType != typeof (bool))                          return false;                      if (parameters [2].ParameterType != typeof (bool))                          return false;                      return true;                  });
Magic Number,MonoTorrent,BigEndianBigInteger,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BigEndianBigInteger.cs,BigEndianBigInteger,The following statement contains a magic number: var ctor = typeof (BigInteger).GetConstructors ()                  .FirstOrDefault (c => {                      var parameters = c.GetParameters ();                      if (parameters.Length != 3)                          return false;                      if (!parameters [0].ParameterType.Name.Contains ("ReadOnlySpan"))                          return false;                      if (parameters [0].ParameterType.GenericTypeArguments.FirstOrDefault () != typeof (byte))                          return false;                        readonlySpanByte = parameters[0].ParameterType;                      if (parameters [1].ParameterType != typeof (bool))                          return false;                      if (parameters [2].ParameterType != typeof (bool))                          return false;                      return true;                  });
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(length + 31) / 32];
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(length + 31) / 32];
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(array.Length + 31) / 32];
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,BitField,The following statement contains a magic number: this.array = new int[(array.Length + 31) / 32];
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Clone,The following statement contains a magic number: Buffer.BlockCopy(array' 0' b.array' 0' array.Length * 4);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,From,The following statement contains a magic number: Buffer.BlockCopy(value.array' 0' array' 0' array.Length * 4);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstTrue,The following statement contains a magic number: int loopEnd = Math.Min((endIndex / 32)' array.Length - 1);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstTrue,The following statement contains a magic number: start = i * 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstTrue,The following statement contains a magic number: end = start + 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstFalse,The following statement contains a magic number: int loopEnd = Math.Min((endIndex / 32)' array.Length - 1);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstFalse,The following statement contains a magic number: start = i * 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FirstFalse,The following statement contains a magic number: end = start + 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: int end = Length / 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: array[i] = (buffer[offset++] << 24) |                             (buffer[offset++] << 16) |                             (buffer[offset++] << 8) |                             (buffer[offset++] << 0);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: array[i] = (buffer[offset++] << 24) |                             (buffer[offset++] << 16) |                             (buffer[offset++] << 8) |                             (buffer[offset++] << 0);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: array[i] = (buffer[offset++] << 24) |                             (buffer[offset++] << 16) |                             (buffer[offset++] << 8) |                             (buffer[offset++] << 0);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: int shift = 24;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,FromArray,The following statement contains a magic number: shift -= 8;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Get,The following statement contains a magic number: return (this.array[index >> 5] & (1 << (31 - (index & 31)))) != 0;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Get,The following statement contains a magic number: return (this.array[index >> 5] & (1 << (31 - (index & 31)))) != 0;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Get,The following statement contains a magic number: return (this.array[index >> 5] & (1 << (31 - (index & 31)))) != 0;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: (this.array[index >> 5] & (1 << (31 - (index & 31)))) == 0
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: (this.array[index >> 5] & (1 << (31 - (index & 31)))) == 0
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: (this.array[index >> 5] & (1 << (31 - (index & 31)))) == 0
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: this.array[index >> 5] |= (1 << (31 - index & 31));
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: this.array[index >> 5] |= (1 << (31 - index & 31));
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,Set,The following statement contains a magic number: this.array[index >> 5] |= (1 << (31 - index & 31));
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: int end = Length / 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: buffer[offset++] = (byte)(array[i] >> 24);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: buffer[offset++] = (byte)(array[i] >> 16);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: buffer[offset++] = (byte)(array[i] >> 8);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: int shift = 24;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToByteArray,The following statement contains a magic number: shift -= 8;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(this.array.Length * 16);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,CountBits,The following statement contains a magic number: v = (v & 0x33333333) + ((v >> 2) & 0x33333333);
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,CountBits,The following statement contains a magic number: return (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,CountBits,The following statement contains a magic number: return (((v + (v >> 4) & 0xF0F0F0F) * 0x1010101)) >> 24;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ZeroUnusedBits,The following statement contains a magic number: int shift = 32 - length % 32;
Magic Number,MonoTorrent,BitField,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\BitField.cs,ZeroUnusedBits,The following statement contains a magic number: int shift = 32 - length % 32;
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,InfoHash,The following statement contains a magic number: infoHash.Length != 20
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,Equals,The following statement contains a magic number: return other == null || other.Length != 20 ? false : Toolbox.ByteMatch(Hash' other);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash[0] | (Hash[1] << 8) | (Hash[2] << 16) | (Hash[3] << 24);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash[0] | (Hash[1] << 8) | (Hash[2] << 16) | (Hash[3] << 24);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash[0] | (Hash[1] << 8) | (Hash[2] << 16) | (Hash[3] << 24);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash[0] | (Hash[1] << 8) | (Hash[2] << 16) | (Hash[3] << 24);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,GetHashCode,The following statement contains a magic number: return Hash[0] | (Hash[1] << 8) | (Hash[2] << 16) | (Hash[3] << 24);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,ToHex,The following statement contains a magic number: StringBuilder sb = new StringBuilder(40);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,ToHex,The following statement contains a magic number: hex.Length != 2
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: infoHash.Length != 32
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: byte[] hash = new byte[20];
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: var temp = new byte[8];
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: j < 8
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[0] << 3) | (temp [1]>> 2));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[0] << 3) | (temp [1]>> 2));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[1] << 6) | (temp[2] << 1) | (temp[3] >> 4));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[1] << 6) | (temp[2] << 1) | (temp[3] >> 4));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[1] << 6) | (temp[2] << 1) | (temp[3] >> 4));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[1] << 6) | (temp[2] << 1) | (temp[3] >> 4));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[3] << 4) | (temp [4]>> 1));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[3] << 4) | (temp [4]>> 1));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[3] << 4) | (temp [4]>> 1));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[4] << 7) | (temp[5] << 2) | (temp [6]>> 3));
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[6] << 5) | temp[7]);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[6] << 5) | temp[7]);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromBase32,The following statement contains a magic number: hash[i++] = (byte)((temp[6] << 5) | temp[7]);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromHex,The following statement contains a magic number: infoHash.Length != 40
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromHex,The following statement contains a magic number: byte[] hash = new byte[20];
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromHex,The following statement contains a magic number: hash[i] = byte.Parse(infoHash.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromHex,The following statement contains a magic number: hash[i] = byte.Parse(infoHash.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: switch (hashEnd - hashStart)              {                  case 32:                      return FromBase32(magnetLink.Substring(hashStart' 32));                  case 40:                      return FromHex(magnetLink.Substring(hashStart' 40));                  default:                      throw new ArgumentException("Infohash must be base32 or hex encoded.");              }
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: switch (hashEnd - hashStart)              {                  case 32:                      return FromBase32(magnetLink.Substring(hashStart' 32));                  case 40:                      return FromHex(magnetLink.Substring(hashStart' 40));                  default:                      throw new ArgumentException("Infohash must be base32 or hex encoded.");              }
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: switch (hashEnd - hashStart)              {                  case 32:                      return FromBase32(magnetLink.Substring(hashStart' 32));                  case 40:                      return FromHex(magnetLink.Substring(hashStart' 40));                  default:                      throw new ArgumentException("Infohash must be base32 or hex encoded.");              }
Magic Number,MonoTorrent,InfoHash,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\InfoHash.cs,FromMagnetLink,The following statement contains a magic number: switch (hashEnd - hashStart)              {                  case 32:                      return FromBase32(magnetLink.Substring(hashStart' 32));                  case 40:                      return FromHex(magnetLink.Substring(hashStart' 40));                  default:                      throw new ArgumentException("Infohash must be base32 or hex encoded.");              }
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: keyval.Length != 2
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: switch (keyval[0].Substring(0' 2))                  {                      case "xt"://exact topic                          if (infoHash != null)                              throw new FormatException ("More than one infohash in magnet link is not allowed.");                            string val = keyval[1].Substring(9);                          switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }                      break;                      case "tr" ://address tracker                          announceUrls.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "as"://Acceptable Source                          webSeeds.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "dn"://display name                          name = keyval[1].UrlDecodeUTF8 ();                      break;                      case "xl"://exact length                          size = long.Parse (keyval [1]);                      break;                      case "xs":// eXact Source - P2P link.                      case "kt"://keyword topic                      case "mt"://manifest topic                          //not supported for moment                      break;                      default:                          //not supported                      break;                  }
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: switch (keyval[0].Substring(0' 2))                  {                      case "xt"://exact topic                          if (infoHash != null)                              throw new FormatException ("More than one infohash in magnet link is not allowed.");                            string val = keyval[1].Substring(9);                          switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }                      break;                      case "tr" ://address tracker                          announceUrls.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "as"://Acceptable Source                          webSeeds.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "dn"://display name                          name = keyval[1].UrlDecodeUTF8 ();                      break;                      case "xl"://exact length                          size = long.Parse (keyval [1]);                      break;                      case "xs":// eXact Source - P2P link.                      case "kt"://keyword topic                      case "mt"://manifest topic                          //not supported for moment                      break;                      default:                          //not supported                      break;                  }
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: switch (keyval[0].Substring(0' 2))                  {                      case "xt"://exact topic                          if (infoHash != null)                              throw new FormatException ("More than one infohash in magnet link is not allowed.");                            string val = keyval[1].Substring(9);                          switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }                      break;                      case "tr" ://address tracker                          announceUrls.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "as"://Acceptable Source                          webSeeds.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "dn"://display name                          name = keyval[1].UrlDecodeUTF8 ();                      break;                      case "xl"://exact length                          size = long.Parse (keyval [1]);                      break;                      case "xs":// eXact Source - P2P link.                      case "kt"://keyword topic                      case "mt"://manifest topic                          //not supported for moment                      break;                      default:                          //not supported                      break;                  }
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: switch (keyval[0].Substring(0' 2))                  {                      case "xt"://exact topic                          if (infoHash != null)                              throw new FormatException ("More than one infohash in magnet link is not allowed.");                            string val = keyval[1].Substring(9);                          switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }                      break;                      case "tr" ://address tracker                          announceUrls.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "as"://Acceptable Source                          webSeeds.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "dn"://display name                          name = keyval[1].UrlDecodeUTF8 ();                      break;                      case "xl"://exact length                          size = long.Parse (keyval [1]);                      break;                      case "xs":// eXact Source - P2P link.                      case "kt"://keyword topic                      case "mt"://manifest topic                          //not supported for moment                      break;                      default:                          //not supported                      break;                  }
Magic Number,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following statement contains a magic number: switch (keyval[0].Substring(0' 2))                  {                      case "xt"://exact topic                          if (infoHash != null)                              throw new FormatException ("More than one infohash in magnet link is not allowed.");                            string val = keyval[1].Substring(9);                          switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }                      break;                      case "tr" ://address tracker                          announceUrls.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "as"://Acceptable Source                          webSeeds.Add(keyval[1].UrlDecodeUTF8 ());                      break;                      case "dn"://display name                          name = keyval[1].UrlDecodeUTF8 ();                      break;                      case "xl"://exact length                          size = long.Parse (keyval [1]);                      break;                      case "xs":// eXact Source - P2P link.                      case "kt"://keyword topic                      case "mt"://manifest topic                          //not supported for moment                      break;                      default:                          //not supported                      break;                  }
Magic Number,MonoTorrent,Software,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\PeerID.cs,Software,The following statement contains a magic number: switch (m.Groups[2].Value)                  {                      case ("AG"):                      case ("A~"):                          this.client = ClientApp.Ares;                          break;                      case ("AR"):                          this.client = ClientApp.Artic;                          break;                      case ("AT"):                          this.client = ClientApp.Artemis;                          break;                      case ("AX"):                          this.client = ClientApp.BitPump;                          break;                      case ("AV"):                          this.client = ClientApp.Avicora;                          break;                      case ("AZ"):                          this.client = ClientApp.Azureus;                          break;                      case ("BB"):                          this.client = ClientApp.BitBuddy;                          break;                        case ("BC"):                          this.client = ClientApp.BitComet;                          break;                        case ("BF"):                          this.client = ClientApp.Bitflu;                          break;                        case ("BS"):                          this.client = ClientApp.BTSlave;                          break;                        case ("BX"):                          this.client = ClientApp.BitTorrentX;                          break;                        case ("CD"):                          this.client = ClientApp.EnhancedCTorrent;                          break;                        case ("CT"):                          this.client = ClientApp.CTorrent;                          break;                        case ("DE"):                          this.client = ClientApp.DelugeTorrent;                          break;                        case ("EB"):                          this.client = ClientApp.EBit;                          break;                        case ("ES"):                          this.client = ClientApp.ElectricSheep;                          break;                        case ("KT"):                          this.client = ClientApp.KTorrent;                          break;                        case ("LP"):                          this.client = ClientApp.Lphant;                          break;                        case ("lt"):                      case ("LT"):                          this.client = ClientApp.LibTorrent;                          break;                        case ("MP"):                          this.client = ClientApp.MooPolice;                          break;                        case ("MO"):                          this.client = ClientApp.MonoTorrent;                          break;                        case ("MT"):                          this.client = ClientApp.MoonlightTorrent;                          break;                        case ("qB"):                          this.client = ClientApp.qBittorrent;                          break;                        case ("QT"):                          this.client = ClientApp.Qt4Torrent;                          break;                        case ("RT"):                          this.client = ClientApp.Retriever;                          break;                        case ("SB"):                          this.client = ClientApp.Swiftbit;                          break;                        case ("SS"):                          this.client = ClientApp.SwarmScope;                          break;                        case ("SZ"):                          this.client = ClientApp.Shareaza;                          break;                        case ("TN"):                          this.client = ClientApp.TorrentDotNET;                          break;                        case ("TR"):                          this.client = ClientApp.Transmission;                          break;                        case ("TS"):                          this.client = ClientApp.Torrentstorm;                          break;                        case ("UL"):                          this.client = ClientApp.uLeecher;                          break;                        case ("UT"):                          this.client = ClientApp.uTorrent;                          break;                        case ("XT"):                          this.client = ClientApp.XanTorrent;                          break;                        case ("ZT"):                          this.client = ClientApp.ZipTorrent;                          break;                        default:                          System.Diagnostics.Trace.WriteLine("Unsupported standard style: " + m.Groups[2].Value);                          client = ClientApp.Unknown;                          break;                  }
Magic Number,MonoTorrent,Software,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\PeerID.cs,Software,The following statement contains a magic number: switch (m.Groups[2].Value)                  {                      case ("AG"):                      case ("A~"):                          this.client = ClientApp.Ares;                          break;                      case ("AR"):                          this.client = ClientApp.Artic;                          break;                      case ("AT"):                          this.client = ClientApp.Artemis;                          break;                      case ("AX"):                          this.client = ClientApp.BitPump;                          break;                      case ("AV"):                          this.client = ClientApp.Avicora;                          break;                      case ("AZ"):                          this.client = ClientApp.Azureus;                          break;                      case ("BB"):                          this.client = ClientApp.BitBuddy;                          break;                        case ("BC"):                          this.client = ClientApp.BitComet;                          break;                        case ("BF"):                          this.client = ClientApp.Bitflu;                          break;                        case ("BS"):                          this.client = ClientApp.BTSlave;                          break;                        case ("BX"):                          this.client = ClientApp.BitTorrentX;                          break;                        case ("CD"):                          this.client = ClientApp.EnhancedCTorrent;                          break;                        case ("CT"):                          this.client = ClientApp.CTorrent;                          break;                        case ("DE"):                          this.client = ClientApp.DelugeTorrent;                          break;                        case ("EB"):                          this.client = ClientApp.EBit;                          break;                        case ("ES"):                          this.client = ClientApp.ElectricSheep;                          break;                        case ("KT"):                          this.client = ClientApp.KTorrent;                          break;                        case ("LP"):                          this.client = ClientApp.Lphant;                          break;                        case ("lt"):                      case ("LT"):                          this.client = ClientApp.LibTorrent;                          break;                        case ("MP"):                          this.client = ClientApp.MooPolice;                          break;                        case ("MO"):                          this.client = ClientApp.MonoTorrent;                          break;                        case ("MT"):                          this.client = ClientApp.MoonlightTorrent;                          break;                        case ("qB"):                          this.client = ClientApp.qBittorrent;                          break;                        case ("QT"):                          this.client = ClientApp.Qt4Torrent;                          break;                        case ("RT"):                          this.client = ClientApp.Retriever;                          break;                        case ("SB"):                          this.client = ClientApp.Swiftbit;                          break;                        case ("SS"):                          this.client = ClientApp.SwarmScope;                          break;                        case ("SZ"):                          this.client = ClientApp.Shareaza;                          break;                        case ("TN"):                          this.client = ClientApp.TorrentDotNET;                          break;                        case ("TR"):                          this.client = ClientApp.Transmission;                          break;                        case ("TS"):                          this.client = ClientApp.Torrentstorm;                          break;                        case ("UL"):                          this.client = ClientApp.uLeecher;                          break;                        case ("UT"):                          this.client = ClientApp.uTorrent;                          break;                        case ("XT"):                          this.client = ClientApp.XanTorrent;                          break;                        case ("ZT"):                          this.client = ClientApp.ZipTorrent;                          break;                        default:                          System.Diagnostics.Trace.WriteLine("Unsupported standard style: " + m.Groups[2].Value);                          client = ClientApp.Unknown;                          break;                  }
Magic Number,MonoTorrent,Software,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\PeerID.cs,Software,The following statement contains a magic number: switch (m.Groups[2].Value)                  {                      case ("A"):                          this.client = ClientApp.ABC;                          break;                        case ("O"):                          this.client = ClientApp.OspreyPermaseed;                          break;                        case ("R"):                          this.client = ClientApp.Tribler;                          break;                        case ("S"):                          this.client = ClientApp.ShadowsClient;                          break;                        case ("T"):                          this.client = ClientApp.BitTornado;                          break;                        case ("U"):                          this.client = ClientApp.UPnPNatBitTorrent;                          break;                        default:                          this.client = ClientApp.Unknown;                          break;                  }
Magic Number,MonoTorrent,SpeedMonitor,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\SpeedMonitor.cs,Tick,The following statement contains a magic number: difference > 800
Magic Number,MonoTorrent,SpeedMonitor,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\SpeedMonitor.cs,TimePeriodPassed,The following statement contains a magic number: currSpeed = (currSpeed * 1000) / difference;
Magic Number,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,Torrent,The following statement contains a magic number: this.creationDate = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadHashPieces,The following statement contains a magic number: data.Length % 20 != 0
Magic Number,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadHashPieces,The following statement contains a magic number: this.pieces = new Hashes(data' data.Length / 20);
Magic Number,MonoTorrent,Torrent,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\Torrent.cs,LoadTorrentFiles,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: (pieces * 20) < (60 * 1024)
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: (pieces * 20) < (60 * 1024)
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,RecommendedPieceSize,The following statement contains a magic number: (pieces * 20) < (60 * 1024)
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,AddCommonStuff,The following statement contains a magic number: TimeSpan span = DateTime.UtcNow - new DateTime (1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: parallelFactor = Math.Max (parallelFactor / 2' 1);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: pieceCount / parallelFactor < 8 && parallelFactor > 1
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: var emptyBuffers = new AsyncProducerConsumerQueue<byte[]>(4);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: await emptyBuffers.EnqueueAsync(new byte[256 * 1024]);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,CalcPiecesHash,The following statement contains a magic number: await emptyBuffers.EnqueueAsync(new byte[256 * 1024]);
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,HashAllDataAsync,The following statement contains a magic number: var hashes = new byte[((totalBytesToRead + PieceLength - 1) / PieceLength) * 20];
Magic Number,MonoTorrent,TorrentCreator,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentCreator.cs,HashAllDataAsync,The following statement contains a magic number: Array.Copy(shaHasher.Hash' 0' hashes' piece * 20' shaHasher.Hash.Length);
Magic Number,MonoTorrent,TorrentFile,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\TorrentFile.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,The following statement contains a magic number: i += 5;
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,The following statement contains a magic number: s [i + 1] == 'u' && i + 5 < len
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlDecode,The following statement contains a magic number: ch == '%' && i + 2 < len && s [i + 1] != '%'
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlEncodeChar,The following statement contains a magic number: isUnicode && c > 127
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,UrlEncodeChar,The following statement contains a magic number: int idx = ((int) c) >> 4;
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,GetChar,The following statement contains a magic number: c > 127
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,GetChar,The following statement contains a magic number: val = (val << 4) + current;
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,GetInt,The following statement contains a magic number: return c - 'a' + 10;
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,GetInt,The following statement contains a magic number: return c - 'A' + 10;
Magic Number,MonoTorrent,UriHelper,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriHelper.cs,WriteCharBytes,The following statement contains a magic number: ch > 255
Magic Number,MonoTorrent,UriQueryBuilder,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\UriQueryBuilder.cs,ParseParameters,The following statement contains a magic number: kv.Length == 2
Magic Number,MonoTorrent,VersionInfo,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\VersionInfo.cs,VersionInfo,The following statement contains a magic number: Version.Major > 9
Magic Number,MonoTorrent,VersionInfo,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\VersionInfo.cs,VersionInfo,The following statement contains a magic number: Version.Minor > 9
Magic Number,MonoTorrent,VersionInfo,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\VersionInfo.cs,VersionInfo,The following statement contains a magic number: Version.Build > 99
Magic Number,MonoTorrent,VersionInfo,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\VersionInfo.cs,VersionInfo,The following statement contains a magic number: version = version.Substring (0' 4);
Magic Number,MonoTorrent,VersionInfo,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\VersionInfo.cs,VersionInfo,The following statement contains a magic number: version.Length > 4
Magic Number,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,DhtEngine,The following statement contains a magic number: BucketRefreshTimeout = TimeSpan.FromMinutes(15);
Magic Number,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,DhtEngine,The following statement contains a magic number: MainLoop.QueueTimeout (TimeSpan.FromMinutes (5)' () => {                  if (!Disposed)                      TokenManager.RefreshTokens ();                  return !Disposed;              });
Magic Number,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,SendQueryAsync,The following statement contains a magic number: i < 4
Magic Number,MonoTorrent.Dht,DhtEngine,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\DhtEngine.cs,StartAsync,The following statement contains a magic number: MainLoop.QueueTimeout(TimeSpan.FromSeconds(30)' delegate {                  if (!Disposed) {                      _ = RefreshBuckets ();                  }                  return !Disposed;              });
Magic Number,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,MessageLoop,The following statement contains a magic number: Timeout = TimeSpan.FromSeconds(15);
Magic Number,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,MessageLoop,The following statement contains a magic number: DhtEngine.MainLoop.QueueTimeout(TimeSpan.FromMilliseconds(5)' () => {                  if (engine.Disposed)                      return false;                  try                  {                      if (sendTask == null || sendTask.IsCompleted)                          sendTask = SendMessages();                        while (ReceiveQueue.Count > 0)                          ReceiveMessage();                        TimeoutMessage();                  }                  catch (Exception ex)                  {                      Debug.WriteLine("Error in DHT main loop:");                      Debug.WriteLine(ex);                  }                    return !engine.Disposed;              });
Magic Number,MonoTorrent.Dht,MessageLoop,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\MessageLoop.cs,SendMessages,The following statement contains a magic number: i < 5 && SendQueue.Count > 0
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactPort,The following statement contains a magic number: byte[] buffer = new byte[6];
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactPort,The following statement contains a magic number: Message.Write(buffer' offset + 4' (ushort)EndPoint.Port);
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactPort,The following statement contains a magic number: byte[] buffer = new byte[peers.Count * 6];
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactPort,The following statement contains a magic number: peers[i].CompactPort(buffer' i * 6);
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactNode,The following statement contains a magic number: byte[] buffer = new byte[26];
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactNode,The following statement contains a magic number: CompactPort(buffer' offset + 20);
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactNode,The following statement contains a magic number: var buffer = new byte[nodes.Count * 26];
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,CompactNode,The following statement contains a magic number: node.CompactNode(buffer' count * 26);
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,FromCompactNode,The following statement contains a magic number: byte[] id = new byte[20];
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,FromCompactNode,The following statement contains a magic number: Buffer.BlockCopy(buffer' offset' id' 0' 20);
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,FromCompactNode,The following statement contains a magic number: IPAddress address = new IPAddress((uint)BitConverter.ToInt32(buffer' offset + 20));
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,FromCompactNode,The following statement contains a magic number: int port = (int)(ushort)IPAddress.NetworkToHostOrder((short)BitConverter.ToUInt16(buffer' offset + 24));
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,FromCompactNode,The following statement contains a magic number: (i + 26) <= buffer.Length
Magic Number,MonoTorrent.Dht,Node,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\Node.cs,ToString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(48);
Magic Number,MonoTorrent.Dht,NodeId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\NodeId.cs,NodeId,The following statement contains a magic number: var newBytes = new byte[20];
Magic Number,MonoTorrent.Dht,NodeId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\NodeId.cs,NodeId,The following statement contains a magic number: Bytes.Length < 20
Magic Number,MonoTorrent.Dht,NodeId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\NodeId.cs,NodeId,The following statement contains a magic number: Bytes.Length != 20
Magic Number,MonoTorrent.Dht,NodeId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\NodeId.cs,NodeId,The following statement contains a magic number: value.Length != 20
Magic Number,MonoTorrent.Dht,NodeId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\NodeId.cs,Create,The following statement contains a magic number: byte[] b = new byte[20];
Magic Number,MonoTorrent.Dht,TokenManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\TokenManager.cs,TokenManager,The following statement contains a magic number: currentSecret = new byte[10];
Magic Number,MonoTorrent.Dht,TokenManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\TokenManager.cs,TokenManager,The following statement contains a magic number: previousSecret = new byte[10];
Magic Number,MonoTorrent.Dht,TransactionId,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht\TransactionId.cs,NextId,The following statement contains a magic number: var data = new [] { (byte) (value >> 8)' (byte) value };
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,WritePieceAsync,The following statement contains a magic number: peer.Peer.TotalHashFails == 5
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The following statement contains a magic number: counter % (1000 / ClientEngine.TickLength) == 0
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The following statement contains a magic number: int maxRequests = PieceManager.NormalRequestAmount + (int)(id.Monitor.DownloadSpeed / 1024.0 / PieceManager.BonusRequestPerKb);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The following statement contains a magic number: maxRequests = Math.Min(id.AmRequestingPiecesCount + 2' maxRequests);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PreLogicTick,The following statement contains a magic number: maxRequests = Math.Max(2' maxRequests);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PostLogicTick,The following statement contains a magic number: var thirtySeconds = TimeSpan.FromSeconds (30);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PostLogicTick,The following statement contains a magic number: var nintySeconds = TimeSpan.FromSeconds (90);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,PostLogicTick,The following statement contains a magic number: var onhundredAndEightySeconds = TimeSpan.FromSeconds (180);
Magic Number,MonoTorrent.Client.Modes,Mode,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Modes\Mode.cs,DownloadLogic,The following statement contains a magic number: Manager.State == TorrentState.Downloading && Manager.lastCalledInactivePeerManager + TimeSpan.FromSeconds(5) < DateTime.Now
Magic Number,MonoTorrent.Dht.Tasks,ReplaceNodeTask,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Dht.Tasks\ReplaceNodeTask.cs,Execute,The following statement contains a magic number: bucket.Nodes[0].LastSeen < TimeSpan.FromMinutes(3)
Magic Number,MonoTorrent.Tracker.Listeners,HttpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\HttpTrackerListener.cs,ProcessContextAsync,The following statement contains a magic number: context.Response.StatusCode = 200;
Magic Number,MonoTorrent.Tracker.Listeners,TrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\TrackerListener.cs,ParseQuery,The following statement contains a magic number: NameValueCollection c = new NameValueCollection(1 + parts.Length / 2);
Magic Number,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAsync,The following statement contains a magic number: data.Length <16
Magic Number,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAsync,The following statement contains a magic number: switch (request.Action)                      {                          case 0:                              sendTask = ReceiveConnect(client' (ConnectMessage)request' result.RemoteEndPoint);                              break;                          case 1:                              sendTask = ReceiveAnnounce(client' (AnnounceMessage)request' result.RemoteEndPoint);                              break;                          case 2:                              sendTask = ReceiveScrape(client' (ScrapeMessage)request' result.RemoteEndPoint);                              break;                          case 3:                              sendTask = ReceiveError(client' (ErrorMessage)request' result.RemoteEndPoint);                              break;                          default:                              throw new ProtocolException(string.Format("Invalid udp message received: {0}"' request.Action));                      }
Magic Number,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveAsync,The following statement contains a magic number: switch (request.Action)                      {                          case 0:                              sendTask = ReceiveConnect(client' (ConnectMessage)request' result.RemoteEndPoint);                              break;                          case 1:                              sendTask = ReceiveAnnounce(client' (AnnounceMessage)request' result.RemoteEndPoint);                              break;                          case 2:                              sendTask = ReceiveScrape(client' (ScrapeMessage)request' result.RemoteEndPoint);                              break;                          case 3:                              sendTask = ReceiveError(client' (ErrorMessage)request' result.RemoteEndPoint);                              break;                          default:                              throw new ProtocolException(string.Format("Invalid udp message received: {0}"' request.Action));                      }
Magic Number,MonoTorrent.Tracker,AnnounceRequest,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\AnnounceRequest.cs,CheckMandatoryFields,The following statement contains a magic number: hash.Length != 20
Magic Number,MonoTorrent.Tracker,SimpleTorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\SimpleTorrentManager.cs,GetPeers,The following statement contains a magic number: compactResponse = new byte[total * 6];
Magic Number,MonoTorrent.Tracker,SimpleTorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\SimpleTorrentManager.cs,GetPeers,The following statement contains a magic number: Buffer.BlockCopy(current.CompactEntry' 0' compactResponse' (total - 1) * 6' 6);
Magic Number,MonoTorrent.Tracker,SimpleTorrentManager,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker\SimpleTorrentManager.cs,GetPeers,The following statement contains a magic number: Buffer.BlockCopy(current.CompactEntry' 0' compactResponse' (total - 1) * 6' 6);
Missing Default,MonoTorrent.Client,PeerList,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Client\Peers\PeerList.cs,Sort,The following switch statement is missing a default case: switch (listType)  			{  				case (PeerListType.NascentPeers):  					peers.Sort(CompareNascentPeers);  					break;    				case (PeerListType.CandidatePeers):  					if (IsSeeding)  						peers.Sort(CompareCandidatePeersWhileSeeding);  					else  						peers.Sort(CompareCandidatePeersWhileDownloading);  					break;    				case (PeerListType.OptimisticUnchokeCandidatePeers):  					if (IsSeeding)  						peers.Sort(CompareOptimisticUnchokeCandidatesWhileSeeding);  					else  						peers.Sort(CompareOptimisticUnchokeCandidatesWhileDownloading);  					break;  			}
Missing Default,MonoTorrent,MagnetLink,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent\MagnetLink.cs,FromUri,The following switch statement is missing a default case: switch (keyval[1].Substring(0' 9))                          {                              case "urn:sha1:"://base32 hash                              case "urn:btih:":                              if (val.Length == 32)                                  infoHash = InfoHash.FromBase32 (val);                              else if (val.Length == 40)                                  infoHash = InfoHash.FromHex (val);                              else                                  throw new FormatException("Infohash must be base32 or hex encoded.");                              break;                          }
Missing Default,MonoTorrent.Tracker.Listeners,UdpTrackerListener,C:\research\architectureSmells\repos\mono_monotorrent\src\MonoTorrent\MonoTorrent.Tracker.Listeners\UdpTrackerListener.cs,ReceiveScrape,The following switch statement is missing a default case: switch (keypair2.Key.Text)                          {                              case "complete"://The current number of connected seeds                                  seeds = Convert.ToInt32(keypair2.Value.ToString());                                  break;                              case "downloaded"://The total number of completed downloads                                  complete = Convert.ToInt32(keypair2.Value.ToString());                                  break;                              case "incomplete":                                  leeches = Convert.ToInt32(keypair2.Value.ToString());                                  break;                          }
